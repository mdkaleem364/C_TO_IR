
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'EQUALS':([13,27,55,60,61,62,68,70,84,105,112,139,140,145,155,158,159,160,163,165,166,168,171,172,175,176,180,181,182,183,184,185,204,229,253,254,280,282,283,286,292,294,295,309,313,315,319,325,326,353,354,399,401,406,413,415,416,418,419,421,422,438,439,455,461,462,464,465,466,467,502,503,513,],[-29,-52,-37,-157,108,-158,-54,-53,125,-55,-157,-289,-30,260,-297,-280,-292,296,-281,-291,-296,-266,-279,-300,-298,-294,-293,-278,-290,-295,-254,-38,-289,-303,-36,-35,-252,-257,-256,398,-178,-255,-299,-301,-258,-274,-275,-44,-43,-31,-34,-179,-181,-282,-269,-270,-271,-273,-272,-39,-42,-32,-33,-180,-253,-259,-268,-267,-40,-41,-283,-276,-277,]),'OR':([139,150,155,158,159,160,163,165,166,168,171,172,174,175,176,180,181,182,183,184,204,229,280,282,283,294,295,309,313,315,319,376,377,378,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,406,413,415,416,418,419,461,462,464,465,502,503,513,],[-289,262,-297,-280,-292,-252,-281,-291,-296,-266,-279,-300,-233,-298,-294,-293,-278,-290,-295,-254,-289,-303,-252,-257,-256,-255,-299,-301,-258,-274,-275,-244,-248,-239,-246,-249,-242,-235,262,-243,-238,-237,-234,-236,-241,262,-245,-240,-247,-282,-269,-270,-271,-273,-272,-253,-259,-268,-267,-283,-276,-277,]),'FLOAT':([0,1,2,3,4,5,6,7,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,34,35,38,40,41,42,43,45,47,48,49,50,51,53,54,57,58,60,64,66,70,71,72,73,74,75,76,79,80,81,82,83,89,91,92,94,95,96,98,99,100,104,111,113,114,115,116,117,118,119,120,121,122,123,124,130,132,140,147,149,167,192,194,197,201,206,207,208,209,212,213,215,219,220,222,223,229,230,231,232,247,252,253,254,259,281,284,308,311,314,327,331,333,338,339,341,344,346,347,350,353,354,356,361,372,373,407,424,431,432,433,438,439,473,490,491,494,516,517,519,521,],[2,-104,-105,2,-100,-216,-99,-96,-64,-114,-304,-115,-29,-67,-112,-111,-113,-109,-95,2,-65,-98,2,-117,-52,-108,2,-66,-103,-116,-107,-102,-101,-106,-68,-304,-110,-304,-94,-60,-62,-93,-63,-91,-97,-90,-87,2,-88,-89,-53,-10,-9,-84,2,2,2,-82,-302,-130,-131,2,-92,2,-61,-81,-147,-148,-69,-85,-86,-161,2,-83,-70,2,2,2,-140,-141,2,2,-128,2,-137,2,2,-30,-162,-71,2,-74,-194,-72,-75,-76,-77,-193,-78,-195,-73,2,2,2,-126,-127,-303,-132,-138,-129,2,2,-36,-35,-149,2,2,2,2,2,-212,-197,2,-209,-213,-196,-210,-133,-134,-139,-31,-34,2,2,-150,-151,2,-211,-198,-208,-200,-32,-33,-199,-204,-203,-201,-202,-205,-207,-206,]),'LSHIFT':([139,150,155,158,159,160,163,165,166,168,171,172,174,175,176,180,181,182,183,184,204,229,280,282,283,294,295,309,313,315,319,376,377,378,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,406,413,415,416,418,419,461,462,464,465,502,503,513,],[-289,278,-297,-280,-292,-252,-281,-291,-296,-266,-279,-300,-233,-298,-294,-293,-278,-290,-295,-254,-289,-303,-252,-257,-256,-255,-299,-301,-258,-274,-275,278,278,-239,278,278,278,-235,278,278,-238,-237,-234,-236,278,278,278,-240,278,-282,-269,-270,-271,-273,-272,-253,-259,-268,-267,-283,-276,-277,]),'PPHASH':([0,9,14,22,29,30,41,48,49,51,92,94,98,114,149,229,331,],[14,-64,-67,-65,14,-66,-68,-60,-62,-63,-61,-81,-69,-70,-71,-303,-197,]),'TYPEID':([0,1,2,3,4,5,6,7,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,56,57,58,60,63,64,66,70,71,72,73,74,75,76,79,80,81,82,83,89,91,92,94,95,96,98,99,100,101,102,103,104,106,111,113,114,115,116,117,118,119,120,121,122,123,124,126,130,132,140,146,147,149,167,192,194,197,201,206,207,208,209,212,213,215,219,220,222,223,229,230,231,232,244,247,252,253,254,259,281,284,308,314,317,320,327,331,333,338,339,341,344,346,347,350,351,353,354,356,361,372,373,407,424,431,432,433,438,439,473,490,491,494,516,517,519,521,],[5,-104,-105,55,-100,-216,-99,-96,-64,-114,-304,-115,-29,-67,-112,-111,-113,-109,-95,5,-65,82,-98,5,-117,-52,-108,5,-66,-103,-116,-107,-102,-135,-101,96,-106,-68,-304,-110,-304,-304,-94,-60,-62,-93,-63,-136,-91,-97,55,-90,-87,5,55,-88,-89,-53,-10,-9,-84,55,5,5,-82,-302,-130,-131,5,-92,5,-61,-81,-147,-148,-69,-85,-86,-159,-27,-28,-161,55,5,-83,-70,5,5,5,-140,-141,55,5,-128,5,-137,55,241,5,-30,-160,-162,-71,5,-74,-194,-72,-75,-76,-77,-193,-78,-195,-73,5,5,5,-126,-127,-303,-132,-138,-129,241,5,5,-36,-35,-149,5,5,5,5,416,418,-212,-197,5,-209,-213,-196,-210,-133,-134,-139,55,-31,-34,5,5,-150,-151,5,-211,-198,-208,-200,-32,-33,-199,-204,-203,-201,-202,-205,-207,-206,]),'RETURN':([41,80,94,98,115,192,194,197,201,206,207,208,209,212,213,215,218,229,327,331,335,337,338,339,341,344,424,431,432,433,434,468,469,472,473,490,491,494,507,514,516,517,519,520,521,],[-68,-302,-81,-69,191,-74,-194,-72,-75,-76,-77,-193,-78,-195,-73,191,191,-303,-212,-197,191,191,-209,-213,-196,-210,-211,-198,-208,-200,191,191,191,191,-199,-204,-203,-201,191,191,-202,-205,-207,191,-206,]),'STRUCT':([0,7,9,11,12,13,14,20,21,22,24,25,26,27,29,30,32,41,42,45,47,48,49,50,51,54,60,70,71,72,73,75,76,79,80,83,91,92,94,98,99,100,104,111,113,114,115,116,117,118,119,121,123,124,132,140,147,149,167,192,194,197,201,206,207,208,209,212,213,215,219,220,229,231,247,252,253,254,281,284,308,314,327,331,333,338,339,341,344,350,353,354,356,361,407,424,431,432,433,438,439,473,490,491,494,516,517,519,521,],[37,-96,-64,-304,-115,-29,-67,-95,37,-65,-98,37,-117,-52,37,-66,-116,-68,-304,-304,-94,-60,-62,-93,-63,-97,37,-53,-10,-9,-84,37,37,-82,-302,37,37,-61,-81,-69,-85,-86,-161,37,-83,-70,37,37,37,-140,-141,37,37,-137,37,-30,-162,-71,37,-74,-194,-72,-75,-76,-77,-193,-78,-195,-73,37,37,37,-303,-138,37,37,-36,-35,37,37,37,37,-212,-197,37,-209,-213,-196,-210,-139,-31,-34,37,37,37,-211,-198,-208,-200,-32,-33,-199,-204,-203,-201,-202,-205,-207,-206,]),'XOREQUAL':([139,155,158,159,160,163,165,166,168,171,172,175,176,180,181,182,183,184,204,229,280,282,283,294,295,309,313,315,319,406,413,415,416,418,419,461,462,464,465,502,503,513,],[-289,-297,-280,-292,302,-281,-291,-296,-266,-279,-300,-298,-294,-293,-278,-290,-295,-254,-289,-303,-252,-257,-256,-255,-299,-301,-258,-274,-275,-282,-269,-270,-271,-273,-272,-253,-259,-268,-267,-283,-276,-277,]),'PLUSEQUAL':([139,155,158,159,160,163,165,166,168,171,172,175,176,180,181,182,183,184,204,229,280,282,283,294,295,309,313,315,319,406,413,415,416,418,419,461,462,464,465,502,503,513,],[-289,-297,-280,-292,305,-281,-291,-296,-266,-279,-300,-298,-294,-293,-278,-290,-295,-254,-289,-303,-252,-257,-256,-255,-299,-301,-258,-274,-275,-282,-269,-270,-271,-273,-272,-253,-259,-268,-267,-283,-276,-277,]),'WCHAR_CONST':([12,26,32,41,80,90,94,98,102,103,104,108,110,115,125,127,128,129,147,151,152,153,154,156,157,164,167,169,173,177,178,186,187,188,191,192,194,197,201,206,207,208,209,212,213,215,216,218,221,229,235,239,240,251,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,284,287,288,290,293,296,297,298,299,300,301,302,303,304,305,306,307,314,316,318,321,323,324,327,329,330,331,332,333,334,335,337,338,339,341,344,349,357,360,368,398,403,410,424,428,431,432,433,434,442,443,444,445,452,453,456,457,460,463,468,469,471,472,473,474,478,480,481,490,491,492,494,500,504,506,507,514,516,517,519,520,521,],[-115,-117,-116,-68,-302,-304,-81,-69,-27,-28,-161,155,-304,155,155,-304,155,-28,-162,-265,155,155,-304,-263,155,-260,155,-264,155,-262,-261,-304,155,-28,155,-74,-194,-72,-75,-76,-77,-193,-78,-195,-73,155,155,155,155,-303,155,-261,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,-11,155,155,-12,-219,-223,-228,-229,-222,-225,-220,-221,-226,-224,155,-227,155,155,155,155,-261,155,-212,155,155,-197,155,155,155,155,155,-209,-213,-196,-210,155,155,-304,-261,-177,-304,155,-211,155,-198,-208,-200,155,-261,-304,155,-28,155,155,-11,155,-304,155,155,155,155,155,-199,155,155,-261,155,-204,-203,155,-201,155,-304,155,155,155,-202,-205,-207,155,-206,]),'COLON':([1,2,4,5,6,10,12,13,16,17,18,19,26,27,28,31,32,34,35,38,40,43,55,62,68,70,81,82,95,96,105,112,120,122,139,140,150,155,158,159,160,163,165,166,168,171,172,174,175,176,179,180,181,182,183,184,185,198,204,210,222,223,224,229,230,232,253,254,259,280,282,283,294,295,309,313,315,319,325,326,342,343,346,347,351,353,354,372,373,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,404,406,413,415,416,418,419,421,422,427,438,439,461,462,464,465,466,467,484,502,503,513,],[-104,-105,-100,-216,-99,-114,-115,-29,-112,-111,-113,-109,-117,-52,-108,-103,-116,-107,-102,-101,-106,-110,-37,-158,-54,-53,-130,-131,-147,-148,-55,-157,221,-128,-289,-30,-231,-297,-280,-292,-252,-281,-291,-296,-266,-279,-300,-233,-298,-294,-217,-293,-278,-290,-295,-254,-38,-214,335,337,-126,-127,349,-303,-132,-129,-36,-35,-149,-252,-257,-256,-255,-299,-301,-258,-274,-275,-44,-43,434,-230,-133,-134,221,-31,-34,-150,-151,-244,-248,-239,452,-246,-249,-242,-235,-251,-243,-238,-237,-234,-236,-241,-250,-245,-240,-247,-218,-282,-269,-270,-271,-273,-272,-39,-42,-215,-32,-33,-253,-259,-268,-267,-40,-41,-232,-283,-276,-277,]),'MINUS':([12,26,32,41,80,90,94,98,102,103,104,108,110,115,125,127,128,129,139,147,150,151,152,153,154,155,156,157,158,159,160,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,180,181,182,183,184,186,187,188,191,192,194,197,201,204,206,207,208,209,212,213,215,216,218,221,229,235,239,240,251,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,287,288,290,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,313,314,315,316,318,319,321,323,324,327,329,330,331,332,333,334,335,337,338,339,341,344,349,357,360,368,376,377,378,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,398,403,406,410,413,415,416,418,419,424,428,431,432,433,434,442,443,444,445,452,453,456,457,460,461,462,463,464,465,468,469,471,472,473,474,478,480,481,490,491,492,494,500,502,503,504,506,507,513,514,516,517,519,520,521,],[-115,-117,-116,-68,-302,-304,-81,-69,-27,-28,-161,156,-304,156,156,-304,156,-28,-289,-162,271,-265,156,156,-304,-297,-263,156,-280,-292,-252,-281,-260,-291,-296,156,-266,-264,-279,-300,156,-233,-298,-294,-262,-261,-293,-278,-290,-295,-254,-304,156,-28,156,-74,-194,-72,-75,-289,-76,-77,-193,-78,-195,-73,156,156,156,156,-303,156,-261,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-252,156,-257,-256,156,-11,156,156,-12,-255,-299,-219,-223,-228,-229,-222,-225,-220,-221,-226,-224,156,-227,-301,-258,156,-274,156,156,-275,156,-261,156,-212,156,156,-197,156,156,156,156,156,-209,-213,-196,-210,156,156,-304,-261,271,271,271,271,271,271,-235,271,271,-238,-237,-234,-236,271,271,271,271,271,-177,-304,-282,156,-269,-270,-271,-273,-272,-211,156,-198,-208,-200,156,-261,-304,156,-28,156,156,-11,156,-304,-253,-259,156,-268,-267,156,156,156,156,-199,156,156,-261,156,-204,-203,156,-201,156,-283,-276,-304,156,156,-277,156,-202,-205,-207,156,-206,]),'VOID':([0,1,2,3,4,5,6,7,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,34,35,38,40,41,42,43,45,47,48,49,50,51,53,54,57,58,60,64,66,70,71,72,73,74,75,76,79,80,81,82,83,89,91,92,94,95,96,98,99,100,104,111,113,114,115,116,117,118,119,120,121,122,123,124,130,132,140,147,149,167,192,194,197,201,206,207,208,209,212,213,215,219,220,222,223,229,230,231,232,247,252,253,254,259,281,284,308,311,314,327,331,333,338,339,341,344,346,347,350,353,354,356,361,372,373,407,424,431,432,433,438,439,473,490,491,494,516,517,519,521,],[6,-104,-105,6,-100,-216,-99,-96,-64,-114,-304,-115,-29,-67,-112,-111,-113,-109,-95,6,-65,-98,6,-117,-52,-108,6,-66,-103,-116,-107,-102,-101,-106,-68,-304,-110,-304,-94,-60,-62,-93,-63,-91,-97,-90,-87,6,-88,-89,-53,-10,-9,-84,6,6,6,-82,-302,-130,-131,6,-92,6,-61,-81,-147,-148,-69,-85,-86,-161,6,-83,-70,6,6,6,-140,-141,6,6,-128,6,-137,6,6,-30,-162,-71,6,-74,-194,-72,-75,-76,-77,-193,-78,-195,-73,6,6,6,-126,-127,-303,-132,-138,-129,6,6,-36,-35,-149,6,6,6,6,6,-212,-197,6,-209,-213,-196,-210,-133,-134,-139,-31,-34,6,6,-150,-151,6,-211,-198,-208,-200,-32,-33,-199,-204,-203,-201,-202,-205,-207,-206,]),'WHILE':([41,80,94,98,115,192,194,197,201,206,207,208,209,212,213,215,218,229,327,331,335,337,338,339,341,344,345,424,431,432,433,434,468,469,472,473,490,491,494,507,514,516,517,519,520,521,],[-68,-302,-81,-69,193,-74,-194,-72,-75,-76,-77,-193,-78,-195,-73,193,193,-303,-212,-197,193,193,-209,-213,-196,-210,435,-211,-198,-208,-200,193,193,193,193,-199,-204,-203,-201,193,193,-202,-205,-207,193,-206,]),'HEX_FLOAT_CONST':([12,26,32,41,80,90,94,98,102,103,104,108,110,115,125,127,128,129,147,151,152,153,154,156,157,164,167,169,173,177,178,186,187,188,191,192,194,197,201,206,207,208,209,212,213,215,216,218,221,229,235,239,240,251,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,284,287,288,290,293,296,297,298,299,300,301,302,303,304,305,306,307,314,316,318,321,323,324,327,329,330,331,332,333,334,335,337,338,339,341,344,349,357,360,368,398,403,410,424,428,431,432,433,434,442,443,444,445,452,453,456,457,460,463,468,469,471,472,473,474,478,480,481,490,491,492,494,500,504,506,507,514,516,517,519,520,521,],[-115,-117,-116,-68,-302,-304,-81,-69,-27,-28,-161,183,-304,183,183,-304,183,-28,-162,-265,183,183,-304,-263,183,-260,183,-264,183,-262,-261,-304,183,-28,183,-74,-194,-72,-75,-76,-77,-193,-78,-195,-73,183,183,183,183,-303,183,-261,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,-11,183,183,-12,-219,-223,-228,-229,-222,-225,-220,-221,-226,-224,183,-227,183,183,183,183,-261,183,-212,183,183,-197,183,183,183,183,183,-209,-213,-196,-210,183,183,-304,-261,-177,-304,183,-211,183,-198,-208,-200,183,-261,-304,183,-28,183,183,-11,183,-304,183,183,183,183,183,-199,183,183,-261,183,-204,-203,183,-201,183,-304,183,183,183,-202,-205,-207,183,-206,]),'UNSIGNED':([0,1,2,3,4,5,6,7,9,10,11,12,13,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,34,35,38,40,41,42,43,45,47,48,49,50,51,53,54,57,58,60,64,66,70,71,72,73,74,75,76,79,80,81,82,83,89,91,92,94,95,96,98,99,100,104,111,113,114,115,116,117,118,119,120,121,122,123,124,130,132,140,147,149,167,192,194,197,201,206,207,208,209,212,213,215,219,220,222,223,229,230,231,232,247,252,253,254,259,281,284,308,311,314,327,331,333,338,339,341,344,346,347,350,353,354,356,361,372,373,407,424,431,432,433,438,439,473,490,491,494,516,517,519,521,],[19,-104,-105,19,-100,-216,-99,-96,-64,-114,-304,-115,-29,-67,-112,-111,-113,-109,-95,19,-65,-98,19,-117,-52,-108,19,-66,-103,-116,-107,-102,-101,-106,-68,-304,-110,-304,-94,-60,-62,-93,-63,-91,-97,-90,-87,19,-88,-89,-53,-10,-9,-84,19,19,19,-82,-302,-130,-131,19,-92,19,-61,-81,-147,-148,-69,-85,-86,-161,19,-83,-70,19,19,19,-140,-141,19,19,-128,19,-137,19,19,-30,-162,-71,19,-74,-194,-72,-75,-76,-77,-193,-78,-195,-73,19,19,19,-126,-127,-303,-132,-138,-129,19,19,-36,-35,-149,19,19,19,19,19,-212,-197,19,-209,-213,-196,-210,-133,-134,-139,-31,-34,19,19,-150,-151,19,-211,-198,-208,-200,-32,-33,-199,-204,-203,-201,-202,-205,-207,-206,]),'MODEQUAL':([139,155,158,159,160,163,165,166,168,171,172,175,176,180,181,182,183,184,204,229,280,282,283,294,295,309,313,315,319,406,413,415,416,418,419,461,462,464,465,502,503,513,],[-289,-297,-280,-292,297,-281,-291,-296,-266,-279,-300,-298,-294,-293,-278,-290,-295,-254,-289,-303,-252,-257,-256,-255,-299,-301,-258,-274,-275,-282,-269,-270,-271,-273,-272,-253,-259,-268,-267,-283,-276,-277,]),'TIMESEQUAL':([139,155,158,159,160,163,165,166,168,171,172,175,176,180,181,182,183,184,204,229,280,282,283,294,295,309,313,315,319,406,413,415,416,418,419,461,462,464,465,502,503,513,],[-289,-297,-280,-292,303,-281,-291,-296,-266,-279,-300,-298,-294,-293,-278,-290,-295,-254,-289,-303,-252,-257,-256,-255,-299,-301,-258,-274,-275,-282,-269,-270,-271,-273,-272,-253,-259,-268,-267,-283,-276,-277,]),'MOD':([139,150,155,158,159,160,163,165,166,168,171,172,174,175,176,180,181,182,183,184,204,229,280,282,283,294,295,309,313,315,319,376,377,378,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,406,413,415,416,418,419,461,462,464,465,502,503,513,],[-289,274,-297,-280,-292,-252,-281,-291,-296,-266,-279,-300,-233,-298,-294,-293,-278,-290,-295,-254,-289,-303,-252,-257,-256,-255,-299,-301,-258,-274,-275,274,274,274,274,274,274,-235,274,274,274,274,-234,-236,274,274,274,274,274,-282,-269,-270,-271,-273,-272,-253,-259,-268,-267,-283,-276,-277,]),'SWITCH':([41,80,94,98,115,192,194,197,201,206,207,208,209,212,213,215,218,229,327,331,335,337,338,339,341,344,424,431,432,433,434,468,469,472,473,490,491,494,507,514,516,517,519,520,521,],[-68,-302,-81,-69,195,-74,-194,-72,-75,-76,-77,-193,-78,-195,-73,195,195,-303,-212,-197,195,195,-209,-213,-196,-210,-211,-198,-208,-200,195,195,195,195,-199,-204,-203,-201,195,195,-202,-205,-207,195,-206,]),'RSHIFTEQUAL':([139,155,158,159,160,163,165,166,168,171,172,175,176,180,181,182,183,184,204,229,280,282,283,294,295,309,313,315,319,406,413,415,416,418,419,461,462,464,465,502,503,513,],[-289,-297,-280,-292,307,-281,-291,-296,-266,-279,-300,-298,-294,-293,-278,-290,-295,-254,-289,-303,-252,-257,-256,-255,-299,-301,-258,-274,-275,-282,-269,-270,-271,-273,-272,-253,-259,-268,-267,-283,-276,-277,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'id_init_declarator_list_opt':([25,76,],[86,86,]),'binary_expression':([108,115,125,128,167,187,191,215,216,218,221,235,240,251,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,284,288,290,306,314,316,318,321,324,329,330,332,333,334,335,337,349,357,428,434,444,452,457,463,468,469,471,472,474,478,481,492,500,506,507,514,520,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,376,377,378,150,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'designator_list':([154,403,460,504,],[286,286,286,286,]),'abstract_declarator':([130,247,311,407,],[242,362,242,362,]),'constant_expression':([216,221,260,288,349,],[342,348,375,400,436,]),'compound_statement':([77,107,115,215,218,335,337,434,468,469,472,507,514,520,],[114,149,192,192,192,192,192,192,192,192,192,192,192,192,]),'pointer':([0,3,25,29,33,63,74,76,101,106,120,126,130,247,311,351,407,],[8,56,8,8,8,56,56,8,146,56,56,56,244,363,408,56,408,]),'pp_directive':([0,29,],[9,9,]),'type_specifier_no_typeid':([0,3,21,25,29,60,74,75,76,83,91,111,115,116,117,120,121,123,130,132,167,215,219,220,247,252,281,284,308,311,314,333,356,361,407,],[10,57,10,10,10,10,57,10,10,10,10,10,10,10,10,222,10,10,57,10,10,10,10,10,10,10,10,10,10,222,10,10,10,10,10,]),'struct_or_union_specifier':([0,21,25,29,60,75,76,83,91,111,115,116,117,121,123,132,167,215,219,220,247,252,281,284,308,314,333,356,361,407,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'statement':([115,215,218,335,337,434,468,469,472,507,514,520,],[194,194,345,431,433,473,490,491,494,516,519,521,]),'translation_unit_or_empty':([0,],[15,]),'typedef_name':([0,21,25,29,60,75,76,83,91,111,115,116,117,121,123,132,167,215,219,220,247,252,281,284,308,314,333,356,361,407,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'designator':([154,286,403,460,504,],[292,399,292,292,292,]),'unary_expression':([108,115,125,128,152,153,157,167,173,187,191,215,216,218,221,235,240,251,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,284,288,290,306,314,316,318,321,324,329,330,332,333,334,335,337,349,357,410,428,434,444,452,453,457,463,468,469,471,472,474,478,481,492,500,506,507,514,520,],[160,160,160,160,280,283,294,160,313,160,160,160,280,160,280,160,160,160,280,280,280,280,160,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,160,160,280,160,160,160,160,160,160,160,160,160,160,160,160,160,160,280,160,280,160,160,160,280,280,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'id_declarator':([0,3,25,29,33,63,74,76,106,120,126,130,247,351,],[21,60,84,21,93,93,112,84,112,112,112,245,93,112,]),'initializer':([108,125,290,457,],[162,233,402,485,]),'declarator':([3,74,106,120,126,351,],[61,61,61,224,61,224,]),'struct_declaration_list':([83,116,117,],[121,219,220,]),'labeled_statement':([115,215,218,335,337,434,468,469,472,507,514,520,],[197,197,197,197,197,197,197,197,197,197,197,197,]),'type_qualifier_list_opt':([46,90,110,127,186,360,443,],[101,128,187,235,321,444,478,]),'brace_close':([121,144,196,219,220,256,257,285,403,488,504,],[230,259,331,346,347,372,373,397,458,503,513,]),'direct_id_declarator':([0,3,8,25,29,33,56,63,74,76,106,120,126,130,244,247,351,363,],[27,27,70,27,27,27,70,27,27,27,27,27,27,27,70,27,27,70,]),'parameter_list':([91,111,247,356,361,407,],[133,133,133,133,133,133,]),'external_declaration':([0,29,],[48,92,]),'struct_declarator_list_opt':([120,],[225,]),'direct_typeid_noparen_declarator':([130,244,],[246,358,]),'struct_declarator_list':([120,],[226,]),'block_item_list_opt':([115,],[196,]),'assignment_expression':([108,115,125,128,167,187,191,215,218,235,240,251,264,281,284,290,306,314,316,318,321,324,329,330,332,333,334,335,337,357,428,434,444,457,463,468,469,471,472,474,478,481,492,500,506,507,514,520,],[170,198,170,237,198,237,198,198,198,352,355,237,198,198,198,170,404,198,414,198,420,423,198,198,427,198,198,198,198,237,198,198,237,170,489,198,198,198,198,198,496,499,198,198,198,198,198,198,]),'declaration_specifiers_no_type_opt':([11,42,45,],[73,99,100,]),'parameter_declaration':([91,111,247,252,356,361,407,],[135,135,135,370,135,135,135,]),'struct_declarator':([120,351,],[227,437,]),'assignment_operator':([160,],[306,]),'designation':([154,403,460,504,],[293,293,293,293,]),'declaration_list_opt':([21,60,],[77,107,]),'enumerator':([97,141,142,258,],[143,143,143,374,]),'type_name':([167,281,284,308,314,],[312,395,396,405,411,]),'empty':([0,3,11,21,25,42,45,46,60,74,76,90,91,110,111,115,120,127,128,130,154,186,187,215,218,247,251,311,333,335,337,356,357,360,361,403,407,428,434,443,444,460,468,469,471,472,492,504,506,507,514,520,],[44,65,72,78,88,72,72,102,78,65,88,102,138,102,138,199,228,102,238,250,287,102,238,340,340,365,238,250,340,340,340,365,238,102,138,456,365,340,340,102,238,456,340,340,340,340,340,456,340,340,340,340,]),'function_specifier':([0,3,11,21,29,42,45,60,74,75,91,111,115,130,215,247,252,333,356,361,407,],[45,66,45,45,45,45,45,45,66,45,45,45,45,66,45,45,45,45,45,45,45,]),'unary_operator':([108,115,125,128,152,153,157,167,173,187,191,215,216,218,221,235,240,251,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,284,288,290,306,314,316,318,321,324,329,330,332,333,334,335,337,349,357,410,428,434,444,452,453,457,463,468,469,471,472,474,478,481,492,500,506,507,514,520,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'struct_declaration':([83,116,117,121,219,220,],[124,124,124,231,231,231,]),'identifier_list_opt':([91,111,361,],[134,189,446,]),'type_specifier':([0,21,25,29,60,75,76,83,91,111,115,116,117,121,123,132,167,215,219,220,247,252,281,284,308,314,333,356,361,407,],[53,53,89,53,53,53,89,122,53,53,53,122,122,122,232,89,122,53,122,122,53,53,122,122,122,122,53,53,53,53,]),'cast_expression':([108,115,125,128,152,167,187,191,215,216,218,221,235,240,251,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,284,288,290,306,314,316,318,321,324,329,330,332,333,334,335,337,349,357,410,428,434,444,452,453,457,463,468,469,471,472,474,478,481,492,500,506,507,514,520,],[174,174,174,174,282,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,461,174,174,174,174,461,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'init_declarator':([3,74,106,126,],[69,69,148,234,]),'declaration_specifiers':([0,21,29,60,75,91,111,115,215,247,252,333,356,361,407,],[3,74,3,74,74,130,130,74,74,130,130,74,130,130,130,]),'selection_statement':([115,215,218,335,337,434,468,469,472,507,514,520,],[201,201,201,201,201,201,201,201,201,201,201,201,]),'designation_opt':([154,403,460,504,],[290,457,290,457,]),'expression':([115,167,191,215,218,264,281,284,314,318,329,330,333,334,335,337,428,434,468,469,471,472,474,492,500,506,507,514,520,],[200,310,328,200,200,379,310,310,310,417,425,426,200,430,200,200,200,200,200,200,200,200,495,200,511,200,200,200,200,]),'direct_abstract_declarator':([130,244,247,311,363,407,408,],[243,359,243,243,359,243,359,]),'init_declarator_list_opt':([3,74,],[67,67,]),'argument_expression_list':([316,],[412,]),'enumerator_list':([97,141,142,],[144,256,257,]),'type_qualifier':([0,3,11,21,29,42,45,46,60,74,75,83,90,91,103,110,111,115,116,117,120,121,123,127,129,130,167,186,188,215,219,220,247,252,281,284,308,311,314,333,356,360,361,407,443,445,],[11,58,11,11,11,11,11,104,11,58,11,104,104,11,147,104,11,11,104,104,223,104,147,104,147,58,104,104,147,11,104,104,11,11,104,104,104,223,104,11,11,104,11,11,104,147,]),'specifier_qualifier_list':([83,116,117,121,167,219,220,281,284,308,314,],[120,120,120,120,311,120,120,311,311,311,311,]),'declaration_list':([21,60,],[75,75,]),'storage_class_specifier':([0,3,11,21,29,42,45,60,74,75,91,111,115,130,215,247,252,333,356,361,407,],[42,64,42,42,42,42,42,42,64,42,42,42,42,64,42,42,42,42,42,42,42,]),'enum_specifier':([0,21,25,29,60,75,76,83,91,111,115,116,117,121,123,132,167,215,219,220,247,252,281,284,308,314,333,356,361,407,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'expression_statement':([115,215,218,335,337,434,468,469,472,507,514,520,],[213,213,213,213,213,213,213,213,213,213,213,213,]),'iteration_statement':([115,215,218,335,337,434,468,469,472,507,514,520,],[206,206,206,206,206,206,206,206,206,206,206,206,]),'jump_statement':([115,215,218,335,337,434,468,469,472,507,514,520,],[207,207,207,207,207,207,207,207,207,207,207,207,]),'declaration':([0,21,29,60,75,115,215,333,],[51,79,51,79,113,208,208,428,]),'init_declarator_list':([3,74,],[59,59,]),'pppragma_directive':([0,29,83,115,116,117,121,215,218,219,220,335,337,434,468,469,472,507,514,520,],[22,22,119,209,119,119,119,209,209,119,119,209,209,209,209,209,209,209,209,209,]),'initializer_list':([154,460,],[291,488,]),'unified_string_literal':([108,115,125,128,152,153,157,167,173,187,191,215,216,218,221,235,240,251,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,284,288,290,306,314,316,318,321,324,329,330,332,333,334,335,337,349,357,410,428,434,444,452,453,457,463,468,469,471,472,474,478,481,492,500,506,507,514,520,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'unified_wstring_literal':([108,115,125,128,152,153,157,167,173,187,191,215,216,218,221,235,240,251,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,284,288,290,306,314,316,318,321,324,329,330,332,333,334,335,337,349,357,410,428,434,444,452,453,457,463,468,469,471,472,474,478,481,492,500,506,507,514,520,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'offsetof_member_designator':([459,],[487,]),'struct_or_union':([0,21,25,29,60,75,76,83,91,111,115,116,117,121,123,132,167,215,219,220,247,252,281,284,308,314,333,356,361,407,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'typeid_declarator':([3,63,74,106,120,126,351,],[62,109,62,62,62,62,62,]),'translation_unit':([0,],[29,]),'typeid_noparen_declarator':([130,],[248,]),'block_item':([115,215,],[212,341,]),'id_init_declarator_list':([25,76,],[85,85,]),'assignment_expression_opt':([128,187,251,357,444,],[236,322,367,441,479,]),'constant':([108,115,125,128,152,153,157,167,173,187,191,215,216,218,221,235,240,251,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,284,288,290,306,314,316,318,321,324,329,330,332,333,334,335,337,349,357,410,428,434,444,452,453,457,463,468,469,471,472,474,478,481,492,500,506,507,514,520,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'declaration_specifiers_no_type':([0,11,21,29,42,45,60,75,91,111,115,215,247,252,333,356,361,407,],[25,71,76,25,71,71,76,76,132,132,76,76,132,132,76,132,132,132,]),'expression_opt':([115,215,218,333,335,337,428,434,468,469,471,472,492,506,507,514,520,],[214,214,214,429,214,214,470,214,214,214,493,214,505,515,214,214,214,]),'block_item_list':([115,],[215,]),'identifier':([91,108,111,115,125,128,152,153,157,167,173,187,191,215,216,218,221,235,240,251,255,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,284,288,289,290,306,314,316,318,321,324,329,330,332,333,334,335,337,349,357,361,410,428,434,444,452,453,457,459,463,468,469,471,472,474,478,481,492,500,501,506,507,514,520,],[131,181,131,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,371,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,401,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,131,181,181,181,181,181,181,181,486,181,181,181,181,181,181,181,181,181,181,512,181,181,181,181,]),'id_init_declarator':([25,76,],[87,87,]),'initializer_list_opt':([154,],[285,]),'parameter_type_list':([91,111,247,356,361,407,],[136,190,364,364,447,364,]),'identifier_list':([91,111,361,],[137,137,137,]),'brace_open':([23,39,77,81,82,95,96,107,108,115,125,215,218,290,335,337,410,434,453,454,457,462,468,469,472,507,514,520,],[83,97,115,116,117,141,142,115,154,115,154,115,115,154,115,115,460,115,460,460,154,460,115,115,115,115,115,115,]),'parameter_type_list_opt':([247,356,407,],[366,440,366,]),'decl_body':([0,21,29,60,75,115,215,333,],[36,36,36,36,36,36,36,36,]),'function_definition':([0,29,],[49,49,]),'conditional_expression':([108,115,125,128,167,187,191,215,216,218,221,235,240,251,260,264,281,284,288,290,306,314,316,318,321,324,329,330,332,333,334,335,337,349,357,428,434,444,452,457,463,468,469,471,472,474,478,481,492,500,506,507,514,520,],[179,179,179,179,179,179,179,179,343,179,343,179,179,179,343,179,179,179,343,179,179,179,179,179,179,179,179,179,179,179,179,179,179,343,179,179,179,179,484,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,]),'abstract_declarator_opt':([130,311,],[249,409,]),'primary_expression':([108,115,125,128,152,153,157,167,173,187,191,215,216,218,221,235,240,251,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,284,288,290,306,314,316,318,321,324,329,330,332,333,334,335,337,349,357,410,428,434,444,452,453,457,463,468,469,471,472,474,478,481,492,500,506,507,514,520,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'direct_typeid_declarator':([3,56,63,74,106,120,126,351,],[68,105,68,68,68,68,68,68,]),'type_qualifier_list':([46,83,90,110,116,117,121,127,167,186,219,220,281,284,308,314,360,443,],[103,123,129,188,123,123,123,103,123,103,123,123,123,123,123,123,445,103,]),'postfix_expression':([108,115,125,128,152,153,157,167,173,187,191,215,216,218,221,235,240,251,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,284,288,290,306,314,316,318,321,324,329,330,332,333,334,335,337,349,357,410,428,434,444,452,453,457,463,468,469,471,472,474,478,481,492,500,506,507,514,520,],[184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
