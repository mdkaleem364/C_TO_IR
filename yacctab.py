
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'LPAREN':([0,1,2,3,4,5,6,7,8,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,40,41,43,44,45,46,47,48,50,51,52,53,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,78,79,81,82,83,84,87,88,89,90,93,95,96,99,105,112,114,116,117,118,124,125,127,128,133,135,140,141,143,145,146,147,149,153,154,155,157,159,160,162,163,164,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,184,185,186,187,188,189,191,192,196,197,198,199,200,202,203,206,207,209,211,212,213,214,215,217,218,221,223,224,225,226,227,228,230,233,234,237,242,243,245,246,248,252,253,254,255,257,265,269,271,272,274,276,278,281,282,283,284,287,290,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,318,319,320,321,322,323,324,325,326,327,328,329,330,335,336,337,338,340,341,342,344,345,347,349,350,351,352,353,355,357,358,360,361,362,363,364,366,367,368,369,372,376,377,378,379,381,385,386,387,388,390,391,392,393,395,398,399,400,401,426,427,428,430,432,433,434,438,442,443,448,451,452,453,454,455,456,457,458,460,461,463,464,465,469,470,471,472,474,475,476,477,478,479,481,483,485,486,494,495,497,498,500,501,502,503,504,505,507,510,511,515,516,517,519,520,521,],[3,-29,-65,3,56,-64,-116,-100,-101,-111,-107,-60,-67,-99,-93,-103,-304,3,-95,-106,-102,-97,-113,-91,-304,-66,-96,-105,-94,-62,-304,-68,3,-216,-112,-98,-304,-114,-104,-117,-109,-115,84,-63,-108,3,-110,-304,-147,-148,-302,-161,-27,-159,-28,56,-85,-9,-10,-86,-69,-61,84,3,-130,-131,-84,-81,84,84,-88,-89,142,-37,-87,-90,-92,-30,153,-289,-304,164,-28,-160,-162,164,-70,-128,84,84,142,-304,164,84,164,-35,153,164,153,273,275,-45,-36,164,164,281,287,-265,-294,-260,-291,287,290,-300,-279,-298,-261,-280,294,-266,-262,-281,-293,-278,-295,-263,315,-296,-290,-292,-264,-297,164,315,-149,-303,-78,-75,-261,315,-73,-193,-74,340,342,164,-289,-77,-72,164,349,350,-194,-76,-195,164,-132,-127,-126,315,-129,-38,-304,164,-28,-71,-304,153,-261,275,273,164,-304,390,164,164,-275,-274,164,164,-34,-299,315,315,315,315,315,315,315,164,315,315,315,315,315,315,315,315,315,315,315,-301,164,-31,-220,-223,-229,-225,-224,-228,-226,-227,-219,164,-221,-222,-150,-151,164,-197,164,-213,164,-196,-210,164,164,164,-209,164,-212,-133,84,315,-134,-43,-44,164,-261,164,164,-12,315,-11,-192,-186,-190,-188,-261,-304,164,-28,-32,390,390,-282,315,-269,-273,-272,-271,-270,-33,-200,164,164,-208,-198,475,-211,-42,-39,-177,-304,-191,-189,-187,-50,-51,164,-261,164,-304,-268,164,-267,315,315,-199,164,164,164,164,164,-40,-41,164,-11,-49,-46,164,-204,-203,-201,-47,-48,-276,-304,-283,164,164,164,-277,164,-205,-202,164,-207,-206,]),'STATIC':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,39,40,41,43,44,45,46,47,48,50,51,52,54,56,57,59,60,61,62,66,71,72,73,76,77,79,81,83,88,89,94,95,96,99,105,112,118,125,126,127,128,142,143,148,149,153,162,202,203,206,207,212,213,214,218,223,224,228,230,233,237,254,255,273,275,276,292,318,335,336,338,340,341,344,345,351,353,355,360,387,388,390,426,427,432,433,438,471,495,497,498,516,517,520,521,],[21,-29,-65,-52,-64,-116,-100,-101,-111,-107,-60,-67,-99,-93,-103,-95,-106,-102,-97,-113,-91,21,-66,-96,-105,-94,-62,21,-68,21,-216,21,-112,-98,21,-114,-104,-117,-109,-115,21,-63,-108,-110,21,116,-147,-148,-302,-161,-53,-69,-61,21,21,-82,-130,-131,-81,-88,-89,21,-87,-90,-92,-30,21,199,-162,-83,21,-70,21,252,21,-35,21,-36,-149,-303,-78,-75,-73,-193,-74,21,-77,-72,-194,-76,-195,-132,366,-71,21,21,385,-34,-31,-150,-151,-197,21,-213,-196,-210,-209,-212,-133,-134,460,-32,21,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'LE':([114,166,169,171,174,176,177,179,181,183,184,185,186,187,191,192,194,195,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,295,-281,-293,-278,-295,-296,-290,-252,-233,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-242,-240,-236,-238,295,-239,-241,295,-243,-244,295,295,-235,-234,-237,295,295,295,-253,-268,-267,-259,-276,-283,-277,]),'LSHIFT':([114,166,169,171,174,176,177,179,181,183,184,185,186,187,191,192,194,195,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,296,-281,-293,-278,-295,-296,-290,-252,-233,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,296,-240,-236,-238,296,-239,296,296,296,296,296,296,-235,-234,-237,296,296,296,-253,-268,-267,-259,-276,-283,-277,]),'PPPRAGMASTR':([35,],[71,]),'MINUSMINUS':([6,35,46,48,57,61,62,63,65,71,83,114,116,117,118,125,127,143,145,147,154,163,164,166,167,168,169,170,171,172,173,174,176,177,178,179,181,182,184,185,186,187,188,189,191,192,196,197,198,199,200,203,206,207,209,211,212,213,214,218,221,223,224,225,228,230,233,234,245,252,253,254,257,269,274,276,281,282,283,284,287,290,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,319,320,321,322,323,324,325,326,327,328,329,330,337,338,340,341,342,344,345,347,349,350,351,352,353,358,363,364,366,367,368,369,372,381,385,386,387,392,393,395,398,399,400,401,427,428,430,432,433,438,448,451,457,458,460,461,463,464,465,469,470,471,472,474,475,476,477,481,483,494,495,497,498,502,503,504,505,507,510,511,515,516,517,519,520,521,],[-116,-68,-117,-115,-304,-302,-161,-27,-28,-69,-81,-289,-304,167,-28,-162,167,-304,167,167,167,167,167,283,167,-265,-294,-260,-291,167,167,-300,-279,-298,-261,-280,-266,-262,-281,-293,-278,-295,-263,167,-296,-290,-292,-264,-297,167,167,-303,-78,-75,-261,167,-73,-193,-74,167,-289,-77,-72,167,-194,-76,-195,167,167,-304,167,-28,-304,-261,167,-304,167,167,-275,-274,167,167,-299,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,-301,167,-220,-223,-229,-225,-224,-228,-226,-227,-219,167,-221,-222,167,-197,167,-213,167,-196,-210,167,167,167,-209,167,-212,167,167,-261,167,167,-12,167,-11,-261,-304,167,-28,-282,167,-269,-273,-272,-271,-270,-200,167,167,-208,-198,-211,-177,-304,167,-261,167,-304,-268,167,-267,167,167,-199,167,167,167,167,167,167,-11,167,-204,-203,-201,-276,-304,-283,167,167,167,-277,167,-205,-202,167,-207,-206,]),'_BOOL':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,39,40,41,43,44,45,46,47,48,50,51,52,53,54,56,59,60,61,62,66,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,88,89,94,95,96,99,105,112,113,125,126,127,128,130,131,132,133,134,135,136,137,138,142,148,149,153,162,164,202,203,206,207,212,213,214,218,223,224,228,230,233,235,236,237,242,243,246,247,255,273,275,278,287,290,292,294,315,318,335,336,338,340,341,344,345,351,353,355,356,360,388,390,426,427,432,433,438,471,495,497,498,516,517,520,521,],[7,-29,-65,-52,-64,-116,-100,-101,-111,-107,-60,-67,-99,-93,-103,-95,-106,-102,-97,-113,-91,-304,-66,-96,-105,-94,-62,-304,-68,7,-216,7,-112,-98,-304,-114,-104,-117,-109,-115,7,-63,-108,7,-110,7,-147,-148,-302,-161,-53,-85,-9,-10,-86,-69,-61,7,7,-82,7,-130,7,-131,-84,-81,-88,-89,7,-87,-90,-92,-30,7,7,-162,-83,7,-70,7,-141,7,-128,-137,7,-140,7,7,7,7,-35,7,-36,7,-149,-303,-78,-75,-73,-193,-74,7,-77,-72,-194,-76,-195,7,-138,-132,-127,-126,-129,7,-71,7,7,7,7,7,-34,7,7,-31,-150,-151,-197,7,-213,-196,-210,-209,-212,-133,-139,-134,-32,7,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'FLOAT_CONST':([6,35,46,48,57,61,62,63,65,71,83,116,117,118,125,127,143,145,147,154,163,164,167,168,170,172,173,178,182,188,189,197,199,200,203,206,207,209,211,212,213,214,218,223,224,225,228,230,233,234,245,252,253,254,257,269,274,276,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,319,320,321,322,323,324,325,326,327,328,329,330,337,338,340,341,342,344,345,347,349,350,351,352,353,358,363,364,366,367,368,369,372,381,385,386,387,393,427,428,430,432,433,438,448,451,457,458,460,461,464,469,470,471,472,474,475,476,477,481,483,494,495,497,498,503,505,507,510,515,516,517,519,520,521,],[-116,-68,-117,-115,-304,-302,-161,-27,-28,-69,-81,-304,169,-28,-162,169,-304,169,169,169,169,169,169,-265,-260,169,169,-261,-262,-263,169,-264,169,169,-303,-78,-75,-261,169,-73,-193,-74,169,-77,-72,169,-194,-76,-195,169,169,-304,169,-28,-304,-261,169,-304,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,-220,-223,-229,-225,-224,-228,-226,-227,-219,169,-221,-222,169,-197,169,-213,169,-196,-210,169,169,169,-209,169,-212,169,169,-261,169,169,-12,169,-11,-261,-304,169,-28,169,-200,169,169,-208,-198,-211,-177,-304,169,-261,169,-304,169,169,169,-199,169,169,169,169,169,169,-11,169,-204,-203,-201,-304,169,169,169,169,-205,-202,169,-207,-206,]),'CHAR':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,39,40,41,43,44,45,46,47,48,50,51,52,53,54,56,59,60,61,62,66,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,88,89,94,95,96,99,105,112,113,125,126,127,128,130,131,132,133,134,135,136,137,138,142,148,149,153,162,164,202,203,206,207,212,213,214,218,223,224,228,230,233,235,236,237,242,243,246,247,255,273,275,278,287,290,292,294,315,318,335,336,338,340,341,344,345,351,353,355,356,360,388,390,426,427,432,433,438,471,495,497,498,516,517,520,521,],[8,-29,-65,-52,-64,-116,-100,-101,-111,-107,-60,-67,-99,-93,-103,-95,-106,-102,-97,-113,-91,-304,-66,-96,-105,-94,-62,-304,-68,8,-216,8,-112,-98,-304,-114,-104,-117,-109,-115,8,-63,-108,8,-110,8,-147,-148,-302,-161,-53,-85,-9,-10,-86,-69,-61,8,8,-82,8,-130,8,-131,-84,-81,-88,-89,8,-87,-90,-92,-30,8,8,-162,-83,8,-70,8,-141,8,-128,-137,8,-140,8,8,8,8,-35,8,-36,8,-149,-303,-78,-75,-73,-193,-74,8,-77,-72,-194,-76,-195,8,-138,-132,-127,-126,-129,8,-71,8,8,8,8,8,-34,8,8,-31,-150,-151,-197,8,-213,-196,-210,-209,-212,-133,-139,-134,-32,8,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'INT_CONST_OCT':([6,35,46,48,57,61,62,63,65,71,83,116,117,118,125,127,143,145,147,154,163,164,167,168,170,172,173,178,182,188,189,197,199,200,203,206,207,209,211,212,213,214,218,223,224,225,228,230,233,234,245,252,253,254,257,269,274,276,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,319,320,321,322,323,324,325,326,327,328,329,330,337,338,340,341,342,344,345,347,349,350,351,352,353,358,363,364,366,367,368,369,372,381,385,386,387,393,427,428,430,432,433,438,448,451,457,458,460,461,464,469,470,471,472,474,475,476,477,481,483,494,495,497,498,503,505,507,510,515,516,517,519,520,521,],[-116,-68,-117,-115,-304,-302,-161,-27,-28,-69,-81,-304,171,-28,-162,171,-304,171,171,171,171,171,171,-265,-260,171,171,-261,-262,-263,171,-264,171,171,-303,-78,-75,-261,171,-73,-193,-74,171,-77,-72,171,-194,-76,-195,171,171,-304,171,-28,-304,-261,171,-304,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,-220,-223,-229,-225,-224,-228,-226,-227,-219,171,-221,-222,171,-197,171,-213,171,-196,-210,171,171,171,-209,171,-212,171,171,-261,171,171,-12,171,-11,-261,-304,171,-28,171,-200,171,171,-208,-198,-211,-177,-304,171,-261,171,-304,171,171,171,-199,171,171,171,171,171,171,-11,171,-204,-203,-201,-304,171,171,171,171,-205,-202,171,-207,-206,]),'RSHIFTEQUAL':([114,166,169,171,174,176,177,179,181,184,185,186,187,191,192,194,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,-281,-293,-278,-295,-296,-290,326,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'PERIOD':([61,114,166,169,171,174,176,177,179,181,184,185,186,187,191,192,196,198,203,221,257,283,284,293,314,371,374,392,395,398,399,400,401,449,450,451,461,463,465,480,490,491,502,503,504,511,513,518,],[-302,-289,286,-294,-291,-300,-279,-298,-280,-266,-281,-293,-278,-295,-296,-290,-292,-297,-303,-289,373,-275,-274,-299,-301,373,-178,-282,-269,-273,-272,-271,-270,-179,-181,373,373,-268,-267,-180,-284,506,-276,373,-283,-277,-285,-286,]),'_COMPLEX':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,39,40,41,43,44,45,46,47,48,50,51,52,53,54,56,59,60,61,62,66,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,88,89,94,95,96,99,105,112,113,125,126,127,128,130,131,132,133,134,135,136,137,138,142,148,149,153,162,164,202,203,206,207,212,213,214,218,223,224,228,230,233,235,236,237,242,243,246,247,255,273,275,278,287,290,292,294,315,318,335,336,338,340,341,344,345,351,353,355,356,360,388,390,426,427,432,433,438,471,495,497,498,516,517,520,521,],[12,-29,-65,-52,-64,-116,-100,-101,-111,-107,-60,-67,-99,-93,-103,-95,-106,-102,-97,-113,-91,-304,-66,-96,-105,-94,-62,-304,-68,12,-216,12,-112,-98,-304,-114,-104,-117,-109,-115,12,-63,-108,12,-110,12,-147,-148,-302,-161,-53,-85,-9,-10,-86,-69,-61,12,12,-82,12,-130,12,-131,-84,-81,-88,-89,12,-87,-90,-92,-30,12,12,-162,-83,12,-70,12,-141,12,-128,-137,12,-140,12,12,12,12,-35,12,-36,12,-149,-303,-78,-75,-73,-193,-74,12,-77,-72,-194,-76,-195,12,-138,-132,-127,-126,-129,12,-71,12,12,12,12,12,-34,12,12,-31,-150,-151,-197,12,-213,-196,-210,-209,-212,-133,-139,-134,-32,12,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'LBRACE':([1,4,10,18,35,38,39,42,59,60,61,66,71,73,74,75,77,79,81,83,94,105,126,127,144,145,147,149,162,203,206,207,212,213,214,218,223,224,225,228,230,233,257,292,318,337,338,341,344,345,347,351,353,367,368,372,388,393,426,427,428,432,433,438,448,451,461,466,467,470,471,474,476,477,481,483,495,497,498,503,510,515,516,517,519,520,521,],[-29,-52,-135,61,-68,-136,-304,61,61,61,-302,-53,-69,-8,61,-7,-82,61,61,-81,-304,-30,-83,61,61,61,61,-35,-36,-303,-78,-75,-73,-193,-74,61,-77,-72,61,-194,-76,-195,-304,-34,-31,61,-197,-213,-196,-210,61,-209,-212,61,-12,-11,-32,61,-33,-200,61,-208,-198,-211,-177,-304,-304,61,61,61,-199,61,61,61,61,-11,-204,-203,-201,-304,61,61,-205,-202,61,-207,-206,]),'VOID':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,39,40,41,43,44,45,46,47,48,50,51,52,53,54,56,59,60,61,62,66,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,88,89,94,95,96,99,105,112,113,125,126,127,128,130,131,132,133,134,135,136,137,138,142,148,149,153,162,164,202,203,206,207,212,213,214,218,223,224,228,230,233,235,236,237,242,243,246,247,255,273,275,278,287,290,292,294,315,318,335,336,338,340,341,344,345,351,353,355,356,360,388,390,426,427,432,433,438,471,495,497,498,516,517,520,521,],[15,-29,-65,-52,-64,-116,-100,-101,-111,-107,-60,-67,-99,-93,-103,-95,-106,-102,-97,-113,-91,-304,-66,-96,-105,-94,-62,-304,-68,15,-216,15,-112,-98,-304,-114,-104,-117,-109,-115,15,-63,-108,15,-110,15,-147,-148,-302,-161,-53,-85,-9,-10,-86,-69,-61,15,15,-82,15,-130,15,-131,-84,-81,-88,-89,15,-87,-90,-92,-30,15,15,-162,-83,15,-70,15,-141,15,-128,-137,15,-140,15,15,15,15,-35,15,-36,15,-149,-303,-78,-75,-73,-193,-74,15,-77,-72,-194,-76,-195,15,-138,-132,-127,-126,-129,15,-71,15,15,15,15,15,-34,15,15,-31,-150,-151,-197,15,-213,-196,-210,-209,-212,-133,-139,-134,-32,15,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'DEFAULT':([35,61,71,83,127,203,206,207,212,213,214,218,223,224,225,228,230,233,337,338,341,344,345,347,351,353,427,428,432,433,438,471,474,476,477,495,497,498,510,515,516,517,519,520,521,],[-68,-302,-69,-81,208,-303,-78,-75,-73,-193,-74,208,-77,-72,208,-194,-76,-195,208,-197,-213,-196,-210,208,-209,-212,-200,208,-208,-198,-211,-199,208,208,208,-204,-203,-201,208,208,-205,-202,208,-207,-206,]),'EQ':([114,166,169,171,174,176,177,179,181,183,184,185,186,187,191,192,194,195,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,303,-281,-293,-278,-295,-296,-290,-252,-233,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-242,-240,-236,-238,303,-239,-241,-245,-243,-244,-246,303,-235,-234,-237,303,303,303,-253,-268,-267,-259,-276,-283,-277,]),'STRING_LITERAL':([6,35,46,48,57,61,62,63,65,71,83,116,117,118,125,127,143,145,147,154,163,164,167,168,170,172,173,177,178,179,182,188,189,197,199,200,203,206,207,209,211,212,213,214,218,223,224,225,228,230,233,234,245,252,253,254,257,269,274,276,281,282,287,290,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,319,320,321,322,323,324,325,326,327,328,329,330,337,338,340,341,342,344,345,347,349,350,351,352,353,358,363,364,366,367,368,369,372,381,385,386,387,393,427,428,430,432,433,438,448,451,457,458,460,461,464,469,470,471,472,474,475,476,477,481,483,494,495,497,498,503,505,507,510,515,516,517,519,520,521,],[-116,-68,-117,-115,-304,-302,-161,-27,-28,-69,-81,-304,177,-28,-162,177,-304,177,177,177,177,177,177,-265,-260,177,177,-298,-261,293,-262,-263,177,-264,177,177,-303,-78,-75,-261,177,-73,-193,-74,177,-77,-72,177,-194,-76,-195,177,177,-304,177,-28,-304,-261,177,-304,177,177,177,177,-299,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,-220,-223,-229,-225,-224,-228,-226,-227,-219,177,-221,-222,177,-197,177,-213,177,-196,-210,177,177,177,-209,177,-212,177,177,-261,177,177,-12,177,-11,-261,-304,177,-28,177,-200,177,177,-208,-198,-211,-177,-304,177,-261,177,-304,177,177,177,-199,177,177,177,177,177,177,-11,177,-204,-203,-201,-304,177,177,177,177,-205,-202,177,-207,-206,]),'NE':([114,166,169,171,174,176,177,179,181,183,184,185,186,187,191,192,194,195,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,306,-281,-293,-278,-295,-296,-290,-252,-233,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-242,-240,-236,-238,306,-239,-241,-245,-243,-244,-246,306,-235,-234,-237,306,306,306,-253,-268,-267,-259,-276,-283,-277,]),'TIMES':([0,2,3,5,6,7,8,11,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,40,41,43,44,45,46,47,48,50,51,52,53,54,57,59,60,61,62,63,64,65,67,68,69,70,71,72,76,78,79,81,82,83,84,88,89,95,96,99,112,114,116,117,118,125,127,128,133,135,140,143,145,146,147,153,154,163,164,166,167,168,169,170,171,172,173,174,176,177,178,179,181,182,183,184,185,186,187,188,189,191,192,194,195,196,197,198,199,200,202,203,206,207,209,211,212,213,214,218,221,223,224,225,228,230,233,234,237,242,243,245,246,252,253,254,255,257,269,274,276,278,281,282,283,284,287,288,289,290,291,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,335,336,337,338,340,341,342,344,345,347,349,350,351,352,353,355,357,358,360,363,364,366,367,368,369,372,381,385,386,387,390,392,393,395,398,399,400,401,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,427,428,430,432,433,438,448,451,457,458,460,461,462,463,464,465,467,469,470,471,472,474,475,476,477,481,483,494,495,497,498,502,503,504,505,507,510,511,515,516,517,519,520,521,],[19,-65,19,-64,-116,-100,-101,-111,-107,-60,-67,-99,-93,-103,-304,-95,-106,-102,-97,-113,-91,-304,-66,-96,-105,-94,-62,-304,-68,19,-216,-112,-98,-304,-114,-104,-117,-109,-115,19,-63,-108,19,-110,-304,-147,-148,-302,-161,-27,19,-28,-85,-9,-10,-86,-69,-61,19,19,-130,-131,-84,-81,19,-88,-89,-87,-90,-92,19,-289,-304,178,-28,-162,209,-70,-128,19,19,-304,209,19,209,19,269,209,209,-254,209,-265,-294,-260,-291,209,209,-300,-279,-298,-261,-280,-266,-262,309,-281,-293,-278,-295,-263,209,-296,-290,-252,-233,-292,-264,-297,209,209,-149,-303,-78,-75,-261,209,-73,-193,-74,209,-289,-77,-72,209,-194,-76,-195,209,-132,-127,-126,209,-129,-304,364,-28,-71,-304,-261,381,-304,19,209,209,-275,-274,209,-256,-255,209,-258,-299,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,-301,209,-252,-257,-220,-223,-229,-225,-224,-228,-226,-227,-219,209,-221,-222,-150,-151,209,-197,209,-213,209,-196,-210,209,209,209,-209,209,-212,-133,19,209,-134,209,-261,209,209,-12,209,-11,-261,-304,458,-28,19,-282,209,-269,-273,-272,-271,-270,309,309,-236,309,309,309,309,309,309,309,309,309,-235,-234,309,309,309,309,-200,209,209,-208,-198,-211,-177,-304,209,-261,209,-304,-253,-268,209,-267,-259,209,209,-199,209,209,209,209,209,209,-11,209,-204,-203,-201,-276,-304,-283,209,209,209,-277,209,-205,-202,209,-207,-206,]),'DIVIDE':([114,166,169,171,174,176,177,179,181,183,184,185,186,187,191,192,194,195,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,308,-281,-293,-278,-295,-296,-290,-252,-233,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,308,308,-236,308,308,308,308,308,308,308,308,308,-235,-234,308,308,308,308,-253,-268,-267,-259,-276,-283,-277,]),'OFFSETOF':([6,35,46,48,57,61,62,63,65,71,83,116,117,118,125,127,143,145,147,154,163,164,167,168,170,172,173,178,182,188,189,197,199,200,203,206,207,209,211,212,213,214,218,223,224,225,228,230,233,234,245,252,253,254,257,269,274,276,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,319,320,321,322,323,324,325,326,327,328,329,330,337,338,340,341,342,344,345,347,349,350,351,352,353,358,363,364,366,367,368,369,372,381,385,386,387,393,427,428,430,432,433,438,448,451,457,458,460,461,464,469,470,471,472,474,475,476,477,481,483,494,495,497,498,503,505,507,510,515,516,517,519,520,521,],[-116,-68,-117,-115,-304,-302,-161,-27,-28,-69,-81,-304,180,-28,-162,180,-304,180,180,180,180,180,180,-265,-260,180,180,-261,-262,-263,180,-264,180,180,-303,-78,-75,-261,180,-73,-193,-74,180,-77,-72,180,-194,-76,-195,180,180,-304,180,-28,-304,-261,180,-304,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,-220,-223,-229,-225,-224,-228,-226,-227,-219,180,-221,-222,180,-197,180,-213,180,-196,-210,180,180,180,-209,180,-212,180,180,-261,180,180,-12,180,-11,-261,-304,180,-28,180,-200,180,180,-208,-198,-211,-177,-304,180,-261,180,-304,180,180,180,-199,180,180,180,180,180,180,-11,180,-204,-203,-201,-304,180,180,180,180,-205,-202,180,-207,-206,]),'CASE':([35,61,71,83,127,203,206,207,212,213,214,218,223,224,225,228,230,233,337,338,341,344,345,347,351,353,427,428,432,433,438,471,474,476,477,495,497,498,510,515,516,517,519,520,521,],[-68,-302,-69,-81,211,-303,-78,-75,-73,-193,-74,211,-77,-72,211,-194,-76,-195,211,-197,-213,-196,-210,211,-209,-212,-200,211,-208,-198,-211,-199,211,211,211,-204,-203,-201,211,211,-205,-202,211,-207,-206,]),'PLUS':([6,35,46,48,57,61,62,63,65,71,83,114,116,117,118,125,127,143,145,147,154,163,164,166,167,168,169,170,171,172,173,174,176,177,178,179,181,182,183,184,185,186,187,188,189,191,192,194,195,196,197,198,199,200,203,206,207,209,211,212,213,214,218,221,223,224,225,228,230,233,234,245,252,253,254,257,269,274,276,281,282,283,284,287,288,289,290,291,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,337,338,340,341,342,344,345,347,349,350,351,352,353,358,363,364,366,367,368,369,372,381,385,386,387,392,393,395,398,399,400,401,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,427,428,430,432,433,438,448,451,457,458,460,461,462,463,464,465,467,469,470,471,472,474,475,476,477,481,483,494,495,497,498,502,503,504,505,507,510,511,515,516,517,519,520,521,],[-116,-68,-117,-115,-304,-302,-161,-27,-28,-69,-81,-289,-304,182,-28,-162,182,-304,182,182,182,182,182,-254,182,-265,-294,-260,-291,182,182,-300,-279,-298,-261,-280,-266,-262,310,-281,-293,-278,-295,-263,182,-296,-290,-252,-233,-292,-264,-297,182,182,-303,-78,-75,-261,182,-73,-193,-74,182,-289,-77,-72,182,-194,-76,-195,182,182,-304,182,-28,-304,-261,182,-304,182,182,-275,-274,182,-256,-255,182,-258,-299,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,-301,182,-252,-257,-220,-223,-229,-225,-224,-228,-226,-227,-219,182,-221,-222,182,-197,182,-213,182,-196,-210,182,182,182,-209,182,-212,182,182,-261,182,182,-12,182,-11,-261,-304,182,-28,-282,182,-269,-273,-272,-271,-270,310,310,-236,-238,310,310,310,310,310,310,310,310,-235,-234,-237,310,310,310,-200,182,182,-208,-198,-211,-177,-304,182,-261,182,-304,-253,-268,182,-267,-259,182,182,-199,182,182,182,182,182,182,-11,182,-204,-203,-201,-276,-304,-283,182,182,182,-277,182,-205,-202,182,-207,-206,]),'SEMI':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,40,41,43,44,45,46,47,48,49,50,51,52,53,54,59,60,61,66,67,68,69,70,71,72,76,78,79,80,81,82,83,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,114,127,128,129,130,131,132,133,134,135,136,138,141,149,162,166,169,171,174,175,176,177,179,181,183,184,185,186,187,191,192,194,195,196,198,202,203,206,207,212,213,214,216,218,219,221,222,223,224,225,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,255,256,258,259,260,283,284,288,289,291,292,293,314,316,317,318,333,335,336,337,338,340,341,343,344,345,346,347,351,353,354,355,356,359,360,361,362,388,392,395,398,399,400,401,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,425,426,427,428,429,430,432,433,437,438,439,440,442,443,447,462,463,465,467,471,472,473,474,476,477,478,479,482,492,493,495,497,498,502,504,509,510,511,515,516,517,519,520,521,],[28,-29,-65,-52,-64,-116,-100,-101,-111,-107,-60,-67,-99,-93,-103,-95,-106,-102,-97,-113,-91,-304,-66,-96,-105,-94,-62,-304,-68,28,-216,-112,-98,-304,-114,-104,-117,-109,-115,83,-304,-63,-108,-304,-110,-147,-148,-302,-53,-85,-9,-10,-86,-69,-61,-304,-304,-130,136,-131,-84,-81,-20,-158,-88,-89,-54,-19,-79,-37,-157,-87,-90,-120,-118,-92,-122,-80,-16,-15,-124,-30,-289,-304,-70,-157,136,-141,136,-128,-137,-304,-140,136,-55,-35,-36,-254,-294,-291,-300,-217,-279,-298,-280,-266,-231,-281,-293,-278,-295,-296,-290,-252,-233,-292,-297,-149,-303,-78,-75,-73,-193,-74,341,-304,345,-289,-214,-77,-72,-304,-194,-13,-76,351,-14,-195,353,136,-138,-132,356,-142,-26,-25,-127,-126,-144,-129,136,-38,-119,-71,-172,-121,-123,-125,-275,-274,-256,-255,-258,-34,-299,-301,-252,-257,-31,-230,-150,-151,-304,-197,-304,-213,-13,-196,-210,432,-304,-209,-212,438,-133,-139,-146,-134,-43,-44,-32,-282,-269,-273,-272,-271,-270,-242,-240,-236,-238,-247,-239,-241,-245,-243,-244,-246,-251,-235,-234,-237,-250,-248,-249,-218,-33,-200,-304,472,-304,-208,-198,-215,-211,-143,-145,-42,-39,-173,-253,-268,-267,-259,-199,-304,494,-304,-304,-304,-40,-41,-174,-232,507,-204,-203,-201,-276,-283,516,-304,-277,-304,-205,-202,-304,-207,-206,]),'ELSE':([35,71,203,206,207,212,214,223,224,230,338,341,345,351,353,427,432,433,438,471,495,497,498,516,517,520,521,],[-68,-69,-303,-78,-75,-73,-74,-77,-72,-76,-197,-213,-210,-209,-212,-200,-208,-198,-211,-199,-204,-203,510,-205,-202,-207,-206,]),'LT':([114,166,169,171,174,176,177,179,181,183,184,185,186,187,191,192,194,195,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,301,-281,-293,-278,-295,-296,-290,-252,-233,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-242,-240,-236,-238,301,-239,-241,301,-243,-244,301,301,-235,-234,-237,301,301,301,-253,-268,-267,-259,-276,-283,-277,]),'FLOAT':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,39,40,41,43,44,45,46,47,48,50,51,52,53,54,56,59,60,61,62,66,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,88,89,94,95,96,99,105,112,113,125,126,127,128,130,131,132,133,134,135,136,137,138,142,148,149,153,162,164,202,203,206,207,212,213,214,218,223,224,228,230,233,235,236,237,242,243,246,247,255,273,275,278,287,290,292,294,315,318,335,336,338,340,341,344,345,351,353,355,356,360,388,390,426,427,432,433,438,471,495,497,498,516,517,520,521,],[30,-29,-65,-52,-64,-116,-100,-101,-111,-107,-60,-67,-99,-93,-103,-95,-106,-102,-97,-113,-91,-304,-66,-96,-105,-94,-62,-304,-68,30,-216,30,-112,-98,-304,-114,-104,-117,-109,-115,30,-63,-108,30,-110,30,-147,-148,-302,-161,-53,-85,-9,-10,-86,-69,-61,30,30,-82,30,-130,30,-131,-84,-81,-88,-89,30,-87,-90,-92,-30,30,30,-162,-83,30,-70,30,-141,30,-128,-137,30,-140,30,30,30,30,-35,30,-36,30,-149,-303,-78,-75,-73,-193,-74,30,-77,-72,-194,-76,-195,30,-138,-132,-127,-126,-129,30,-71,30,30,30,30,30,-34,30,30,-31,-150,-151,-197,30,-213,-196,-210,-209,-212,-133,-139,-134,-32,30,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'AUTO':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,39,40,41,43,44,45,46,47,48,50,51,52,54,56,59,60,61,66,71,72,73,76,77,79,81,83,88,89,94,95,96,99,105,112,126,127,128,142,148,149,153,162,202,203,206,207,212,213,214,218,223,224,228,230,233,237,255,273,275,292,318,335,336,338,340,341,344,345,351,353,355,360,388,390,426,427,432,433,438,471,495,497,498,516,517,520,521,],[16,-29,-65,-52,-64,-116,-100,-101,-111,-107,-60,-67,-99,-93,-103,-95,-106,-102,-97,-113,-91,16,-66,-96,-105,-94,-62,16,-68,16,-216,16,-112,-98,16,-114,-104,-117,-109,-115,16,-63,-108,-110,16,-147,-148,-302,-53,-69,-61,16,16,-82,-130,-131,-81,-88,-89,16,-87,-90,-92,-30,16,-83,16,-70,16,16,-35,16,-36,-149,-303,-78,-75,-73,-193,-74,16,-77,-72,-194,-76,-195,-132,-71,16,16,-34,-31,-150,-151,-197,16,-213,-196,-210,-209,-212,-133,-134,-32,16,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'HEX_FLOAT_CONST':([6,35,46,48,57,61,62,63,65,71,83,116,117,118,125,127,143,145,147,154,163,164,167,168,170,172,173,178,182,188,189,197,199,200,203,206,207,209,211,212,213,214,218,223,224,225,228,230,233,234,245,252,253,254,257,269,274,276,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,319,320,321,322,323,324,325,326,327,328,329,330,337,338,340,341,342,344,345,347,349,350,351,352,353,358,363,364,366,367,368,369,372,381,385,386,387,393,427,428,430,432,433,438,448,451,457,458,460,461,464,469,470,471,472,474,475,476,477,481,483,494,495,497,498,503,505,507,510,515,516,517,519,520,521,],[-116,-68,-117,-115,-304,-302,-161,-27,-28,-69,-81,-304,187,-28,-162,187,-304,187,187,187,187,187,187,-265,-260,187,187,-261,-262,-263,187,-264,187,187,-303,-78,-75,-261,187,-73,-193,-74,187,-77,-72,187,-194,-76,-195,187,187,-304,187,-28,-304,-261,187,-304,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,-220,-223,-229,-225,-224,-228,-226,-227,-219,187,-221,-222,187,-197,187,-213,187,-196,-210,187,187,187,-209,187,-212,187,187,-261,187,187,-12,187,-11,-261,-304,187,-28,187,-200,187,187,-208,-198,-211,-177,-304,187,-261,187,-304,187,187,187,-199,187,187,187,187,187,187,-11,187,-204,-203,-201,-304,187,187,187,187,-205,-202,187,-207,-206,]),'XOREQUAL':([114,166,169,171,174,176,177,179,181,184,185,186,187,191,192,194,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,-281,-293,-278,-295,-296,-290,319,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'LNOT':([6,35,46,48,57,61,62,63,65,71,83,116,117,118,125,127,143,145,147,154,163,164,167,168,170,172,173,178,182,188,189,197,199,200,203,206,207,209,211,212,213,214,218,223,224,225,228,230,233,234,245,252,253,254,257,269,274,276,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,319,320,321,322,323,324,325,326,327,328,329,330,337,338,340,341,342,344,345,347,349,350,351,352,353,358,363,364,366,367,368,369,372,381,385,386,387,393,427,428,430,432,433,438,448,451,457,458,460,461,464,469,470,471,472,474,475,476,477,481,483,494,495,497,498,503,505,507,510,515,516,517,519,520,521,],[-116,-68,-117,-115,-304,-302,-161,-27,-28,-69,-81,-304,168,-28,-162,168,-304,168,168,168,168,168,168,-265,-260,168,168,-261,-262,-263,168,-264,168,168,-303,-78,-75,-261,168,-73,-193,-74,168,-77,-72,168,-194,-76,-195,168,168,-304,168,-28,-304,-261,168,-304,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,-220,-223,-229,-225,-224,-228,-226,-227,-219,168,-221,-222,168,-197,168,-213,168,-196,-210,168,168,168,-209,168,-212,168,168,-261,168,168,-12,168,-11,-261,-304,168,-28,168,-200,168,168,-208,-198,-211,-177,-304,168,-261,168,-304,168,168,168,-199,168,168,168,168,168,168,-11,168,-204,-203,-201,-304,168,168,168,168,-205,-202,168,-207,-206,]),'MODEQUAL':([114,166,169,171,174,176,177,179,181,184,185,186,187,191,192,194,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,-281,-293,-278,-295,-296,-290,320,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'FOR':([35,61,71,83,127,203,206,207,212,213,214,218,223,224,225,228,230,233,337,338,341,344,345,347,351,353,427,428,432,433,438,471,474,476,477,495,497,498,510,515,516,517,519,520,521,],[-68,-302,-69,-81,215,-303,-78,-75,-73,-193,-74,215,-77,-72,215,-194,-76,-195,215,-197,-213,-196,-210,215,-209,-212,-200,215,-208,-198,-211,-199,215,215,215,-204,-203,-201,215,215,-205,-202,215,-207,-206,]),'SWITCH':([35,61,71,83,127,203,206,207,212,213,214,218,223,224,225,228,230,233,337,338,341,344,345,347,351,353,427,428,432,433,438,471,474,476,477,495,497,498,510,515,516,517,519,520,521,],[-68,-302,-69,-81,226,-303,-78,-75,-73,-193,-74,226,-77,-72,226,-194,-76,-195,226,-197,-213,-196,-210,226,-209,-212,-200,226,-208,-198,-211,-199,226,226,226,-204,-203,-201,226,226,-205,-202,226,-207,-206,]),'SIGNED':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,39,40,41,43,44,45,46,47,48,50,51,52,53,54,56,59,60,61,62,66,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,88,89,94,95,96,99,105,112,113,125,126,127,128,130,131,132,133,134,135,136,137,138,142,148,149,153,162,164,202,203,206,207,212,213,214,218,223,224,228,230,233,235,236,237,242,243,246,247,255,273,275,278,287,290,292,294,315,318,335,336,338,340,341,344,345,351,353,355,356,360,388,390,426,427,432,433,438,471,495,497,498,516,517,520,521,],[52,-29,-65,-52,-64,-116,-100,-101,-111,-107,-60,-67,-99,-93,-103,-95,-106,-102,-97,-113,-91,-304,-66,-96,-105,-94,-62,-304,-68,52,-216,52,-112,-98,-304,-114,-104,-117,-109,-115,52,-63,-108,52,-110,52,-147,-148,-302,-161,-53,-85,-9,-10,-86,-69,-61,52,52,-82,52,-130,52,-131,-84,-81,-88,-89,52,-87,-90,-92,-30,52,52,-162,-83,52,-70,52,-141,52,-128,-137,52,-140,52,52,52,52,-35,52,-36,52,-149,-303,-78,-75,-73,-193,-74,52,-77,-72,-194,-76,-195,52,-138,-132,-127,-126,-129,52,-71,52,52,52,52,52,-34,52,52,-31,-150,-151,-197,52,-213,-196,-210,-209,-212,-133,-139,-134,-32,52,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'PPPRAGMA':([0,2,5,13,14,28,32,35,36,51,61,71,72,80,83,127,128,130,131,132,134,136,138,203,206,207,212,213,214,218,223,224,225,228,230,233,235,236,247,255,337,338,341,344,345,347,351,353,356,427,428,432,433,438,471,474,476,477,495,497,498,510,515,516,517,519,520,521,],[35,-65,-64,-60,-67,-66,-62,-68,35,-63,-302,-69,-61,35,-81,35,-70,35,-141,35,-137,-140,35,-303,-78,-75,-73,-193,-74,35,-77,-72,35,-194,-76,-195,35,-138,35,-71,35,-197,-213,-196,-210,35,-209,-212,-139,-200,35,-208,-198,-211,-199,35,35,35,-204,-203,-201,35,35,-205,-202,35,-207,-206,]),'PLUSEQUAL':([114,166,169,171,174,176,177,179,181,184,185,186,187,191,192,194,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,-281,-293,-278,-295,-296,-290,323,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'WHILE':([35,61,71,83,127,203,206,207,212,213,214,218,223,224,225,228,230,233,337,338,341,344,345,347,348,351,353,427,428,432,433,438,471,474,476,477,495,497,498,510,515,516,517,519,520,521,],[-68,-302,-69,-81,217,-303,-78,-75,-73,-193,-74,217,-77,-72,217,-194,-76,-195,217,-197,-213,-196,-210,217,434,-209,-212,-200,217,-208,-198,-211,-199,217,217,217,-204,-203,-201,217,217,-205,-202,217,-207,-206,]),'CONDOP':([114,166,169,171,174,176,177,179,181,183,184,185,186,187,191,192,194,195,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,302,-281,-293,-278,-295,-296,-290,-252,-233,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-242,-240,-236,-238,-247,-239,-241,-245,-243,-244,-246,-251,-235,-234,-237,-250,-248,-249,-253,-268,-267,-259,-276,-283,-277,]),'INLINE':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,39,40,41,43,44,45,46,47,48,50,51,52,54,56,59,60,61,66,71,72,73,76,77,79,81,83,88,89,94,95,96,99,105,112,126,127,128,142,148,149,153,162,202,203,206,207,212,213,214,218,223,224,228,230,233,237,255,273,275,292,318,335,336,338,340,341,344,345,351,353,355,360,388,390,426,427,432,433,438,471,495,497,498,516,517,520,521,],[41,-29,-65,-52,-64,-116,-100,-101,-111,-107,-60,-67,-99,-93,-103,-95,-106,-102,-97,-113,-91,41,-66,-96,-105,-94,-62,41,-68,41,-216,41,-112,-98,41,-114,-104,-117,-109,-115,41,-63,-108,-110,41,-147,-148,-302,-53,-69,-61,41,41,-82,-130,-131,-81,-88,-89,41,-87,-90,-92,-30,41,-83,41,-70,41,41,-35,41,-36,-149,-303,-78,-75,-73,-193,-74,41,-77,-72,-194,-76,-195,-132,-71,41,41,-34,-31,-150,-151,-197,41,-213,-196,-210,-209,-212,-133,-134,-32,41,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'MINUSEQUAL':([114,166,169,171,174,176,177,179,181,184,185,186,187,191,192,194,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,-281,-293,-278,-295,-296,-290,322,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'VOLATILE':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,39,40,41,43,44,45,46,47,48,50,51,52,54,56,57,59,60,61,62,65,66,71,72,73,76,77,79,80,81,83,88,89,94,95,96,99,105,112,116,118,125,126,127,128,130,131,132,133,134,135,136,137,138,142,143,148,149,153,162,164,202,203,206,207,212,213,214,218,223,224,228,230,233,235,236,237,242,243,246,247,252,254,255,273,275,276,278,287,290,292,294,315,318,335,336,338,340,341,344,345,351,353,355,356,360,385,387,388,390,426,427,432,433,438,471,495,497,498,516,517,520,521,],[46,-29,-65,-52,-64,-116,-100,-101,-111,-107,-60,-67,-99,-93,-103,46,-95,-106,-102,-97,-113,-91,46,-66,-96,-105,-94,-62,46,-68,46,-216,46,-112,-98,46,-114,-104,-117,-109,-115,46,-63,-108,-110,46,46,-147,-148,-302,-161,46,-53,-69,-61,46,46,-82,-130,46,-131,-81,-88,-89,46,-87,-90,-92,-30,46,46,46,-162,-83,46,-70,46,-141,46,-128,-137,46,-140,46,46,46,46,46,-35,46,-36,46,-149,-303,-78,-75,-73,-193,-74,46,-77,-72,-194,-76,-195,46,-138,-132,-127,-126,-129,46,46,46,-71,46,46,46,46,46,46,-34,46,46,-31,-150,-151,-197,46,-213,-196,-210,-209,-212,-133,-139,-134,46,46,-32,46,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'RBRACKET':([6,46,48,57,62,63,114,117,118,125,143,154,165,166,169,171,174,175,176,177,178,179,181,183,184,185,186,187,190,191,192,193,194,195,196,198,203,222,253,254,269,270,274,276,277,283,284,288,289,291,293,314,316,317,331,333,364,365,381,382,386,387,392,395,397,398,399,400,401,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,425,437,441,444,446,458,459,462,463,465,467,484,487,492,502,504,511,512,],[-116,-117,-115,-304,-161,-27,-289,-304,-28,-162,-304,-304,-4,-254,-294,-291,-300,-217,-279,-298,292,-280,-266,-231,-281,-293,-278,-295,318,-296,-290,-3,-252,-233,-292,-297,-303,-214,-304,-28,378,379,-304,-304,388,-275,-274,-256,-255,-258,-299,-301,-252,-257,426,-230,442,443,453,454,-304,-28,-282,-269,465,-273,-272,-271,-270,-242,-240,-236,-238,-247,-239,-241,-245,-243,-244,-246,-251,-235,-234,-237,-250,-248,-249,-218,-215,478,479,480,485,486,-253,-268,-267,-259,500,501,-232,-276,-283,-277,518,]),'DIVEQUAL':([114,166,169,171,174,176,177,179,181,184,185,186,187,191,192,194,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,-281,-293,-278,-295,-296,-290,330,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'EQUALS':([1,4,66,86,90,93,94,97,104,105,114,119,129,141,149,162,166,169,171,174,176,177,179,181,184,185,186,187,191,192,194,196,198,203,221,248,283,284,288,289,291,292,293,314,316,317,318,361,362,371,374,388,392,395,398,399,400,401,426,442,443,449,450,462,463,465,467,478,479,480,502,504,511,],[-29,-52,-53,-158,-54,-37,-157,145,147,-30,-289,200,-157,-55,-35,-36,-254,-294,-291,-300,-279,-298,-280,-266,-281,-293,-278,-295,-296,-290,327,-292,-297,-303,-289,-38,-275,-274,-256,-255,-258,-34,-299,-301,-252,-257,-31,-43,-44,448,-178,-32,-282,-269,-273,-272,-271,-270,-33,-42,-39,-179,-181,-253,-268,-267,-259,-40,-41,-180,-276,-283,-277,]),'CONTINUE':([35,61,71,83,127,203,206,207,212,213,214,218,223,224,225,228,230,233,337,338,341,344,345,347,351,353,427,428,432,433,438,471,474,476,477,495,497,498,510,515,516,517,519,520,521,],[-68,-302,-69,-81,219,-303,-78,-75,-73,-193,-74,219,-77,-72,219,-194,-76,-195,219,-197,-213,-196,-210,219,-209,-212,-200,219,-208,-198,-211,-199,219,219,219,-204,-203,-201,219,219,-205,-202,219,-207,-206,]),'XOR':([114,166,169,171,174,176,177,179,181,183,184,185,186,187,191,192,194,195,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,313,-281,-293,-278,-295,-296,-290,-252,-233,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-242,-240,-236,-238,-247,-239,-241,-245,-243,-244,-246,313,-235,-234,-237,313,313,-249,-253,-268,-267,-259,-276,-283,-277,]),'GOTO':([35,61,71,83,127,203,206,207,212,213,214,218,223,224,225,228,230,233,337,338,341,344,345,347,351,353,427,428,432,433,438,471,474,476,477,495,497,498,510,515,516,517,519,520,521,],[-68,-302,-69,-81,220,-303,-78,-75,-73,-193,-74,220,-77,-72,220,-194,-76,-195,220,-197,-213,-196,-210,220,-209,-212,-200,220,-208,-198,-211,-199,220,220,220,-204,-203,-201,220,220,-205,-202,220,-207,-206,]),'ID':([0,2,3,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,40,41,42,43,44,45,46,47,48,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,76,78,79,81,82,83,84,87,88,89,95,96,99,112,116,117,118,122,123,124,125,127,128,133,135,140,142,143,145,146,147,150,153,154,155,163,164,167,168,170,172,173,178,182,188,189,197,199,200,201,202,203,206,207,209,211,212,213,214,218,220,223,224,225,228,230,233,234,237,242,243,245,246,252,253,254,255,257,265,269,274,275,276,281,282,285,286,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,319,320,321,322,323,324,325,326,327,328,329,330,335,336,337,338,340,341,342,344,345,347,349,350,351,352,353,355,357,358,360,363,364,366,367,368,369,372,373,381,385,386,387,393,427,428,430,432,433,438,448,451,457,458,460,461,464,468,469,470,471,472,474,475,476,477,481,483,494,495,497,498,503,505,506,507,510,515,516,517,519,520,521,],[1,-65,1,-64,-116,-100,-101,-135,-111,-107,-60,-67,-99,-93,-103,59,-304,1,-95,-106,-102,-97,-113,-91,-304,-66,-96,-105,-94,-62,-304,-68,1,-216,-136,-112,-98,79,-304,-114,-104,-117,-109,-115,1,-63,-108,1,-110,114,-304,119,-147,-148,-302,-161,-27,-159,-28,-85,-9,-10,-86,-69,-61,1,1,-130,-131,-84,-81,1,1,-88,-89,-87,-90,-92,1,-304,114,-28,119,119,-160,-162,221,-70,-128,1,1,114,-304,114,1,114,114,1,114,1,114,114,114,-265,-260,114,114,-261,-262,-263,114,-264,114,114,119,-149,-303,-78,-75,-261,114,-73,-193,-74,221,346,-77,-72,221,-194,-76,-195,114,-132,-127,-126,114,-129,-304,114,-28,-71,-304,1,-261,114,114,-304,114,114,399,401,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-220,-223,-229,-225,-224,-228,-226,-227,-219,114,-221,-222,-150,-151,221,-197,114,-213,114,-196,-210,221,114,114,-209,114,-212,-133,1,114,-134,114,-261,114,114,-12,114,-11,114,-261,-304,114,-28,114,-200,221,114,-208,-198,-211,-177,-304,114,-261,114,-304,114,114,114,114,-199,114,221,114,221,221,114,-11,114,-204,-203,-201,-304,114,114,114,221,221,-205,-202,221,-207,-206,]),'OREQUAL':([114,166,169,171,174,176,177,179,181,184,185,186,187,191,192,194,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,-281,-293,-278,-295,-296,-290,321,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'COMMA':([1,4,6,7,8,11,12,15,16,17,19,21,22,23,24,25,26,29,30,31,37,40,41,44,45,46,47,48,52,54,59,60,62,63,64,65,66,79,81,85,86,88,89,90,93,94,95,96,97,98,99,100,102,104,105,106,107,109,111,112,114,119,120,121,124,125,129,133,141,149,151,152,155,156,157,158,159,160,161,162,166,169,171,174,175,176,177,179,181,183,184,185,186,187,191,192,194,195,196,198,201,202,203,204,205,221,222,232,237,239,240,242,243,244,246,248,249,256,258,259,260,261,263,271,272,278,279,283,284,288,289,291,292,293,314,316,317,318,332,333,334,335,336,354,355,359,360,361,362,375,376,377,378,379,388,389,391,392,394,395,396,397,398,399,400,401,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,425,426,431,435,436,437,439,440,442,443,445,447,452,453,454,455,456,462,463,465,467,478,479,482,485,486,488,489,492,496,499,500,501,502,504,511,512,],[-29,-52,-116,-100,-101,-111,-107,-99,-93,-103,-304,-95,-106,-102,-97,-113,-91,-96,-105,-94,-216,-112,-98,-114,-104,-117,-109,-115,-108,-110,-147,-148,-161,-27,-159,-28,-53,-130,-131,140,-158,-88,-89,-54,-37,-157,-87,-90,-120,-118,-92,-122,146,-124,-30,-170,148,-165,150,-304,-289,-155,-152,201,-160,-162,-157,-128,-55,-35,-169,-168,-183,-2,-185,-1,-56,-45,-167,-36,-254,-294,-291,-300,-217,-279,-298,-280,-266,-231,-281,-293,-278,-295,-296,-290,-252,-233,-292,-297,-153,-149,-303,201,201,-289,-214,352,-132,-142,357,-127,-126,-144,-129,-38,-119,-172,-121,-123,-125,-166,-171,-57,-184,-304,352,-275,-274,-256,-255,-258,-34,-299,-301,-252,-257,-31,-156,-230,-154,-150,-151,352,-133,-146,-134,-43,-44,451,-192,-186,-190,-188,-32,-182,-183,-282,-287,-269,464,352,-273,-272,-271,-270,468,-242,-240,-236,-238,-247,-239,-241,352,-245,-243,-244,-246,-251,-235,-234,-237,-250,-248,-249,-218,-33,352,352,352,-215,-143,-145,-42,-39,-175,-173,-191,-189,-187,-50,-51,-253,-268,-267,-259,-40,-41,-174,-49,-46,503,-288,-232,352,-176,-47,-48,-276,-283,-277,352,]),'RESTRICT':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,39,40,41,43,44,45,46,47,48,50,51,52,54,56,57,59,60,61,62,65,66,71,72,73,76,77,79,80,81,83,88,89,94,95,96,99,105,112,116,118,125,126,127,128,130,131,132,133,134,135,136,137,138,142,143,148,149,153,162,164,202,203,206,207,212,213,214,218,223,224,228,230,233,235,236,237,242,243,246,247,252,254,255,273,275,276,278,287,290,292,294,315,318,335,336,338,340,341,344,345,351,353,355,356,360,385,387,388,390,426,427,432,433,438,471,495,497,498,516,517,520,521,],[6,-29,-65,-52,-64,-116,-100,-101,-111,-107,-60,-67,-99,-93,-103,6,-95,-106,-102,-97,-113,-91,6,-66,-96,-105,-94,-62,6,-68,6,-216,6,-112,-98,6,-114,-104,-117,-109,-115,6,-63,-108,-110,6,6,-147,-148,-302,-161,6,-53,-69,-61,6,6,-82,-130,6,-131,-81,-88,-89,6,-87,-90,-92,-30,6,6,6,-162,-83,6,-70,6,-141,6,-128,-137,6,-140,6,6,6,6,6,-35,6,-36,6,-149,-303,-78,-75,-73,-193,-74,6,-77,-72,-194,-76,-195,6,-138,-132,-127,-126,-129,6,6,6,-71,6,6,6,6,6,6,-34,6,6,-31,-150,-151,-197,6,-213,-196,-210,-209,-212,-133,-139,-134,6,6,-32,6,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'ANDEQUAL':([114,166,169,171,174,176,177,179,181,184,185,186,187,191,192,194,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,-281,-293,-278,-295,-296,-290,324,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'AND':([6,35,46,48,57,61,62,63,65,71,83,114,116,117,118,125,127,143,145,147,154,163,164,166,167,168,169,170,171,172,173,174,176,177,178,179,181,182,183,184,185,186,187,188,189,191,192,194,195,196,197,198,199,200,203,206,207,209,211,212,213,214,218,221,223,224,225,228,230,233,234,245,252,253,254,257,269,274,276,281,282,283,284,287,288,289,290,291,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,337,338,340,341,342,344,345,347,349,350,351,352,353,358,363,364,366,367,368,369,372,381,385,386,387,392,393,395,398,399,400,401,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,427,428,430,432,433,438,448,451,457,458,460,461,462,463,464,465,467,469,470,471,472,474,475,476,477,481,483,494,495,497,498,502,503,504,505,507,510,511,515,516,517,519,520,521,],[-116,-68,-117,-115,-304,-302,-161,-27,-28,-69,-81,-289,-304,170,-28,-162,170,-304,170,170,170,170,170,-254,170,-265,-294,-260,-291,170,170,-300,-279,-298,-261,-280,-266,-262,299,-281,-293,-278,-295,-263,170,-296,-290,-252,-233,-292,-264,-297,170,170,-303,-78,-75,-261,170,-73,-193,-74,170,-289,-77,-72,170,-194,-76,-195,170,170,-304,170,-28,-304,-261,170,-304,170,170,-275,-274,170,-256,-255,170,-258,-299,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,-301,170,-252,-257,-220,-223,-229,-225,-224,-228,-226,-227,-219,170,-221,-222,170,-197,170,-213,170,-196,-210,170,170,170,-209,170,-212,170,170,-261,170,170,-12,170,-11,-261,-304,170,-28,-282,170,-269,-273,-272,-271,-270,-242,-240,-236,-238,-247,-239,-241,-245,-243,-244,-246,299,-235,-234,-237,299,299,299,-200,170,170,-208,-198,-211,-177,-304,170,-261,170,-304,-253,-268,170,-267,-259,170,170,-199,170,170,170,170,170,170,-11,170,-204,-203,-201,-276,-304,-283,170,170,170,-277,170,-205,-202,170,-207,-206,]),'STRUCT':([0,1,2,4,5,6,13,14,16,21,24,27,28,29,31,32,33,35,36,39,41,43,46,48,51,53,56,61,62,66,67,68,69,70,71,72,73,77,78,80,82,83,94,105,113,125,126,127,128,130,131,132,134,136,137,138,142,148,149,153,162,164,203,206,207,212,213,214,218,223,224,228,230,233,235,236,247,255,273,275,287,290,292,294,315,318,338,340,341,344,345,351,353,356,388,390,426,427,432,433,438,471,495,497,498,516,517,520,521,],[10,-29,-65,-52,-64,-116,-60,-67,-93,-95,-97,-304,-66,-96,-94,-62,-304,-68,10,10,-98,-304,-117,-115,-63,10,10,-302,-161,-53,-85,-9,-10,-86,-69,-61,10,-82,10,10,-84,-81,10,-30,10,-162,-83,10,-70,10,-141,10,-137,-140,10,10,10,10,-35,10,-36,10,-303,-78,-75,-73,-193,-74,10,-77,-72,-194,-76,-195,10,-138,10,-71,10,10,10,10,-34,10,10,-31,-197,10,-213,-196,-210,-209,-212,-139,-32,10,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'PLUSPLUS':([6,35,46,48,57,61,62,63,65,71,83,114,116,117,118,125,127,143,145,147,154,163,164,166,167,168,169,170,171,172,173,174,176,177,178,179,181,182,184,185,186,187,188,189,191,192,196,197,198,199,200,203,206,207,209,211,212,213,214,218,221,223,224,225,228,230,233,234,245,252,253,254,257,269,274,276,281,282,283,284,287,290,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,319,320,321,322,323,324,325,326,327,328,329,330,337,338,340,341,342,344,345,347,349,350,351,352,353,358,363,364,366,367,368,369,372,381,385,386,387,392,393,395,398,399,400,401,427,428,430,432,433,438,448,451,457,458,460,461,463,464,465,469,470,471,472,474,475,476,477,481,483,494,495,497,498,502,503,504,505,507,510,511,515,516,517,519,520,521,],[-116,-68,-117,-115,-304,-302,-161,-27,-28,-69,-81,-289,-304,172,-28,-162,172,-304,172,172,172,172,172,284,172,-265,-294,-260,-291,172,172,-300,-279,-298,-261,-280,-266,-262,-281,-293,-278,-295,-263,172,-296,-290,-292,-264,-297,172,172,-303,-78,-75,-261,172,-73,-193,-74,172,-289,-77,-72,172,-194,-76,-195,172,172,-304,172,-28,-304,-261,172,-304,172,172,-275,-274,172,172,-299,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-301,172,-220,-223,-229,-225,-224,-228,-226,-227,-219,172,-221,-222,172,-197,172,-213,172,-196,-210,172,172,172,-209,172,-212,172,172,-261,172,172,-12,172,-11,-261,-304,172,-28,-282,172,-269,-273,-272,-271,-270,-200,172,172,-208,-198,-211,-177,-304,172,-261,172,-304,-268,172,-267,172,172,-199,172,172,172,172,172,172,-11,172,-204,-203,-201,-276,-304,-283,172,172,172,-277,172,-205,-202,172,-207,-206,]),'LSHIFTEQUAL':([114,166,169,171,174,176,177,179,181,184,185,186,187,191,192,194,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,-281,-293,-278,-295,-296,-290,325,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'WSTRING_LITERAL':([6,35,46,48,57,61,62,63,65,71,83,116,117,118,125,127,143,145,147,154,163,164,167,168,170,172,173,174,178,182,184,188,189,197,199,200,203,206,207,209,211,212,213,214,218,223,224,225,228,230,233,234,245,252,253,254,257,269,274,276,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,319,320,321,322,323,324,325,326,327,328,329,330,337,338,340,341,342,344,345,347,349,350,351,352,353,358,363,364,366,367,368,369,372,381,385,386,387,393,427,428,430,432,433,438,448,451,457,458,460,461,464,469,470,471,472,474,475,476,477,481,483,494,495,497,498,503,505,507,510,515,516,517,519,520,521,],[-116,-68,-117,-115,-304,-302,-161,-27,-28,-69,-81,-304,174,-28,-162,174,-304,174,174,174,174,174,174,-265,-260,174,174,-300,-261,-262,314,-263,174,-264,174,174,-303,-78,-75,-261,174,-73,-193,-74,174,-77,-72,174,-194,-76,-195,174,174,-304,174,-28,-304,-261,174,-304,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-301,174,-220,-223,-229,-225,-224,-228,-226,-227,-219,174,-221,-222,174,-197,174,-213,174,-196,-210,174,174,174,-209,174,-212,174,174,-261,174,174,-12,174,-11,-261,-304,174,-28,174,-200,174,174,-208,-198,-211,-177,-304,174,-261,174,-304,174,174,174,-199,174,174,174,174,174,174,-11,174,-204,-203,-201,-304,174,174,174,174,-205,-202,174,-207,-206,]),'TIMESEQUAL':([114,166,169,171,174,176,177,179,181,184,185,186,187,191,192,194,196,198,203,221,283,284,288,289,291,293,314,316,317,392,395,398,399,400,401,462,463,465,467,502,504,511,],[-289,-254,-294,-291,-300,-279,-298,-280,-266,-281,-293,-278,-295,-296,-290,329,-292,-297,-303,-289,-275,-274,-256,-255,-258,-299,-301,-252,-257,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'abstract_declarator_opt':([112,278,],[151,389,]),'pppragma_directive':([0,36,80,127,130,132,138,218,225,235,247,337,347,428,474,476,477,510,515,519,],[2,2,131,206,131,131,131,206,206,131,131,206,206,206,206,206,206,206,206,206,]),'initializer_list_opt':([257,],[370,]),'abstract_declarator':([112,153,278,390,],[156,266,156,266,]),'pp_directive':([0,36,],[5,5,]),'selection_statement':([127,218,225,337,347,428,474,476,477,510,515,519,],[207,207,207,207,207,207,207,207,207,207,207,207,]),'translation_unit_or_empty':([0,],[9,]),'constant_expression':([200,211,245,358,369,],[332,339,359,440,446,]),'typedef_name':([0,36,39,53,56,73,78,80,94,113,127,130,132,137,138,142,148,153,164,218,235,247,273,275,287,290,294,315,340,390,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'id_init_declarator_list_opt':([53,78,],[101,101,]),'external_declaration':([0,36,],[13,72,]),'assignment_expression':([117,127,145,147,154,163,164,199,218,225,234,253,274,281,282,287,290,302,315,328,337,340,342,347,349,350,352,363,366,367,386,428,430,457,460,464,472,474,475,476,477,481,494,505,507,510,515,519,],[165,222,256,256,165,277,222,331,222,222,222,165,165,394,222,222,222,222,222,425,222,222,222,222,222,222,437,441,444,256,165,222,222,484,487,489,222,222,222,222,222,256,222,222,222,222,222,222,]),'parameter_type_list_opt':([153,273,390,],[264,380,264,]),'enumerator_list':([58,122,123,],[121,204,205,]),'declaration_list_opt':([39,94,],[74,144,]),'enum_specifier':([0,36,39,53,56,73,78,80,94,113,127,130,132,137,138,142,148,153,164,218,235,247,273,275,287,290,294,315,340,390,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'block_item_list_opt':([127,],[210,]),'primary_expression':([117,127,145,147,154,163,164,167,172,173,189,199,200,211,218,225,234,245,253,274,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,328,337,340,342,347,349,350,352,358,363,366,367,369,386,393,428,430,457,460,464,469,470,472,474,475,476,477,481,494,505,507,510,515,519,],[181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,]),'binary_expression':([117,127,145,147,154,163,164,199,200,211,218,225,234,245,253,274,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,328,337,340,342,347,349,350,352,358,363,366,367,369,386,428,430,457,460,464,469,472,474,475,476,477,481,494,505,507,510,515,519,],[183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,405,406,407,408,409,410,411,183,413,414,415,416,417,418,419,420,421,422,423,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,]),'expression_statement':([127,218,225,337,347,428,474,476,477,510,515,519,],[212,212,212,212,212,212,212,212,212,212,212,212,]),'postfix_expression':([117,127,145,147,154,163,164,167,172,173,189,199,200,211,218,225,234,245,253,274,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,328,337,340,342,347,349,350,352,358,363,366,367,369,386,393,428,430,457,460,464,469,470,472,474,475,476,477,481,494,505,507,510,515,519,],[166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'storage_class_specifier':([0,27,33,36,39,43,50,56,73,76,94,112,127,142,148,153,218,273,275,340,390,],[27,27,27,27,27,27,88,27,27,88,27,88,27,27,27,27,27,27,27,27,27,]),'compound_statement':([74,127,144,218,225,337,347,428,474,476,477,510,515,519,],[128,214,255,214,214,214,214,214,214,214,214,214,214,214,]),'initializer_list':([257,461,],[375,488,]),'constant':([117,127,145,147,154,163,164,167,172,173,189,199,200,211,218,225,234,245,253,274,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,328,337,340,342,347,349,350,352,358,363,366,367,369,386,393,428,430,457,460,464,469,470,472,474,475,476,477,481,494,505,507,510,515,519,],[176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'struct_declarator_list':([135,],[240,]),'argument_expression_list':([281,],[396,]),'parameter_type_list':([56,142,153,273,275,390,],[108,250,267,267,383,267,]),'unified_wstring_literal':([117,127,145,147,154,163,164,167,172,173,189,199,200,211,218,225,234,245,253,274,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,328,337,340,342,347,349,350,352,358,363,366,367,369,386,393,428,430,457,460,464,469,470,472,474,475,476,477,481,494,505,507,510,515,519,],[184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,]),'struct_declaration_list':([80,130,138,],[132,235,247,]),'unary_operator':([117,127,145,147,154,163,164,167,172,173,189,199,200,211,218,225,234,245,253,274,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,328,337,340,342,347,349,350,352,358,363,366,367,369,386,393,428,430,457,460,464,469,470,472,474,475,476,477,481,494,505,507,510,515,519,],[189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,]),'parameter_declaration':([56,142,148,153,273,275,390,],[109,109,261,109,109,109,109,]),'init_declarator_list_opt':([50,76,],[92,92,]),'translation_unit':([0,],[36,]),'expression_opt':([127,218,225,337,340,347,428,430,472,474,476,477,494,507,510,515,519,],[216,216,216,216,429,216,216,473,493,216,216,216,508,514,216,216,216,]),'cast_expression':([117,127,145,147,154,163,164,189,199,200,211,218,225,234,245,253,274,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,328,337,340,342,347,349,350,352,358,363,366,367,369,386,393,428,430,457,460,464,469,470,472,474,475,476,477,481,494,505,507,510,515,519,],[195,195,195,195,195,195,195,317,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,462,195,195,195,195,195,195,462,195,195,195,195,195,195,195,195,195,195,195,195,]),'type_qualifier':([0,19,27,33,36,39,43,50,56,57,65,73,76,80,94,112,116,118,127,130,132,135,137,138,142,143,148,153,164,218,235,247,252,254,273,275,276,278,287,290,294,315,340,385,387,390,],[43,62,43,43,43,43,43,95,43,62,125,43,95,62,43,95,62,125,43,62,62,242,125,62,43,62,43,43,62,43,62,62,62,125,43,43,62,242,62,62,62,62,43,62,125,43,]),'declaration_specifiers_no_type_opt':([27,33,43,],[67,70,82,]),'type_specifier_no_typeid':([0,36,39,50,53,56,73,76,78,80,94,112,113,127,130,132,135,137,138,142,148,153,164,218,235,247,273,275,278,287,290,294,315,340,390,],[44,44,44,96,44,44,44,96,44,44,44,96,44,44,44,44,243,44,44,44,44,44,44,44,44,44,44,44,243,44,44,44,44,44,44,]),'block_item_list':([127,],[218,]),'direct_abstract_declarator':([112,153,155,265,278,390,391,],[157,157,272,272,157,157,272,]),'declaration_specifiers_no_type':([0,27,33,36,39,43,56,73,94,127,142,148,153,218,273,275,340,390,],[53,69,69,53,78,69,113,78,78,78,113,113,113,78,113,113,78,113,]),'type_name':([164,287,290,294,315,],[280,402,403,404,424,]),'brace_close':([121,132,204,205,210,235,247,370,451,488,503,],[202,237,335,336,338,355,360,447,482,502,511,]),'struct_declarator_list_opt':([135,],[238,]),'init_declarator_list':([50,76,],[85,85,]),'typeid_noparen_declarator':([112,],[152,]),'id_init_declarator_list':([53,78,],[102,102,]),'type_specifier':([0,36,39,53,56,73,78,80,94,113,127,130,132,137,138,142,148,153,164,218,235,247,273,275,287,290,294,315,340,390,],[26,26,26,99,26,26,99,133,26,99,26,133,133,246,133,26,26,26,133,26,133,133,26,26,133,133,133,133,26,26,]),'jump_statement':([127,218,225,337,347,428,474,476,477,510,515,519,],[223,223,223,223,223,223,223,223,223,223,223,223,]),'struct_or_union':([0,36,39,53,56,73,78,80,94,113,127,130,132,137,138,142,148,153,164,218,235,247,273,275,287,290,294,315,340,390,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'declaration_list':([39,94,],[73,73,]),'decl_body':([0,36,39,73,94,127,218,340,],[49,49,49,49,49,49,49,49,]),'id_init_declarator':([53,78,],[100,100,]),'struct_declarator':([135,357,],[239,439,]),'type_qualifier_list':([19,57,80,116,130,132,138,143,164,235,247,252,276,287,290,294,315,385,],[65,118,137,65,137,137,137,254,137,137,137,65,387,137,137,137,137,65,]),'typeid_declarator':([50,76,84,135,140,146,357,],[86,86,139,86,86,86,86,]),'labeled_statement':([127,218,225,337,347,428,474,476,477,510,515,519,],[224,224,224,224,224,224,224,224,224,224,224,224,]),'enumerator':([58,122,123,201,],[120,120,120,334,]),'identifier':([56,117,127,142,145,147,150,154,163,164,167,172,173,189,199,200,211,218,225,234,245,253,274,275,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,328,337,340,342,347,349,350,352,358,363,366,367,369,373,386,393,428,430,457,460,464,468,469,470,472,474,475,476,477,481,494,505,506,507,510,515,519,],[106,186,186,106,186,186,263,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,106,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,450,186,186,186,186,186,186,186,490,186,186,186,186,186,186,186,186,186,186,513,186,186,186,186,]),'declarator':([50,76,135,140,146,357,],[97,97,244,97,97,244,]),'designation':([257,451,461,503,],[368,368,368,368,]),'pointer':([0,3,36,50,53,64,76,78,84,112,135,140,146,153,278,357,390,],[20,20,20,87,20,124,87,20,87,155,87,87,87,265,391,87,391,]),'assignment_operator':([194,],[328,]),'brace_open':([18,42,59,60,74,79,81,127,144,145,147,218,225,337,347,367,393,428,466,467,470,474,476,477,481,510,515,519,],[58,80,122,123,127,130,138,127,127,257,257,127,127,127,127,257,461,127,461,461,461,127,127,127,257,127,127,127,]),'type_qualifier_list_opt':([19,57,116,143,252,276,385,],[64,117,163,253,363,386,457,]),'designator':([257,371,451,461,503,],[374,449,374,374,374,]),'offsetof_member_designator':([468,],[491,]),'init_declarator':([50,76,140,146,],[98,98,249,259,]),'parameter_list':([56,142,153,273,275,390,],[107,107,107,107,107,107,]),'statement':([127,218,225,337,347,428,474,476,477,510,515,519,],[228,228,348,427,433,471,495,497,498,517,520,521,]),'specifier_qualifier_list':([80,130,132,138,164,235,247,287,290,294,315,],[135,135,135,135,278,135,135,278,278,278,278,]),'function_definition':([0,36,],[32,32,]),'function_specifier':([0,27,33,36,39,43,50,56,73,76,94,112,127,142,148,153,218,273,275,340,390,],[33,33,33,33,33,33,89,33,33,89,33,89,33,33,33,33,33,33,33,33,33,]),'assignment_expression_opt':([117,154,253,274,386,],[190,270,365,382,459,]),'direct_typeid_declarator':([50,76,84,87,135,140,146,357,],[90,90,90,141,90,90,90,90,]),'empty':([0,19,27,33,39,43,50,53,56,57,76,78,94,112,116,117,127,135,142,143,153,154,218,225,252,253,257,273,274,275,276,278,337,340,347,385,386,390,428,430,451,461,472,474,476,477,494,503,507,510,515,519,],[34,63,68,68,75,68,91,103,110,63,91,103,75,158,63,193,229,241,110,63,268,193,343,343,63,193,372,268,193,110,63,158,343,343,343,63,193,268,343,343,483,483,343,343,343,343,343,483,343,343,343,343,]),'direct_typeid_noparen_declarator':([112,155,],[159,271,]),'iteration_statement':([127,218,225,337,347,428,474,476,477,510,515,519,],[230,230,230,230,230,230,230,230,230,230,230,230,]),'unary_expression':([117,127,145,147,154,163,164,167,172,173,189,199,200,211,218,225,234,245,253,274,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,328,337,340,342,347,349,350,352,358,363,366,367,369,386,393,428,430,457,460,464,469,470,472,474,475,476,477,481,494,505,507,510,515,519,],[194,194,194,194,194,194,194,288,289,291,316,194,316,316,194,194,194,316,194,194,194,194,194,194,316,316,316,316,316,316,316,194,316,316,316,316,316,316,316,316,316,316,316,194,194,194,194,194,194,194,194,194,316,194,194,194,316,194,316,194,194,194,194,194,316,316,194,194,194,194,194,194,194,194,194,194,194,194,]),'conditional_expression':([117,127,145,147,154,163,164,199,200,211,218,225,234,245,253,274,281,282,287,290,302,315,328,337,340,342,347,349,350,352,358,363,366,367,369,386,428,430,457,460,464,469,472,474,475,476,477,481,494,505,507,510,515,519,],[175,175,175,175,175,175,175,175,333,333,175,175,175,333,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,333,175,175,175,333,175,175,175,175,175,175,492,175,175,175,175,175,175,175,175,175,175,175,175,]),'id_declarator':([0,3,36,50,53,76,78,84,112,135,140,146,153,357,],[39,55,39,94,104,129,104,55,161,129,129,129,55,129,]),'struct_declaration':([80,130,132,138,235,247,],[134,134,236,134,236,236,]),'identifier_list':([56,142,275,],[111,111,111,]),'unified_string_literal':([117,127,145,147,154,163,164,167,172,173,189,199,200,211,218,225,234,245,253,274,281,282,287,290,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,328,337,340,342,347,349,350,352,358,363,366,367,369,386,393,428,430,457,460,464,469,470,472,474,475,476,477,481,494,505,507,510,515,519,],[179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,]),'expression':([127,164,218,225,234,282,287,290,302,315,337,340,342,347,349,350,428,430,472,474,475,476,477,494,505,507,510,515,519,],[232,279,232,232,354,397,279,279,412,279,232,232,431,232,435,436,232,232,232,232,496,232,232,232,512,232,232,232,232,]),'initializer':([145,147,367,481,],[258,260,445,499,]),'direct_id_declarator':([0,3,20,36,50,53,76,78,84,87,112,135,140,146,153,155,265,357,],[4,4,66,4,4,4,4,4,4,66,4,4,4,4,4,66,66,4,]),'designator_list':([257,451,461,503,],[371,371,371,371,]),'declaration_specifiers':([0,36,39,56,73,94,127,142,148,153,218,273,275,340,390,],[50,50,76,112,76,76,76,112,112,112,76,112,112,76,112,]),'designation_opt':([257,451,461,503,],[367,481,367,481,]),'declaration':([0,36,39,73,94,127,218,340,],[51,51,77,126,77,213,213,430,]),'block_item':([127,218,],[233,344,]),'struct_or_union_specifier':([0,36,39,53,56,73,78,80,94,113,127,130,132,137,138,142,148,153,164,218,235,247,273,275,287,290,294,315,340,390,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'identifier_list_opt':([56,142,275,],[115,251,384,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
