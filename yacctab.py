
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'UNION':([0,2,3,7,8,9,11,13,17,19,20,22,28,29,30,31,32,36,39,41,42,43,44,45,46,48,55,56,64,66,67,68,70,71,72,73,74,75,77,83,85,86,98,107,108,109,110,111,112,113,120,129,130,131,133,135,147,177,184,185,187,188,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,253,268,270,274,320,326,329,330,337,339,349,351,352,353,359,362,364,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[12,-67,-96,-97,-98,-94,12,-64,-29,12,-115,-68,-63,-52,-304,-62,12,-95,-117,-116,-66,-304,-304,-93,-65,-60,-53,-81,-302,12,-61,-69,12,-10,-9,-86,12,12,-82,-161,-85,-84,12,12,12,12,-137,12,-140,-141,12,-83,-70,12,-162,-30,12,12,12,12,-303,-138,12,-35,12,-36,12,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-71,12,12,12,12,-139,-34,-31,12,12,-196,-197,-209,12,-212,-213,-210,12,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'STATIC':([0,1,2,3,7,8,9,10,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,67,68,69,70,75,77,79,83,87,88,91,97,98,101,102,116,125,129,130,131,133,135,146,147,186,187,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,256,321,322,329,330,336,337,339,349,351,352,353,359,362,364,366,367,398,422,423,424,440,442,444,445,480,494,498,499,516,517,519,521,],[36,-99,-67,-96,-97,-98,-94,-110,-64,-107,-113,-29,-104,36,-115,-216,-68,-102,-106,-91,-63,-52,36,-62,36,-103,-101,-95,-105,-117,-100,-116,-66,36,36,-93,-65,-114,-60,-108,-111,-112,-109,36,-53,-81,-92,-130,-302,-131,-61,-69,118,36,36,-82,36,-161,-147,-148,-87,-89,36,-88,-90,198,36,-83,-70,36,-162,-30,258,36,-132,-303,36,-35,36,-36,36,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,370,-133,-134,-34,-31,426,36,36,-196,-197,-209,36,-212,-213,-210,-150,-151,36,-33,-32,466,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'PLUS':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,121,131,133,142,146,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,180,181,183,187,191,198,201,203,216,220,222,227,228,230,231,232,235,236,238,239,240,241,244,246,249,256,257,258,261,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,296,297,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,376,377,378,379,381,390,394,395,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,424,425,426,429,437,440,442,444,445,446,452,453,454,456,457,459,460,462,463,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,501,502,503,508,510,511,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,166,-28,166,-304,-289,166,-162,166,-304,-254,-278,-295,-266,-264,166,-298,-279,166,-280,-263,-292,-233,-293,-296,166,-262,-290,-294,-265,-260,-252,-304,-281,-261,166,166,-300,304,-291,-297,-303,166,166,-261,166,166,166,-72,-194,-77,-75,166,-73,166,-289,-193,166,-76,-195,-78,-74,166,-28,166,-304,-274,-275,166,166,-255,166,-252,166,-257,-299,-258,166,-220,-225,166,-221,-229,-227,-226,-219,-222,-224,-223,-228,166,166,-11,-12,-301,-256,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,-304,166,-261,166,-196,-197,-209,166,166,166,166,-212,166,-213,-210,166,166,-261,166,-271,-270,-273,-272,-269,-177,-304,-282,166,304,-236,304,-237,304,-235,-234,304,304,304,304,304,304,-238,304,304,304,304,-28,166,-304,-261,166,-200,-208,-211,-198,166,-267,166,-268,166,-259,166,-11,-304,-253,166,166,-261,166,166,166,166,166,-199,166,-204,166,-203,-201,-304,-276,166,-283,166,166,-277,166,-205,-202,-207,166,-206,]),'RETURN':([22,56,64,68,131,187,220,222,227,228,230,231,232,238,240,241,244,246,349,351,352,355,359,361,362,364,440,442,444,445,446,475,479,480,481,494,498,499,510,514,516,517,519,520,521,],[-68,-81,-302,-69,235,-303,235,-72,-194,-77,-75,235,-73,-193,-76,-195,-78,-74,-196,-197,-209,235,-212,235,-213,-210,-200,-208,-211,-198,235,235,235,-199,235,-204,-203,-201,235,235,-205,-202,-207,235,-206,]),'TIMESEQUAL':([121,149,150,151,152,155,156,159,161,163,164,167,168,171,174,178,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-293,-296,-290,-294,278,-281,-300,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-267,-268,-259,-253,-276,-283,-277,]),'INLINE':([0,1,2,3,7,8,9,10,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,67,68,70,75,77,79,87,88,91,97,98,101,102,125,129,130,131,135,147,186,187,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,321,322,329,330,337,339,349,351,352,353,359,362,364,366,367,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[8,-99,-67,-96,-97,-98,-94,-110,-64,-107,-113,-29,-104,8,-115,-216,-68,-102,-106,-91,-63,-52,8,-62,8,-103,-101,-95,-105,-117,-100,-116,-66,8,8,-93,-65,-114,-60,-108,-111,-112,-109,8,-53,-81,-92,-130,-302,-131,-61,-69,8,8,-82,8,-147,-148,-87,-89,8,-88,-90,8,-83,-70,8,-30,8,-132,-303,8,-35,8,-36,8,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,-133,-134,-34,-31,8,8,-196,-197,-209,8,-212,-213,-210,-150,-151,8,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'PLUSPLUS':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,121,131,133,142,146,149,150,151,152,153,154,155,156,158,159,160,161,163,164,165,166,167,168,169,170,173,174,175,176,177,178,181,183,187,191,198,201,203,216,220,222,227,228,230,231,232,235,236,238,239,240,241,244,246,249,256,257,258,261,264,265,266,268,270,272,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,296,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,376,377,378,379,381,390,394,395,399,424,425,426,429,437,440,442,444,445,446,452,453,454,456,459,460,462,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,501,502,503,508,510,511,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,154,-28,154,-304,-289,154,-162,154,-304,261,-278,-295,-266,-264,154,-298,-279,154,-280,-263,-292,-293,-296,154,-262,-290,-294,-265,-260,-304,-281,-261,154,154,-300,-291,-297,-303,154,154,-261,154,154,154,-72,-194,-77,-75,154,-73,154,-289,-193,154,-76,-195,-78,-74,154,-28,154,-304,-274,-275,154,154,154,154,-299,154,-220,-225,154,-221,-229,-227,-226,-219,-222,-224,-223,-228,154,154,-11,-12,-301,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-304,154,-261,154,-196,-197,-209,154,154,154,154,-212,154,-213,-210,154,154,-261,154,-271,-270,-273,-272,-269,-177,-304,-282,154,-28,154,-304,-261,154,-200,-208,-211,-198,154,-267,154,-268,154,154,-11,-304,154,154,-261,154,154,154,154,154,-199,154,-204,154,-203,-201,-304,-276,154,-283,154,154,-277,154,-205,-202,-207,154,-206,]),'PPHASH':([0,2,13,19,22,28,31,42,46,48,56,67,68,130,187,253,351,],[2,-67,-64,2,-68,-63,-62,-66,-65,-60,-81,-61,-69,-70,-303,-71,-197,]),'DIVEQUAL':([121,149,150,151,152,155,156,159,161,163,164,167,168,171,174,178,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-293,-296,-290,-294,283,-281,-300,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-267,-268,-259,-253,-276,-283,-277,]),'LONG':([0,1,2,3,7,8,9,10,11,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,66,67,68,70,71,72,73,74,75,77,79,83,85,86,87,88,91,97,98,101,102,107,108,109,110,111,112,113,114,115,120,125,129,130,131,133,135,147,177,184,185,186,187,188,189,195,196,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,268,270,274,299,320,321,322,326,329,330,337,339,349,351,352,353,359,362,364,366,367,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[18,-99,-67,-96,-97,-98,-94,-110,18,-64,-107,-113,-29,-104,18,-115,-216,-68,-102,-106,-91,-63,-52,-304,-62,18,-103,-101,-95,-105,-117,-100,-116,-66,-304,-304,-93,-65,-114,-60,-108,-111,-112,-109,18,-53,-81,-92,-130,-302,-131,18,-61,-69,18,-10,-9,-86,18,18,-82,18,-161,-85,-84,-147,-148,-87,-89,18,-88,-90,18,18,18,-137,18,-140,-141,-128,18,18,18,-83,-70,18,-162,-30,18,18,18,18,-132,-303,-138,-129,-127,-126,18,-35,18,-36,18,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,18,18,18,18,18,-133,-134,-139,-34,-31,18,18,-196,-197,-209,18,-212,-213,-210,-150,-151,18,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'RBRACE':([22,56,64,68,109,110,112,113,121,131,138,139,140,149,150,151,152,155,156,157,159,161,162,163,164,167,168,171,172,173,174,178,180,181,183,184,185,187,188,220,221,222,224,227,228,230,232,238,240,241,244,246,247,248,250,261,264,267,269,271,272,273,287,292,295,296,297,324,326,349,351,352,359,362,364,368,369,376,377,378,379,381,387,388,389,394,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,440,442,444,445,452,454,457,461,463,480,485,486,487,494,498,499,500,501,503,511,516,517,519,521,],[-68,-81,-302,-69,187,-137,-140,-141,-289,-304,-155,-152,187,-254,-278,-295,-266,-298,-279,-217,-280,-292,-233,-293,-296,-290,-294,-252,-172,-304,-281,-300,-231,-291,-297,187,187,-303,-138,-6,187,-72,-5,-194,-77,-75,-73,-193,-76,-195,-78,-74,187,187,-153,-274,-275,-255,-252,-257,-299,-258,187,-21,-22,-301,-256,-230,-139,-196,-197,-209,-212,-213,-210,-156,-154,-271,-270,-273,-272,-269,-218,-173,-175,187,-282,-243,-236,-247,-237,-250,-235,-234,-239,-240,-251,-246,-248,-249,-238,-244,-241,-242,-245,-200,-208,-211,-198,-267,-268,-259,-174,-253,-199,-176,187,-232,-204,-203,-201,187,-276,-283,-277,-205,-202,-207,-206,]),'SHORT':([0,1,2,3,7,8,9,10,11,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,66,67,68,70,71,72,73,74,75,77,79,83,85,86,87,88,91,97,98,101,102,107,108,109,110,111,112,113,114,115,120,125,129,130,131,133,135,147,177,184,185,186,187,188,189,195,196,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,268,270,274,299,320,321,322,326,329,330,337,339,349,351,352,353,359,362,364,366,367,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[25,-99,-67,-96,-97,-98,-94,-110,25,-64,-107,-113,-29,-104,25,-115,-216,-68,-102,-106,-91,-63,-52,-304,-62,25,-103,-101,-95,-105,-117,-100,-116,-66,-304,-304,-93,-65,-114,-60,-108,-111,-112,-109,25,-53,-81,-92,-130,-302,-131,25,-61,-69,25,-10,-9,-86,25,25,-82,25,-161,-85,-84,-147,-148,-87,-89,25,-88,-90,25,25,25,-137,25,-140,-141,-128,25,25,25,-83,-70,25,-162,-30,25,25,25,25,-132,-303,-138,-129,-127,-126,25,-35,25,-36,25,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,25,25,25,25,25,-133,-134,-139,-34,-31,25,25,-196,-197,-209,25,-212,-213,-210,-150,-151,25,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'MINUSEQUAL':([121,149,150,151,152,155,156,159,161,163,164,167,168,171,174,178,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-293,-296,-290,-294,276,-281,-300,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-267,-268,-259,-253,-276,-283,-277,]),'MINUS':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,121,131,133,142,146,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,180,181,183,187,191,198,201,203,216,220,222,227,228,230,231,232,235,236,238,239,240,241,244,246,249,256,257,258,261,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,296,297,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,376,377,378,379,381,390,394,395,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,424,425,426,429,437,440,442,444,445,446,452,453,454,456,457,459,460,462,463,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,501,502,503,508,510,511,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,160,-28,160,-304,-289,160,-162,160,-304,-254,-278,-295,-266,-264,160,-298,-279,160,-280,-263,-292,-233,-293,-296,160,-262,-290,-294,-265,-260,-252,-304,-281,-261,160,160,-300,314,-291,-297,-303,160,160,-261,160,160,160,-72,-194,-77,-75,160,-73,160,-289,-193,160,-76,-195,-78,-74,160,-28,160,-304,-274,-275,160,160,-255,160,-252,160,-257,-299,-258,160,-220,-225,160,-221,-229,-227,-226,-219,-222,-224,-223,-228,160,160,-11,-12,-301,-256,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,-304,160,-261,160,-196,-197,-209,160,160,160,160,-212,160,-213,-210,160,160,-261,160,-271,-270,-273,-272,-269,-177,-304,-282,160,314,-236,314,-237,314,-235,-234,314,314,314,314,314,314,-238,314,314,314,314,-28,160,-304,-261,160,-200,-208,-211,-198,160,-267,160,-268,160,-259,160,-11,-304,-253,160,160,-261,160,160,160,160,160,-199,160,-204,160,-203,-201,-304,-276,160,-283,160,160,-277,160,-205,-202,-207,160,-206,]),'INT_CONST_HEX':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,131,133,142,146,153,154,158,160,165,166,169,170,173,175,176,177,187,191,198,201,203,216,220,222,227,228,230,231,232,235,238,239,240,241,244,246,249,256,257,258,265,266,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,390,394,399,424,425,426,429,437,440,442,444,445,446,453,456,459,460,462,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,502,508,510,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,161,-28,161,-304,161,-162,161,-304,-264,161,161,-263,161,-262,-265,-260,-304,-261,161,161,-303,161,161,-261,161,161,161,-72,-194,-77,-75,161,-73,161,-193,161,-76,-195,-78,-74,161,-28,161,-304,161,161,161,161,161,-220,-225,161,-221,-229,-227,-226,-219,-222,-224,-223,-228,161,161,-11,-12,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,-304,161,-261,161,-196,-197,-209,161,161,161,161,-212,161,-213,-210,161,161,-261,161,-177,-304,161,-28,161,-304,-261,161,-200,-208,-211,-198,161,161,161,161,-11,-304,161,161,-261,161,161,161,161,161,-199,161,-204,161,-203,-201,-304,161,161,161,161,-205,-202,-207,161,-206,]),'CONST':([0,1,2,3,7,8,9,10,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,66,67,68,69,70,75,77,79,81,83,87,88,91,97,98,101,102,107,108,109,110,111,112,113,114,115,116,118,125,129,130,131,133,135,146,147,177,184,185,186,187,188,189,195,196,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,256,258,268,270,274,299,320,321,322,326,329,330,336,337,339,349,351,352,353,359,362,364,366,367,398,422,423,424,426,440,442,444,445,480,494,498,499,516,517,519,521,],[20,-99,-67,-96,-97,-98,-94,-110,-64,-107,-113,-29,-104,20,-115,-216,-68,-102,-106,-91,-63,-52,20,-62,20,20,-103,-101,-95,-105,-117,-100,-116,-66,20,20,-93,-65,-114,-60,-108,-111,-112,-109,20,-53,-81,-92,-130,-302,-131,20,-61,-69,20,20,20,-82,20,20,-161,-147,-148,-87,-89,20,-88,-90,20,20,20,-137,20,-140,-141,-128,20,20,20,20,-83,-70,20,-162,-30,20,20,20,20,20,-132,-303,-138,-129,-127,-126,20,-35,20,-36,20,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,20,20,20,20,20,20,20,-133,-134,-139,-34,-31,20,20,20,-196,-197,-209,20,-212,-213,-210,-150,-151,20,-33,-32,20,20,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'NE':([121,149,150,151,152,155,156,159,161,162,163,164,167,168,171,174,178,180,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,311,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-243,-236,311,-237,311,-235,-234,-239,-240,311,-246,311,311,-238,-244,-241,-242,-245,-267,-268,-259,-253,-276,-283,-277,]),'BREAK':([22,56,64,68,131,187,220,222,227,228,230,231,232,238,240,241,244,246,349,351,352,355,359,361,362,364,440,442,444,445,446,475,479,480,481,494,498,499,510,514,516,517,519,520,521,],[-68,-81,-302,-69,223,-303,223,-72,-194,-77,-75,223,-73,-193,-76,-195,-78,-74,-196,-197,-209,223,-212,223,-213,-210,-200,-208,-211,-198,223,223,223,-199,223,-204,-203,-201,223,223,-205,-202,-207,223,-206,]),'INT':([0,1,2,3,7,8,9,10,11,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,66,67,68,70,71,72,73,74,75,77,79,83,85,86,87,88,91,97,98,101,102,107,108,109,110,111,112,113,114,115,120,125,129,130,131,133,135,147,177,184,185,186,187,188,189,195,196,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,268,270,274,299,320,321,322,326,329,330,337,339,349,351,352,353,359,362,364,366,367,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[34,-99,-67,-96,-97,-98,-94,-110,34,-64,-107,-113,-29,-104,34,-115,-216,-68,-102,-106,-91,-63,-52,-304,-62,34,-103,-101,-95,-105,-117,-100,-116,-66,-304,-304,-93,-65,-114,-60,-108,-111,-112,-109,34,-53,-81,-92,-130,-302,-131,34,-61,-69,34,-10,-9,-86,34,34,-82,34,-161,-85,-84,-147,-148,-87,-89,34,-88,-90,34,34,34,-137,34,-140,-141,-128,34,34,34,-83,-70,34,-162,-30,34,34,34,34,-132,-303,-138,-129,-127,-126,34,-35,34,-36,34,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,34,34,34,34,34,-133,-134,-139,-34,-31,34,34,-196,-197,-209,34,-212,-213,-210,-150,-151,34,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'STRUCT':([0,2,3,7,8,9,11,13,17,19,20,22,28,29,30,31,32,36,39,41,42,43,44,45,46,48,55,56,64,66,67,68,70,71,72,73,74,75,77,83,85,86,98,107,108,109,110,111,112,113,120,129,130,131,133,135,147,177,184,185,187,188,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,253,268,270,274,320,326,329,330,337,339,349,351,352,353,359,362,364,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[24,-67,-96,-97,-98,-94,24,-64,-29,24,-115,-68,-63,-52,-304,-62,24,-95,-117,-116,-66,-304,-304,-93,-65,-60,-53,-81,-302,24,-61,-69,24,-10,-9,-86,24,24,-82,-161,-85,-84,24,24,24,24,-137,24,-140,-141,24,-83,-70,24,-162,-30,24,24,24,24,-303,-138,24,-35,24,-36,24,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-71,24,24,24,24,-139,-34,-31,24,24,-196,-197,-209,24,-212,-213,-210,24,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'FOR':([22,56,64,68,131,187,220,222,227,228,230,231,232,238,240,241,244,246,349,351,352,355,359,361,362,364,440,442,444,445,446,475,479,480,481,494,498,499,510,514,516,517,519,520,521,],[-68,-81,-302,-69,225,-303,225,-72,-194,-77,-75,225,-73,-193,-76,-195,-78,-74,-196,-197,-209,225,-212,225,-213,-210,-200,-208,-211,-198,225,225,225,-199,225,-204,-203,-201,225,225,-205,-202,-207,225,-206,]),'DOUBLE':([0,1,2,3,7,8,9,10,11,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,66,67,68,70,71,72,73,74,75,77,79,83,85,86,87,88,91,97,98,101,102,107,108,109,110,111,112,113,114,115,120,125,129,130,131,133,135,147,177,184,185,186,187,188,189,195,196,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,268,270,274,299,320,321,322,326,329,330,337,339,349,351,352,353,359,362,364,366,367,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[26,-99,-67,-96,-97,-98,-94,-110,26,-64,-107,-113,-29,-104,26,-115,-216,-68,-102,-106,-91,-63,-52,-304,-62,26,-103,-101,-95,-105,-117,-100,-116,-66,-304,-304,-93,-65,-114,-60,-108,-111,-112,-109,26,-53,-81,-92,-130,-302,-131,26,-61,-69,26,-10,-9,-86,26,26,-82,26,-161,-85,-84,-147,-148,-87,-89,26,-88,-90,26,26,26,-137,26,-140,-141,-128,26,26,26,-83,-70,26,-162,-30,26,26,26,26,-132,-303,-138,-129,-127,-126,26,-35,26,-36,26,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,26,26,26,26,26,-133,-134,-139,-34,-31,26,26,-196,-197,-209,26,-212,-213,-210,-150,-151,26,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'MODEQUAL':([121,149,150,151,152,155,156,159,161,163,164,167,168,171,174,178,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-293,-296,-290,-294,285,-281,-300,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-267,-268,-259,-253,-276,-283,-277,]),'GE':([121,149,150,151,152,155,156,159,161,162,163,164,167,168,171,174,178,180,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,301,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-243,-236,301,-237,301,-235,-234,-239,-240,301,301,301,301,-238,-244,-241,-242,301,-267,-268,-259,-253,-276,-283,-277,]),'AND':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,121,131,133,142,146,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,180,181,183,187,191,198,201,203,216,220,222,227,228,230,231,232,235,236,238,239,240,241,244,246,249,256,257,258,261,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,296,297,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,376,377,378,379,381,390,394,395,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,424,425,426,429,437,440,442,444,445,446,452,453,454,456,457,459,460,462,463,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,501,502,503,508,510,511,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,170,-28,170,-304,-289,170,-162,170,-304,-254,-278,-295,-266,-264,170,-298,-279,170,-280,-263,-292,-233,-293,-296,170,-262,-290,-294,-265,-260,-252,-304,-281,-261,170,170,-300,303,-291,-297,-303,170,170,-261,170,170,170,-72,-194,-77,-75,170,-73,170,-289,-193,170,-76,-195,-78,-74,170,-28,170,-304,-274,-275,170,170,-255,170,-252,170,-257,-299,-258,170,-220,-225,170,-221,-229,-227,-226,-219,-222,-224,-223,-228,170,170,-11,-12,-301,-256,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,-304,170,-261,170,-196,-197,-209,170,170,170,170,-212,170,-213,-210,170,170,-261,170,-271,-270,-273,-272,-269,-177,-304,-282,170,-243,-236,-247,-237,303,-235,-234,-239,-240,303,-246,303,303,-238,-244,-241,-242,-245,-28,170,-304,-261,170,-200,-208,-211,-198,170,-267,170,-268,170,-259,170,-11,-304,-253,170,170,-261,170,170,170,170,170,-199,170,-204,170,-203,-201,-304,-276,170,-283,170,170,-277,170,-205,-202,-207,170,-206,]),'LAND':([121,149,150,151,152,155,156,159,161,162,163,164,167,168,171,174,178,180,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,305,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-243,-236,-247,-237,-250,-235,-234,-239,-240,305,-246,-248,-249,-238,-244,-241,-242,-245,-267,-268,-259,-253,-276,-283,-277,]),'DIVIDE':([121,149,150,151,152,155,156,159,161,162,163,164,167,168,171,174,178,180,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,306,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,306,-236,306,306,306,-235,-234,306,306,306,306,306,306,306,306,306,306,306,-267,-268,-259,-253,-276,-283,-277,]),'PPPRAGMASTR':([22,],[68,]),'LOR':([121,149,150,151,152,155,156,159,161,162,163,164,167,168,171,174,178,180,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,310,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-243,-236,-247,-237,-250,-235,-234,-239,-240,-251,-246,-248,-249,-238,-244,-241,-242,-245,-267,-268,-259,-253,-276,-283,-277,]),'TYPEDEF':([0,1,2,3,7,8,9,10,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,67,68,70,75,77,79,87,88,91,97,98,101,102,125,129,130,131,135,147,186,187,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,321,322,329,330,337,339,349,351,352,353,359,362,364,366,367,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[7,-99,-67,-96,-97,-98,-94,-110,-64,-107,-113,-29,-104,7,-115,-216,-68,-102,-106,-91,-63,-52,7,-62,7,-103,-101,-95,-105,-117,-100,-116,-66,7,7,-93,-65,-114,-60,-108,-111,-112,-109,7,-53,-81,-92,-130,-302,-131,-61,-69,7,7,-82,7,-147,-148,-87,-89,7,-88,-90,7,-83,-70,7,-30,7,-132,-303,7,-35,7,-36,7,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,-133,-134,-34,-31,7,7,-196,-197,-209,7,-212,-213,-210,-150,-151,7,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'XOREQUAL':([121,149,150,151,152,155,156,159,161,163,164,167,168,171,174,178,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-293,-296,-290,-294,275,-281,-300,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-267,-268,-259,-253,-276,-283,-277,]),'XOR':([121,149,150,151,152,155,156,159,161,162,163,164,167,168,171,174,178,180,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,313,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-243,-236,-247,-237,313,-235,-234,-239,-240,313,-246,313,-249,-238,-244,-241,-242,-245,-267,-268,-259,-253,-276,-283,-277,]),'INT_CONST_OCT':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,131,133,142,146,153,154,158,160,165,166,169,170,173,175,176,177,187,191,198,201,203,216,220,222,227,228,230,231,232,235,238,239,240,241,244,246,249,256,257,258,265,266,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,390,394,399,424,425,426,429,437,440,442,444,445,446,453,456,459,460,462,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,502,508,510,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,181,-28,181,-304,181,-162,181,-304,-264,181,181,-263,181,-262,-265,-260,-304,-261,181,181,-303,181,181,-261,181,181,181,-72,-194,-77,-75,181,-73,181,-193,181,-76,-195,-78,-74,181,-28,181,-304,181,181,181,181,181,-220,-225,181,-221,-229,-227,-226,-219,-222,-224,-223,-228,181,181,-11,-12,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,-304,181,-261,181,-196,-197,-209,181,181,181,181,-212,181,-213,-210,181,181,-261,181,-177,-304,181,-28,181,-304,-261,181,-200,-208,-211,-198,181,181,181,181,-11,-304,181,181,-261,181,181,181,181,181,-199,181,-204,181,-203,-201,-304,181,181,181,181,-205,-202,-207,181,-206,]),'RSHIFT':([121,149,150,151,152,155,156,159,161,162,163,164,167,168,171,174,178,180,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,308,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,308,-236,308,-237,308,-235,-234,-239,-240,308,308,308,308,-238,308,308,308,308,-267,-268,-259,-253,-276,-283,-277,]),'COMMA':([1,3,7,8,9,10,15,16,17,18,20,21,25,26,27,29,33,34,35,36,37,39,40,41,45,47,49,51,52,53,55,58,60,61,62,63,65,80,81,82,83,87,88,90,91,93,94,95,97,98,101,102,103,104,114,119,121,123,125,126,128,132,133,134,135,138,139,140,141,148,149,150,151,152,155,156,157,159,161,162,163,164,167,168,171,172,174,178,179,180,181,183,186,187,189,190,193,195,196,197,205,206,207,208,209,210,211,212,214,215,218,226,236,242,247,248,250,251,252,254,255,261,264,267,269,271,272,273,295,296,297,298,299,321,322,324,325,329,330,333,334,335,347,360,366,367,368,369,374,375,376,377,378,379,380,381,382,383,387,388,389,395,396,397,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,432,433,434,435,436,439,443,447,449,450,452,454,457,461,463,470,471,472,473,474,482,483,484,485,486,487,491,492,497,501,503,505,506,511,512,],[-99,-96,-97,-98,-94,-110,-107,-113,-29,-104,-115,-216,-102,-106,-91,-52,-304,-103,-101,-95,-105,-117,-100,-116,-93,-114,-108,-111,-112,-109,-53,105,-92,-122,-124,-130,-131,-27,-28,-159,-161,-147,-148,-158,-87,-118,-120,-37,-89,-157,-88,-90,145,-54,-128,204,-289,-165,-304,217,-170,-157,-162,-160,-30,-155,-152,250,-55,-123,-254,-278,-295,-266,-298,-279,-217,-280,-292,-233,-293,-296,-290,-294,-252,-172,-281,-300,-125,-231,-291,-297,-132,-303,-129,323,-144,-127,-126,-142,-35,-2,-183,-45,-56,-167,-169,-185,-168,-1,-36,354,-289,-214,250,250,-153,-149,-121,-38,-119,-274,-275,-255,-252,-257,-299,-258,394,-301,-256,354,-304,-133,-134,-230,-146,-34,-31,-166,-57,-184,-171,354,-150,-151,-156,-154,-43,-44,-271,-270,-273,-272,354,-269,-287,453,-218,-173,-175,-282,-183,-182,-243,-236,-247,-237,-250,-235,-234,-239,-240,-251,-246,-248,-249,-238,-244,-241,-242,354,-245,465,-143,-145,-33,-32,-186,-192,-190,-188,354,-215,354,354,-42,-39,-267,-268,-259,-174,-253,-50,-51,-189,-187,-191,-41,-40,-288,-176,500,-232,-49,-46,354,-276,-283,-48,-47,-277,354,]),'ENUM':([0,2,3,7,8,9,11,13,17,19,20,22,28,29,30,31,32,36,39,41,42,43,44,45,46,48,55,56,64,66,67,68,70,71,72,73,74,75,77,83,85,86,98,107,108,109,110,111,112,113,120,129,130,131,133,135,147,177,184,185,187,188,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,253,268,270,274,320,326,329,330,337,339,349,351,352,353,359,362,364,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[50,-67,-96,-97,-98,-94,50,-64,-29,50,-115,-68,-63,-52,-304,-62,50,-95,-117,-116,-66,-304,-304,-93,-65,-60,-53,-81,-302,50,-61,-69,50,-10,-9,-86,50,50,-82,-161,-85,-84,50,50,50,50,-137,50,-140,-141,50,-83,-70,50,-162,-30,50,50,50,50,-303,-138,50,-35,50,-36,50,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-71,50,50,50,50,-139,-34,-31,50,50,-196,-197,-209,50,-212,-213,-210,50,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'TYPEID':([0,1,2,3,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,60,63,64,65,66,67,68,70,71,72,73,74,75,77,79,80,81,82,83,85,86,87,88,91,92,97,98,99,101,102,105,107,108,109,110,111,112,113,114,115,120,125,129,130,131,133,134,135,145,147,177,184,185,186,187,188,189,195,196,204,205,207,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,262,263,268,270,274,320,321,322,323,326,329,330,337,339,349,351,352,353,359,362,364,366,367,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[21,-99,-67,-96,-97,-98,-94,-110,21,-136,-64,65,-107,-113,-29,-104,21,-115,-216,-68,-135,-102,-106,-91,-63,-52,-304,-62,21,-304,-103,-101,-95,-105,-117,-100,-116,-66,-304,-304,-93,-65,-114,-60,-108,88,-111,-112,-109,95,-53,-81,-92,-130,-302,-131,21,-61,-69,21,-10,-9,-86,21,21,-82,95,-27,-28,-159,-161,-85,-84,-147,-148,-87,95,-89,21,95,-88,-90,95,21,21,21,-137,21,-140,-141,-128,95,21,208,-83,-70,21,-162,-160,-30,95,21,21,21,21,-132,-303,-138,-129,-127,-126,21,-35,208,21,-36,21,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,376,378,21,21,21,21,-133,-134,95,-139,-34,-31,21,21,-196,-197,-209,21,-212,-213,-210,-150,-151,21,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'REGISTER':([0,1,2,3,7,8,9,10,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,67,68,70,75,77,79,87,88,91,97,98,101,102,125,129,130,131,135,147,186,187,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,321,322,329,330,337,339,349,351,352,353,359,362,364,366,367,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[9,-99,-67,-96,-97,-98,-94,-110,-64,-107,-113,-29,-104,9,-115,-216,-68,-102,-106,-91,-63,-52,9,-62,9,-103,-101,-95,-105,-117,-100,-116,-66,9,9,-93,-65,-114,-60,-108,-111,-112,-109,9,-53,-81,-92,-130,-302,-131,-61,-69,9,9,-82,9,-147,-148,-87,-89,9,-88,-90,9,-83,-70,9,-30,9,-132,-303,9,-35,9,-36,9,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,-133,-134,-34,-31,9,9,-196,-197,-209,9,-212,-213,-210,-150,-151,9,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'NOT':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,131,133,142,146,153,154,158,160,165,166,169,170,173,175,176,177,187,191,198,201,203,216,220,222,227,228,230,231,232,235,238,239,240,241,244,246,249,256,257,258,265,266,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,390,394,399,424,425,426,429,437,440,442,444,445,446,453,456,459,460,462,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,502,508,510,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,153,-28,153,-304,153,-162,153,-304,-264,153,153,-263,153,-262,-265,-260,-304,-261,153,153,-303,153,153,-261,153,153,153,-72,-194,-77,-75,153,-73,153,-193,153,-76,-195,-78,-74,153,-28,153,-304,153,153,153,153,153,-220,-225,153,-221,-229,-227,-226,-219,-222,-224,-223,-228,153,153,-11,-12,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,-304,153,-261,153,-196,-197,-209,153,153,153,153,-212,153,-213,-210,153,153,-261,153,-177,-304,153,-28,153,-304,-261,153,-200,-208,-211,-198,153,153,153,153,-11,-304,153,153,-261,153,153,153,153,153,-199,153,-204,153,-203,-201,-304,153,153,153,153,-205,-202,-207,153,-206,]),'DEFAULT':([22,56,64,68,131,187,220,222,227,228,230,231,232,238,240,241,244,246,349,351,352,355,359,361,362,364,440,442,444,445,446,475,479,480,481,494,498,499,510,514,516,517,519,520,521,],[-68,-81,-302,-69,229,-303,229,-72,-194,-77,-75,229,-73,-193,-76,-195,-78,-74,-196,-197,-209,229,-212,229,-213,-210,-200,-208,-211,-198,229,229,229,-199,229,-204,-203,-201,229,229,-205,-202,-207,229,-206,]),'RBRACKET':([20,39,41,69,80,83,116,117,121,133,146,149,150,151,152,155,156,157,159,161,162,163,164,167,168,171,174,178,180,181,183,187,199,200,201,202,216,242,256,257,261,264,267,269,271,272,273,296,297,324,328,331,336,338,345,346,371,372,376,377,378,379,380,381,387,393,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,424,425,429,430,439,448,451,452,454,457,463,467,468,487,490,493,501,503,511,512,],[-115,-117,-116,-304,-27,-161,-28,-304,-289,-162,-304,-254,-278,-295,-266,-298,-279,-217,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,-231,-291,-297,-303,-3,-4,329,330,-304,-214,-28,-304,-274,-275,-255,-252,-257,-299,-258,-301,-256,-230,422,423,-304,-304,434,435,449,450,-271,-270,-273,-272,452,-269,-218,458,-282,-243,-236,-247,-237,-250,-235,-234,-239,-240,-251,-246,-248,-249,-238,-244,-241,-242,-245,-28,-304,472,473,-215,482,483,-267,-268,-259,-253,491,492,-232,505,506,-276,-283,-277,518,]),'UNSIGNED':([0,1,2,3,7,8,9,10,11,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,66,67,68,70,71,72,73,74,75,77,79,83,85,86,87,88,91,97,98,101,102,107,108,109,110,111,112,113,114,115,120,125,129,130,131,133,135,147,177,184,185,186,187,188,189,195,196,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,268,270,274,299,320,321,322,326,329,330,337,339,349,351,352,353,359,362,364,366,367,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[53,-99,-67,-96,-97,-98,-94,-110,53,-64,-107,-113,-29,-104,53,-115,-216,-68,-102,-106,-91,-63,-52,-304,-62,53,-103,-101,-95,-105,-117,-100,-116,-66,-304,-304,-93,-65,-114,-60,-108,-111,-112,-109,53,-53,-81,-92,-130,-302,-131,53,-61,-69,53,-10,-9,-86,53,53,-82,53,-161,-85,-84,-147,-148,-87,-89,53,-88,-90,53,53,53,-137,53,-140,-141,-128,53,53,53,-83,-70,53,-162,-30,53,53,53,53,-132,-303,-138,-129,-127,-126,53,-35,53,-36,53,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,53,53,53,53,53,-133,-134,-139,-34,-31,53,53,-196,-197,-209,53,-212,-213,-210,-150,-151,53,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'SIGNED':([0,1,2,3,7,8,9,10,11,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,66,67,68,70,71,72,73,74,75,77,79,83,85,86,87,88,91,97,98,101,102,107,108,109,110,111,112,113,114,115,120,125,129,130,131,133,135,147,177,184,185,186,187,188,189,195,196,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,268,270,274,299,320,321,322,326,329,330,337,339,349,351,352,353,359,362,364,366,367,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[49,-99,-67,-96,-97,-98,-94,-110,49,-64,-107,-113,-29,-104,49,-115,-216,-68,-102,-106,-91,-63,-52,-304,-62,49,-103,-101,-95,-105,-117,-100,-116,-66,-304,-304,-93,-65,-114,-60,-108,-111,-112,-109,49,-53,-81,-92,-130,-302,-131,49,-61,-69,49,-10,-9,-86,49,49,-82,49,-161,-85,-84,-147,-148,-87,-89,49,-88,-90,49,49,49,-137,49,-140,-141,-128,49,49,49,-83,-70,49,-162,-30,49,49,49,49,-132,-303,-138,-129,-127,-126,49,-35,49,-36,49,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,49,49,49,49,49,-133,-134,-139,-34,-31,49,49,-196,-197,-209,49,-212,-213,-210,-150,-151,49,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'SEMI':([0,1,2,3,6,7,8,9,10,11,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,79,85,86,87,88,90,91,93,94,95,96,97,98,100,101,102,103,104,107,108,109,110,112,113,114,115,121,130,131,132,135,141,148,149,150,151,152,155,156,157,159,161,162,163,164,167,168,171,172,174,178,179,180,181,183,184,185,186,187,188,189,190,192,193,194,195,196,197,205,218,220,222,223,224,226,227,228,230,231,232,235,236,237,238,240,241,242,243,244,246,251,252,253,254,255,261,264,267,269,271,272,273,296,297,321,322,324,325,326,329,330,349,350,351,352,353,355,357,359,360,361,362,364,366,367,374,375,376,377,378,379,381,387,388,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,420,421,422,423,437,438,439,440,442,444,445,446,449,450,452,454,457,461,463,475,476,477,479,480,481,482,483,487,494,496,498,499,501,503,509,510,511,514,516,517,519,520,521,],[42,-99,-67,-96,56,-97,-98,-94,-110,-304,-64,-107,-113,-29,-104,42,-115,-216,-68,-102,-106,-91,-63,-52,-304,-62,-103,-101,-95,-105,-117,-100,-116,-66,-304,-304,-93,-65,-114,-60,-108,-111,-112,-109,-304,-53,-81,-80,-16,-15,-92,-122,-124,-130,-302,-131,112,-61,-69,-10,-9,-86,-304,-304,-85,-84,-147,-148,-158,-87,-118,-120,-37,-19,-89,-157,-79,-88,-90,-20,-54,112,112,112,-137,-140,-141,-128,-304,-289,-70,-304,-157,-30,-55,-123,-254,-278,-295,-266,-298,-279,-217,-280,-292,-233,-293,-296,-290,-294,-252,-172,-281,-300,-125,-231,-291,-297,112,112,-132,-303,-138,-129,-26,326,-144,-25,-127,-126,-142,-35,-36,-304,-72,352,-13,-14,-194,-77,-75,-304,-73,359,-289,362,-193,-76,-195,-214,364,-78,-74,-149,-121,-71,-38,-119,-274,-275,-255,-252,-257,-299,-258,-301,-256,-133,-134,-230,-146,-139,-34,-31,-196,-13,-197,-209,-304,-304,442,-212,444,-304,-213,-210,-150,-151,-43,-44,-271,-270,-273,-272,-269,-218,-173,-282,-243,-236,-247,-237,-250,-235,-234,-239,-240,-251,-246,-248,-249,-238,-244,-241,-242,-245,-143,-145,-33,-32,-304,477,-215,-200,-208,-211,-198,-304,-42,-39,-267,-268,-259,-174,-253,-304,495,-304,-304,-199,-304,-41,-40,-232,-204,508,-203,-201,-276,-283,516,-304,-277,-304,-205,-202,-207,-304,-206,]),'DO':([22,56,64,68,131,187,220,222,227,228,230,231,232,238,240,241,244,246,349,351,352,355,359,361,362,364,440,442,444,445,446,475,479,480,481,494,498,499,510,514,516,517,519,520,521,],[-68,-81,-302,-69,231,-303,231,-72,-194,-77,-75,231,-73,-193,-76,-195,-78,-74,-196,-197,-209,231,-212,231,-213,-210,-200,-208,-211,-198,231,231,231,-199,231,-204,-203,-201,231,231,-205,-202,-207,231,-206,]),'IF':([22,56,64,68,131,187,220,222,227,228,230,231,232,238,240,241,244,246,349,351,352,355,359,361,362,364,440,442,444,445,446,475,479,480,481,494,498,499,510,514,516,517,519,520,521,],[-68,-81,-302,-69,245,-303,245,-72,-194,-77,-75,245,-73,-193,-76,-195,-78,-74,-196,-197,-209,245,-212,245,-213,-210,-200,-208,-211,-198,245,245,245,-199,245,-204,-203,-201,245,245,-205,-202,-207,245,-206,]),'MINUSMINUS':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,121,131,133,142,146,149,150,151,152,153,154,155,156,158,159,160,161,163,164,165,166,167,168,169,170,173,174,175,176,177,178,181,183,187,191,198,201,203,216,220,222,227,228,230,231,232,235,236,238,239,240,241,244,246,249,256,257,258,261,264,265,266,268,270,272,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,296,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,376,377,378,379,381,390,394,395,399,424,425,426,429,437,440,442,444,445,446,452,453,454,456,459,460,462,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,501,502,503,508,510,511,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,176,-28,176,-304,-289,176,-162,176,-304,264,-278,-295,-266,-264,176,-298,-279,176,-280,-263,-292,-293,-296,176,-262,-290,-294,-265,-260,-304,-281,-261,176,176,-300,-291,-297,-303,176,176,-261,176,176,176,-72,-194,-77,-75,176,-73,176,-289,-193,176,-76,-195,-78,-74,176,-28,176,-304,-274,-275,176,176,176,176,-299,176,-220,-225,176,-221,-229,-227,-226,-219,-222,-224,-223,-228,176,176,-11,-12,-301,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,-304,176,-261,176,-196,-197,-209,176,176,176,176,-212,176,-213,-210,176,176,-261,176,-271,-270,-273,-272,-269,-177,-304,-282,176,-28,176,-304,-261,176,-200,-208,-211,-198,176,-267,176,-268,176,176,-11,-304,176,176,-261,176,176,176,176,176,-199,176,-204,176,-203,-201,-304,-276,176,-283,176,176,-277,176,-205,-202,-207,176,-206,]),'FLOAT':([0,1,2,3,7,8,9,10,11,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,66,67,68,70,71,72,73,74,75,77,79,83,85,86,87,88,91,97,98,101,102,107,108,109,110,111,112,113,114,115,120,125,129,130,131,133,135,147,177,184,185,186,187,188,189,195,196,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,268,270,274,299,320,321,322,326,329,330,337,339,349,351,352,353,359,362,364,366,367,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[37,-99,-67,-96,-97,-98,-94,-110,37,-64,-107,-113,-29,-104,37,-115,-216,-68,-102,-106,-91,-63,-52,-304,-62,37,-103,-101,-95,-105,-117,-100,-116,-66,-304,-304,-93,-65,-114,-60,-108,-111,-112,-109,37,-53,-81,-92,-130,-302,-131,37,-61,-69,37,-10,-9,-86,37,37,-82,37,-161,-85,-84,-147,-148,-87,-89,37,-88,-90,37,37,37,-137,37,-140,-141,-128,37,37,37,-83,-70,37,-162,-30,37,37,37,37,-132,-303,-138,-129,-127,-126,37,-35,37,-36,37,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,37,37,37,37,37,-133,-134,-139,-34,-31,37,37,-196,-197,-209,37,-212,-213,-210,-150,-151,37,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'LT':([121,149,150,151,152,155,156,159,161,162,163,164,167,168,171,174,178,180,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,316,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-243,-236,316,-237,316,-235,-234,-239,-240,316,316,316,316,-238,-244,-241,-242,316,-267,-268,-259,-253,-276,-283,-277,]),'EXTERN':([0,1,2,3,7,8,9,10,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,67,68,70,75,77,79,87,88,91,97,98,101,102,125,129,130,131,135,147,186,187,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,321,322,329,330,337,339,349,351,352,353,359,362,364,366,367,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[3,-99,-67,-96,-97,-98,-94,-110,-64,-107,-113,-29,-104,3,-115,-216,-68,-102,-106,-91,-63,-52,3,-62,3,-103,-101,-95,-105,-117,-100,-116,-66,3,3,-93,-65,-114,-60,-108,-111,-112,-109,3,-53,-81,-92,-130,-302,-131,-61,-69,3,3,-82,3,-147,-148,-87,-89,3,-88,-90,3,-83,-70,3,-30,3,-132,-303,3,-35,3,-36,3,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,-133,-134,-34,-31,3,3,-196,-197,-209,3,-212,-213,-210,-150,-151,3,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'RPAREN':([1,3,7,8,9,10,15,16,17,18,20,21,25,26,27,29,33,34,35,36,37,39,40,41,45,47,49,51,52,53,55,60,63,65,70,80,81,82,83,84,87,88,91,95,97,101,102,104,114,119,121,122,123,124,125,126,127,128,133,134,135,141,144,147,149,150,151,152,155,156,157,159,161,162,163,164,167,168,171,174,178,180,181,183,186,187,189,195,196,205,206,207,208,209,210,211,212,213,214,215,218,226,242,251,254,259,260,261,264,266,267,269,271,272,273,296,297,298,299,300,321,322,329,330,332,333,334,335,337,339,340,341,342,343,344,347,350,366,367,374,375,376,377,378,379,381,382,383,384,385,386,387,395,396,397,398,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,422,423,427,428,431,432,433,434,435,436,439,443,447,449,450,452,454,457,463,470,471,472,473,474,482,483,484,487,488,489,491,492,495,497,501,503,505,506,507,508,511,513,515,518,],[-99,-96,-97,-98,-94,-110,-107,-113,-29,-104,-115,-216,-102,-106,-91,-52,-304,-103,-101,-95,-105,-117,-100,-116,-93,-114,-108,-111,-112,-109,-53,-92,-130,-131,-304,-27,-28,-159,-161,135,-147,-148,-87,-37,-89,-88,-90,-54,-128,-163,-289,-17,-165,205,-304,-18,218,-170,-162,-160,-30,-55,254,-304,-254,-278,-295,-266,-298,-279,-217,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,-231,-291,-297,-132,-303,-129,-127,-126,-35,-2,-183,-45,-56,-167,-169,-185,-304,-168,-1,-36,-14,-214,-149,-38,374,375,-274,-275,381,-255,-252,-257,-299,-258,-301,-256,395,-304,399,-133,-134,-34,-31,-164,-166,-57,-184,-304,-304,432,-183,-23,-24,433,-171,-13,-150,-151,-43,-44,-271,-270,-273,-272,-269,-287,454,455,456,457,-218,-282,-183,-182,-304,-243,-236,-247,-237,-250,-235,-234,-239,-240,-251,-246,-248,-249,-238,-244,-241,-242,-245,-33,-32,470,471,474,-186,-192,-190,-188,475,-215,479,481,-42,-39,-267,-268,-259,-253,-50,-51,-189,-187,-191,-41,-40,-288,-232,503,-284,-49,-46,-304,509,-276,-283,-48,-47,514,-304,-277,-285,520,-286,]),'INT_CONST_DEC':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,131,133,142,146,153,154,158,160,165,166,169,170,173,175,176,177,187,191,198,201,203,216,220,222,227,228,230,231,232,235,238,239,240,241,244,246,249,256,257,258,265,266,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,390,394,399,424,425,426,429,437,440,442,444,445,446,453,456,459,460,462,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,502,508,510,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,167,-28,167,-304,167,-162,167,-304,-264,167,167,-263,167,-262,-265,-260,-304,-261,167,167,-303,167,167,-261,167,167,167,-72,-194,-77,-75,167,-73,167,-193,167,-76,-195,-78,-74,167,-28,167,-304,167,167,167,167,167,-220,-225,167,-221,-229,-227,-226,-219,-222,-224,-223,-228,167,167,-11,-12,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,-304,167,-261,167,-196,-197,-209,167,167,167,167,-212,167,-213,-210,167,167,-261,167,-177,-304,167,-28,167,-304,-261,167,-200,-208,-211,-198,167,167,167,167,-11,-304,167,167,-261,167,167,167,167,167,-199,167,-204,167,-203,-201,-304,167,167,167,167,-205,-202,-207,167,-206,]),'HEX_FLOAT_CONST':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,131,133,142,146,153,154,158,160,165,166,169,170,173,175,176,177,187,191,198,201,203,216,220,222,227,228,230,231,232,235,238,239,240,241,244,246,249,256,257,258,265,266,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,390,394,399,424,425,426,429,437,440,442,444,445,446,453,456,459,460,462,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,502,508,510,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,151,-28,151,-304,151,-162,151,-304,-264,151,151,-263,151,-262,-265,-260,-304,-261,151,151,-303,151,151,-261,151,151,151,-72,-194,-77,-75,151,-73,151,-193,151,-76,-195,-78,-74,151,-28,151,-304,151,151,151,151,151,-220,-225,151,-221,-229,-227,-226,-219,-222,-224,-223,-228,151,151,-11,-12,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,-304,151,-261,151,-196,-197,-209,151,151,151,151,-212,151,-213,-210,151,151,-261,151,-177,-304,151,-28,151,-304,-261,151,-200,-208,-211,-198,151,151,151,151,-11,-304,151,151,-261,151,151,151,151,151,-199,151,-204,151,-203,-201,-304,151,151,151,151,-205,-202,-207,151,-206,]),'VOLATILE':([0,1,2,3,7,8,9,10,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,66,67,68,69,70,75,77,79,81,83,87,88,91,97,98,101,102,107,108,109,110,111,112,113,114,115,116,118,125,129,130,131,133,135,146,147,177,184,185,186,187,188,189,195,196,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,256,258,268,270,274,299,320,321,322,326,329,330,336,337,339,349,351,352,353,359,362,364,366,367,398,422,423,424,426,440,442,444,445,480,494,498,499,516,517,519,521,],[39,-99,-67,-96,-97,-98,-94,-110,-64,-107,-113,-29,-104,39,-115,-216,-68,-102,-106,-91,-63,-52,39,-62,39,39,-103,-101,-95,-105,-117,-100,-116,-66,39,39,-93,-65,-114,-60,-108,-111,-112,-109,39,-53,-81,-92,-130,-302,-131,39,-61,-69,39,39,39,-82,39,39,-161,-147,-148,-87,-89,39,-88,-90,39,39,39,-137,39,-140,-141,-128,39,39,39,39,-83,-70,39,-162,-30,39,39,39,39,39,-132,-303,-138,-129,-127,-126,39,-35,39,-36,39,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,39,39,39,39,39,39,39,-133,-134,-139,-34,-31,39,39,39,-196,-197,-209,39,-212,-213,-210,-150,-151,39,-33,-32,39,39,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'STRING_LITERAL':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,131,133,142,146,153,154,155,158,159,160,165,166,169,170,173,175,176,177,187,191,198,201,203,216,220,222,227,228,230,231,232,235,238,239,240,241,244,246,249,256,257,258,265,266,268,270,272,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,390,394,399,424,425,426,429,437,440,442,444,445,446,453,456,459,460,462,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,502,508,510,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,155,-28,155,-304,155,-162,155,-304,-264,155,-298,155,272,-263,155,-262,-265,-260,-304,-261,155,155,-303,155,155,-261,155,155,155,-72,-194,-77,-75,155,-73,155,-193,155,-76,-195,-78,-74,155,-28,155,-304,155,155,155,155,-299,155,-220,-225,155,-221,-229,-227,-226,-219,-222,-224,-223,-228,155,155,-11,-12,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,-304,155,-261,155,-196,-197,-209,155,155,155,155,-212,155,-213,-210,155,155,-261,155,-177,-304,155,-28,155,-304,-261,155,-200,-208,-211,-198,155,155,155,155,-11,-304,155,155,-261,155,155,155,155,155,-199,155,-204,155,-203,-201,-304,155,155,155,155,-205,-202,-207,155,-206,]),'GOTO':([22,56,64,68,131,187,220,222,227,228,230,231,232,238,240,241,244,246,349,351,352,355,359,361,362,364,440,442,444,445,446,475,479,480,481,494,498,499,510,514,516,517,519,520,521,],[-68,-81,-302,-69,233,-303,233,-72,-194,-77,-75,233,-73,-193,-76,-195,-78,-74,-196,-197,-209,233,-212,233,-213,-210,-200,-208,-211,-198,233,233,233,-199,233,-204,-203,-201,233,233,-205,-202,-207,233,-206,]),'COLON':([1,10,15,16,17,18,20,21,25,26,29,34,35,37,39,40,41,47,49,51,52,53,55,63,65,87,88,90,95,104,114,115,121,132,135,141,149,150,151,152,155,156,157,159,161,162,163,164,167,168,171,174,178,180,181,183,186,187,189,193,195,196,205,218,229,236,242,251,254,261,264,267,269,271,272,273,296,297,321,322,323,324,329,330,363,366,367,374,375,376,377,378,379,381,387,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,422,423,439,449,450,452,454,457,463,482,483,487,501,503,511,],[-99,-110,-107,-113,-29,-104,-115,-216,-102,-106,-52,-103,-101,-105,-117,-100,-116,-114,-108,-111,-112,-109,-53,-130,-131,-147,-148,-158,-37,-54,-128,191,-289,-157,-30,-55,-254,-278,-295,-266,-298,-279,-217,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,-231,-291,-297,-132,-303,-129,327,-127,-126,-35,-36,355,361,-214,-149,-38,-274,-275,-255,-252,-257,-299,-258,-301,-256,-133,-134,191,-230,-34,-31,446,-150,-151,-43,-44,-271,-270,-273,-272,-269,-218,-282,-243,-236,-247,-237,-250,-235,-234,-239,-240,-251,-246,-248,-249,-238,-244,-241,-242,464,-245,-33,-32,-215,-42,-39,-267,-268,-259,-253,-41,-40,-232,-276,-283,-277,]),'ELSE':([22,68,187,222,228,230,232,240,244,246,351,352,359,362,364,440,442,444,445,480,494,498,499,516,517,519,521,],[-68,-69,-303,-72,-77,-75,-73,-76,-78,-74,-197,-209,-212,-213,-210,-200,-208,-211,-198,-199,-204,-203,510,-205,-202,-207,-206,]),'SWITCH':([22,56,64,68,131,187,220,222,227,228,230,231,232,238,240,241,244,246,349,351,352,355,359,361,362,364,440,442,444,445,446,475,479,480,481,494,498,499,510,514,516,517,519,520,521,],[-68,-81,-302,-69,234,-303,234,-72,-194,-77,-75,234,-73,-193,-76,-195,-78,-74,-196,-197,-209,234,-212,234,-213,-210,-200,-208,-211,-198,234,234,234,-199,234,-204,-203,-201,234,234,-205,-202,-207,234,-206,]),'PLUSEQUAL':([121,149,150,151,152,155,156,159,161,163,164,167,168,171,174,178,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-293,-296,-290,-294,284,-281,-300,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-267,-268,-259,-253,-276,-283,-277,]),'PERIOD':([64,121,149,150,151,152,155,156,159,161,163,164,167,168,173,174,178,181,183,187,236,261,264,272,289,293,296,376,377,378,379,381,391,392,394,395,452,454,458,462,488,489,500,501,503,511,513,518,],[-302,-289,262,-278,-295,-266,-298,-279,-280,-292,-293,-296,-290,-294,290,-281,-300,-291,-297,-303,-289,-274,-275,-299,290,-178,-301,-271,-270,-273,-272,-269,-179,-181,290,-282,-267,-268,-180,290,504,-284,290,-276,-283,-277,-285,-286,]),'_COMPLEX':([0,1,2,3,7,8,9,10,11,13,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,63,64,65,66,67,68,70,71,72,73,74,75,77,79,83,85,86,87,88,91,97,98,101,102,107,108,109,110,111,112,113,114,115,120,125,129,130,131,133,135,147,177,184,185,186,187,188,189,195,196,204,205,213,218,220,222,227,228,230,232,238,240,241,244,246,251,253,268,270,274,299,320,321,322,326,329,330,337,339,349,351,352,353,359,362,364,366,367,398,422,423,440,442,444,445,480,494,498,499,516,517,519,521,],[15,-99,-67,-96,-97,-98,-94,-110,15,-64,-107,-113,-29,-104,15,-115,-216,-68,-102,-106,-91,-63,-52,-304,-62,15,-103,-101,-95,-105,-117,-100,-116,-66,-304,-304,-93,-65,-114,-60,-108,-111,-112,-109,15,-53,-81,-92,-130,-302,-131,15,-61,-69,15,-10,-9,-86,15,15,-82,15,-161,-85,-84,-147,-148,-87,-89,15,-88,-90,15,15,15,-137,15,-140,-141,-128,15,15,15,-83,-70,15,-162,-30,15,15,15,15,-132,-303,-138,-129,-127,-126,15,-35,15,-36,15,-72,-194,-77,-75,-73,-193,-76,-195,-78,-74,-149,-71,15,15,15,15,15,-133,-134,-139,-34,-31,15,15,-196,-197,-209,15,-212,-213,-210,-150,-151,15,-33,-32,-200,-208,-211,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'ID':([0,1,2,3,4,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,24,25,26,27,28,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,60,63,64,65,67,68,69,70,71,72,73,74,79,80,81,82,83,85,86,87,88,89,91,92,97,99,101,102,105,106,114,115,116,117,118,125,130,131,133,134,136,137,142,145,146,147,153,154,158,160,165,166,169,170,173,175,176,177,186,187,189,191,195,196,198,201,203,207,213,216,217,220,222,227,228,230,231,232,233,235,238,239,240,241,244,246,249,250,251,253,256,257,258,262,263,265,266,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,288,290,291,292,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,327,336,337,338,341,345,348,349,351,352,353,354,355,358,359,361,362,364,365,366,367,370,371,373,390,394,399,424,425,426,429,437,440,442,444,445,446,453,456,459,460,462,464,465,466,467,469,475,477,478,479,480,481,494,495,498,499,500,502,504,508,510,514,516,517,519,520,521,],[17,-99,-67,-96,17,-97,-98,-94,-110,17,-136,-64,63,-107,-113,-104,17,-115,-216,-68,-135,-102,-106,-91,-63,-304,-62,-304,-103,-101,-95,-105,17,-117,-100,-116,-66,-304,-304,-93,-65,-114,-60,-108,87,-111,-112,-109,17,-81,-92,-130,-302,-131,-61,-69,-304,121,-10,-9,-86,17,17,-27,-28,-159,-161,-85,-84,-147,-148,138,-87,17,-89,17,-88,-90,17,121,-128,17,-28,121,-304,17,-70,236,-162,-160,138,138,121,17,-304,121,-264,121,121,-263,121,-262,-265,-260,-304,-261,121,121,-132,-303,-129,121,-127,-126,121,-261,121,17,17,121,121,236,-72,-194,-77,-75,236,-73,357,121,-193,121,-76,-195,-78,-74,121,138,-149,-71,-28,121,-304,377,379,121,121,121,121,121,-220,-225,121,-221,-229,-227,-226,-219,-222,-224,-223,-228,121,121,121,-11,-12,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-133,-134,17,121,-304,121,121,17,-261,121,-196,-197,-209,121,121,236,121,-212,236,-213,-210,121,-150,-151,121,-261,121,-177,-304,121,-28,121,-304,-261,121,-200,-208,-211,-198,236,121,121,121,-11,-304,121,121,121,-261,121,236,121,121,236,-199,236,-204,121,-203,-201,-304,121,121,121,236,236,-205,-202,-207,236,-206,]),'OFFSETOF':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,131,133,142,146,153,154,158,160,165,166,169,170,173,175,176,177,187,191,198,201,203,216,220,222,227,228,230,231,232,235,238,239,240,241,244,246,249,256,257,258,265,266,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,390,394,399,424,425,426,429,437,440,442,444,445,446,453,456,459,460,462,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,502,508,510,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,182,-28,182,-304,182,-162,182,-304,-264,182,182,-263,182,-262,-265,-260,-304,-261,182,182,-303,182,182,-261,182,182,182,-72,-194,-77,-75,182,-73,182,-193,182,-76,-195,-78,-74,182,-28,182,-304,182,182,182,182,182,-220,-225,182,-221,-229,-227,-226,-219,-222,-224,-223,-228,182,182,-11,-12,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,-304,182,-261,182,-196,-197,-209,182,182,182,182,-212,182,-213,-210,182,182,-261,182,-177,-304,182,-28,182,-304,-261,182,-200,-208,-211,-198,182,182,182,182,-11,-304,182,182,-261,182,182,182,182,182,-199,182,-204,182,-203,-201,-304,182,182,182,182,-205,-202,-207,182,-206,]),'GT':([121,149,150,151,152,155,156,159,161,162,163,164,167,168,171,174,178,180,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,315,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-243,-236,315,-237,315,-235,-234,-239,-240,315,315,315,315,-238,-244,-241,-242,315,-267,-268,-259,-253,-276,-283,-277,]),'CASE':([22,56,64,68,131,187,220,222,227,228,230,231,232,238,240,241,244,246,349,351,352,355,359,361,362,364,440,442,444,445,446,475,479,480,481,494,498,499,510,514,516,517,519,520,521,],[-68,-81,-302,-69,239,-303,239,-72,-194,-77,-75,239,-73,-193,-76,-195,-78,-74,-196,-197,-209,239,-212,239,-213,-210,-200,-208,-211,-198,239,239,239,-199,239,-204,-203,-201,239,239,-205,-202,-207,239,-206,]),'PPPRAGMA':([0,2,13,19,22,28,31,42,46,48,56,64,66,67,68,107,108,109,110,112,113,130,131,184,185,187,188,220,222,227,228,230,231,232,238,240,241,244,246,253,326,349,351,352,355,359,361,362,364,440,442,444,445,446,475,479,480,481,494,498,499,510,514,516,517,519,520,521,],[22,-67,-64,22,-68,-63,-62,-66,-65,-60,-81,-302,22,-61,-69,22,22,22,-137,-140,-141,-70,22,22,22,-303,-138,22,-72,-194,-77,-75,22,-73,-193,-76,-195,-78,-74,-71,-139,-196,-197,-209,22,-212,22,-213,-210,-200,-208,-211,-198,22,22,22,-199,22,-204,-203,-201,22,22,-205,-202,-207,22,-206,]),'LSHIFTEQUAL':([121,149,150,151,152,155,156,159,161,163,164,167,168,171,174,178,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-293,-296,-290,-294,281,-281,-300,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-267,-268,-259,-253,-276,-283,-277,]),'EQUALS':([17,29,55,62,90,94,95,98,104,121,132,135,138,141,149,150,151,152,155,156,159,161,163,164,167,168,171,174,178,181,183,187,205,218,236,254,261,264,267,269,271,272,273,289,293,296,297,329,330,374,375,376,377,378,379,381,391,392,395,422,423,449,450,452,454,457,458,463,482,483,501,503,511,],[-29,-52,-53,106,-158,142,-37,-157,-54,-289,-157,-30,249,-55,-254,-278,-295,-266,-298,-279,-280,-292,-293,-296,-290,-294,282,-281,-300,-291,-297,-303,-35,-36,-289,-38,-274,-275,-255,-252,-257,-299,-258,390,-178,-301,-256,-34,-31,-43,-44,-271,-270,-273,-272,-269,-179,-181,-282,-33,-32,-42,-39,-267,-268,-259,-180,-253,-41,-40,-276,-283,-277,]),'WHILE':([22,56,64,68,131,187,220,222,227,228,230,231,232,238,240,241,244,246,349,351,352,355,356,359,361,362,364,440,442,444,445,446,475,479,480,481,494,498,499,510,514,516,517,519,520,521,],[-68,-81,-302,-69,219,-303,219,-72,-194,-77,-75,219,-73,-193,-76,-195,-78,-74,-196,-197,-209,219,441,-212,219,-213,-210,-200,-208,-211,-198,219,219,219,-199,219,-204,-203,-201,219,219,-205,-202,-207,219,-206,]),'OR':([121,149,150,151,152,155,156,159,161,162,163,164,167,168,171,174,178,180,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,312,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-243,-236,-247,-237,312,-235,-234,-239,-240,312,-246,-248,-249,-238,-244,-241,-242,-245,-267,-268,-259,-253,-276,-283,-277,]),'FLOAT_CONST':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,131,133,142,146,153,154,158,160,165,166,169,170,173,175,176,177,187,191,198,201,203,216,220,222,227,228,230,231,232,235,238,239,240,241,244,246,249,256,257,258,265,266,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,390,394,399,424,425,426,429,437,440,442,444,445,446,453,456,459,460,462,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,502,508,510,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,168,-28,168,-304,168,-162,168,-304,-264,168,168,-263,168,-262,-265,-260,-304,-261,168,168,-303,168,168,-261,168,168,168,-72,-194,-77,-75,168,-73,168,-193,168,-76,-195,-78,-74,168,-28,168,-304,168,168,168,168,168,-220,-225,168,-221,-229,-227,-226,-219,-222,-224,-223,-228,168,168,-11,-12,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,-304,168,-261,168,-196,-197,-209,168,168,168,168,-212,168,-213,-210,168,168,-261,168,-177,-304,168,-28,168,-304,-261,168,-200,-208,-211,-198,168,168,168,168,-11,-304,168,168,-261,168,168,168,168,168,-199,168,-204,168,-203,-201,-304,168,168,168,168,-205,-202,-207,168,-206,]),'MOD':([121,149,150,151,152,155,156,159,161,162,163,164,167,168,171,174,178,180,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,302,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,302,-236,302,302,302,-235,-234,302,302,302,302,302,302,302,302,302,302,302,-267,-268,-259,-253,-276,-283,-277,]),'LNOT':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,131,133,142,146,153,154,158,160,165,166,169,170,173,175,176,177,187,191,198,201,203,216,220,222,227,228,230,231,232,235,238,239,240,241,244,246,249,256,257,258,265,266,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,390,394,399,424,425,426,429,437,440,442,444,445,446,453,456,459,460,462,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,502,508,510,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,169,-28,169,-304,169,-162,169,-304,-264,169,169,-263,169,-262,-265,-260,-304,-261,169,169,-303,169,169,-261,169,169,169,-72,-194,-77,-75,169,-73,169,-193,169,-76,-195,-78,-74,169,-28,169,-304,169,169,169,169,169,-220,-225,169,-221,-229,-227,-226,-219,-222,-224,-223,-228,169,169,-11,-12,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,-304,169,-261,169,-196,-197,-209,169,169,169,169,-212,169,-213,-210,169,169,-261,169,-177,-304,169,-28,169,-304,-261,169,-200,-208,-211,-198,169,169,169,169,-11,-304,169,169,-261,169,169,169,169,169,-199,169,-204,169,-203,-201,-304,169,169,169,169,-205,-202,-207,169,-206,]),'CHAR_CONST':([20,22,39,41,56,64,68,69,80,81,83,106,116,117,118,131,133,142,146,153,154,158,160,165,166,169,170,173,175,176,177,187,191,198,201,203,216,220,222,227,228,230,231,232,235,238,239,240,241,244,246,249,256,257,258,265,266,268,270,274,275,276,277,278,279,280,281,282,283,284,285,286,288,291,292,294,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,336,338,345,348,349,351,352,353,354,355,358,359,361,362,364,365,370,371,373,390,394,399,424,425,426,429,437,440,442,444,445,446,453,456,459,460,462,464,466,467,469,475,477,478,479,480,481,494,495,498,499,500,502,508,510,514,516,517,519,520,521,],[-115,-68,-117,-116,-81,-302,-69,-304,-27,-28,-161,164,-28,164,-304,164,-162,164,-304,-264,164,164,-263,164,-262,-265,-260,-304,-261,164,164,-303,164,164,-261,164,164,164,-72,-194,-77,-75,164,-73,164,-193,164,-76,-195,-78,-74,164,-28,164,-304,164,164,164,164,164,-220,-225,164,-221,-229,-227,-226,-219,-222,-224,-223,-228,164,164,-11,-12,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-304,164,-261,164,-196,-197,-209,164,164,164,164,-212,164,-213,-210,164,164,-261,164,-177,-304,164,-28,164,-304,-261,164,-200,-208,-211,-198,164,164,164,164,-11,-304,164,164,-261,164,164,164,164,164,-199,164,-204,164,-203,-201,-304,164,164,164,164,-205,-202,-207,164,-206,]),'CONDOP':([121,149,150,151,152,155,156,159,161,162,163,164,167,168,171,174,178,180,181,183,187,236,261,264,267,269,271,272,273,296,297,376,377,378,379,381,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,452,454,457,463,501,503,511,],[-289,-254,-278,-295,-266,-298,-279,-280,-292,-233,-293,-296,-290,-294,-252,-281,-300,318,-291,-297,-303,-289,-274,-275,-255,-252,-257,-299,-258,-301,-256,-271,-270,-273,-272,-269,-282,-243,-236,-247,-237,-250,-235,-234,-239,-240,-251,-246,-248,-249,-238,-244,-241,-242,-245,-267,-268,-259,-253,-276,-283,-277,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'struct_or_union_specifier':([0,11,19,32,66,70,74,75,98,107,108,109,111,120,131,147,177,184,185,204,213,220,268,270,274,320,337,339,353,398,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'translation_unit_or_empty':([0,],[5,]),'designator_list':([173,394,462,500,],[289,289,289,289,]),'decl_body':([0,19,32,75,98,131,220,353,],[6,6,6,6,6,6,6,6,]),'primary_expression':([106,117,131,142,154,158,165,176,177,191,198,203,216,220,231,235,239,249,257,265,266,268,270,274,277,288,291,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,338,348,353,354,355,358,361,365,370,373,399,425,437,446,453,456,459,464,466,469,475,477,478,479,481,495,502,508,510,514,520,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'declaration_specifiers_no_type':([0,19,30,32,43,44,70,75,98,131,147,204,213,220,337,339,353,398,],[11,11,71,74,71,71,120,74,74,74,120,120,120,74,120,120,74,120,]),'abstract_declarator':([125,213,299,398,],[206,340,206,340,]),'struct_declarator_list_opt':([115,],[192,]),'declaration_list':([32,98,],[75,75,]),'initializer_list_opt':([173,],[287,]),'init_declarator':([54,79,105,145,],[93,93,148,255,]),'unified_string_literal':([106,117,131,142,154,158,165,176,177,191,198,203,216,220,231,235,239,249,257,265,266,268,270,274,277,288,291,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,338,348,353,354,355,358,361,365,370,373,399,425,437,446,453,456,459,464,466,469,475,477,478,479,481,495,502,508,510,514,520,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'type_qualifier_list':([33,66,69,107,108,109,118,146,177,184,185,258,268,270,274,320,336,426,],[81,111,116,111,111,111,81,256,111,111,111,81,111,111,111,111,424,81,]),'cast_expression':([106,117,131,142,158,177,191,198,203,216,220,231,235,239,249,257,265,266,268,270,274,277,288,291,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,338,348,353,354,355,358,361,365,370,373,399,425,437,446,453,456,459,464,466,469,475,477,478,479,481,495,502,508,510,514,520,],[162,162,162,162,271,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,463,162,162,162,162,463,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'block_item_list_opt':([131,],[221,]),'typeid_declarator':([54,79,99,105,115,145,323,],[90,90,144,90,90,90,90,]),'struct_declarator':([115,323,],[197,420,]),'parameter_declaration':([70,147,204,213,337,339,398,],[123,123,333,123,123,123,123,]),'initializer':([106,142,288,459,],[179,252,389,485,]),'empty':([0,11,30,32,33,43,44,54,69,70,74,79,98,115,117,118,125,131,146,147,173,213,216,220,231,257,258,299,336,337,338,339,353,355,361,394,398,425,426,437,446,462,475,477,479,481,495,500,508,510,514,520,],[23,59,72,76,80,72,72,96,80,122,59,96,76,194,199,80,215,224,80,122,292,342,199,350,350,199,80,215,80,122,199,342,350,350,350,460,342,199,80,350,350,460,350,350,350,350,350,460,350,350,350,350,]),'designation_opt':([173,394,462,500,],[288,459,288,459,]),'specifier_qualifier_list':([66,107,108,109,177,184,185,268,270,274,320,],[115,115,115,115,299,115,115,299,299,299,299,]),'expression_statement':([131,220,231,355,361,446,475,479,481,510,514,520,],[232,232,232,232,232,232,232,232,232,232,232,232,]),'declaration':([0,19,32,75,98,131,220,353,],[28,28,77,129,77,238,238,437,]),'struct_declaration_list':([66,107,108,],[109,184,185,]),'assignment_expression':([106,117,131,142,177,198,203,216,220,231,235,257,265,266,268,270,274,277,288,318,338,348,353,354,355,358,361,365,370,373,425,437,446,453,459,466,469,475,477,478,479,481,495,502,508,510,514,520,],[172,200,242,172,242,328,331,200,242,242,242,200,242,382,242,242,242,387,172,242,200,242,242,439,242,242,242,242,448,451,200,242,242,484,172,490,493,242,242,242,242,242,242,242,242,242,242,242,]),'declaration_list_opt':([32,98,],[78,143,]),'direct_typeid_noparen_declarator':([125,207,],[209,334,]),'id_declarator':([0,11,19,38,54,74,79,99,105,115,125,145,213,323,],[32,62,32,84,98,62,132,84,132,132,210,132,84,132,]),'function_definition':([0,19,],[31,31,]),'translation_unit':([0,],[19,]),'brace_close':([109,140,184,185,221,247,248,287,394,486,500,],[186,251,321,322,351,366,367,388,461,501,511,]),'designator':([173,289,394,462,500,],[293,391,293,293,293,]),'enum_specifier':([0,11,19,32,66,70,74,75,98,107,108,109,111,120,131,147,177,184,185,204,213,220,268,270,274,320,337,339,353,398,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'init_declarator_list_opt':([54,79,],[100,100,]),'statement':([131,220,231,355,361,446,475,479,481,510,514,520,],[227,227,356,440,445,480,494,498,499,517,519,521,]),'direct_id_declarator':([0,4,11,19,38,54,74,79,92,99,105,115,125,145,207,213,323,341,],[29,55,29,29,29,29,29,29,55,29,29,29,29,29,55,29,29,55,]),'struct_declaration':([66,107,108,109,184,185,],[110,110,110,188,188,188,]),'identifier_list_opt':([70,147,337,],[127,260,428,]),'type_qualifier_list_opt':([33,69,118,146,258,336,426,],[82,117,203,257,373,425,469,]),'type_qualifier':([0,19,30,32,33,43,44,54,66,69,70,75,79,81,98,107,108,109,111,115,116,118,125,131,146,147,177,184,185,204,213,220,256,258,268,270,274,299,320,336,337,339,353,398,424,426,],[44,44,44,44,83,44,44,91,83,83,44,44,91,133,44,83,83,83,133,195,133,83,91,44,83,44,83,83,83,44,44,44,133,83,83,83,83,195,83,83,44,44,44,44,133,83,]),'selection_statement':([131,220,231,355,361,446,475,479,481,510,514,520,],[230,230,230,230,230,230,230,230,230,230,230,230,]),'external_declaration':([0,19,],[48,67,]),'expression':([131,177,220,231,235,265,268,270,274,318,348,353,355,358,361,365,437,446,475,477,478,479,481,495,502,508,510,514,520,],[226,298,226,226,360,380,298,298,298,417,436,226,226,443,226,447,226,226,226,226,497,226,226,226,512,226,226,226,226,]),'identifier':([70,106,117,131,142,147,154,158,165,176,177,191,198,203,216,217,220,231,235,239,249,257,265,266,268,270,274,277,288,290,291,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,337,338,348,353,354,355,358,361,365,370,373,399,425,437,446,453,456,459,464,465,466,469,475,477,478,479,481,495,502,504,508,510,514,520,],[128,150,150,150,150,128,150,150,150,150,150,150,150,150,150,347,150,150,150,150,150,150,150,150,150,150,150,150,150,392,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,128,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,489,150,150,150,150,150,150,150,150,150,513,150,150,150,150,]),'direct_typeid_declarator':([54,79,92,99,105,115,145,323,],[104,104,141,104,104,104,104,104,]),'function_specifier':([0,19,30,32,43,44,54,70,75,79,98,125,131,147,204,213,220,337,339,353,398,],[30,30,30,30,30,30,97,30,30,97,30,97,30,30,30,30,30,30,30,30,30,]),'unary_expression':([106,117,131,142,154,158,165,176,177,191,198,203,216,220,231,235,239,249,257,265,266,268,270,274,277,288,291,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,338,348,353,354,355,358,361,365,370,373,399,425,437,446,453,456,459,464,466,469,475,477,478,479,481,495,502,508,510,514,520,],[171,171,171,171,267,269,273,297,171,269,171,171,171,171,171,171,269,269,171,171,171,171,171,171,171,171,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,171,269,269,171,171,171,171,171,171,171,171,171,171,269,171,171,171,171,269,171,269,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'struct_declarator_list':([115,],[190,]),'parameter_list':([70,147,213,337,339,398,],[119,119,119,119,119,119,]),'assignment_operator':([171,],[277,]),'pointer':([0,11,19,38,54,74,79,82,99,105,115,125,145,213,299,323,398,],[4,4,4,4,92,4,92,134,92,92,92,207,92,341,396,92,396,]),'postfix_expression':([106,117,131,142,154,158,165,176,177,191,198,203,216,220,231,235,239,249,257,265,266,268,270,274,277,288,291,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,338,348,353,354,355,358,361,365,370,373,399,425,437,446,453,456,459,464,466,469,475,477,478,479,481,495,502,508,510,514,520,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'constant':([106,117,131,142,154,158,165,176,177,191,198,203,216,220,231,235,239,249,257,265,266,268,270,274,277,288,291,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,338,348,353,354,355,358,361,365,370,373,399,425,437,446,453,456,459,464,466,469,475,477,478,479,481,495,502,508,510,514,520,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'id_init_declarator_list_opt':([11,74,],[57,57,]),'pp_directive':([0,19,],[13,13,]),'struct_or_union':([0,11,19,32,66,70,74,75,98,107,108,109,111,120,131,147,177,184,185,204,213,220,268,270,274,320,337,339,353,398,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'id_init_declarator_list':([11,74,],[58,58,]),'unary_operator':([106,117,131,142,154,158,165,176,177,191,198,203,216,220,231,235,239,249,257,265,266,268,270,274,277,288,291,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,338,348,353,354,355,358,361,365,370,373,399,425,437,446,453,456,459,464,466,469,475,477,478,479,481,495,502,508,510,514,520,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'block_item':([131,220,],[241,349,]),'constant_expression':([191,239,249,291,327,],[325,363,368,393,421,]),'parameter_type_list_opt':([213,339,398,],[344,431,344,]),'conditional_expression':([106,117,131,142,177,191,198,203,216,220,231,235,239,249,257,265,266,268,270,274,277,288,291,318,327,338,348,353,354,355,358,361,365,370,373,425,437,446,453,459,464,466,469,475,477,478,479,481,495,502,508,510,514,520,],[157,157,157,157,157,324,157,157,157,157,157,157,324,324,157,157,157,157,157,157,157,157,324,157,324,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,487,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'designation':([173,394,462,500,],[294,294,294,294,]),'typedef_name':([0,11,19,32,66,70,74,75,98,107,108,109,111,120,131,147,177,184,185,204,213,220,268,270,274,320,337,339,353,398,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'parameter_type_list':([70,147,213,337,339,398,],[124,259,343,427,343,343,]),'jump_statement':([131,220,231,355,361,446,475,479,481,510,514,520,],[228,228,228,228,228,228,228,228,228,228,228,228,]),'type_specifier':([0,11,19,32,66,70,74,75,98,107,108,109,111,120,131,147,177,184,185,204,213,220,268,270,274,320,337,339,353,398,],[27,60,27,27,114,27,60,27,27,114,114,114,189,60,27,27,114,114,114,27,27,27,114,114,114,114,27,27,27,27,]),'type_name':([177,268,270,274,320,],[300,384,385,386,419,]),'id_init_declarator':([11,74,],[61,61,]),'brace_open':([14,50,63,65,78,87,88,106,131,142,143,220,231,288,355,361,399,446,455,456,457,459,475,479,481,510,514,520,],[66,89,107,108,131,136,137,173,131,173,131,131,131,173,131,131,462,131,462,462,462,173,131,131,131,131,131,131,]),'iteration_statement':([131,220,231,355,361,446,475,479,481,510,514,520,],[240,240,240,240,240,240,240,240,240,240,240,240,]),'argument_expression_list':([266,],[383,]),'declaration_specifiers':([0,19,32,70,75,98,131,147,204,213,220,337,339,353,398,],[54,54,79,125,79,79,79,125,125,125,79,125,125,79,125,]),'enumerator':([89,136,137,250,],[139,139,139,369,]),'abstract_declarator_opt':([125,299,],[211,397,]),'direct_abstract_declarator':([125,207,213,299,341,396,398,],[212,335,212,212,335,335,212,]),'block_item_list':([131,],[220,]),'typeid_noparen_declarator':([125,],[214,]),'enumerator_list':([89,136,137,],[140,247,248,]),'binary_expression':([106,117,131,142,177,191,198,203,216,220,231,235,239,249,257,265,266,268,270,274,277,288,291,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,338,348,353,354,355,358,361,365,370,373,425,437,446,453,459,464,466,469,475,477,478,479,481,495,502,508,510,514,520,],[180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,180,418,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,]),'assignment_expression_opt':([117,216,257,338,425,],[202,346,372,430,468,]),'identifier_list':([70,147,337,],[126,126,126,]),'offsetof_member_designator':([465,],[488,]),'expression_opt':([131,220,231,353,355,361,437,446,475,477,479,481,495,508,510,514,520,],[237,237,237,438,237,237,476,237,237,496,237,237,507,515,237,237,237,]),'labeled_statement':([131,220,231,355,361,446,475,479,481,510,514,520,],[222,222,222,222,222,222,222,222,222,222,222,222,]),'storage_class_specifier':([0,19,30,32,43,44,54,70,75,79,98,125,131,147,204,213,220,337,339,353,398,],[43,43,43,43,43,43,101,43,43,101,43,101,43,43,43,43,43,43,43,43,43,]),'pppragma_directive':([0,19,66,107,108,109,131,184,185,220,231,355,361,446,475,479,481,510,514,520,],[46,46,113,113,113,113,244,113,113,244,244,244,244,244,244,244,244,244,244,244,]),'type_specifier_no_typeid':([0,11,19,32,54,66,70,74,75,79,98,107,108,109,111,115,120,125,131,147,177,184,185,204,213,220,268,270,274,299,320,337,339,353,398,],[47,47,47,47,102,47,47,47,47,102,47,47,47,47,47,196,47,102,47,47,47,47,47,47,47,47,47,47,47,196,47,47,47,47,47,]),'init_declarator_list':([54,79,],[103,103,]),'unified_wstring_literal':([106,117,131,142,154,158,165,176,177,191,198,203,216,220,231,235,239,249,257,265,266,268,270,274,277,288,291,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,327,338,348,353,354,355,358,361,365,370,373,399,425,437,446,453,456,459,464,466,469,475,477,478,479,481,495,502,508,510,514,520,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'declaration_specifiers_no_type_opt':([30,43,44,],[73,85,86,]),'initializer_list':([173,462,],[295,486,]),'declarator':([54,79,105,115,145,323,],[94,94,94,193,94,193,]),'compound_statement':([78,131,143,220,231,355,361,446,475,479,481,510,514,520,],[130,246,253,246,246,246,246,246,246,246,246,246,246,246,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
