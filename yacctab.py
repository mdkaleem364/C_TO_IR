
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'PERIOD':([69,112,149,150,153,154,155,158,160,162,163,164,169,170,172,174,175,182,183,216,242,277,307,308,310,314,320,401,404,406,409,410,411,412,413,415,455,457,462,463,484,485,502,503,504,511,513,518,],[-302,-289,-298,-290,-279,-296,-292,-281,-266,-297,-300,-293,301,-295,309,-278,-291,-280,-294,-303,-289,-301,-178,301,-275,-274,-299,-282,-181,301,-179,-271,-270,-272,-273,-269,301,-180,-268,-267,500,-284,-283,301,-276,-285,-277,-286,]),'LSHIFT':([112,149,150,152,153,154,155,158,159,160,162,163,164,170,172,173,174,175,182,183,216,242,273,275,277,310,314,315,317,319,320,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,401,410,411,412,413,415,456,462,463,465,502,504,513,],[-289,-298,-290,-252,-279,-296,-292,-281,296,-266,-297,-300,-293,-295,-254,-233,-278,-291,-280,-294,-303,-289,-252,-257,-301,-275,-274,-256,-258,-255,-299,-235,296,-239,-238,296,296,296,-236,-234,296,296,296,296,296,-237,296,296,-240,-282,-271,-270,-272,-273,-269,-253,-268,-267,-259,-283,-276,-277,]),'DIVIDE':([112,149,150,152,153,154,155,158,159,160,162,163,164,170,172,173,174,175,182,183,216,242,273,275,277,310,314,315,317,319,320,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,401,410,411,412,413,415,456,462,463,465,502,504,513,],[-289,-298,-290,-252,-279,-296,-292,-281,278,-266,-297,-300,-293,-295,-254,-233,-278,-291,-280,-294,-303,-289,-252,-257,-301,-275,-274,-256,-258,-255,-299,-235,278,278,278,278,278,278,-236,-234,278,278,278,278,278,278,278,278,278,-282,-271,-270,-272,-273,-269,-253,-268,-267,-259,-283,-276,-277,]),'COMMA':([3,4,5,6,8,9,10,11,15,20,21,22,23,24,27,29,32,35,36,37,38,39,40,42,44,47,49,52,53,54,58,59,60,61,71,72,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,101,107,109,112,113,114,115,124,129,132,134,135,138,139,140,147,148,149,150,151,152,153,154,155,158,159,160,162,163,164,165,166,170,172,173,174,175,182,183,184,185,187,188,190,191,192,193,194,195,196,205,206,207,209,210,213,214,216,221,226,242,247,248,250,251,253,254,255,273,275,277,297,298,305,310,314,315,317,319,320,332,333,335,336,339,340,341,342,346,347,363,366,367,368,369,370,371,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399,400,401,405,407,410,411,412,413,414,415,416,417,420,421,425,426,432,433,434,435,436,438,441,446,450,451,456,458,462,463,465,466,467,468,469,470,482,483,486,487,488,489,492,493,495,502,504,505,506,512,513,],[-216,-100,-107,-112,-104,-113,-97,-94,-102,-110,-98,-95,-106,-29,-114,-52,-108,-91,-105,-116,-111,-115,-117,-304,-109,-103,-99,-101,-93,-96,-122,105,-92,-124,-130,-131,-28,-27,-161,-159,-53,-147,-148,-37,-157,-87,-158,-88,-89,142,-118,-90,-120,-54,-170,-304,-289,197,198,-165,-128,-30,-157,-162,-160,-155,-152,250,-55,-123,-298,-290,-217,-252,-279,-296,-292,-281,-231,-266,-297,-300,-293,-125,-172,-295,-254,-233,-278,-291,-280,-294,-45,-167,-185,-2,-168,-56,-169,-183,-1,-35,-36,-127,-142,-126,-144,344,-129,-132,-303,348,-214,-289,250,250,-153,-149,-119,-121,-38,-252,-257,-301,-304,348,406,-275,-274,-256,-258,-255,-299,-57,-184,-166,-171,-31,-34,-230,-146,-133,-134,348,-150,-151,-156,-154,-43,-44,-218,453,-235,-250,-239,-238,-244,-248,-243,-236,-234,348,-249,-245,-251,-242,-241,-237,-246,-247,-240,-182,-183,-282,-175,-173,-271,-270,-272,-273,-287,-269,461,348,-188,-190,-186,-192,-32,-33,-145,-143,-215,348,348,348,-39,-42,-253,-174,-268,-267,-259,-187,-189,-191,-50,-51,-40,-41,-232,503,-176,-288,-46,-49,348,-283,-276,-47,-48,348,-277,]),'STRING_LITERAL':([37,39,40,51,64,68,69,81,82,83,104,106,117,118,119,130,134,143,146,149,156,161,167,168,169,171,176,177,178,179,180,181,182,186,199,200,203,208,216,219,220,224,225,230,231,233,234,236,237,238,239,241,245,249,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,302,303,304,312,313,316,318,320,322,323,331,343,348,349,350,351,352,356,357,358,360,361,362,364,365,372,373,375,402,406,408,423,429,430,431,437,440,442,444,445,447,452,454,455,459,460,461,471,472,474,475,476,477,479,480,481,494,496,497,499,501,503,509,510,514,515,517,519,520,521,],[-116,-115,-117,-68,-81,-304,-302,-28,-27,-161,-69,149,-304,-28,149,149,-162,149,-304,-298,149,-264,-263,149,-304,-265,-261,149,149,-262,149,-260,320,149,149,149,-261,149,-303,-73,-75,-78,-193,-77,149,-76,-72,-74,-194,-195,149,149,149,149,-304,-28,149,149,-228,-225,-224,-222,-221,-226,-223,-219,-229,-227,-220,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,-11,-12,149,149,149,149,-299,-261,149,-304,149,149,-197,-209,149,149,149,-196,149,149,149,-210,-212,-213,149,149,-261,149,-304,-177,-261,-304,-28,149,-200,-208,149,149,-198,-211,149,149,-304,149,-11,149,149,149,-261,149,149,149,149,-199,149,-204,-203,149,-201,149,-304,149,149,-205,149,-202,-207,149,-206,]),'TYPEID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,44,45,47,48,49,51,52,53,54,55,56,57,60,64,65,66,67,69,70,71,72,73,75,76,79,80,81,82,83,84,85,86,87,90,91,93,94,97,100,102,104,105,108,109,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,142,145,168,189,193,195,196,197,205,207,213,214,215,216,217,218,219,220,224,225,230,233,234,236,237,238,239,251,252,274,276,309,311,316,318,324,330,339,340,344,345,346,347,349,350,357,358,362,364,365,366,367,398,432,433,437,440,445,447,480,494,496,499,514,517,519,521,],[3,-64,-62,-216,-100,-107,-112,-60,-104,-113,-97,-94,-304,3,-102,-67,-135,-304,-304,-110,-98,-95,-106,-29,-136,-65,-114,-63,-52,72,3,-108,-66,-91,-105,-116,-111,-115,-117,3,-304,-109,87,-103,89,-99,-68,-101,-93,-96,-10,-9,-84,-92,-81,-85,-86,3,-302,3,-130,-131,-61,3,-82,89,3,-28,-27,-161,-159,-53,-147,-148,3,-87,-88,-89,-90,89,89,-69,89,3,184,-141,89,3,-140,-128,3,-137,3,3,-30,3,-70,-83,-162,-160,89,3,3,3,184,-35,-36,3,-127,-126,-129,-132,-138,-303,3,3,-73,-75,-78,-193,-77,-76,-72,-74,-194,-195,3,-149,-71,3,3,410,413,3,3,3,3,-31,-34,89,-139,-133,-134,-197,-209,-196,3,-210,-212,-213,-150,-151,3,-32,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'INT_CONST_DEC':([37,39,40,51,64,68,69,81,82,83,104,106,117,118,119,130,134,143,146,156,161,167,168,169,171,176,177,178,179,180,181,186,199,200,203,208,216,219,220,224,225,230,231,233,234,236,237,238,239,241,245,249,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,302,303,304,312,313,316,318,322,323,331,343,348,349,350,351,352,356,357,358,360,361,362,364,365,372,373,375,402,406,408,423,429,430,431,437,440,442,444,445,447,452,454,455,459,460,461,471,472,474,475,476,477,479,480,481,494,496,497,499,501,503,509,510,514,515,517,519,520,521,],[-116,-115,-117,-68,-81,-304,-302,-28,-27,-161,-69,150,-304,-28,150,150,-162,150,-304,150,-264,-263,150,-304,-265,-261,150,150,-262,150,-260,150,150,150,-261,150,-303,-73,-75,-78,-193,-77,150,-76,-72,-74,-194,-195,150,150,150,150,-304,-28,150,150,-228,-225,-224,-222,-221,-226,-223,-219,-229,-227,-220,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,-11,-12,150,150,150,150,-261,150,-304,150,150,-197,-209,150,150,150,-196,150,150,150,-210,-212,-213,150,150,-261,150,-304,-177,-261,-304,-28,150,-200,-208,150,150,-198,-211,150,150,-304,150,-11,150,150,150,-261,150,150,150,150,-199,150,-204,-203,150,-201,150,-304,150,150,-205,150,-202,-207,150,-206,]),'_BOOL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,21,22,23,24,26,27,28,29,31,32,34,35,36,37,38,39,40,41,44,47,48,49,51,52,53,54,55,56,57,60,64,65,66,67,69,70,71,72,73,75,76,79,80,83,85,86,87,90,91,93,94,97,104,108,109,120,121,122,123,124,125,126,127,128,129,130,131,133,134,145,168,189,195,196,197,205,207,213,214,215,216,217,218,219,220,224,225,230,233,234,236,237,238,239,251,252,274,276,297,316,318,324,330,339,340,345,346,347,349,350,357,358,362,364,365,366,367,398,432,433,437,440,445,447,480,494,496,499,514,517,519,521,],[4,-64,-62,-216,-100,-107,-112,-60,-104,-113,-97,-94,-304,4,-102,-67,-304,-304,-110,-98,-95,-106,-29,-65,-114,-63,-52,4,-108,-66,-91,-105,-116,-111,-115,-117,4,-109,-103,4,-99,-68,-101,-93,-96,-10,-9,-84,-92,-81,-85,-86,4,-302,4,-130,-131,-61,4,-82,4,4,-161,-53,-147,-148,4,-87,-88,-89,-90,-69,4,4,-141,4,4,-140,-128,4,-137,4,4,-30,4,-70,-83,-162,4,4,4,-35,-36,4,-127,-126,-129,-132,-138,-303,4,4,-73,-75,-78,-193,-77,-76,-72,-74,-194,-195,4,-149,-71,4,4,4,4,4,4,4,-31,-34,-139,-133,-134,-197,-209,-196,4,-210,-212,-213,-150,-151,4,-32,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'LONG':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,21,22,23,24,26,27,28,29,31,32,34,35,36,37,38,39,40,41,44,47,48,49,51,52,53,54,55,56,57,60,64,65,66,67,69,70,71,72,73,75,76,79,80,83,85,86,87,90,91,93,94,97,104,108,109,120,121,122,123,124,125,126,127,128,129,130,131,133,134,145,168,189,195,196,197,205,207,213,214,215,216,217,218,219,220,224,225,230,233,234,236,237,238,239,251,252,274,276,297,316,318,324,330,339,340,345,346,347,349,350,357,358,362,364,365,366,367,398,432,433,437,440,445,447,480,494,496,499,514,517,519,521,],[8,-64,-62,-216,-100,-107,-112,-60,-104,-113,-97,-94,-304,8,-102,-67,-304,-304,-110,-98,-95,-106,-29,-65,-114,-63,-52,8,-108,-66,-91,-105,-116,-111,-115,-117,8,-109,-103,8,-99,-68,-101,-93,-96,-10,-9,-84,-92,-81,-85,-86,8,-302,8,-130,-131,-61,8,-82,8,8,-161,-53,-147,-148,8,-87,-88,-89,-90,-69,8,8,-141,8,8,-140,-128,8,-137,8,8,-30,8,-70,-83,-162,8,8,8,-35,-36,8,-127,-126,-129,-132,-138,-303,8,8,-73,-75,-78,-193,-77,-76,-72,-74,-194,-195,8,-149,-71,8,8,8,8,8,8,8,-31,-34,-139,-133,-134,-197,-209,-196,8,-210,-212,-213,-150,-151,8,-32,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'OR':([112,149,150,152,153,154,155,158,159,160,162,163,164,170,172,173,174,175,182,183,216,242,273,275,277,310,314,315,317,319,320,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,401,410,411,412,413,415,456,462,463,465,502,504,513,],[-289,-298,-290,-252,-279,-296,-292,-281,283,-266,-297,-300,-293,-295,-254,-233,-278,-291,-280,-294,-303,-289,-252,-257,-301,-275,-274,-256,-258,-255,-299,-235,283,-239,-238,-244,-248,-243,-236,-234,-249,-245,283,-242,-241,-237,-246,-247,-240,-282,-271,-270,-272,-273,-269,-253,-268,-267,-259,-283,-276,-277,]),'ELLIPSIS':([197,],[334,]),'REGISTER':([0,1,2,3,4,5,6,7,8,9,10,11,12,15,16,18,19,20,21,22,23,24,26,27,28,29,31,32,34,35,36,37,38,39,40,41,44,47,48,49,51,52,53,54,60,64,67,69,71,72,73,76,79,80,85,86,87,90,91,93,94,97,104,109,129,130,131,133,145,189,195,196,197,214,216,219,220,224,225,230,233,234,236,237,238,239,251,252,324,330,339,340,346,347,349,350,357,358,362,364,365,366,367,398,432,433,437,440,445,447,480,494,496,499,514,517,519,521,],[11,-64,-62,-216,-100,-107,-112,-60,-104,-113,-97,-94,11,-102,-67,11,11,-110,-98,-95,-106,-29,-65,-114,-63,-52,11,-108,-66,-91,-105,-116,-111,-115,-117,11,-109,-103,11,-99,-68,-101,-93,-96,-92,-81,11,-302,-130,-131,-61,-82,11,11,-53,-147,-148,11,-87,-88,-89,-90,-69,11,-30,11,-70,-83,11,11,-35,-36,11,-132,-303,-73,-75,-78,-193,-77,-76,-72,-74,-194,-195,11,-149,-71,11,11,-31,-34,-133,-134,-197,-209,-196,11,-210,-212,-213,-150,-151,11,-32,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,21,22,23,24,26,27,28,29,31,32,34,35,36,37,38,39,40,41,44,47,48,49,51,52,53,54,55,56,57,60,64,65,66,67,69,70,71,72,73,75,76,79,80,83,85,86,87,90,91,93,94,97,104,108,109,120,121,122,123,124,125,126,127,128,129,130,131,133,134,145,168,189,195,196,197,205,207,213,214,215,216,217,218,219,220,224,225,230,233,234,236,237,238,239,251,252,274,276,297,316,318,324,330,339,340,345,346,347,349,350,357,358,362,364,365,366,367,398,432,433,437,440,445,447,480,494,496,499,514,517,519,521,],[23,-64,-62,-216,-100,-107,-112,-60,-104,-113,-97,-94,-304,23,-102,-67,-304,-304,-110,-98,-95,-106,-29,-65,-114,-63,-52,23,-108,-66,-91,-105,-116,-111,-115,-117,23,-109,-103,23,-99,-68,-101,-93,-96,-10,-9,-84,-92,-81,-85,-86,23,-302,23,-130,-131,-61,23,-82,23,23,-161,-53,-147,-148,23,-87,-88,-89,-90,-69,23,23,-141,23,23,-140,-128,23,-137,23,23,-30,23,-70,-83,-162,23,23,23,-35,-36,23,-127,-126,-129,-132,-138,-303,23,23,-73,-75,-78,-193,-77,-76,-72,-74,-194,-195,23,-149,-71,23,23,23,23,23,23,23,-31,-34,-139,-133,-134,-197,-209,-196,23,-210,-212,-213,-150,-151,23,-32,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'LBRACE':([17,24,25,29,30,41,45,51,64,69,71,72,76,77,78,80,85,86,87,90,104,106,129,130,133,141,143,169,195,196,216,219,220,224,225,230,231,233,234,236,237,238,239,302,303,304,339,340,349,350,351,357,360,362,364,365,402,406,408,432,433,437,440,444,445,447,452,455,459,460,464,465,475,477,480,481,494,496,499,503,510,514,515,517,519,520,521,],[-135,-29,-136,-52,69,-304,69,-68,-81,-302,69,69,-82,69,-7,-8,-53,69,69,-304,-69,69,-30,69,-83,69,69,-304,-35,-36,-303,-73,-75,-78,-193,-77,69,-76,-72,-74,-194,-195,69,69,-11,-12,-31,-34,-197,-209,69,-196,69,-210,-212,-213,69,-304,-177,-32,-33,-200,-208,69,-198,-211,69,-304,69,-11,69,69,69,69,-199,69,-204,-203,-201,-304,69,-205,69,-202,-207,69,-206,]),'SHORT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,20,21,22,23,24,26,27,28,29,31,32,34,35,36,37,38,39,40,41,44,47,48,49,51,52,53,54,55,56,57,60,64,65,66,67,69,70,71,72,73,75,76,79,80,83,85,86,87,90,91,93,94,97,104,108,109,120,121,122,123,124,125,126,127,128,129,130,131,133,134,145,168,189,195,196,197,205,207,213,214,215,216,217,218,219,220,224,225,230,233,234,236,237,238,239,251,252,274,276,297,316,318,324,330,339,340,345,346,347,349,350,357,358,362,364,365,366,367,398,432,433,437,440,445,447,480,494,496,499,514,517,519,521,],[15,-64,-62,-216,-100,-107,-112,-60,-104,-113,-97,-94,-304,15,-102,-67,-304,-304,-110,-98,-95,-106,-29,-65,-114,-63,-52,15,-108,-66,-91,-105,-116,-111,-115,-117,15,-109,-103,15,-99,-68,-101,-93,-96,-10,-9,-84,-92,-81,-85,-86,15,-302,15,-130,-131,-61,15,-82,15,15,-161,-53,-147,-148,15,-87,-88,-89,-90,-69,15,15,-141,15,15,-140,-128,15,-137,15,15,-30,15,-70,-83,-162,15,15,15,-35,-36,15,-127,-126,-129,-132,-138,-303,15,15,-73,-75,-78,-193,-77,-76,-72,-74,-194,-195,15,-149,-71,15,15,15,15,15,15,15,-31,-34,-139,-133,-134,-197,-209,-196,15,-210,-212,-213,-150,-151,15,-32,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'TYPEDEF':([0,1,2,3,4,5,6,7,8,9,10,11,12,15,16,18,19,20,21,22,23,24,26,27,28,29,31,32,34,35,36,37,38,39,40,41,44,47,48,49,51,52,53,54,60,64,67,69,71,72,73,76,79,80,85,86,87,90,91,93,94,97,104,109,129,130,131,133,145,189,195,196,197,214,216,219,220,224,225,230,233,234,236,237,238,239,251,252,324,330,339,340,346,347,349,350,357,358,362,364,365,366,367,398,432,433,437,440,445,447,480,494,496,499,514,517,519,521,],[10,-64,-62,-216,-100,-107,-112,-60,-104,-113,-97,-94,10,-102,-67,10,10,-110,-98,-95,-106,-29,-65,-114,-63,-52,10,-108,-66,-91,-105,-116,-111,-115,-117,10,-109,-103,10,-99,-68,-101,-93,-96,-92,-81,10,-302,-130,-131,-61,-82,10,10,-53,-147,-148,10,-87,-88,-89,-90,-69,10,-30,10,-70,-83,10,10,-35,-36,10,-132,-303,-73,-75,-78,-193,-77,-76,-72,-74,-194,-195,10,-149,-71,10,10,-31,-34,-133,-134,-197,-209,-196,10,-210,-212,-213,-150,-151,10,-32,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'LOR':([112,149,150,152,153,154,155,158,159,160,162,163,164,170,172,173,174,175,182,183,216,242,273,275,277,310,314,315,317,319,320,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,401,410,411,412,413,415,456,462,463,465,502,504,513,],[-289,-298,-290,-252,-279,-296,-292,-281,290,-266,-297,-300,-293,-295,-254,-233,-278,-291,-280,-294,-303,-289,-252,-257,-301,-275,-274,-256,-258,-255,-299,-235,-250,-239,-238,-244,-248,-243,-236,-234,-249,-245,-251,-242,-241,-237,-246,-247,-240,-282,-271,-270,-272,-273,-269,-253,-268,-267,-259,-283,-276,-277,]),'PPPRAGMA':([0,1,2,7,16,26,28,31,34,51,64,69,70,73,104,120,123,125,126,127,128,130,131,215,216,217,218,219,220,224,225,230,231,233,234,236,237,238,239,252,345,349,350,351,357,360,362,364,365,437,440,444,445,447,475,477,480,481,494,496,499,510,514,515,517,519,520,521,],[51,-64,-62,-60,-67,-65,-63,51,-66,-68,-81,-302,51,-61,-69,-141,-140,51,-137,51,51,51,-70,-138,-303,51,51,-73,-75,-78,-193,-77,51,-76,-72,-74,-194,-195,51,-71,-139,-197,-209,51,-196,51,-210,-212,-213,-200,-208,51,-198,-211,51,51,-199,51,-204,-203,-201,51,-205,51,-202,-207,51,-206,]),'NE':([112,149,150,152,153,154,155,158,159,160,162,163,164,170,172,173,174,175,182,183,216,242,273,275,277,310,314,315,317,319,320,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,401,410,411,412,413,415,456,462,463,465,502,504,513,],[-289,-298,-290,-252,-279,-296,-292,-281,294,-266,-297,-300,-293,-295,-254,-233,-278,-291,-280,-294,-303,-289,-252,-257,-301,-275,-274,-256,-258,-255,-299,-235,294,-239,-238,-244,294,-243,-236,-234,294,-245,294,-242,-241,-237,-246,294,-240,-282,-271,-270,-272,-273,-269,-253,-268,-267,-259,-283,-276,-277,]),'NOT':([37,39,40,51,64,68,69,81,82,83,104,106,117,118,119,130,134,143,146,156,161,167,168,169,171,176,177,178,179,180,181,186,199,200,203,208,216,219,220,224,225,230,231,233,234,236,237,238,239,241,245,249,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,302,303,304,312,313,316,318,322,323,331,343,348,349,350,351,352,356,357,358,360,361,362,364,365,372,373,375,402,406,408,423,429,430,431,437,440,442,444,445,447,452,454,455,459,460,461,471,472,474,475,476,477,479,480,481,494,496,497,499,501,503,509,510,514,515,517,519,520,521,],[-116,-115,-117,-68,-81,-304,-302,-28,-27,-161,-69,161,-304,-28,161,161,-162,161,-304,161,-264,-263,161,-304,-265,-261,161,161,-262,161,-260,161,161,161,-261,161,-303,-73,-75,-78,-193,-77,161,-76,-72,-74,-194,-195,161,161,161,161,-304,-28,161,161,-228,-225,-224,-222,-221,-226,-223,-219,-229,-227,-220,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,-11,-12,161,161,161,161,-261,161,-304,161,161,-197,-209,161,161,161,-196,161,161,161,-210,-212,-213,161,161,-261,161,-304,-177,-261,-304,-28,161,-200,-208,161,161,-198,-211,161,161,-304,161,-11,161,161,161,-261,161,161,161,161,-199,161,-204,-203,161,-201,161,-304,161,161,-205,161,-202,-207,161,-206,]),'RSHIFTEQUAL':([112,149,150,152,153,154,155,158,160,162,163,164,170,172,174,175,182,183,216,242,273,275,277,310,314,315,317,319,320,401,410,411,412,413,415,456,462,463,465,502,504,513,],[-289,-298,-290,271,-279,-296,-292,-281,-266,-297,-300,-293,-295,-254,-278,-291,-280,-294,-303,-289,-252,-257,-301,-275,-274,-256,-258,-255,-299,-282,-271,-270,-272,-273,-269,-253,-268,-267,-259,-283,-276,-277,]),'LSHIFTEQUAL':([112,149,150,152,153,154,155,158,160,162,163,164,170,172,174,175,182,183,216,242,273,275,277,310,314,315,317,319,320,401,410,411,412,413,415,456,462,463,465,502,504,513,],[-289,-298,-290,267,-279,-296,-292,-281,-266,-297,-300,-293,-295,-254,-278,-291,-280,-294,-303,-289,-252,-257,-301,-275,-274,-256,-258,-255,-299,-282,-271,-270,-272,-273,-269,-253,-268,-267,-259,-283,-276,-277,]),'VOLATILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,15,16,18,19,20,21,22,23,24,26,27,28,29,31,32,34,35,36,37,38,39,40,41,42,44,47,48,49,51,52,53,54,60,64,67,68,69,70,71,72,73,76,79,80,81,83,85,86,87,90,91,93,94,97,104,109,117,118,120,121,122,123,124,125,126,127,128,129,130,131,133,134,145,146,168,189,195,196,197,205,207,213,214,215,216,217,218,219,220,224,225,230,233,234,236,237,238,239,251,252,258,259,274,276,297,316,318,324,330,331,339,340,345,346,347,349,350,357,358,362,364,365,366,367,398,429,430,432,433,437,440,445,447,480,494,496,499,514,517,519,521,],[40,-64,-62,-216,-100,-107,-112,-60,-104,-113,-97,-94,40,-102,-67,40,40,-110,-98,-95,-106,-29,-65,-114,-63,-52,40,-108,-66,-91,-105,-116,-111,-115,-117,40,40,-109,-103,40,-99,-68,-101,-93,-96,-92,-81,40,40,-302,40,-130,-131,-61,-82,40,40,40,-161,-53,-147,-148,40,-87,-88,-89,-90,-69,40,40,40,-141,40,40,-140,-128,40,-137,40,40,-30,40,-70,-83,-162,40,40,40,40,-35,-36,40,-127,-126,-129,-132,-138,-303,40,40,-73,-75,-78,-193,-77,-76,-72,-74,-194,-195,40,-149,-71,40,40,40,40,40,40,40,40,40,40,-31,-34,-139,-133,-134,-197,-209,-196,40,-210,-212,-213,-150,-151,40,40,40,-32,-33,-200,-208,-198,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'LAND':([112,149,150,152,153,154,155,158,159,160,162,163,164,170,172,173,174,175,182,183,216,242,273,275,277,310,314,315,317,319,320,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,401,410,411,412,413,415,456,462,463,465,502,504,513,],[-289,-298,-290,-252,-279,-296,-292,-281,279,-266,-297,-300,-293,-295,-254,-233,-278,-291,-280,-294,-303,-289,-252,-257,-301,-275,-274,-256,-258,-255,-299,-235,-250,-239,-238,-244,-248,-243,-236,-234,-249,-245,279,-242,-241,-237,-246,-247,-240,-282,-271,-270,-272,-273,-269,-253,-268,-267,-259,-283,-276,-277,]),'RSHIFT':([112,149,150,152,153,154,155,158,159,160,162,163,164,170,172,173,174,175,182,183,216,242,273,275,277,310,314,315,317,319,320,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,401,410,411,412,413,415,456,462,463,465,502,504,513,],[-289,-298,-290,-252,-279,-296,-292,-281,280,-266,-297,-300,-293,-295,-254,-233,-278,-291,-280,-294,-303,-289,-252,-257,-301,-275,-274,-256,-258,-255,-299,-235,280,-239,-238,280,280,280,-236,-234,280,280,280,280,280,-237,280,280,-240,-282,-271,-270,-272,-273,-269,-253,-268,-267,-259,-283,-276,-277,]),'COLON':([3,4,5,6,8,9,15,20,23,24,27,29,32,36,37,38,39,40,44,47,49,52,71,72,85,86,87,89,92,101,112,121,124,129,132,147,149,150,151,152,153,154,155,158,159,160,162,163,164,170,172,173,174,175,182,183,195,196,205,207,209,213,214,216,226,227,242,251,255,273,275,277,310,314,315,317,319,320,339,340,341,344,346,347,359,366,367,370,371,376,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,401,410,411,412,413,415,432,433,436,450,451,456,462,463,465,482,483,486,502,504,513,],[-216,-100,-107,-112,-104,-113,-102,-110,-106,-29,-114,-52,-108,-105,-116,-111,-115,-117,-109,-103,-99,-101,-130,-131,-53,-147,-148,-37,-158,-54,-289,208,-128,-30,-157,-55,-298,-290,-217,-252,-279,-296,-292,-281,-231,-266,-297,-300,-293,-295,-254,-233,-278,-291,-280,-294,-35,-36,-127,-126,343,-129,-132,-303,-214,351,360,-149,-38,-252,-257,-301,-275,-274,-256,-258,-255,-299,-31,-34,-230,208,-133,-134,444,-150,-151,-43,-44,-218,-235,-250,-239,-238,-244,-248,-243,-236,-234,454,-249,-245,-251,-242,-241,-237,-246,-247,-240,-282,-271,-270,-272,-273,-269,-32,-33,-215,-39,-42,-253,-268,-267,-259,-40,-41,-232,-283,-276,-277,]),'RPAREN':([3,4,5,6,8,9,10,11,15,20,21,22,23,24,27,29,32,35,36,37,38,39,40,42,44,47,49,52,53,54,60,67,71,72,74,81,82,83,84,85,86,87,89,91,93,94,97,101,107,109,110,111,112,113,114,115,116,124,129,134,135,144,145,147,149,150,151,152,153,154,155,158,159,160,162,163,164,170,172,173,174,175,182,183,184,185,187,188,189,190,191,192,193,194,195,196,205,207,213,214,216,221,226,251,255,256,257,273,275,277,297,298,299,310,312,314,315,317,319,320,324,325,326,327,328,329,330,332,333,334,335,336,339,340,346,347,353,366,367,370,371,376,377,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399,400,401,410,411,412,413,414,415,416,418,419,420,421,424,425,426,427,428,432,433,436,438,441,446,450,451,456,462,463,465,466,467,468,469,470,482,483,484,485,486,489,492,493,495,497,502,504,505,506,508,509,511,513,516,518,],[-216,-100,-107,-112,-104,-113,-97,-94,-102,-110,-98,-95,-106,-29,-114,-52,-108,-91,-105,-116,-111,-115,-117,-304,-109,-103,-99,-101,-93,-96,-92,-304,-130,-131,129,-28,-27,-161,-159,-53,-147,-148,-37,-87,-88,-89,-90,-54,-170,-304,195,196,-289,-163,-18,-165,-17,-128,-30,-162,-160,255,-304,-55,-298,-290,-217,-252,-279,-296,-292,-281,-231,-266,-297,-300,-293,-295,-254,-233,-278,-291,-280,-294,-45,-167,-185,-2,-304,-168,-56,-169,-183,-1,-35,-36,-127,-126,-129,-132,-303,-14,-214,-149,-38,370,371,-252,-257,-301,-304,401,402,-275,415,-274,-256,-258,-255,-299,-304,-24,425,-183,-23,426,-304,-57,-184,-164,-166,-171,-31,-34,-133,-134,-13,-150,-151,-43,-44,-218,452,-235,-250,-239,-238,-244,-248,-243,-236,-234,-249,-245,-251,-242,-241,-237,-246,-247,-240,-304,-182,-183,-282,-271,-270,-272,-273,-287,-269,462,464,465,-188,-190,468,-186,-192,469,470,-32,-33,-215,475,477,481,-39,-42,-253,-268,-267,-259,-187,-189,-191,-50,-51,-40,-41,502,-284,-232,-288,-46,-49,507,-304,-283,-276,-47,-48,515,-304,-285,-277,520,-286,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'pp_directive':([0,31,],[1,1,]),'expression_statement':([130,231,239,351,360,444,475,477,481,510,515,520,],[219,219,219,219,219,219,219,219,219,219,219,219,]),'designation_opt':([169,406,455,503,],[302,459,302,459,]),'specifier_qualifier_list':([70,125,127,128,168,217,218,274,276,316,318,],[121,121,121,121,297,121,121,297,297,297,297,]),'selection_statement':([130,231,239,351,360,444,475,477,481,510,515,520,],[220,220,220,220,220,220,220,220,220,220,220,220,]),'designation':([169,406,455,503,],[304,304,304,304,]),'identifier':([67,106,119,130,143,145,156,168,177,178,180,186,198,199,200,208,231,239,241,245,249,260,261,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,301,302,312,313,316,318,323,330,343,348,351,352,356,358,360,361,372,373,402,431,442,444,452,453,454,459,461,471,472,475,476,477,479,481,497,500,501,509,510,515,520,],[107,174,174,174,174,107,174,174,174,174,174,174,336,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,404,174,174,174,174,174,174,107,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,485,174,174,174,174,174,174,174,174,174,174,174,511,174,174,174,174,174,]),'external_declaration':([0,31,],[7,73,]),'translation_unit_or_empty':([0,],[50,]),'direct_typeid_declarator':([48,79,100,102,105,121,142,344,],[101,101,101,147,101,101,101,101,]),'designator':([169,308,406,455,503,],[307,409,307,307,307,]),'block_item':([130,239,],[238,357,]),'assignment_operator':([152,],[261,]),'direct_abstract_declarator':([109,189,193,297,327,398,400,],[187,187,333,187,333,187,333,]),'storage_class_specifier':([0,12,18,19,31,41,48,67,79,80,90,109,130,145,189,197,239,324,330,358,398,],[18,18,18,18,18,18,93,18,93,18,18,93,18,18,18,18,18,18,18,18,18,]),'offsetof_member_designator':([453,],[484,]),'expression':([130,168,231,239,245,274,287,313,316,318,351,352,356,358,360,361,442,444,475,476,477,479,481,497,501,509,510,515,520,],[221,298,221,221,363,298,388,417,298,298,221,438,441,221,221,446,221,221,221,495,221,221,221,221,512,221,221,221,221,]),'block_item_list_opt':([130,],[222,]),'abstract_declarator':([109,189,297,398,],[188,326,188,326,]),'decl_body':([0,31,41,80,90,130,239,358,],[14,14,14,14,14,14,14,14,]),'function_definition':([0,31,],[2,2,]),'initializer':([106,143,302,459,],[165,254,405,488,]),'init_declarator':([48,79,105,142,],[96,96,148,253,]),'declaration':([0,31,41,80,90,130,239,358,],[28,28,76,133,76,225,225,442,]),'assignment_expression':([106,119,130,143,168,186,199,200,231,239,245,260,261,274,287,302,312,313,316,318,323,348,351,352,356,358,360,361,372,373,431,442,444,459,461,471,472,475,476,477,479,481,497,501,509,510,515,520,],[166,202,226,166,226,202,337,338,226,226,226,202,376,226,226,166,414,226,226,226,202,436,226,226,226,226,226,226,448,449,202,226,226,166,489,490,491,226,226,226,226,226,226,226,226,226,226,226,]),'init_declarator_list_opt':([48,79,],[99,99,]),'struct_declaration':([70,125,127,128,217,218,],[126,215,126,126,215,215,]),'postfix_expression':([106,119,130,143,156,168,177,178,180,186,199,200,208,231,239,241,245,249,260,261,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,302,312,313,316,318,323,343,348,351,352,356,358,360,361,372,373,402,431,442,444,452,454,459,461,471,472,475,476,477,479,481,497,501,509,510,515,520,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'cast_expression':([106,119,130,143,156,168,186,199,200,208,231,239,241,245,249,260,261,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,302,312,313,316,318,323,343,348,351,352,356,358,360,361,372,373,402,431,442,444,452,454,459,461,471,472,475,476,477,479,481,497,501,509,510,515,520,],[173,173,173,173,275,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,456,173,173,173,456,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,]),'argument_expression_list':([312,],[416,]),'identifier_list':([67,145,330,],[114,114,114,]),'init_declarator_list':([48,79,],[95,95,]),'direct_typeid_noparen_declarator':([109,193,],[191,332,]),'struct_declarator_list':([121,],[210,]),'pointer':([0,13,31,33,48,75,79,84,100,105,109,121,142,189,297,344,398,],[43,43,43,43,102,43,102,135,102,102,193,102,102,327,400,102,400,]),'empty':([0,12,13,18,19,41,42,48,67,68,75,79,90,109,117,119,121,130,145,146,169,186,189,231,239,258,260,297,323,324,330,331,351,358,360,398,406,429,431,442,444,455,475,477,479,481,497,503,509,510,515,520,],[46,56,62,56,56,78,82,103,116,82,62,103,78,194,82,204,211,229,116,82,303,204,328,353,353,82,204,194,204,328,116,82,353,353,353,328,460,82,204,353,353,460,353,353,353,353,353,460,353,353,353,353,]),'parameter_type_list_opt':([189,324,398,],[329,424,329,]),'assignment_expression_opt':([119,186,260,323,431,],[201,321,374,422,473,]),'type_name':([168,274,276,316,318,],[299,377,378,418,419,]),'jump_statement':([130,231,239,351,360,444,475,477,481,510,515,520,],[230,230,230,230,230,230,230,230,230,230,230,230,]),'constant_expression':([208,241,249,300,343,],[342,359,368,403,434,]),'constant':([106,119,130,143,156,168,177,178,180,186,199,200,208,231,239,241,245,249,260,261,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,302,312,313,316,318,323,343,348,351,352,356,358,360,361,372,373,402,431,442,444,452,454,459,461,471,472,475,476,477,479,481,497,501,509,510,515,520,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'id_declarator':([0,13,31,33,48,75,79,100,105,109,121,142,189,344,],[41,61,41,74,90,61,132,74,132,185,132,132,74,132,]),'unified_wstring_literal':([106,119,130,143,156,168,177,178,180,186,199,200,208,231,239,241,245,249,260,261,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,302,312,313,316,318,323,343,348,351,352,356,358,360,361,372,373,402,431,442,444,452,454,459,461,471,472,475,476,477,479,481,497,501,509,510,515,520,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'unary_expression':([106,119,130,143,156,168,177,178,180,186,199,200,208,231,239,241,245,249,260,261,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,302,312,313,316,318,323,343,348,351,352,356,358,360,361,372,373,402,431,442,444,452,454,459,461,471,472,475,476,477,479,481,497,501,509,510,515,520,],[152,152,152,152,273,152,315,317,319,152,152,152,273,152,152,273,152,273,152,152,152,273,273,273,273,273,273,273,273,273,152,273,273,273,273,273,273,273,273,273,273,152,152,152,152,152,152,273,152,152,152,152,152,152,152,152,152,273,152,152,152,273,273,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'translation_unit':([0,],[31,]),'brace_close':([125,140,217,218,222,247,248,306,406,487,503,],[214,251,346,347,349,366,367,407,458,504,513,]),'conditional_expression':([106,119,130,143,168,186,199,200,208,231,239,241,245,249,260,261,274,287,300,302,312,313,316,318,323,343,348,351,352,356,358,360,361,372,373,431,442,444,454,459,461,471,472,475,476,477,479,481,497,501,509,510,515,520,],[151,151,151,151,151,151,151,151,341,151,151,341,151,341,151,151,151,151,341,151,151,151,151,151,151,341,151,151,151,151,151,151,151,151,151,151,151,151,486,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'labeled_statement':([130,231,239,351,360,444,475,477,481,510,515,520,],[234,234,234,234,234,234,234,234,234,234,234,234,]),'struct_or_union_specifier':([0,13,31,41,67,70,75,80,90,108,122,125,127,128,130,145,168,189,197,217,218,239,274,276,316,318,324,330,358,398,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'initializer_list':([169,455,],[305,487,]),'compound_statement':([77,130,141,231,239,351,360,444,475,477,481,510,515,520,],[131,236,252,236,236,236,236,236,236,236,236,236,236,236,]),'type_qualifier':([0,12,18,19,31,41,42,48,67,68,70,79,80,81,90,109,117,118,121,122,125,127,128,130,145,146,168,189,197,217,218,239,258,259,274,276,297,316,318,324,330,331,358,398,429,430,],[12,12,12,12,12,12,83,91,12,83,83,91,12,134,12,91,83,134,205,134,83,83,83,12,12,83,83,12,12,83,83,12,83,134,83,83,205,83,83,12,12,83,12,12,83,134,]),'declaration_specifiers_no_type':([0,12,18,19,31,41,67,80,90,130,145,189,197,239,324,330,358,398,],[13,55,55,55,13,75,108,75,75,75,108,108,108,75,108,108,75,108,]),'id_init_declarator':([13,75,],[58,58,]),'typeid_declarator':([48,79,100,105,121,142,344,],[92,92,144,92,92,92,92,]),'struct_declarator':([121,344,],[206,435,]),'struct_declarator_list_opt':([121,],[212,]),'enumerator':([88,136,137,250,],[139,139,139,369,]),'statement':([130,231,239,351,360,444,475,477,481,510,515,520,],[237,354,237,437,445,480,494,496,499,517,519,521,]),'function_specifier':([0,12,18,19,31,41,48,67,79,80,90,109,130,145,189,197,239,324,330,358,398,],[19,19,19,19,19,19,94,19,94,19,19,94,19,19,19,19,19,19,19,19,19,]),'binary_expression':([106,119,130,143,168,186,199,200,208,231,239,241,245,249,260,261,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,302,312,313,316,318,323,343,348,351,352,356,358,360,361,372,373,431,442,444,454,459,461,471,472,475,476,477,479,481,497,501,509,510,515,520,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,379,380,381,382,383,384,385,386,387,159,389,390,391,392,393,394,395,396,397,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'pppragma_directive':([0,31,70,125,127,128,130,217,218,231,239,351,360,444,475,477,481,510,515,520,],[26,26,120,120,120,120,224,120,120,224,224,224,224,224,224,224,224,224,224,224,]),'primary_expression':([106,119,130,143,156,168,177,178,180,186,199,200,208,231,239,241,245,249,260,261,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,302,312,313,316,318,323,343,348,351,352,356,358,360,361,372,373,402,431,442,444,452,454,459,461,471,472,475,476,477,479,481,497,501,509,510,515,520,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'declarator':([48,79,105,121,142,344,],[98,98,98,209,98,209,]),'enum_specifier':([0,13,31,41,67,70,75,80,90,108,122,125,127,128,130,145,168,189,197,217,218,239,274,276,316,318,324,330,358,398,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'unary_operator':([106,119,130,143,156,168,177,178,180,186,199,200,208,231,239,241,245,249,260,261,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,302,312,313,316,318,323,343,348,351,352,356,358,360,361,372,373,402,431,442,444,452,454,459,461,471,472,475,476,477,479,481,497,501,509,510,515,520,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'identifier_list_opt':([67,145,330,],[111,257,428,]),'type_qualifier_list_opt':([42,68,117,146,258,331,429,],[84,119,199,260,372,431,471,]),'struct_declaration_list':([70,127,128,],[125,217,218,]),'block_item_list':([130,],[239,]),'parameter_type_list':([67,145,189,324,330,398,],[110,256,325,325,427,325,]),'type_specifier_no_typeid':([0,13,31,41,48,67,70,75,79,80,90,108,109,121,122,125,127,128,130,145,168,189,197,217,218,239,274,276,297,316,318,324,330,358,398,],[27,27,27,27,97,27,27,27,97,27,27,27,97,207,27,27,27,27,27,27,27,27,27,27,27,27,27,27,207,27,27,27,27,27,27,]),'typedef_name':([0,13,31,41,67,70,75,80,90,108,122,125,127,128,130,145,168,189,197,217,218,239,274,276,316,318,324,330,358,398,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'declaration_specifiers_no_type_opt':([12,18,19,],[57,65,66,]),'direct_id_declarator':([0,13,31,33,43,48,75,79,100,102,105,109,121,142,189,193,327,344,],[29,29,29,29,85,29,29,29,29,85,29,29,29,29,29,85,85,29,]),'struct_or_union':([0,13,31,41,67,70,75,80,90,108,122,125,127,128,130,145,168,189,197,217,218,239,274,276,316,318,324,330,358,398,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'brace_open':([30,45,71,72,77,86,87,106,130,141,143,231,239,302,351,360,402,444,452,459,464,465,475,477,481,510,515,520,],[70,88,127,128,130,136,137,169,130,130,169,130,130,169,130,130,455,130,455,169,455,455,130,130,130,130,130,130,]),'id_init_declarator_list':([13,75,],[59,59,]),'parameter_list':([67,145,189,324,330,398,],[113,113,113,113,113,113,]),'type_specifier':([0,13,31,41,67,70,75,80,90,108,122,125,127,128,130,145,168,189,197,217,218,239,274,276,316,318,324,330,358,398,],[35,60,35,35,35,124,60,35,35,60,213,124,124,124,35,35,124,35,35,124,124,35,124,124,124,124,35,35,35,35,]),'initializer_list_opt':([169,],[306,]),'declaration_list_opt':([41,90,],[77,141,]),'declaration_specifiers':([0,31,41,67,80,90,130,145,189,197,239,324,330,358,398,],[48,48,79,109,79,79,79,109,109,109,79,109,109,79,109,]),'typeid_noparen_declarator':([109,],[190,]),'enumerator_list':([88,136,137,],[140,247,248,]),'abstract_declarator_opt':([109,297,],[192,399,]),'parameter_declaration':([67,145,189,197,324,330,398,],[115,115,115,335,115,115,115,]),'iteration_statement':([130,231,239,351,360,444,475,477,481,510,515,520,],[233,233,233,233,233,233,233,233,233,233,233,233,]),'id_init_declarator_list_opt':([13,75,],[63,63,]),'declaration_list':([41,90,],[80,80,]),'type_qualifier_list':([42,68,70,117,125,127,128,146,168,217,218,258,274,276,316,318,331,429,],[81,118,122,81,122,122,122,259,122,122,122,81,122,122,122,122,430,81,]),'unified_string_literal':([106,119,130,143,156,168,177,178,180,186,199,200,208,231,239,241,245,249,260,261,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,300,302,312,313,316,318,323,343,348,351,352,356,358,360,361,372,373,402,431,442,444,452,454,459,461,471,472,475,476,477,479,481,497,501,509,510,515,520,],[182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,]),'designator_list':([169,406,455,503,],[308,308,308,308,]),'expression_opt':([130,231,239,351,358,360,442,444,475,477,479,481,497,509,510,515,520,],[246,246,246,246,443,246,478,246,246,246,498,246,508,516,246,246,246,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
