
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'VOID':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,62,63,65,72,74,76,77,78,80,83,84,85,86,87,88,90,91,92,93,96,97,103,109,115,123,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[2,-68,-99,-304,-111,-110,2,-94,-65,-66,-114,-304,-52,-113,-108,-62,-304,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,2,-93,-216,-97,-109,-95,2,-115,-98,2,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,2,-85,2,-81,-86,-161,-130,2,-131,-302,-61,-147,-148,-53,2,2,-82,2,-92,2,2,2,-162,2,-141,-140,2,2,2,-128,-137,2,-83,2,-70,-30,2,-71,2,-35,2,-36,2,-127,-126,-303,-132,-138,-129,2,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,2,2,2,2,2,2,-31,-34,2,2,-133,-139,-134,-150,-151,-209,2,-212,-210,-197,-213,-196,2,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'WCHAR_CONST':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,126,143,147,149,153,154,155,161,163,164,166,171,173,179,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,251,252,256,258,263,265,268,271,272,273,274,275,276,277,278,279,280,281,282,283,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,502,504,508,509,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,170,-304,170,-304,-28,-162,170,170,170,170,-260,-262,-261,170,170,-304,-265,-263,170,-264,-28,-304,170,-261,170,170,170,170,-303,170,-73,-193,-72,170,170,-76,-78,170,-75,-194,-74,-195,-77,170,170,170,170,170,170,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,170,-11,170,-12,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,-261,-261,-304,170,170,-209,170,-212,170,-210,170,170,-197,170,-213,170,170,-196,-304,-177,170,170,-304,-28,-261,170,170,-211,-198,-208,-200,170,170,-11,170,170,-304,-261,170,170,170,-199,170,170,170,170,170,-201,-203,-204,170,-304,170,170,170,-202,-205,-207,170,-206,]),'MOD':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,299,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,299,299,-236,299,299,299,299,299,-235,299,299,299,299,299,299,299,-234,299,-282,-267,-268,-259,-253,-283,-276,-277,]),'OREQUAL':([118,150,151,152,156,158,159,160,162,165,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,279,-292,-300,-293,-280,-294,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-282,-267,-268,-259,-253,-283,-276,-277,]),'SEMI':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,17,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,74,77,78,83,84,85,86,87,88,90,91,92,97,99,100,101,102,103,104,107,118,127,128,129,130,131,133,134,135,141,143,144,145,148,150,151,152,156,157,158,159,160,162,165,167,168,169,170,172,174,175,177,178,180,181,182,189,190,208,210,212,213,214,215,216,217,218,220,221,222,223,224,225,228,231,232,233,234,235,238,239,241,242,243,244,245,246,247,248,251,252,254,256,258,259,260,261,262,264,266,270,284,285,287,320,325,326,327,328,347,348,350,351,353,354,357,358,359,361,362,365,366,368,369,371,372,373,375,378,379,382,383,384,386,390,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,422,423,424,425,438,439,440,441,442,443,446,447,449,450,453,454,457,460,465,466,467,477,478,479,480,482,483,486,495,496,498,499,501,503,509,510,513,514,516,517,519,520,521,],[10,-68,-99,-304,-111,-110,-304,-94,-65,-66,-114,-304,-52,-113,-108,77,-62,-304,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,10,-93,-216,-97,-109,-95,-115,-98,-304,-67,-91,-107,-116,-69,-84,-9,-10,-87,-20,-118,-90,-88,-19,-89,-120,-79,-54,-158,-37,-157,-85,-81,-86,-130,129,-131,-302,-61,-147,-148,-53,-304,-304,-122,-16,-80,-15,-92,-124,-55,-289,129,-141,-140,-304,129,-128,-137,129,-157,-304,-70,-30,-119,-296,-254,-290,-252,-217,-292,-300,-293,-280,-294,-172,-233,-231,-297,-295,-298,-121,-291,-279,-266,-281,-278,-71,-38,-35,-36,129,348,-127,-142,-126,-144,-25,-26,-303,-132,-138,-129,129,-149,358,-73,-214,-193,-72,361,-76,-13,-78,-304,366,-14,-75,-194,-289,-74,-195,372,-77,-304,-123,-125,-252,-257,-274,-275,-256,-299,-258,-255,-301,-43,-44,-31,-34,-133,-139,-146,-230,-134,-150,-151,-209,-304,-212,443,-13,-210,-304,-197,449,-213,-304,-196,-273,-272,-269,-271,-270,-218,-173,-245,-244,-236,-249,-241,-242,-248,-247,-235,-237,-240,-243,-246,-239,-250,-251,-234,-238,-282,-39,-42,-32,-33,-145,-143,-304,478,-304,-211,-215,-198,-208,-200,-267,-268,-259,-174,-253,-41,-40,494,-304,-199,-304,-304,-304,-232,508,-201,-203,-204,-283,-276,-304,517,-277,-304,-202,-205,-207,-304,-206,]),'PPHASH':([0,1,8,10,18,20,31,34,37,51,55,77,87,144,189,221,369,],[51,-68,-65,-66,-62,-64,-63,-60,51,-67,-69,-81,-61,-70,-71,-303,-197,]),'RESTRICT':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,51,52,53,54,55,59,62,63,65,72,75,76,77,80,82,83,84,85,86,87,88,90,91,92,93,96,103,108,109,113,114,115,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,184,185,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,335,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,429,430,443,447,449,450,479,496,498,499,516,517,519,521,],[54,-68,-99,54,-111,-110,54,-94,-65,-66,-114,54,-52,-113,-108,-62,54,-64,-103,-29,-105,54,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,54,-93,-216,-97,-109,-95,54,-115,-98,-67,-91,-107,-116,-69,-87,-90,-88,-89,54,54,54,-81,-161,54,-130,54,-131,-302,-61,-147,-148,-53,54,54,-82,-92,54,54,54,54,54,-162,54,-141,-140,54,54,54,-128,-137,54,-83,54,-70,-30,54,54,54,-71,54,-35,54,-36,54,-127,-126,-303,-132,-138,-129,54,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,54,54,54,54,54,54,-31,-34,54,54,54,-133,-139,-134,-150,-151,-209,54,-212,-210,-197,-213,-196,54,-32,-33,54,54,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'LT':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,301,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,301,-244,-236,301,-241,-242,301,301,-235,-237,-240,-243,301,-239,301,301,-234,-238,-282,-267,-268,-259,-253,-283,-276,-277,]),'MINUSMINUS':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,118,126,143,147,149,150,151,152,153,154,155,158,159,160,161,162,163,164,165,166,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,248,251,252,256,258,263,264,265,266,268,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,320,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,378,379,382,383,384,389,393,415,419,428,429,430,436,440,442,443,447,449,450,452,453,454,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,501,502,503,504,508,509,513,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,153,-304,153,-304,-28,-289,-162,153,153,153,-296,266,-290,153,-260,-262,-292,-300,-293,-261,-280,153,153,-294,-304,-297,-265,-295,-263,-298,-291,-279,153,-266,-281,-278,-264,-28,-304,153,-261,153,153,153,153,-303,153,-73,-193,-72,153,153,-76,-78,153,-75,-194,-289,-74,-195,-77,153,153,-274,153,-275,153,153,153,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,-299,153,-11,153,-12,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,-301,153,153,-261,-261,-304,153,153,-209,153,-212,153,-210,153,153,-197,153,-213,153,153,-196,-273,-272,-269,-271,-270,-304,-177,153,-282,153,-304,-28,-261,153,153,-211,-198,-208,-200,153,-267,-268,153,-11,153,153,-304,-261,153,153,153,-199,153,153,153,153,153,-201,-203,-204,-283,153,-276,-304,153,153,-277,153,-202,-205,-207,153,-206,]),'GT':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,298,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,298,-244,-236,298,-241,-242,298,298,-235,-237,-240,-243,298,-239,298,298,-234,-238,-282,-267,-268,-259,-253,-283,-276,-277,]),'PERIOD':([86,118,150,151,152,158,159,160,162,165,166,170,172,174,177,178,180,181,182,221,248,264,266,284,292,296,320,378,379,382,383,384,389,392,394,419,453,454,461,464,487,488,501,503,504,511,513,518,],[-302,-289,-296,269,-290,-292,-300,-293,-280,-294,295,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-274,-275,-299,-178,295,-301,-273,-272,-269,-271,-270,295,-181,-179,-282,-267,-268,-180,295,-284,500,-283,-276,295,-285,-277,-286,]),'SIGNED':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,62,63,65,72,74,76,77,78,80,83,84,85,86,87,88,90,91,92,93,96,97,103,109,115,123,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[15,-68,-99,-304,-111,-110,15,-94,-65,-66,-114,-304,-52,-113,-108,-62,-304,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,15,-93,-216,-97,-109,-95,15,-115,-98,15,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,15,-85,15,-81,-86,-161,-130,15,-131,-302,-61,-147,-148,-53,15,15,-82,15,-92,15,15,15,-162,15,-141,-140,15,15,15,-128,-137,15,-83,15,-70,-30,15,-71,15,-35,15,-36,15,-127,-126,-303,-132,-138,-129,15,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,15,15,15,15,15,15,-31,-34,15,15,-133,-139,-134,-150,-151,-209,15,-212,-210,-197,-213,-196,15,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'DIVIDE':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,305,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,305,305,-236,305,305,305,305,305,-235,305,305,305,305,305,305,305,-234,305,-282,-267,-268,-259,-253,-283,-276,-277,]),'BREAK':([1,55,77,86,143,221,232,234,235,239,242,243,246,247,251,252,256,258,358,361,366,368,369,372,373,375,442,443,447,449,450,479,480,482,483,496,498,499,509,514,516,517,519,520,521,],[-68,-69,-81,-302,231,-303,-73,-193,-72,-76,-78,231,-75,-194,-74,-195,-77,231,-209,-212,-210,231,-197,-213,231,-196,231,-211,-198,-208,-200,-199,231,231,231,-201,-203,-204,231,231,-202,-205,-207,231,-206,]),'COMMA':([2,4,5,7,11,13,14,15,21,22,23,24,25,26,29,30,32,33,35,36,41,42,43,44,45,47,49,52,53,54,59,60,61,62,63,65,66,69,70,71,72,79,80,81,82,83,85,88,90,91,99,100,103,104,107,115,118,119,121,122,124,125,126,133,137,138,139,141,145,148,150,151,152,156,157,158,159,160,162,165,167,168,169,170,172,174,175,177,178,180,181,182,190,197,198,199,200,202,203,204,205,207,208,210,214,215,216,217,220,221,222,224,226,228,229,230,233,245,248,259,260,261,262,264,266,270,284,285,287,290,318,319,320,325,326,327,328,333,334,345,346,347,350,351,353,354,355,356,357,362,377,378,379,380,381,382,383,384,386,388,390,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,416,418,419,422,423,424,425,426,427,433,434,438,439,444,446,448,451,453,454,457,460,465,466,467,472,473,474,475,476,484,485,486,489,490,491,497,501,503,505,506,512,513,],[-99,-111,-110,-94,-114,-52,-113,-108,-103,-29,-105,-304,-106,-102,-104,-100,-112,-96,-117,-101,-93,-216,-97,-109,-95,-115,-98,-91,-107,-116,-87,105,-118,-90,-88,-89,-120,-54,-158,-37,-157,-27,-161,-159,-28,-130,-131,-147,-148,-53,-122,146,-92,-124,-55,-304,-289,209,211,-165,-170,-160,-162,-128,-155,-152,229,-157,-30,-119,-296,-254,-290,-252,-217,-292,-300,-293,-280,-294,-172,-233,-231,-297,-295,-298,-121,-291,-279,-266,-281,-278,-38,-169,-1,-2,-168,-183,-45,-167,-56,-185,-35,-36,-127,-142,-126,-144,352,-303,-132,-129,229,-149,-153,229,-214,367,-289,-123,-125,-252,-257,-274,-275,-256,-299,-258,-255,389,-304,367,-301,-43,-44,-31,-34,-57,-184,-166,-171,-133,-146,-230,-134,-150,-156,-154,-151,367,367,-273,-272,455,-287,-269,-271,-270,-218,-175,-173,-245,-244,-236,-249,-241,-242,-248,-247,-235,-237,-240,-243,-246,-239,-250,-251,-234,-238,367,463,-182,-183,-282,-39,-42,-32,-33,-188,-190,-192,-186,-145,-143,367,-215,367,367,-267,-268,-259,-174,-253,-41,-40,-50,-51,-187,-189,-191,-288,-176,-232,504,-46,-49,367,-283,-276,-47,-48,367,-277,]),'NE':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,309,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-245,-244,-236,309,-241,-242,309,309,-235,-237,-240,-243,-246,-239,309,309,-234,-238,-282,-267,-268,-259,-253,-283,-276,-277,]),'HEX_FLOAT_CONST':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,126,143,147,149,153,154,155,161,163,164,166,171,173,179,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,251,252,256,258,263,265,268,271,272,273,274,275,276,277,278,279,280,281,282,283,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,502,504,508,509,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,172,-304,172,-304,-28,-162,172,172,172,172,-260,-262,-261,172,172,-304,-265,-263,172,-264,-28,-304,172,-261,172,172,172,172,-303,172,-73,-193,-72,172,172,-76,-78,172,-75,-194,-74,-195,-77,172,172,172,172,172,172,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,172,-11,172,-12,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-261,-261,-304,172,172,-209,172,-212,172,-210,172,172,-197,172,-213,172,172,-196,-304,-177,172,172,-304,-28,-261,172,172,-211,-198,-208,-200,172,172,-11,172,172,-304,-261,172,172,172,-199,172,172,172,172,172,-201,-203,-204,172,-304,172,172,172,-202,-205,-207,172,-206,]),'TIMES':([0,1,2,3,4,5,6,7,8,10,11,12,14,15,18,19,20,21,23,24,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,65,73,74,75,77,78,79,80,81,82,83,85,86,87,88,90,92,97,103,105,106,108,112,113,114,115,118,126,130,133,143,144,146,147,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,189,192,195,196,201,206,214,216,219,221,222,224,227,228,232,234,235,237,238,239,242,243,246,247,248,251,252,256,258,261,262,263,264,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,318,320,321,322,324,332,335,342,347,349,352,353,354,357,358,359,361,363,366,367,368,369,370,372,373,374,375,378,379,382,383,384,389,393,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,415,417,419,428,429,430,436,440,442,443,447,449,450,452,453,454,455,457,458,459,462,464,465,469,470,471,478,479,480,481,482,483,494,496,498,499,501,502,503,504,508,509,513,514,516,517,519,520,521,],[24,-68,-99,-304,-111,-110,24,-94,-65,-66,-114,-304,-113,-108,-62,-304,-64,-103,-105,-304,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,24,-93,-216,-97,-109,-95,-115,24,-98,24,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,24,-85,-304,-81,-86,-27,-161,24,-28,-130,-131,-302,-61,-147,-148,24,24,-92,24,161,-304,192,-304,-28,24,-289,-162,24,-128,161,-70,24,161,161,-296,-254,-290,161,-260,-262,-252,-292,-300,-293,-261,-280,161,161,-294,-304,-233,313,-297,-265,-295,-263,-298,-291,-279,161,-266,-281,-278,-264,-28,-304,324,-71,-261,161,161,332,24,-127,-126,161,-303,-132,-129,161,-149,-73,-193,-72,161,161,-76,-78,161,-75,-194,-289,-74,-195,-77,161,-252,-257,161,-274,161,-275,161,-256,161,161,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,-299,-258,161,-255,-11,161,-12,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,24,-301,161,161,-261,-261,-304,436,-133,161,24,-134,-150,-151,-209,161,-212,161,-210,161,161,-197,161,-213,161,161,-196,-273,-272,-269,-271,-270,-304,-177,313,313,-236,313,313,313,313,313,-235,313,313,313,313,313,313,313,-234,313,161,24,-282,469,-304,-28,-261,161,161,-211,-198,-208,-200,161,-267,-268,161,-259,-11,161,161,-304,-253,-261,161,161,161,-199,161,161,161,161,161,-201,-203,-204,-283,161,-276,-304,161,161,-277,161,-202,-205,-207,161,-206,]),'EXTERN':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,51,52,53,54,55,59,62,63,65,72,76,77,83,85,86,87,88,90,91,92,93,96,103,109,115,142,143,144,145,189,206,208,209,210,221,222,228,232,234,235,239,242,246,247,251,252,256,258,327,328,336,343,347,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[33,-68,-99,33,-111,-110,33,-94,-65,-66,-114,33,-52,-113,-108,-62,33,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,33,-93,-216,-97,-109,-95,33,-115,-98,-67,-91,-107,-116,-69,-87,-90,-88,-89,33,33,-81,-130,-131,-302,-61,-147,-148,-53,33,33,-82,-92,33,33,-83,33,-70,-30,-71,33,-35,33,-36,-303,-132,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,33,-31,-34,33,33,-133,-134,-150,-151,-209,33,-212,-210,-197,-213,-196,33,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'INT_CONST_BIN':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,126,143,147,149,153,154,155,161,163,164,166,171,173,179,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,251,252,256,258,263,265,268,271,272,273,274,275,276,277,278,279,280,281,282,283,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,502,504,508,509,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,160,-304,160,-304,-28,-162,160,160,160,160,-260,-262,-261,160,160,-304,-265,-263,160,-264,-28,-304,160,-261,160,160,160,160,-303,160,-73,-193,-72,160,160,-76,-78,160,-75,-194,-74,-195,-77,160,160,160,160,160,160,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,160,-11,160,-12,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,-261,-261,-304,160,160,-209,160,-212,160,-210,160,160,-197,160,-213,160,160,-196,-304,-177,160,160,-304,-28,-261,160,160,-211,-198,-208,-200,160,160,-11,160,160,-304,-261,160,160,160,-199,160,160,160,160,160,-201,-203,-204,160,-304,160,160,160,-202,-205,-207,160,-206,]),'CHAR_CONST':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,126,143,147,149,153,154,155,161,163,164,166,171,173,179,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,251,252,256,258,263,265,268,271,272,273,274,275,276,277,278,279,280,281,282,283,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,502,504,508,509,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,150,-304,150,-304,-28,-162,150,150,150,150,-260,-262,-261,150,150,-304,-265,-263,150,-264,-28,-304,150,-261,150,150,150,150,-303,150,-73,-193,-72,150,150,-76,-78,150,-75,-194,-74,-195,-77,150,150,150,150,150,150,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,150,-11,150,-12,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,-261,-261,-304,150,150,-209,150,-212,150,-210,150,150,-197,150,-213,150,150,-196,-304,-177,150,150,-304,-28,-261,150,150,-211,-198,-208,-200,150,150,-11,150,150,-304,-261,150,150,150,-199,150,150,150,150,150,-201,-203,-204,150,-304,150,150,150,-202,-205,-207,150,-206,]),'ANDEQUAL':([118,150,151,152,156,158,159,160,162,165,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,276,-292,-300,-293,-280,-294,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-282,-267,-268,-259,-253,-283,-276,-277,]),'STRING_LITERAL':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,126,143,147,149,153,154,155,161,162,163,164,166,171,173,174,179,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,251,252,256,258,263,265,268,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,502,504,508,509,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,174,-304,174,-304,-28,-162,174,174,174,174,-260,-262,-261,284,174,174,-304,-265,-263,-298,174,-264,-28,-304,174,-261,174,174,174,174,-303,174,-73,-193,-72,174,174,-76,-78,174,-75,-194,-74,-195,-77,174,174,174,174,174,174,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,-299,174,-11,174,-12,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-261,-261,-304,174,174,-209,174,-212,174,-210,174,174,-197,174,-213,174,174,-196,-304,-177,174,174,-304,-28,-261,174,174,-211,-198,-208,-200,174,174,-11,174,174,-304,-261,174,174,174,-199,174,174,174,174,174,-201,-203,-204,174,-304,174,174,174,-202,-205,-207,174,-206,]),'_BOOL':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,62,63,65,72,74,76,77,78,80,83,84,85,86,87,88,90,91,92,93,96,97,103,109,115,123,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[30,-68,-99,-304,-111,-110,30,-94,-65,-66,-114,-304,-52,-113,-108,-62,-304,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,30,-93,-216,-97,-109,-95,30,-115,-98,30,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,30,-85,30,-81,-86,-161,-130,30,-131,-302,-61,-147,-148,-53,30,30,-82,30,-92,30,30,30,-162,30,-141,-140,30,30,30,-128,-137,30,-83,30,-70,-30,30,-71,30,-35,30,-36,30,-127,-126,-303,-132,-138,-129,30,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,30,30,30,30,30,30,-31,-34,30,30,-133,-139,-134,-150,-151,-209,30,-212,-210,-197,-213,-196,30,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'LOR':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,312,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-245,-244,-236,-249,-241,-242,-248,-247,-235,-237,-240,-243,-246,-239,-250,-251,-234,-238,-282,-267,-268,-259,-253,-283,-276,-277,]),'RBRACE':([1,55,77,86,118,128,129,131,134,137,138,139,143,150,151,152,156,157,158,159,160,162,165,166,167,168,169,170,172,174,177,178,180,181,182,212,221,223,225,226,229,230,232,234,235,239,241,242,246,247,249,251,252,256,258,261,262,264,266,270,284,285,287,288,290,293,320,348,351,355,356,358,361,366,369,372,375,378,379,382,383,384,386,388,389,390,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,443,447,449,450,453,454,457,460,465,479,485,486,489,496,498,499,501,503,504,513,516,517,519,521,],[-68,-69,-81,-302,-289,-141,-140,221,-137,-155,-152,221,-304,-296,-254,-290,-252,-217,-292,-300,-293,-280,-294,-304,-172,-233,-231,-297,-295,-298,-291,-279,-266,-281,-278,221,-303,-138,221,221,-153,221,-73,-193,-72,-76,-5,-78,-75,-194,221,-74,-195,-77,-6,-252,-257,-274,-275,-256,-299,-258,-255,-21,-22,221,-301,-139,-230,-156,-154,-209,-212,-210,-197,-213,-196,-273,-272,-269,-271,-270,-218,-175,221,-173,-245,-244,-236,-249,-241,-242,-248,-247,-235,-237,-240,-243,-246,-239,-250,-251,-234,-238,-282,-211,-198,-208,-200,-267,-268,-259,-174,-253,-199,-176,-232,221,-201,-203,-204,-283,-276,221,-277,-202,-205,-207,-206,]),'LONG':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,62,63,65,72,74,76,77,78,80,83,84,85,86,87,88,90,91,92,93,96,97,103,109,115,123,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[29,-68,-99,-304,-111,-110,29,-94,-65,-66,-114,-304,-52,-113,-108,-62,-304,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,29,-93,-216,-97,-109,-95,29,-115,-98,29,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,29,-85,29,-81,-86,-161,-130,29,-131,-302,-61,-147,-148,-53,29,29,-82,29,-92,29,29,29,-162,29,-141,-140,29,29,29,-128,-137,29,-83,29,-70,-30,29,-71,29,-35,29,-36,29,-127,-126,-303,-132,-138,-129,29,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,29,29,29,29,29,29,-31,-34,29,29,-133,-139,-134,-150,-151,-209,29,-212,-210,-197,-213,-196,29,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'CHAR':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,62,63,65,72,74,76,77,78,80,83,84,85,86,87,88,90,91,92,93,96,97,103,109,115,123,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[36,-68,-99,-304,-111,-110,36,-94,-65,-66,-114,-304,-52,-113,-108,-62,-304,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,36,-93,-216,-97,-109,-95,36,-115,-98,36,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,36,-85,36,-81,-86,-161,-130,36,-131,-302,-61,-147,-148,-53,36,36,-82,36,-92,36,36,36,-162,36,-141,-140,36,36,36,-128,-137,36,-83,36,-70,-30,36,-71,36,-35,36,-36,36,-127,-126,-303,-132,-138,-129,36,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,36,36,36,36,36,36,-31,-34,36,36,-133,-139,-134,-150,-151,-209,36,-212,-210,-197,-213,-196,36,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'XOREQUAL':([118,150,151,152,156,158,159,160,162,165,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,282,-292,-300,-293,-280,-294,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-282,-267,-268,-259,-253,-283,-276,-277,]),'ENUM':([0,1,3,7,8,10,12,13,18,19,20,22,31,33,34,35,37,41,43,45,46,47,49,50,51,54,55,56,57,58,72,74,76,77,78,80,84,86,87,91,93,96,97,109,123,126,127,128,129,131,132,134,135,142,143,144,145,179,189,206,208,209,210,212,221,223,225,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,327,328,336,343,348,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[38,-68,-304,-94,-65,-66,-304,-52,-62,-304,-64,-29,-63,-96,-60,-117,38,-93,-97,-95,38,-115,-98,38,-67,-116,-69,-84,-9,-10,38,-85,38,-81,-86,-161,38,-302,-61,-53,38,-82,38,38,38,-162,38,-141,-140,38,38,-137,38,-83,38,-70,-30,38,-71,38,-35,38,-36,38,-303,-138,38,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,38,38,38,38,38,-31,-34,38,38,-139,-209,38,-212,-210,-197,-213,-196,38,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'FLOAT':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,62,63,65,72,74,76,77,78,80,83,84,85,86,87,88,90,91,92,93,96,97,103,109,115,123,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[23,-68,-99,-304,-111,-110,23,-94,-65,-66,-114,-304,-52,-113,-108,-62,-304,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,23,-93,-216,-97,-109,-95,23,-115,-98,23,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,23,-85,23,-81,-86,-161,-130,23,-131,-302,-61,-147,-148,-53,23,23,-82,23,-92,23,23,23,-162,23,-141,-140,23,23,23,-128,-137,23,-83,23,-70,-30,23,-71,23,-35,23,-36,23,-127,-126,-303,-132,-138,-129,23,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,23,23,23,23,23,23,-31,-34,23,23,-133,-139,-134,-150,-151,-209,23,-212,-210,-197,-213,-196,23,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'FOR':([1,55,77,86,143,221,232,234,235,239,242,243,246,247,251,252,256,258,358,361,366,368,369,372,373,375,442,443,447,449,450,479,480,482,483,496,498,499,509,514,516,517,519,520,521,],[-68,-69,-81,-302,236,-303,-73,-193,-72,-76,-78,236,-75,-194,-74,-195,-77,236,-209,-212,-210,236,-197,-213,236,-196,236,-211,-198,-208,-200,-199,236,236,236,-201,-203,-204,236,236,-202,-205,-207,236,-206,]),'CASE':([1,55,77,86,143,221,232,234,235,239,242,243,246,247,251,252,256,258,358,361,366,368,369,372,373,375,442,443,447,449,450,479,480,482,483,496,498,499,509,514,516,517,519,520,521,],[-68,-69,-81,-302,237,-303,-73,-193,-72,-76,-78,237,-75,-194,-74,-195,-77,237,-209,-212,-210,237,-197,-213,237,-196,237,-211,-198,-208,-200,-199,237,237,237,-201,-203,-204,237,237,-202,-205,-207,237,-206,]),'RBRACKET':([35,47,54,75,79,80,108,112,114,118,126,150,151,152,156,157,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,184,186,191,192,193,194,201,221,233,261,262,264,266,270,284,285,287,320,323,324,329,330,331,332,335,342,351,377,378,379,382,383,384,386,391,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,420,421,428,430,435,436,446,453,454,457,465,468,469,486,492,493,501,503,512,513,],[-117,-115,-116,-304,-27,-161,-304,-304,-28,-289,-162,-296,-254,-290,-252,-217,-292,-300,-293,-280,-294,-233,-231,-297,-295,-298,-291,-279,-266,-281,-278,-28,-304,327,328,-3,-4,-304,-303,-214,-252,-257,-274,-275,-256,-299,-258,-255,-301,422,423,424,425,426,427,-304,-304,-230,453,-273,-272,-269,-271,-270,-218,461,-245,-244,-236,-249,-241,-242,-248,-247,-235,-237,-240,-243,-246,-239,-250,-251,-234,-238,-282,466,467,-304,-28,474,475,-215,-267,-268,-259,-253,490,491,-232,505,506,-283,-276,518,-277,]),'PLUSEQUAL':([118,150,151,152,156,158,159,160,162,165,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,274,-292,-300,-293,-280,-294,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-282,-267,-268,-259,-253,-283,-276,-277,]),'RETURN':([1,55,77,86,143,221,232,234,235,239,242,243,246,247,251,252,256,258,358,361,366,368,369,372,373,375,442,443,447,449,450,479,480,482,483,496,498,499,509,514,516,517,519,520,521,],[-68,-69,-81,-302,238,-303,-73,-193,-72,-76,-78,238,-75,-194,-74,-195,-77,238,-209,-212,-210,238,-197,-213,238,-196,238,-211,-198,-208,-200,-199,238,238,238,-201,-203,-204,238,238,-202,-205,-207,238,-206,]),'DIVEQUAL':([118,150,151,152,156,158,159,160,162,165,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,277,-292,-300,-293,-280,-294,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-282,-267,-268,-259,-253,-283,-276,-277,]),'INT_CONST_OCT':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,126,143,147,149,153,154,155,161,163,164,166,171,173,179,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,251,252,256,258,263,265,268,271,272,273,274,275,276,277,278,279,280,281,282,283,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,502,504,508,509,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,177,-304,177,-304,-28,-162,177,177,177,177,-260,-262,-261,177,177,-304,-265,-263,177,-264,-28,-304,177,-261,177,177,177,177,-303,177,-73,-193,-72,177,177,-76,-78,177,-75,-194,-74,-195,-77,177,177,177,177,177,177,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,177,-11,177,-12,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,-261,-261,-304,177,177,-209,177,-212,177,-210,177,177,-197,177,-213,177,177,-196,-304,-177,177,177,-304,-28,-261,177,177,-211,-198,-208,-200,177,177,-11,177,177,-304,-261,177,177,177,-199,177,177,177,177,177,-201,-203,-204,177,-304,177,177,177,-202,-205,-207,177,-206,]),'IF':([1,55,77,86,143,221,232,234,235,239,242,243,246,247,251,252,256,258,358,361,366,368,369,372,373,375,442,443,447,449,450,479,480,482,483,496,498,499,509,514,516,517,519,520,521,],[-68,-69,-81,-302,240,-303,-73,-193,-72,-76,-78,240,-75,-194,-74,-195,-77,240,-209,-212,-210,240,-197,-213,240,-196,240,-211,-198,-208,-200,-199,240,240,240,-201,-203,-204,240,240,-202,-205,-207,240,-206,]),'LPAREN':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,39,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,65,67,69,71,73,74,75,77,78,79,80,81,82,83,85,86,87,88,90,91,92,97,103,105,106,107,108,112,113,114,115,118,125,126,130,133,143,144,145,146,147,149,150,151,152,153,154,155,158,159,160,161,162,163,164,165,166,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,189,190,192,195,196,201,202,203,205,206,207,208,210,214,216,219,221,222,224,227,228,232,234,235,236,237,238,239,240,242,243,246,247,248,250,251,252,256,257,258,263,264,265,266,268,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,318,320,321,322,324,325,326,327,328,332,333,334,335,339,342,347,349,352,353,354,357,358,359,361,363,366,367,368,369,370,372,373,374,375,378,379,382,383,384,389,393,415,417,418,419,422,423,424,425,426,427,428,429,430,433,434,436,440,442,443,445,447,449,450,452,453,454,455,458,459,462,464,466,467,469,470,471,472,473,474,475,476,478,479,480,481,482,483,490,491,494,496,498,499,501,502,503,504,505,506,508,509,513,514,516,517,519,520,521,],[48,-68,-99,-304,-111,-110,73,-94,-65,-66,-114,-304,76,-113,-108,-62,-304,-64,-103,-29,-105,-304,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,48,48,-93,-216,-97,-109,-95,-115,48,-98,48,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,73,109,-37,73,-85,-304,-81,-86,-27,-161,-159,-28,-130,-131,-302,-61,-147,-148,76,73,48,-92,73,179,109,-304,179,-304,-28,206,-289,-160,-162,73,-128,179,-70,-30,73,179,263,-296,268,-290,271,-260,-262,-292,-300,-293,-261,-280,286,271,-294,-304,-297,-265,-295,-263,-298,316,-291,-279,179,-266,-281,-278,-264,-28,-304,179,-71,-38,-261,179,179,179,206,-45,336,206,343,-35,-36,-127,-126,263,-303,-132,-129,263,-149,-73,-193,-72,359,263,179,-76,363,-78,179,-75,-194,-289,370,-74,-195,-77,374,179,179,-274,179,-275,179,179,179,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,-299,179,-11,179,-12,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,179,417,-301,179,179,-261,-43,-44,-31,-34,-261,336,343,-304,206,179,-133,263,73,-134,-150,-151,-209,179,-212,179,-210,179,179,-197,179,-213,179,179,-196,-273,-272,-269,-271,-270,-304,-177,263,417,417,-282,-39,-42,-32,-33,-188,-190,179,-304,-28,-192,-186,-261,179,179,-211,481,-198,-208,-200,263,-267,-268,179,-11,179,263,-304,-41,-40,-261,179,179,-50,-51,-187,-189,-191,179,-199,179,179,179,179,-46,-49,179,-201,-203,-204,-283,179,-276,-304,-47,-48,179,179,-277,179,-202,-205,-207,179,-206,]),'TYPEDEF':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,51,52,53,54,55,59,62,63,65,72,76,77,83,85,86,87,88,90,91,92,93,96,103,109,115,142,143,144,145,189,206,208,209,210,221,222,228,232,234,235,239,242,246,247,251,252,256,258,327,328,336,343,347,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[43,-68,-99,43,-111,-110,43,-94,-65,-66,-114,43,-52,-113,-108,-62,43,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,43,-93,-216,-97,-109,-95,43,-115,-98,-67,-91,-107,-116,-69,-87,-90,-88,-89,43,43,-81,-130,-131,-302,-61,-147,-148,-53,43,43,-82,-92,43,43,-83,43,-70,-30,-71,43,-35,43,-36,-303,-132,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,43,-31,-34,43,43,-133,-134,-150,-151,-209,43,-212,-210,-197,-213,-196,43,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'AND':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,118,126,143,147,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,248,251,252,256,258,261,262,263,264,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,320,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,378,379,382,383,384,389,393,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,415,419,428,429,430,436,440,442,443,447,449,450,452,453,454,455,457,458,459,462,464,465,469,470,471,478,479,480,481,482,483,494,496,498,499,501,502,503,504,508,509,513,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,154,-304,154,-304,-28,-289,-162,154,154,154,-296,-254,-290,154,-260,-262,-252,-292,-300,-293,-261,-280,154,154,-294,-304,-233,304,-297,-265,-295,-263,-298,-291,-279,154,-266,-281,-278,-264,-28,-304,154,-261,154,154,154,154,-303,154,-73,-193,-72,154,154,-76,-78,154,-75,-194,-289,-74,-195,-77,154,-252,-257,154,-274,154,-275,154,-256,154,154,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,-299,-258,154,-255,-11,154,-12,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-301,154,154,-261,-261,-304,154,154,-209,154,-212,154,-210,154,154,-197,154,-213,154,154,-196,-273,-272,-269,-271,-270,-304,-177,-245,-244,-236,304,-241,-242,304,-247,-235,-237,-240,-243,-246,-239,304,304,-234,-238,154,-282,154,-304,-28,-261,154,154,-211,-198,-208,-200,154,-267,-268,154,-259,-11,154,154,-304,-253,-261,154,154,154,-199,154,154,154,154,154,-201,-203,-204,-283,154,-276,-304,154,154,-277,154,-202,-205,-207,154,-206,]),'NOT':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,126,143,147,149,153,154,155,161,163,164,166,171,173,179,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,251,252,256,258,263,265,268,271,272,273,274,275,276,277,278,279,280,281,282,283,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,502,504,508,509,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,183,-304,183,-304,-28,-162,183,183,183,183,-260,-262,-261,183,183,-304,-265,-263,183,-264,-28,-304,183,-261,183,183,183,183,-303,183,-73,-193,-72,183,183,-76,-78,183,-75,-194,-74,-195,-77,183,183,183,183,183,183,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,183,-11,183,-12,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,-261,-261,-304,183,183,-209,183,-212,183,-210,183,183,-197,183,-213,183,183,-196,-304,-177,183,183,-304,-28,-261,183,183,-211,-198,-208,-200,183,183,-11,183,183,-304,-261,183,183,183,-199,183,183,183,183,183,-201,-203,-204,183,-304,183,183,183,-202,-205,-207,183,-206,]),'PPPRAGMA':([0,1,8,10,18,20,31,34,37,51,55,77,84,86,87,127,128,129,131,134,135,143,144,189,212,221,223,225,232,234,235,239,242,243,246,247,251,252,256,258,348,358,361,366,368,369,372,373,375,442,443,447,449,450,479,480,482,483,496,498,499,509,514,516,517,519,520,521,],[1,-68,-65,-66,-62,-64,-63,-60,1,-67,-69,-81,1,-302,-61,1,-141,-140,1,-137,1,1,-70,-71,1,-303,-138,1,-73,-193,-72,-76,-78,1,-75,-194,-74,-195,-77,1,-139,-209,-212,-210,1,-197,-213,1,-196,1,-211,-198,-208,-200,-199,1,1,1,-201,-203,-204,1,1,-202,-205,-207,1,-206,]),'OR':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,303,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-245,-244,-236,-249,-241,-242,-248,-247,-235,-237,-240,-243,-246,-239,303,303,-234,-238,-282,-267,-268,-259,-253,-283,-276,-277,]),'CONTINUE':([1,55,77,86,143,221,232,234,235,239,242,243,246,247,251,252,256,258,358,361,366,368,369,372,373,375,442,443,447,449,450,479,480,482,483,496,498,499,509,514,516,517,519,520,521,],[-68,-69,-81,-302,244,-303,-73,-193,-72,-76,-78,244,-75,-194,-74,-195,-77,244,-209,-212,-210,244,-197,-213,244,-196,244,-211,-198,-208,-200,-199,244,244,244,-201,-203,-204,244,244,-202,-205,-207,244,-206,]),'__INT128':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,62,63,65,72,74,76,77,78,80,83,84,85,86,87,88,90,91,92,93,96,97,103,109,115,123,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[5,-68,-99,-304,-111,-110,5,-94,-65,-66,-114,-304,-52,-113,-108,-62,-304,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,5,-93,-216,-97,-109,-95,5,-115,-98,5,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,5,-85,5,-81,-86,-161,-130,5,-131,-302,-61,-147,-148,-53,5,5,-82,5,-92,5,5,5,-162,5,-141,-140,5,5,5,-128,-137,5,-83,5,-70,-30,5,-71,5,-35,5,-36,5,-127,-126,-303,-132,-138,-129,5,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,5,5,5,5,5,5,-31,-34,5,5,-133,-139,-134,-150,-151,-209,5,-212,-210,-197,-213,-196,5,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'REGISTER':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,51,52,53,54,55,59,62,63,65,72,76,77,83,85,86,87,88,90,91,92,93,96,103,109,115,142,143,144,145,189,206,208,209,210,221,222,228,232,234,235,239,242,246,247,251,252,256,258,327,328,336,343,347,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[7,-68,-99,7,-111,-110,7,-94,-65,-66,-114,7,-52,-113,-108,-62,7,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,7,-93,-216,-97,-109,-95,7,-115,-98,-67,-91,-107,-116,-69,-87,-90,-88,-89,7,7,-81,-130,-131,-302,-61,-147,-148,-53,7,7,-82,-92,7,7,-83,7,-70,-30,-71,7,-35,7,-36,-303,-132,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,7,-31,-34,7,7,-133,-134,-150,-151,-209,7,-212,-210,-197,-213,-196,7,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'ELLIPSIS':([209,],[344,]),'RSHIFTEQUAL':([118,150,151,152,156,158,159,160,162,165,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,278,-292,-300,-293,-280,-294,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-282,-267,-268,-259,-253,-283,-276,-277,]),'STRUCT':([0,1,3,7,8,10,12,13,18,19,20,22,31,33,34,35,37,41,43,45,46,47,49,50,51,54,55,56,57,58,72,74,76,77,78,80,84,86,87,91,93,96,97,109,123,126,127,128,129,131,132,134,135,142,143,144,145,179,189,206,208,209,210,212,221,223,225,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,327,328,336,343,348,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[9,-68,-304,-94,-65,-66,-304,-52,-62,-304,-64,-29,-63,-96,-60,-117,9,-93,-97,-95,9,-115,-98,9,-67,-116,-69,-84,-9,-10,9,-85,9,-81,-86,-161,9,-302,-61,-53,9,-82,9,9,9,-162,9,-141,-140,9,9,-137,9,-83,9,-70,-30,9,-71,9,-35,9,-36,9,-303,-138,9,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,9,9,9,9,9,-31,-34,9,9,-139,-209,9,-212,-210,-197,-213,-196,9,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'DO':([1,55,77,86,143,221,232,234,235,239,242,243,246,247,251,252,256,258,358,361,366,368,369,372,373,375,442,443,447,449,450,479,480,482,483,496,498,499,509,514,516,517,519,520,521,],[-68,-69,-81,-302,243,-303,-73,-193,-72,-76,-78,243,-75,-194,-74,-195,-77,243,-209,-212,-210,243,-197,-213,243,-196,243,-211,-198,-208,-200,-199,243,243,243,-201,-203,-204,243,243,-202,-205,-207,243,-206,]),'ARROW':([118,150,151,152,158,159,160,162,165,170,172,174,177,178,180,181,182,221,248,264,266,284,320,378,379,382,383,384,419,453,454,501,503,513,],[-289,-296,267,-290,-292,-300,-293,-280,-294,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-274,-275,-299,-301,-273,-272,-269,-271,-270,-282,-267,-268,-283,-276,-277,]),'EQUALS':([13,22,66,69,70,71,72,91,104,107,118,137,141,145,150,151,152,156,158,159,160,162,165,170,172,174,177,178,180,181,182,190,208,210,221,248,261,262,264,266,270,284,285,287,292,296,320,325,326,327,328,378,379,382,383,384,392,394,419,422,423,424,425,453,454,457,461,465,466,467,501,503,513,],[-52,-29,106,-54,-158,-37,-157,-53,147,-55,-289,227,-157,-30,-296,-254,-290,281,-292,-300,-293,-280,-294,-297,-295,-298,-291,-279,-266,-281,-278,-38,-35,-36,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-178,393,-301,-43,-44,-31,-34,-273,-272,-269,-271,-270,-181,-179,-282,-39,-42,-32,-33,-267,-268,-259,-180,-253,-41,-40,-283,-276,-277,]),'INT_CONST_DEC':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,126,143,147,149,153,154,155,161,163,164,166,171,173,179,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,251,252,256,258,263,265,268,271,272,273,274,275,276,277,278,279,280,281,282,283,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,502,504,508,509,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,152,-304,152,-304,-28,-162,152,152,152,152,-260,-262,-261,152,152,-304,-265,-263,152,-264,-28,-304,152,-261,152,152,152,152,-303,152,-73,-193,-72,152,152,-76,-78,152,-75,-194,-74,-195,-77,152,152,152,152,152,152,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,152,-11,152,-12,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,-261,-261,-304,152,152,-209,152,-212,152,-210,152,152,-197,152,-213,152,152,-196,-304,-177,152,152,-304,-28,-261,152,152,-211,-198,-208,-200,152,152,-11,152,152,-304,-261,152,152,152,-199,152,152,152,152,152,-201,-203,-204,152,-304,152,152,152,-202,-205,-207,152,-206,]),'PLUSPLUS':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,118,126,143,147,149,150,151,152,153,154,155,158,159,160,161,162,163,164,165,166,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,248,251,252,256,258,263,264,265,266,268,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,320,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,378,379,382,383,384,389,393,415,419,428,429,430,436,440,442,443,447,449,450,452,453,454,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,501,502,503,504,508,509,513,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,164,-304,164,-304,-28,-289,-162,164,164,164,-296,264,-290,164,-260,-262,-292,-300,-293,-261,-280,164,164,-294,-304,-297,-265,-295,-263,-298,-291,-279,164,-266,-281,-278,-264,-28,-304,164,-261,164,164,164,164,-303,164,-73,-193,-72,164,164,-76,-78,164,-75,-194,-289,-74,-195,-77,164,164,-274,164,-275,164,164,164,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,-299,164,-11,164,-12,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-301,164,164,-261,-261,-304,164,164,-209,164,-212,164,-210,164,164,-197,164,-213,164,164,-196,-273,-272,-269,-271,-270,-304,-177,164,-282,164,-304,-28,-261,164,164,-211,-198,-208,-200,164,-267,-268,164,-11,164,164,-304,-261,164,164,164,-199,164,164,164,164,164,-201,-203,-204,-283,164,-276,-304,164,164,-277,164,-202,-205,-207,164,-206,]),'PLUS':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,118,126,143,147,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,248,251,252,256,258,261,262,263,264,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,320,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,378,379,382,383,384,389,393,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,415,419,428,429,430,436,440,442,443,447,449,450,452,453,454,455,457,458,459,462,464,465,469,470,471,478,479,480,481,482,483,494,496,498,499,501,502,503,504,508,509,513,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,155,-304,155,-304,-28,-289,-162,155,155,155,-296,-254,-290,155,-260,-262,-252,-292,-300,-293,-261,-280,155,155,-294,-304,-233,306,-297,-265,-295,-263,-298,-291,-279,155,-266,-281,-278,-264,-28,-304,155,-261,155,155,155,155,-303,155,-73,-193,-72,155,155,-76,-78,155,-75,-194,-289,-74,-195,-77,155,-252,-257,155,-274,155,-275,155,-256,155,155,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,-299,-258,155,-255,-11,155,-12,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,-301,155,155,-261,-261,-304,155,155,-209,155,-212,155,-210,155,155,-197,155,-213,155,155,-196,-273,-272,-269,-271,-270,-304,-177,306,306,-236,306,306,306,306,306,-235,-237,306,306,306,306,306,306,-234,-238,155,-282,155,-304,-28,-261,155,155,-211,-198,-208,-200,155,-267,-268,155,-259,-11,155,155,-304,-253,-261,155,155,155,-199,155,155,155,155,155,-201,-203,-204,-283,155,-276,-304,155,155,-277,155,-202,-205,-207,155,-206,]),'LBRACE':([1,9,13,16,22,28,38,46,55,72,77,83,85,86,88,90,91,93,94,95,96,106,110,142,143,145,147,166,208,210,221,232,234,235,239,242,243,246,247,251,252,256,258,288,289,291,327,328,358,361,366,368,369,372,373,375,389,393,415,424,425,442,443,447,449,450,452,456,457,458,459,464,479,480,482,483,496,498,499,504,509,514,516,517,519,520,521,],[-68,-135,-52,-136,-29,86,86,-304,-69,-304,-81,86,86,-302,86,86,-53,-8,86,-7,-82,86,86,-83,86,-30,86,-304,-35,-36,-303,-73,-193,-72,-76,-78,86,-75,-194,-74,-195,-77,86,-11,86,-12,-31,-34,-209,-212,-210,86,-197,-213,86,-196,-304,-177,86,-32,-33,86,-211,-198,-208,-200,86,86,86,-11,86,-304,-199,86,86,86,-201,-203,-204,-304,86,86,-202,-205,-207,86,-206,]),'MODEQUAL':([118,150,151,152,156,158,159,160,162,165,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,283,-292,-300,-293,-280,-294,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-282,-267,-268,-259,-253,-283,-276,-277,]),'MINUSEQUAL':([118,150,151,152,156,158,159,160,162,165,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,273,-292,-300,-293,-280,-294,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-282,-267,-268,-259,-253,-283,-276,-277,]),'INLINE':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,51,52,53,54,55,59,62,63,65,72,76,77,83,85,86,87,88,90,91,92,93,96,103,109,115,142,143,144,145,189,206,208,209,210,221,222,228,232,234,235,239,242,246,247,251,252,256,258,327,328,336,343,347,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[49,-68,-99,49,-111,-110,49,-94,-65,-66,-114,49,-52,-113,-108,-62,49,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,49,-93,-216,-97,-109,-95,49,-115,-98,-67,-91,-107,-116,-69,-87,-90,-88,-89,49,49,-81,-130,-131,-302,-61,-147,-148,-53,49,49,-82,-92,49,49,-83,49,-70,-30,-71,49,-35,49,-36,-303,-132,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,49,-31,-34,49,49,-133,-134,-150,-151,-209,49,-212,-210,-197,-213,-196,49,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'PPPRAGMASTR':([1,],[55,]),'TIMESEQUAL':([118,150,151,152,156,158,159,160,162,165,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,275,-292,-300,-293,-280,-294,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-282,-267,-268,-259,-253,-283,-276,-277,]),'INT_CONST_HEX':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,126,143,147,149,153,154,155,161,163,164,166,171,173,179,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,251,252,256,258,263,265,268,271,272,273,274,275,276,277,278,279,280,281,282,283,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,502,504,508,509,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,158,-304,158,-304,-28,-162,158,158,158,158,-260,-262,-261,158,158,-304,-265,-263,158,-264,-28,-304,158,-261,158,158,158,158,-303,158,-73,-193,-72,158,158,-76,-78,158,-75,-194,-74,-195,-77,158,158,158,158,158,158,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,158,-11,158,-12,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,-261,-261,-304,158,158,-209,158,-212,158,-210,158,158,-197,158,-213,158,158,-196,-304,-177,158,158,-304,-28,-261,158,158,-211,-198,-208,-200,158,158,-11,158,158,-304,-261,158,158,158,-199,158,158,158,158,158,-201,-203,-204,158,-304,158,158,158,-202,-205,-207,158,-206,]),'$end':([0,1,8,10,18,20,27,31,34,37,40,51,55,77,87,144,189,221,369,],[-304,-68,-65,-66,-62,-64,-59,-63,-60,-58,0,-67,-69,-81,-61,-70,-71,-303,-197,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,18,19,20,21,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,65,67,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,92,97,103,105,106,108,109,112,113,114,115,125,126,130,133,136,140,143,144,146,147,149,153,154,155,161,163,164,166,171,173,179,183,184,185,186,189,192,195,196,201,202,206,211,214,216,219,221,222,224,227,228,229,232,234,235,237,238,239,242,243,246,247,251,252,253,256,258,263,265,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,286,288,289,291,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,324,332,335,336,339,342,347,349,352,353,354,357,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,463,464,469,470,471,478,479,480,481,482,483,494,496,498,499,500,502,504,508,509,514,516,517,519,520,521,],[22,-68,-99,-304,-111,-110,22,-94,-65,-135,-66,-114,-304,-113,-108,-136,-62,-304,-64,-103,-105,-304,-106,-102,83,-104,-100,-63,-112,-96,-60,-117,-101,22,88,22,-93,-216,-97,-109,-95,-115,22,-98,22,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,22,22,-85,-304,118,-81,-86,-27,-161,-159,-28,-130,-131,-302,-61,-147,137,-148,22,22,-92,22,118,-304,118,118,-304,-28,22,-160,-162,22,-128,137,137,248,-70,22,118,118,118,-260,-262,-261,118,118,-304,-265,-263,118,-264,-28,-304,118,-71,-261,118,118,118,22,22,118,-127,-126,118,-303,-132,-129,118,-149,137,-73,-193,-72,118,118,-76,-78,248,-75,-194,-74,-195,371,-77,248,118,118,379,118,384,118,118,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,118,-11,118,-12,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-261,-261,-304,118,22,118,-133,118,22,-134,-150,-151,-209,118,-212,118,-210,118,248,-197,118,-213,248,118,-196,-304,-177,118,118,-304,-28,-261,118,248,-211,-198,-208,-200,118,118,-11,118,118,118,-304,-261,118,118,118,-199,248,118,248,248,118,-201,-203,-204,118,118,-304,118,248,248,-202,-205,-207,248,-206,]),'LAND':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,311,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-245,-244,-236,-249,-241,-242,-248,-247,-235,-237,-240,-243,-246,-239,-250,311,-234,-238,-282,-267,-268,-259,-253,-283,-276,-277,]),'WSTRING_LITERAL':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,126,143,147,149,153,154,155,159,161,163,164,166,171,173,179,181,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,251,252,256,258,263,265,268,271,272,273,274,275,276,277,278,279,280,281,282,283,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,320,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,502,504,508,509,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,159,-304,159,-304,-28,-162,159,159,159,159,-260,-262,-300,-261,159,159,-304,-265,-263,159,320,-264,-28,-304,159,-261,159,159,159,159,-303,159,-73,-193,-72,159,159,-76,-78,159,-75,-194,-74,-195,-77,159,159,159,159,159,159,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,159,-11,159,-12,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,-301,159,159,-261,-261,-304,159,159,-209,159,-212,159,-210,159,159,-197,159,-213,159,159,-196,-304,-177,159,159,-304,-28,-261,159,159,-211,-198,-208,-200,159,159,-11,159,159,-304,-261,159,159,159,-199,159,159,159,159,159,-201,-203,-204,159,-304,159,159,159,-202,-205,-207,159,-206,]),'SWITCH':([1,55,77,86,143,221,232,234,235,239,242,243,246,247,251,252,256,258,358,361,366,368,369,372,373,375,442,443,447,449,450,479,480,482,483,496,498,499,509,514,516,517,519,520,521,],[-68,-69,-81,-302,250,-303,-73,-193,-72,-76,-78,250,-75,-194,-74,-195,-77,250,-209,-212,-210,250,-197,-213,250,-196,250,-211,-198,-208,-200,-199,250,250,250,-201,-203,-204,250,250,-202,-205,-207,250,-206,]),'LBRACKET':([2,4,5,7,11,13,14,15,21,22,23,24,25,26,29,30,32,33,35,36,41,42,43,44,45,47,49,52,53,54,59,62,63,65,69,71,79,80,81,82,83,85,86,88,90,91,103,107,115,118,125,126,133,145,150,151,152,158,159,160,162,165,166,170,172,174,177,178,180,181,182,190,202,203,205,206,207,208,210,214,216,221,222,224,228,248,264,266,284,292,296,318,320,325,326,327,328,333,334,339,347,353,354,357,378,379,382,383,384,389,392,394,417,418,419,422,423,424,425,426,427,433,434,453,454,461,464,466,467,472,473,474,475,476,487,488,490,491,501,503,504,505,506,511,513,518,],[-99,-111,-110,-94,-114,75,-113,-108,-103,-29,-105,-304,-106,-102,-104,-100,-112,-96,-117,-101,-93,-216,-97,-109,-95,-115,-98,-91,-107,-116,-87,-90,-88,-89,108,-37,-27,-161,-159,-28,-130,-131,-302,-147,-148,75,-92,108,201,-289,-160,-162,-128,-30,-296,265,-290,-292,-300,-293,-280,-294,294,-297,-295,-298,-291,-279,-266,-281,-278,-38,201,-45,335,201,342,-35,-36,-127,-126,-303,-132,-129,-149,-289,-274,-275,-299,-178,294,201,-301,-43,-44,-31,-34,335,342,201,-133,-134,-150,-151,-273,-272,-269,-271,-270,294,-181,-179,201,201,-282,-39,-42,-32,-33,-188,-190,-192,-186,-267,-268,-180,294,-41,-40,-50,-51,-187,-189,-191,-284,502,-46,-49,-283,-276,294,-47,-48,-285,-277,-286,]),'LSHIFTEQUAL':([118,150,151,152,156,158,159,160,162,165,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,280,-292,-300,-293,-280,-294,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-282,-267,-268,-259,-253,-283,-276,-277,]),'SHORT':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,62,63,65,72,74,76,77,78,80,83,84,85,86,87,88,90,91,92,93,96,97,103,109,115,123,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[26,-68,-99,-304,-111,-110,26,-94,-65,-66,-114,-304,-52,-113,-108,-62,-304,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,26,-93,-216,-97,-109,-95,26,-115,-98,26,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,26,-85,26,-81,-86,-161,-130,26,-131,-302,-61,-147,-148,-53,26,26,-82,26,-92,26,26,26,-162,26,-141,-140,26,26,26,-128,-137,26,-83,26,-70,-30,26,-71,26,-35,26,-36,26,-127,-126,-303,-132,-138,-129,26,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,26,26,26,26,26,26,-31,-34,26,26,-133,-139,-134,-150,-151,-209,26,-212,-210,-197,-213,-196,26,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'XOR':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,300,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-245,-244,-236,-249,-241,-242,300,-247,-235,-237,-240,-243,-246,-239,300,300,-234,-238,-282,-267,-268,-259,-253,-283,-276,-277,]),'SIZEOF':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,126,143,147,149,153,154,155,161,163,164,166,171,173,179,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,251,252,256,258,263,265,268,271,272,273,274,275,276,277,278,279,280,281,282,283,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,502,504,508,509,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,163,-304,163,-304,-28,-162,163,163,163,163,-260,-262,-261,163,163,-304,-265,-263,163,-264,-28,-304,163,-261,163,163,163,163,-303,163,-73,-193,-72,163,163,-76,-78,163,-75,-194,-74,-195,-77,163,163,163,163,163,163,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,163,-11,163,-12,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,-261,-261,-304,163,163,-209,163,-212,163,-210,163,163,-197,163,-213,163,163,-196,-304,-177,163,163,-304,-28,-261,163,163,-211,-198,-208,-200,163,163,-11,163,163,-304,-261,163,163,163,-199,163,163,163,163,163,-201,-203,-204,163,-304,163,163,163,-202,-205,-207,163,-206,]),'INT':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,62,63,65,72,74,76,77,78,80,83,84,85,86,87,88,90,91,92,93,96,97,103,109,115,123,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[21,-68,-99,-304,-111,-110,21,-94,-65,-66,-114,-304,-52,-113,-108,-62,-304,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,21,-93,-216,-97,-109,-95,21,-115,-98,21,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,21,-85,21,-81,-86,-161,-130,21,-131,-302,-61,-147,-148,-53,21,21,-82,21,-92,21,21,21,-162,21,-141,-140,21,21,21,-128,-137,21,-83,21,-70,-30,21,-71,21,-35,21,-36,21,-127,-126,-303,-132,-138,-129,21,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,21,21,21,21,21,21,-31,-34,21,21,-133,-139,-134,-150,-151,-209,21,-212,-210,-197,-213,-196,21,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'GOTO':([1,55,77,86,143,221,232,234,235,239,242,243,246,247,251,252,256,258,358,361,366,368,369,372,373,375,442,443,447,449,450,479,480,482,483,496,498,499,509,514,516,517,519,520,521,],[-68,-69,-81,-302,253,-303,-73,-193,-72,-76,-78,253,-75,-194,-74,-195,-77,253,-209,-212,-210,253,-197,-213,253,-196,253,-211,-198,-208,-200,-199,253,253,253,-201,-203,-204,253,253,-202,-205,-207,253,-206,]),'GE':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,308,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,308,-244,-236,308,-241,-242,308,308,-235,-237,-240,-243,308,-239,308,308,-234,-238,-282,-267,-268,-259,-253,-283,-276,-277,]),'RSHIFT':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,310,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,310,310,-236,310,310,310,310,310,-235,-237,-240,310,310,-239,310,310,-234,-238,-282,-267,-268,-259,-253,-283,-276,-277,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,62,63,65,72,74,76,77,78,80,83,84,85,86,87,88,90,91,92,93,96,97,103,109,115,123,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[25,-68,-99,-304,-111,-110,25,-94,-65,-66,-114,-304,-52,-113,-108,-62,-304,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,25,-93,-216,-97,-109,-95,25,-115,-98,25,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,25,-85,25,-81,-86,-161,-130,25,-131,-302,-61,-147,-148,-53,25,25,-82,25,-92,25,25,25,-162,25,-141,-140,25,25,25,-128,-137,25,-83,25,-70,-30,25,-71,25,-35,25,-36,25,-127,-126,-303,-132,-138,-129,25,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,25,25,25,25,25,25,-31,-34,25,25,-133,-139,-134,-150,-151,-209,25,-212,-210,-197,-213,-196,25,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'COLON':([2,4,5,11,13,14,15,21,22,23,25,26,29,30,32,35,36,42,44,47,53,54,69,70,71,83,85,88,90,91,107,118,130,133,141,145,150,151,152,156,157,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,190,208,210,214,216,217,221,222,224,228,233,248,255,261,262,264,266,270,284,285,287,320,325,326,327,328,347,351,352,353,354,357,360,378,379,382,383,384,386,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,419,422,423,424,425,446,453,454,457,465,466,467,486,501,503,513,],[-99,-111,-110,-114,-52,-113,-108,-103,-29,-105,-106,-102,-104,-100,-112,-117,-101,-216,-109,-115,-107,-116,-54,-158,-37,-130,-131,-147,-148,-53,-55,-289,219,-128,-157,-30,-296,-254,-290,-252,-217,-292,-300,-293,-280,-294,-233,-231,-297,-295,-298,-291,-279,-266,-281,-278,-38,-35,-36,-127,-126,349,-303,-132,-129,-149,-214,368,373,-252,-257,-274,-275,-256,-299,-258,-255,-301,-43,-44,-31,-34,-133,-230,219,-134,-150,-151,442,-273,-272,-269,-271,-270,-218,-245,-244,-236,-249,-241,-242,-248,-247,-235,-237,-240,-243,-246,-239,-250,-251,-234,-238,462,-282,-39,-42,-32,-33,-215,-267,-268,-259,-253,-41,-40,-232,-283,-276,-277,]),'DEFAULT':([1,55,77,86,143,221,232,234,235,239,242,243,246,247,251,252,256,258,358,361,366,368,369,372,373,375,442,443,447,449,450,479,480,482,483,496,498,499,509,514,516,517,519,520,521,],[-68,-69,-81,-302,255,-303,-73,-193,-72,-76,-78,255,-75,-194,-74,-195,-77,255,-209,-212,-210,255,-197,-213,255,-196,255,-211,-198,-208,-200,-199,255,255,255,-201,-203,-204,255,255,-202,-205,-207,255,-206,]),'VOLATILE':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,51,52,53,54,55,59,62,63,65,72,75,76,77,80,82,83,84,85,86,87,88,90,91,92,93,96,103,108,109,113,114,115,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,184,185,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,335,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,429,430,443,447,449,450,479,496,498,499,516,517,519,521,],[35,-68,-99,35,-111,-110,35,-94,-65,-66,-114,35,-52,-113,-108,-62,35,-64,-103,-29,-105,35,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,35,-93,-216,-97,-109,-95,35,-115,-98,-67,-91,-107,-116,-69,-87,-90,-88,-89,35,35,35,-81,-161,35,-130,35,-131,-302,-61,-147,-148,-53,35,35,-82,-92,35,35,35,35,35,-162,35,-141,-140,35,35,35,-128,-137,35,-83,35,-70,-30,35,35,35,-71,35,-35,35,-36,35,-127,-126,-303,-132,-138,-129,35,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,35,35,35,35,35,35,-31,-34,35,35,35,-133,-139,-134,-150,-151,-209,35,-212,-210,-197,-213,-196,35,-32,-33,35,35,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'LE':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,302,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,302,-244,-236,302,-241,-242,302,302,-235,-237,-240,-243,302,-239,302,302,-234,-238,-282,-267,-268,-259,-253,-283,-276,-277,]),'ELSE':([1,55,221,232,235,239,242,246,251,256,358,361,366,369,372,443,447,449,450,479,496,498,499,516,517,519,521,],[-68,-69,-303,-73,-72,-76,-78,-75,-74,-77,-209,-212,-210,-197,-213,-211,-198,-208,-200,-199,509,-203,-204,-202,-205,-207,-206,]),'LNOT':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,126,143,147,149,153,154,155,161,163,164,166,171,173,179,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,251,252,256,258,263,265,268,271,272,273,274,275,276,277,278,279,280,281,282,283,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,502,504,508,509,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,171,-304,171,-304,-28,-162,171,171,171,171,-260,-262,-261,171,171,-304,-265,-263,171,-264,-28,-304,171,-261,171,171,171,171,-303,171,-73,-193,-72,171,171,-76,-78,171,-75,-194,-74,-195,-77,171,171,171,171,171,171,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,171,-11,171,-12,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,-261,-261,-304,171,171,-209,171,-212,171,-210,171,171,-197,171,-213,171,171,-196,-304,-177,171,171,-304,-28,-261,171,171,-211,-198,-208,-200,171,171,-11,171,171,-304,-261,171,171,171,-199,171,171,171,171,171,-201,-203,-204,171,-304,171,171,171,-202,-205,-207,171,-206,]),'MINUS':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,118,126,143,147,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,177,178,179,180,181,182,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,248,251,252,256,258,261,262,263,264,265,266,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,320,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,378,379,382,383,384,389,393,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,415,419,428,429,430,436,440,442,443,447,449,450,452,453,454,455,457,458,459,462,464,465,469,470,471,478,479,480,481,482,483,494,496,498,499,501,502,503,504,508,509,513,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,173,-304,173,-304,-28,-289,-162,173,173,173,-296,-254,-290,173,-260,-262,-252,-292,-300,-293,-261,-280,173,173,-294,-304,-233,314,-297,-265,-295,-263,-298,-291,-279,173,-266,-281,-278,-264,-28,-304,173,-261,173,173,173,173,-303,173,-73,-193,-72,173,173,-76,-78,173,-75,-194,-289,-74,-195,-77,173,-252,-257,173,-274,173,-275,173,-256,173,173,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,-299,-258,173,-255,-11,173,-12,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-301,173,173,-261,-261,-304,173,173,-209,173,-212,173,-210,173,173,-197,173,-213,173,173,-196,-273,-272,-269,-271,-270,-304,-177,314,314,-236,314,314,314,314,314,-235,-237,314,314,314,314,314,314,-234,-238,173,-282,173,-304,-28,-261,173,173,-211,-198,-208,-200,173,-267,-268,173,-259,-11,173,173,-304,-253,-261,173,173,173,-199,173,173,173,173,173,-201,-203,-204,-283,173,-276,-304,173,173,-277,173,-202,-205,-207,173,-206,]),'EQ':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,297,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-245,-244,-236,297,-241,-242,297,297,-235,-237,-240,-243,-246,-239,297,297,-234,-238,-282,-267,-268,-259,-253,-283,-276,-277,]),'LSHIFT':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,307,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,307,307,-236,307,307,307,307,307,-235,-237,-240,307,307,-239,307,307,-234,-238,-282,-267,-268,-259,-253,-283,-276,-277,]),'AUTO':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,51,52,53,54,55,59,62,63,65,72,76,77,83,85,86,87,88,90,91,92,93,96,103,109,115,142,143,144,145,189,206,208,209,210,221,222,228,232,234,235,239,242,246,247,251,252,256,258,327,328,336,343,347,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[41,-68,-99,41,-111,-110,41,-94,-65,-66,-114,41,-52,-113,-108,-62,41,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,41,-93,-216,-97,-109,-95,41,-115,-98,-67,-91,-107,-116,-69,-87,-90,-88,-89,41,41,-81,-130,-131,-302,-61,-147,-148,-53,41,41,-82,-92,41,41,-83,41,-70,-30,-71,41,-35,41,-36,-303,-132,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,41,-31,-34,41,41,-133,-134,-150,-151,-209,41,-212,-210,-197,-213,-196,41,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'TYPEID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,62,63,65,67,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,96,97,103,105,109,115,123,125,126,127,128,129,130,131,132,133,134,135,142,143,144,145,146,179,189,202,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,267,269,271,286,316,327,328,336,343,347,348,352,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[42,-68,-99,-304,-111,-110,71,-94,-65,-135,-66,-114,-304,-52,-113,-108,-136,-62,-304,-64,-103,-29,-105,-304,-106,-102,85,-104,-100,-63,-112,-96,-60,-117,-101,42,90,-93,-216,-97,-109,-95,42,-115,-98,42,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,71,42,71,-85,42,-81,-86,-27,-161,-159,-28,-130,42,-131,-302,-61,-147,-148,-53,71,42,-82,42,-92,71,42,203,42,-160,-162,42,-141,-140,71,42,42,-128,-137,42,-83,42,-70,-30,71,42,-71,203,42,-35,42,-36,42,-127,-126,-303,-132,-138,-129,42,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,42,42,378,383,42,42,42,-31,-34,42,42,-133,-139,71,-134,-150,-151,-209,42,-212,-210,-197,-213,-196,42,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'OFFSETOF':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,126,143,147,149,153,154,155,161,163,164,166,171,173,179,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,251,252,256,258,263,265,268,271,272,273,274,275,276,277,278,279,280,281,282,283,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,502,504,508,509,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,176,-304,176,-304,-28,-162,176,176,176,176,-260,-262,-261,176,176,-304,-265,-263,176,-264,-28,-304,176,-261,176,176,176,176,-303,176,-73,-193,-72,176,176,-76,-78,176,-75,-194,-74,-195,-77,176,176,176,176,176,176,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,176,-11,176,-12,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,-261,-261,-304,176,176,-209,176,-212,176,-210,176,176,-197,176,-213,176,176,-196,-304,-177,176,176,-304,-28,-261,176,176,-211,-198,-208,-200,176,176,-11,176,176,-304,-261,176,176,176,-199,176,176,176,176,176,-201,-203,-204,176,-304,176,176,176,-202,-205,-207,176,-206,]),'UNSIGNED':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,62,63,65,72,74,76,77,78,80,83,84,85,86,87,88,90,91,92,93,96,97,103,109,115,123,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[44,-68,-99,-304,-111,-110,44,-94,-65,-66,-114,-304,-52,-113,-108,-62,-304,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,44,-93,-216,-97,-109,-95,44,-115,-98,44,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,44,-85,44,-81,-86,-161,-130,44,-131,-302,-61,-147,-148,-53,44,44,-82,44,-92,44,44,44,-162,44,-141,-140,44,44,44,-128,-137,44,-83,44,-70,-30,44,-71,44,-35,44,-36,44,-127,-126,-303,-132,-138,-129,44,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,44,44,44,44,44,44,-31,-34,44,44,-133,-139,-134,-150,-151,-209,44,-212,-210,-197,-213,-196,44,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'STATIC':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,51,52,53,54,55,59,62,63,65,72,75,76,77,80,83,85,86,87,88,90,91,92,93,96,103,108,109,114,115,126,142,143,144,145,184,189,206,208,209,210,221,222,228,232,234,235,239,242,246,247,251,252,256,258,327,328,335,336,343,347,353,354,357,358,359,361,366,369,372,375,417,424,425,430,443,447,449,450,479,496,498,499,516,517,519,521,],[45,-68,-99,45,-111,-110,45,-94,-65,-66,-114,45,-52,-113,-108,-62,45,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,45,-93,-216,-97,-109,-95,45,-115,-98,-67,-91,-107,-116,-69,-87,-90,-88,-89,45,113,45,-81,-161,-130,-131,-302,-61,-147,-148,-53,45,45,-82,-92,185,45,196,45,-162,-83,45,-70,-30,321,-71,45,-35,45,-36,-303,-132,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,45,-31,-34,429,45,45,-133,-134,-150,-151,-209,45,-212,-210,-197,-213,-196,45,-32,-33,471,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'CONST':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,51,52,53,54,55,59,62,63,65,72,75,76,77,80,82,83,84,85,86,87,88,90,91,92,93,96,103,108,109,113,114,115,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,184,185,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,335,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,429,430,443,447,449,450,479,496,498,499,516,517,519,521,],[47,-68,-99,47,-111,-110,47,-94,-65,-66,-114,47,-52,-113,-108,-62,47,-64,-103,-29,-105,47,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,47,-93,-216,-97,-109,-95,47,-115,-98,-67,-91,-107,-116,-69,-87,-90,-88,-89,47,47,47,-81,-161,47,-130,47,-131,-302,-61,-147,-148,-53,47,47,-82,-92,47,47,47,47,47,-162,47,-141,-140,47,47,47,-128,-137,47,-83,47,-70,-30,47,47,47,-71,47,-35,47,-36,47,-127,-126,-303,-132,-138,-129,47,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,47,47,47,47,47,47,-31,-34,47,47,47,-133,-139,-134,-150,-151,-209,47,-212,-210,-197,-213,-196,47,-32,-33,47,47,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'WHILE':([1,55,77,86,143,221,232,234,235,239,242,243,246,247,251,252,256,258,358,361,364,366,368,369,372,373,375,442,443,447,449,450,479,480,482,483,496,498,499,509,514,516,517,519,520,521,],[-68,-69,-81,-302,257,-303,-73,-193,-72,-76,-78,257,-75,-194,-74,-195,-77,257,-209,-212,445,-210,257,-197,-213,257,-196,257,-211,-198,-208,-200,-199,257,257,257,-201,-203,-204,257,257,-202,-205,-207,257,-206,]),'FLOAT_CONST':([1,35,47,54,55,75,77,79,80,82,86,106,108,112,113,114,126,143,147,149,153,154,155,161,163,164,166,171,173,179,183,184,185,186,192,195,196,201,219,221,227,232,234,235,237,238,239,242,243,246,247,251,252,256,258,263,265,268,271,272,273,274,275,276,277,278,279,280,281,282,283,286,288,289,291,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,324,332,335,342,349,358,359,361,363,366,367,368,369,370,372,373,374,375,389,393,415,428,429,430,436,440,442,443,447,449,450,452,455,458,459,462,464,469,470,471,478,479,480,481,482,483,494,496,498,499,502,504,508,509,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,165,-304,165,-304,-28,-162,165,165,165,165,-260,-262,-261,165,165,-304,-265,-263,165,-264,-28,-304,165,-261,165,165,165,165,-303,165,-73,-193,-72,165,165,-76,-78,165,-75,-194,-74,-195,-77,165,165,165,165,165,165,-225,-224,-221,-228,-222,-227,-229,-226,-219,-220,-223,165,-11,165,-12,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-261,-261,-304,165,165,-209,165,-212,165,-210,165,165,-197,165,-213,165,165,-196,-304,-177,165,165,-304,-28,-261,165,165,-211,-198,-208,-200,165,165,-11,165,165,-304,-261,165,165,165,-199,165,165,165,165,165,-201,-203,-204,165,-304,165,165,165,-202,-205,-207,165,-206,]),'RPAREN':([2,4,5,7,11,13,14,15,21,22,23,24,25,26,29,30,32,33,35,36,41,42,43,44,45,47,49,52,53,54,59,62,63,65,69,71,76,79,80,81,82,83,85,88,90,91,98,103,107,109,111,115,116,117,118,119,120,121,122,124,125,126,133,145,150,151,152,156,157,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,187,188,190,197,198,199,200,202,203,204,205,206,207,208,210,214,216,221,222,224,228,233,245,261,262,264,266,268,270,284,285,287,317,318,319,320,325,326,327,328,333,334,336,337,338,339,340,341,343,344,345,346,347,353,354,357,365,376,378,379,380,381,382,383,384,385,386,387,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,416,417,418,419,422,423,424,425,426,427,431,432,433,434,437,444,446,448,451,453,454,457,465,466,467,472,473,474,475,476,484,486,487,488,490,491,494,497,501,503,505,506,507,508,511,513,515,518,],[-99,-111,-110,-94,-114,-52,-113,-108,-103,-29,-105,-304,-106,-102,-104,-100,-112,-96,-117,-101,-93,-216,-97,-109,-95,-115,-98,-91,-107,-116,-87,-90,-88,-89,-54,-37,-304,-27,-161,-159,-28,-130,-131,-147,-148,-53,145,-92,-55,-304,190,-304,-17,208,-289,-163,210,-18,-165,-170,-160,-162,-128,-30,-296,-254,-290,-252,-217,-292,-300,-293,-280,-294,-233,-231,-297,-295,-298,-291,-279,-266,-281,-278,325,326,-38,-169,-1,-2,-168,-183,-45,-167,-56,-304,-185,-35,-36,-127,-126,-303,-132,-129,-149,-214,-14,-252,-257,-274,-275,382,-256,-299,-258,-255,415,-304,419,-301,-43,-44,-31,-34,-57,-184,-304,433,-24,-183,434,-23,-304,-164,-166,-171,-133,-134,-150,-151,-13,452,-273,-272,454,-287,-269,-271,-270,456,-218,457,-245,-244,-236,-249,-241,-242,-248,-247,-235,-237,-240,-243,-246,-239,-250,-251,-234,-238,-182,-304,-183,-282,-39,-42,-32,-33,-188,-190,472,473,-192,-186,476,480,-215,482,483,-267,-268,-259,-253,-41,-40,-50,-51,-187,-189,-191,-288,-232,-284,501,-46,-49,-304,510,-283,-276,-47,-48,514,-304,-285,-277,520,-286,]),'UNION':([0,1,3,7,8,10,12,13,18,19,20,22,31,33,34,35,37,41,43,45,46,47,49,50,51,54,55,56,57,58,72,74,76,77,78,80,84,86,87,91,93,96,97,109,123,126,127,128,129,131,132,134,135,142,143,144,145,179,189,206,208,209,210,212,221,223,225,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,327,328,336,343,348,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[16,-68,-304,-94,-65,-66,-304,-52,-62,-304,-64,-29,-63,-96,-60,-117,16,-93,-97,-95,16,-115,-98,16,-67,-116,-69,-84,-9,-10,16,-85,16,-81,-86,-161,16,-302,-61,-53,16,-82,16,16,16,-162,16,-141,-140,16,16,-137,16,-83,16,-70,-30,16,-71,16,-35,16,-36,16,-303,-138,16,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,16,16,16,16,16,-31,-34,16,16,-139,-209,16,-212,-210,-197,-213,-196,16,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'_COMPLEX':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,18,19,20,21,22,23,25,26,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,62,63,65,72,74,76,77,78,80,83,84,85,86,87,88,90,91,92,93,96,97,103,109,115,123,126,127,128,129,130,131,132,133,134,135,142,143,144,145,179,189,206,208,209,210,212,214,216,221,222,223,224,225,228,232,234,235,239,242,246,247,251,252,256,258,263,271,286,316,318,327,328,336,343,347,348,353,354,357,358,359,361,366,369,372,375,417,424,425,443,447,449,450,479,496,498,499,516,517,519,521,],[53,-68,-99,-304,-111,-110,53,-94,-65,-66,-114,-304,-52,-113,-108,-62,-304,-64,-103,-29,-105,-106,-102,-104,-100,-63,-112,-96,-60,-117,-101,53,-93,-216,-97,-109,-95,53,-115,-98,53,-67,-91,-107,-116,-69,-84,-9,-10,-87,-90,-88,-89,53,-85,53,-81,-86,-161,-130,53,-131,-302,-61,-147,-148,-53,53,53,-82,53,-92,53,53,53,-162,53,-141,-140,53,53,53,-128,-137,53,-83,53,-70,-30,53,-71,53,-35,53,-36,53,-127,-126,-303,-132,-138,-129,53,-149,-73,-193,-72,-76,-78,-75,-194,-74,-195,-77,53,53,53,53,53,53,-31,-34,53,53,-133,-139,-134,-150,-151,-209,53,-212,-210,-197,-213,-196,53,-32,-33,-211,-198,-208,-200,-199,-201,-203,-204,-202,-205,-207,-206,]),'CONDOP':([118,150,151,152,156,158,159,160,162,165,168,169,170,172,174,177,178,180,181,182,221,248,261,262,264,266,270,284,285,287,320,378,379,382,383,384,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,419,453,454,457,465,501,503,513,],[-289,-296,-254,-290,-252,-292,-300,-293,-280,-294,-233,315,-297,-295,-298,-291,-279,-266,-281,-278,-303,-289,-252,-257,-274,-275,-256,-299,-258,-255,-301,-273,-272,-269,-271,-270,-245,-244,-236,-249,-241,-242,-248,-247,-235,-237,-240,-243,-246,-239,-250,-251,-234,-238,-282,-267,-268,-259,-253,-283,-276,-277,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'initializer_list_opt':([166,],[293,]),'declaration_specifiers':([0,37,46,72,76,93,109,143,206,209,258,336,343,359,417,],[6,6,92,92,115,92,115,92,115,115,92,115,115,92,115,]),'enumerator_list':([89,136,140,],[139,226,230,]),'designator_list':([166,389,464,504,],[296,296,296,296,]),'type_specifier_no_typeid':([0,6,37,46,50,72,76,84,92,93,97,109,115,123,127,130,131,132,135,143,179,206,209,212,225,258,263,271,286,316,318,336,343,359,417,],[11,62,11,11,11,11,11,11,62,11,11,11,62,11,11,216,11,11,11,11,11,11,11,11,11,11,11,11,11,11,216,11,11,11,11,]),'declarator':([6,92,105,130,146,352,],[66,66,66,217,66,217,]),'type_name':([179,263,271,286,316,],[317,376,385,387,414,]),'parameter_type_list':([76,109,206,336,343,417,],[117,187,338,431,338,338,]),'declaration_list':([46,72,],[93,93,]),'struct_declaration_list':([84,127,135,],[131,212,225,]),'assignment_expression_opt':([112,186,201,342,428,],[191,323,331,435,468,]),'decl_body':([0,37,46,72,93,143,258,359,],[17,17,17,17,17,17,17,17,]),'function_definition':([0,37,],[18,18,]),'pp_directive':([0,37,],[20,20,]),'parameter_list':([76,109,206,336,343,417,],[119,119,119,119,119,119,]),'init_declarator_list_opt':([6,92,],[68,68,]),'typeid_declarator':([6,73,92,105,130,146,352,],[70,111,70,70,70,70,70,]),'struct_declarator':([130,352,],[215,439,]),'expression_statement':([143,243,258,368,373,442,480,482,483,509,514,520,],[232,232,232,232,232,232,232,232,232,232,232,232,]),'abstract_declarator':([115,206,318,417,],[199,340,199,340,]),'declaration_specifiers_no_type_opt':([3,12,19,],[56,74,78,]),'empty':([0,3,6,12,19,24,46,50,72,75,76,92,97,108,109,112,113,115,130,143,166,185,186,201,206,243,258,318,335,336,342,343,359,368,373,389,417,428,429,440,442,464,478,480,482,483,494,504,508,509,514,520,],[27,57,64,57,57,79,95,102,95,79,116,64,102,79,116,193,79,198,218,241,288,79,193,193,341,365,365,198,79,116,193,341,365,365,365,458,341,193,79,365,365,458,365,365,365,365,365,458,365,365,365,365,]),'brace_open':([28,38,83,85,88,90,94,106,110,143,147,243,258,289,368,373,415,442,452,456,457,459,480,482,483,509,514,520,],[84,89,127,135,136,140,143,166,143,143,166,143,143,166,143,143,464,143,464,464,464,166,143,143,143,143,143,143,]),'assignment_expression':([106,112,143,147,179,186,195,196,201,238,243,258,263,265,268,271,272,286,289,315,321,322,342,359,363,367,368,370,373,374,428,440,442,455,459,470,471,478,480,481,482,483,494,502,508,509,514,520,],[167,194,233,167,233,194,329,330,194,233,233,233,233,233,381,233,386,233,167,233,420,421,194,233,233,446,233,233,233,233,194,233,233,484,167,492,493,233,233,233,233,233,233,233,233,233,233,233,]),'cast_expression':([106,112,143,147,149,179,186,195,196,201,219,227,237,238,243,258,263,265,268,271,272,286,289,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,342,349,359,363,367,368,370,373,374,415,428,440,442,452,455,459,462,470,471,478,480,481,482,483,494,502,508,509,514,520,],[168,168,168,168,262,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,465,168,168,168,465,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'id_init_declarator_list_opt':([50,97,],[101,101,]),'declaration':([0,37,46,72,93,143,258,359,],[31,31,96,96,142,234,234,440,]),'enum_specifier':([0,37,46,50,72,76,84,93,97,109,123,127,131,132,135,143,179,206,209,212,225,258,263,271,286,316,336,343,359,417,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'external_declaration':([0,37,],[34,87,]),'designator':([166,296,389,464,504,],[292,394,292,292,292,]),'translation_unit':([0,],[37,]),'designation_opt':([166,389,464,504,],[289,459,289,459,]),'initializer':([106,147,289,459,],[175,260,388,485,]),'iteration_statement':([143,243,258,368,373,442,480,482,483,509,514,520,],[239,239,239,239,239,239,239,239,239,239,239,239,]),'designation':([166,389,464,504,],[291,291,291,291,]),'direct_typeid_noparen_declarator':([115,202,],[205,333,]),'type_qualifier_list_opt':([24,75,108,113,185,335,429,],[81,112,186,195,322,428,470,]),'jump_statement':([143,243,258,368,373,442,480,482,483,509,514,520,],[256,256,256,256,256,256,256,256,256,256,256,256,]),'id_init_declarator':([50,97,],[99,99,]),'parameter_declaration':([76,109,206,209,336,343,417,],[122,122,122,345,122,122,122,]),'declaration_list_opt':([46,72,],[94,110,]),'struct_declaration':([84,127,131,135,212,225,],[134,134,223,134,223,223,]),'identifier':([76,106,109,112,143,147,149,153,163,164,179,186,195,196,201,211,219,227,237,238,243,258,263,265,268,271,272,286,289,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,336,342,349,359,363,367,368,370,373,374,415,428,440,442,452,455,459,462,463,470,471,478,480,481,482,483,494,500,502,508,509,514,520,],[124,182,124,182,182,182,182,182,182,182,182,182,182,182,182,346,182,182,182,182,182,182,182,182,182,182,182,182,182,182,392,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,124,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,487,182,182,182,182,182,182,182,182,511,182,182,182,182,182,]),'struct_declarator_list_opt':([130,],[213,]),'type_qualifier':([0,3,6,12,19,24,37,46,72,75,76,82,84,92,93,108,109,113,114,115,127,130,131,132,135,143,179,184,185,206,209,212,225,258,263,271,286,316,318,335,336,343,359,417,429,430,],[3,3,59,3,3,80,3,3,3,80,3,126,80,59,3,80,3,80,126,59,80,214,80,126,80,3,80,126,80,3,3,80,80,3,80,80,80,80,214,80,3,3,3,3,80,126,]),'typedef_name':([0,37,46,50,72,76,84,93,97,109,123,127,131,132,135,143,179,206,209,212,225,258,263,271,286,316,336,343,359,417,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'abstract_declarator_opt':([115,318,],[197,416,]),'init_declarator_list':([6,92,],[60,60,]),'postfix_expression':([106,112,143,147,149,153,163,164,179,186,195,196,201,219,227,237,238,243,258,263,265,268,271,272,286,289,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,342,349,359,363,367,368,370,373,374,415,428,440,442,452,455,459,462,470,471,478,480,481,482,483,494,502,508,509,514,520,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'pppragma_directive':([0,37,84,127,131,135,143,212,225,243,258,368,373,442,480,482,483,509,514,520,],[8,8,128,128,128,128,242,128,128,242,242,242,242,242,242,242,242,242,242,242,]),'init_declarator':([6,92,105,146,],[61,61,148,259,]),'storage_class_specifier':([0,3,6,12,19,37,46,72,76,92,93,109,115,143,206,209,258,336,343,359,417,],[12,12,63,12,12,12,12,12,12,63,12,12,63,12,12,12,12,12,12,12,12,]),'specifier_qualifier_list':([84,127,131,135,179,212,225,263,271,286,316,],[130,130,130,130,318,130,130,318,318,318,318,]),'struct_or_union_specifier':([0,37,46,50,72,76,84,93,97,109,123,127,131,132,135,143,179,206,209,212,225,258,263,271,286,316,336,343,359,417,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'argument_expression_list':([268,],[380,]),'expression':([143,179,238,243,258,263,265,271,286,315,359,363,368,370,373,374,440,442,478,480,481,482,483,494,502,508,509,514,520,],[245,319,362,245,245,319,377,319,319,413,245,444,245,448,245,451,245,245,245,245,497,245,245,245,512,245,245,245,245,]),'assignment_operator':([156,],[272,]),'selection_statement':([143,243,258,368,373,442,480,482,483,509,514,520,],[246,246,246,246,246,246,246,246,246,246,246,246,]),'statement':([143,243,258,368,373,442,480,482,483,509,514,520,],[247,364,247,447,450,479,496,498,499,516,519,521,]),'unary_expression':([106,112,143,147,149,153,163,164,179,186,195,196,201,219,227,237,238,243,258,263,265,268,271,272,286,289,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,342,349,359,363,367,368,370,373,374,415,428,440,442,452,455,459,462,470,471,478,480,481,482,483,494,502,508,509,514,520,],[156,156,156,156,261,270,285,287,156,156,156,156,156,261,261,261,156,156,156,156,156,156,156,156,156,156,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,156,156,156,156,261,156,156,156,156,156,156,156,261,156,156,156,261,156,156,261,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'initializer_list':([166,464,],[290,489,]),'function_specifier':([0,3,6,12,19,37,46,72,76,92,93,109,115,143,206,209,258,336,343,359,417,],[19,19,65,19,19,19,19,19,19,65,19,19,65,19,19,19,19,19,19,19,19,]),'constant_expression':([219,227,237,294,349,],[350,355,360,391,438,]),'identifier_list_opt':([76,109,336,],[120,188,432,]),'block_item_list_opt':([143,],[249,]),'declaration_specifiers_no_type':([0,3,12,19,37,46,72,76,93,109,143,206,209,258,336,343,359,417,],[50,58,58,58,50,97,97,123,97,123,97,123,123,97,123,123,97,123,]),'type_qualifier_list':([24,75,84,108,113,127,131,135,179,185,212,225,263,271,286,316,335,429,],[82,114,132,184,82,132,132,132,132,82,132,132,132,132,132,132,430,82,]),'pointer':([0,6,37,48,50,73,81,92,97,105,115,130,146,206,318,352,417,],[39,67,39,39,39,67,125,67,39,67,202,67,67,339,418,67,418,]),'compound_statement':([94,110,143,243,258,368,373,442,480,482,483,509,514,520,],[144,189,251,251,251,251,251,251,251,251,251,251,251,251,]),'unified_string_literal':([106,112,143,147,149,153,163,164,179,186,195,196,201,219,227,237,238,243,258,263,265,268,271,272,286,289,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,342,349,359,363,367,368,370,373,374,415,428,440,442,452,455,459,462,470,471,478,480,481,482,483,494,502,508,509,514,520,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'parameter_type_list_opt':([206,343,417,],[337,437,337,]),'block_item':([143,258,],[252,375,]),'typeid_noparen_declarator':([115,],[200,]),'enumerator':([89,136,140,229,],[138,138,138,356,]),'struct_or_union':([0,37,46,50,72,76,84,93,97,109,123,127,131,132,135,143,179,206,209,212,225,258,263,271,286,316,336,343,359,417,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'direct_typeid_declarator':([6,67,73,92,105,130,146,352,],[69,107,69,69,69,69,69,69,]),'constant':([106,112,143,147,149,153,163,164,179,186,195,196,201,219,227,237,238,243,258,263,265,268,271,272,286,289,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,342,349,359,363,367,368,370,373,374,415,428,440,442,452,455,459,462,470,471,478,480,481,482,483,494,502,508,509,514,520,],[178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,]),'conditional_expression':([106,112,143,147,179,186,195,196,201,219,227,237,238,243,258,263,265,268,271,272,286,289,294,315,321,322,342,349,359,363,367,368,370,373,374,428,440,442,455,459,462,470,471,478,480,481,482,483,494,502,508,509,514,520,],[157,157,157,157,157,157,157,157,157,351,351,351,157,157,157,157,157,157,157,157,157,157,351,157,157,157,157,351,157,157,157,157,157,157,157,157,157,157,157,157,486,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'primary_expression':([106,112,143,147,149,153,163,164,179,186,195,196,201,219,227,237,238,243,258,263,265,268,271,272,286,289,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,342,349,359,363,367,368,370,373,374,415,428,440,442,452,455,459,462,470,471,478,480,481,482,483,494,502,508,509,514,520,],[180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,]),'identifier_list':([76,109,336,],[121,121,121,]),'binary_expression':([106,112,143,147,179,186,195,196,201,219,227,237,238,243,258,263,265,268,271,272,286,289,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,342,349,359,363,367,368,370,373,374,428,440,442,455,459,462,470,471,478,480,481,482,483,494,502,508,509,514,520,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,]),'brace_close':([131,139,212,225,226,230,249,293,389,489,504,],[222,228,347,353,354,357,369,390,460,503,513,]),'direct_id_declarator':([0,6,37,39,48,50,67,73,92,97,105,115,130,146,202,206,339,352,],[13,13,13,91,13,13,91,13,13,13,13,13,13,13,91,13,91,13,]),'translation_unit_or_empty':([0,],[40,]),'unary_operator':([106,112,143,147,149,153,163,164,179,186,195,196,201,219,227,237,238,243,258,263,265,268,271,272,286,289,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,342,349,359,363,367,368,370,373,374,415,428,440,442,452,455,459,462,470,471,478,480,481,482,483,494,502,508,509,514,520,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'labeled_statement':([143,243,258,368,373,442,480,482,483,509,514,520,],[235,235,235,235,235,235,235,235,235,235,235,235,]),'id_init_declarator_list':([50,97,],[100,100,]),'offsetof_member_designator':([463,],[488,]),'struct_declarator_list':([130,],[220,]),'id_declarator':([0,6,37,48,50,73,92,97,105,115,130,146,206,352,],[46,72,46,98,104,98,141,104,141,204,141,141,98,141,]),'unified_wstring_literal':([106,112,143,147,149,153,163,164,179,186,195,196,201,219,227,237,238,243,258,263,265,268,271,272,286,289,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,321,322,342,349,359,363,367,368,370,373,374,415,428,440,442,452,455,459,462,470,471,478,480,481,482,483,494,502,508,509,514,520,],[181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,]),'expression_opt':([143,243,258,359,368,373,440,442,478,480,482,483,494,508,509,514,520,],[254,254,254,441,254,254,477,254,495,254,254,254,507,515,254,254,254,]),'type_specifier':([0,37,46,50,72,76,84,93,97,109,123,127,131,132,135,143,179,206,209,212,225,258,263,271,286,316,336,343,359,417,],[52,52,52,103,52,52,133,52,103,52,103,133,133,224,133,52,133,52,52,133,133,52,133,133,133,133,52,52,52,52,]),'direct_abstract_declarator':([115,202,206,318,339,417,418,],[207,334,207,207,334,207,334,]),'block_item_list':([143,],[258,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
