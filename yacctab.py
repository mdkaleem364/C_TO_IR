
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'LOR':([144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,186,187,192,224,267,288,302,304,307,310,311,316,317,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,274,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-242,-247,-246,-234,-243,-251,-237,-244,-240,-245,-248,-239,-236,-238,-235,-241,-250,-249,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'PPPRAGMA':([0,2,4,6,9,10,18,22,28,43,58,74,76,77,83,112,113,115,116,119,120,127,128,190,191,192,194,204,216,219,222,223,226,229,230,231,232,234,236,237,330,338,339,340,342,345,350,352,354,426,427,430,431,433,468,469,473,474,490,494,495,508,514,516,517,519,520,521,],[4,-67,-68,-60,-64,-62,-65,4,-63,-66,-69,-61,-302,4,-81,4,-141,4,-140,-137,4,-70,4,-71,4,-303,-138,4,-194,-72,-74,4,-78,-73,-75,-193,-77,4,-76,-195,-139,-213,4,-210,-212,-209,4,-197,-196,-200,-211,-208,4,-198,4,-199,4,4,-204,-201,-203,4,-205,4,-202,4,-207,-206,]),'MINUSMINUS':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,144,147,148,149,150,154,155,156,157,158,159,160,162,163,165,166,167,169,170,171,172,173,174,177,178,179,181,182,184,185,186,187,188,192,199,206,214,216,219,221,222,223,224,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,308,312,317,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,402,403,404,407,408,412,413,421,423,426,427,430,431,433,435,442,445,446,447,455,456,457,458,461,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,502,503,504,506,508,513,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,158,158,-162,-28,158,-304,-289,158,-28,158,-304,-260,-279,-264,-290,158,-294,-296,-292,-291,-262,-280,-300,302,-266,-293,158,-297,-265,158,-261,-278,158,-295,158,-263,-298,-281,-304,-303,158,158,158,-194,-72,158,-74,158,-289,-78,-73,-75,-193,-77,158,-76,-195,158,-261,158,158,158,-261,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,-299,-220,-224,-229,-219,-228,-221,-223,158,-227,-225,-222,-226,158,-275,-274,158,158,158,-301,158,-11,158,-12,158,-213,158,-210,-212,158,158,-209,158,158,-197,158,-196,158,-261,158,-304,-271,-270,-269,-273,-272,-282,158,-304,-177,-200,-211,-208,158,-198,158,-261,158,-28,-304,158,-267,158,-268,158,-304,-11,158,158,-199,158,158,158,158,-261,158,158,-204,158,-201,-203,158,-283,-276,-304,158,158,-277,-205,158,-202,158,-207,-206,]),'REGISTER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,58,59,60,66,69,71,74,75,76,78,79,81,83,84,86,88,96,99,104,107,127,128,129,130,136,190,192,193,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,327,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[42,-112,-67,42,-68,42,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,42,-29,-100,-106,-63,42,-108,-107,42,-117,-109,-52,-216,42,-102,-94,-66,-93,-111,-115,-99,-113,-103,-110,-98,-69,-90,-87,-88,-89,42,-61,-130,-302,-131,-147,-148,-81,42,-82,42,42,-92,-53,42,-70,42,-83,-30,42,-71,-303,-132,-149,-194,-72,-74,-78,-73,-75,-193,-77,42,-76,-195,42,-35,42,-36,-133,-134,-150,-151,-213,-210,-212,-209,42,-197,-196,-34,-31,42,42,42,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'GE':([144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,186,187,192,224,267,288,302,304,307,310,311,316,317,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,273,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-242,273,273,-234,-243,273,-237,-244,-240,273,273,-239,-236,-238,-235,-241,273,273,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'INT_CONST_HEX':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,147,148,149,150,154,156,158,165,172,174,177,178,181,184,185,188,192,199,206,214,216,219,221,222,223,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,305,308,312,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,413,421,423,426,427,430,431,433,435,442,445,446,447,455,457,461,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,504,506,508,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,162,162,-162,-28,162,-304,162,-28,162,-304,-260,-264,162,-262,162,-265,162,-261,162,162,-263,-304,-303,162,162,162,-194,-72,162,-74,162,-78,-73,-75,-193,-77,162,-76,-195,162,-261,162,162,162,-261,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,-220,-224,-229,-219,-228,-221,-223,162,-227,-225,-222,-226,162,162,162,162,162,-11,162,-12,162,-213,162,-210,-212,162,162,-209,162,162,-197,162,-196,162,-261,162,-304,162,-304,-177,-200,-211,-208,162,-198,162,-261,162,-28,-304,162,162,162,-304,-11,162,162,-199,162,162,162,162,-261,162,162,-204,162,-201,-203,162,-304,162,162,-205,162,-202,162,-207,-206,]),'SHORT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,66,69,71,74,75,76,77,78,79,81,82,83,84,86,88,89,92,96,97,99,104,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,136,143,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[41,-112,-67,-304,-68,41,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,41,-29,-100,-106,-63,-304,-108,-107,41,-117,-109,-52,-216,-304,-102,-94,-66,-93,-111,-115,-99,41,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,-88,-89,41,-61,-130,-302,41,-131,-147,-148,-85,-81,41,-82,41,41,-161,41,-86,-92,-53,41,41,-141,-128,41,-140,41,41,-137,41,-70,41,-83,-30,-162,41,41,41,-71,41,-303,-132,-138,-129,-126,-127,41,-149,-194,-72,-74,-78,-73,-75,-193,-77,41,-76,-195,41,-35,41,-36,41,41,41,41,41,-133,-139,-134,-150,-151,-213,-210,-212,-209,41,-197,-196,-34,-31,41,41,41,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'DEFAULT':([4,58,76,83,128,192,216,219,222,223,226,229,230,231,232,234,236,237,338,339,340,342,345,350,352,354,426,427,430,431,433,468,469,473,474,490,494,495,508,514,516,517,519,520,521,],[-68,-69,-302,-81,211,-303,-194,-72,-74,211,-78,-73,-75,-193,-77,211,-76,-195,-213,211,-210,-212,-209,211,-197,-196,-200,-211,-208,211,-198,211,-199,211,211,-204,-201,-203,211,-205,211,-202,211,-207,-206,]),'TIMESEQUAL':([144,155,157,159,160,162,163,166,167,168,169,170,171,173,179,182,186,187,192,224,267,288,302,304,307,310,311,316,317,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,-280,-300,294,-254,-266,-293,-297,-278,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'RBRACE':([4,58,76,83,113,115,116,119,122,123,124,128,144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,176,179,180,182,183,186,187,188,191,192,194,204,205,208,209,212,216,219,222,226,227,229,230,231,232,234,236,237,267,288,302,304,307,310,311,316,317,321,323,324,328,330,335,336,338,340,342,345,352,354,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,402,403,404,407,408,412,419,420,421,426,427,430,433,456,458,459,462,467,469,484,488,489,490,494,495,502,503,504,513,514,517,520,521,],[-68,-69,-302,-81,-141,192,-140,-137,-155,-152,192,-304,-289,-279,-290,-294,-296,-292,-291,-231,-280,-300,-252,-254,-266,-293,-297,-172,-278,-233,-295,-217,-298,-281,-304,192,-303,-138,192,192,-153,192,-5,-194,-72,-74,-78,192,-73,-75,-193,-77,-6,-76,-195,-256,-299,-275,-274,-258,-252,-257,-255,-301,-21,192,-22,-230,-139,-156,-154,-213,-210,-212,-209,-197,-196,-242,-247,-246,-234,-243,-251,-237,-244,-240,-245,-248,-239,-236,-238,-235,-241,-250,-249,-218,-271,-270,-269,-273,-272,-282,-175,-173,192,-200,-211,-208,-198,-267,-268,-259,-253,-174,-199,-232,192,-176,-204,-201,-203,-283,-276,192,-277,-205,-202,-207,-206,]),'INT_CONST_DEC':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,147,148,149,150,154,156,158,165,172,174,177,178,181,184,185,188,192,199,206,214,216,219,221,222,223,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,305,308,312,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,413,421,423,426,427,430,431,433,435,442,445,446,447,455,457,461,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,504,506,508,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,157,157,-162,-28,157,-304,157,-28,157,-304,-260,-264,157,-262,157,-265,157,-261,157,157,-263,-304,-303,157,157,157,-194,-72,157,-74,157,-78,-73,-75,-193,-77,157,-76,-195,157,-261,157,157,157,-261,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,-220,-224,-229,-219,-228,-221,-223,157,-227,-225,-222,-226,157,157,157,157,157,-11,157,-12,157,-213,157,-210,-212,157,157,-209,157,157,-197,157,-196,157,-261,157,-304,157,-304,-177,-200,-211,-208,157,-198,157,-261,157,-28,-304,157,157,157,-304,-11,157,157,-199,157,157,157,157,-261,157,157,-204,157,-201,-203,157,-304,157,157,-205,157,-202,157,-207,-206,]),'AND':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,144,147,148,149,150,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,177,178,179,180,181,182,184,185,186,187,188,192,199,206,214,216,219,221,222,223,224,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,307,308,310,311,312,316,317,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,413,421,423,426,427,430,431,433,435,442,445,446,447,455,456,457,458,459,461,462,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,502,503,504,506,508,513,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,154,154,-162,-28,154,-304,-289,154,-28,154,-304,-260,-279,-264,-290,154,-294,-296,-292,-291,270,-262,-280,-300,-252,-254,-266,-293,154,-297,-265,154,-261,-278,-233,154,-295,154,-263,-298,-281,-304,-303,154,154,154,-194,-72,154,-74,154,-289,-78,-73,-75,-193,-77,154,-76,-195,154,-261,154,154,154,-261,154,-256,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-299,-220,-224,-229,-219,-228,-221,-223,154,-227,-225,-222,-226,154,-275,-274,154,-258,154,-252,-257,154,-255,-301,154,-11,154,-12,154,-213,154,-210,-212,154,154,-209,154,154,-197,154,-196,154,-261,154,-304,-242,-247,-246,-234,-243,270,-237,-244,-240,-245,270,-239,-236,-238,-235,-241,270,270,-271,-270,-269,-273,-272,-282,154,-304,-177,-200,-211,-208,154,-198,154,-261,154,-28,-304,154,-267,154,-268,-259,154,-253,-304,-11,154,154,-199,154,154,154,154,-261,154,154,-204,154,-201,-203,154,-283,-276,-304,154,154,-277,-205,154,-202,154,-207,-206,]),'EQ':([144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,186,187,192,224,267,288,302,304,307,310,311,316,317,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,278,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-242,278,-246,-234,-243,278,-237,-244,-240,-245,278,-239,-236,-238,-235,-241,278,278,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'WSTRING_LITERAL':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,147,148,149,150,154,156,158,165,167,172,174,177,178,181,184,185,187,188,192,199,206,214,216,219,221,222,223,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,305,308,312,317,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,413,421,423,426,427,430,431,433,435,442,445,446,447,455,457,461,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,504,506,508,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,167,167,-162,-28,167,-304,167,-28,167,-304,-260,-264,167,-262,-300,167,-265,167,-261,167,167,-263,317,-304,-303,167,167,167,-194,-72,167,-74,167,-78,-73,-75,-193,-77,167,-76,-195,167,-261,167,167,167,-261,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,-220,-224,-229,-219,-228,-221,-223,167,-227,-225,-222,-226,167,167,167,167,-301,167,-11,167,-12,167,-213,167,-210,-212,167,167,-209,167,167,-197,167,-196,167,-261,167,-304,167,-304,-177,-200,-211,-208,167,-198,167,-261,167,-28,-304,167,167,167,-304,-11,167,167,-199,167,167,167,167,-261,167,167,-204,167,-201,-203,167,-304,167,167,-205,167,-202,167,-207,-206,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,58,59,60,66,69,71,74,75,76,77,78,79,81,83,84,86,88,91,92,95,96,99,104,106,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,133,135,136,148,150,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,366,367,414,426,427,430,433,438,439,446,447,469,490,494,495,514,517,520,521,],[46,-112,-67,46,-68,46,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,46,-29,-100,-106,-63,46,-108,-107,46,46,-117,-109,-52,-216,46,-102,-94,-66,-93,-111,-115,-99,-113,-103,-110,-98,-69,-90,-87,-88,-89,46,-61,-130,-302,46,-131,-147,-148,-81,46,-82,46,46,-161,46,46,-92,-53,46,46,46,-141,-128,46,-140,46,46,-137,46,-70,46,-83,-30,-162,46,46,46,46,46,46,-71,46,-303,-132,-138,-129,-126,-127,46,-149,-194,-72,-74,-78,-73,-75,-193,-77,46,-76,-195,46,-35,46,-36,46,46,46,46,46,-133,-139,-134,-150,-151,-213,-210,-212,-209,46,-197,-196,-34,-31,46,46,46,46,-200,-211,-208,-198,-33,-32,46,46,-199,-204,-201,-203,-205,-202,-207,-206,]),'EQUALS':([23,38,63,65,68,71,73,102,104,105,122,126,130,144,155,157,159,160,162,163,166,167,168,169,170,171,173,179,182,186,187,189,192,224,255,258,265,266,267,288,302,304,307,310,311,316,317,319,325,357,358,377,378,402,403,404,407,408,412,418,422,438,439,452,453,456,458,459,462,464,502,503,513,],[-29,-52,-54,109,-37,-157,-158,147,-53,-55,206,-157,-30,-289,-279,-290,-294,-296,-292,-291,-280,-300,292,-254,-266,-293,-297,-278,-295,-298,-281,-38,-303,-289,-35,-36,-43,-44,-256,-299,-275,-274,-258,-252,-257,-255,-301,-178,423,-34,-31,-42,-39,-271,-270,-269,-273,-272,-282,-181,-179,-33,-32,-41,-40,-267,-268,-259,-253,-180,-283,-276,-277,]),'CONTINUE':([4,58,76,83,128,192,216,219,222,223,226,229,230,231,232,234,236,237,338,339,340,342,345,350,352,354,426,427,430,431,433,468,469,473,474,490,494,495,508,514,516,517,519,520,521,],[-68,-69,-302,-81,213,-303,-194,-72,-74,213,-78,-73,-75,-193,-77,213,-76,-195,-213,213,-210,-212,-209,213,-197,-196,-200,-211,-208,213,-198,213,-199,213,213,-204,-201,-203,213,-205,213,-202,213,-207,-206,]),'_BOOL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,66,69,71,74,75,76,77,78,79,81,82,83,84,86,88,89,92,96,97,99,104,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,136,143,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[24,-112,-67,-304,-68,24,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,24,-29,-100,-106,-63,-304,-108,-107,24,-117,-109,-52,-216,-304,-102,-94,-66,-93,-111,-115,-99,24,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,-88,-89,24,-61,-130,-302,24,-131,-147,-148,-85,-81,24,-82,24,24,-161,24,-86,-92,-53,24,24,-141,-128,24,-140,24,24,-137,24,-70,24,-83,-30,-162,24,24,24,-71,24,-303,-132,-138,-129,-126,-127,24,-149,-194,-72,-74,-78,-73,-75,-193,-77,24,-76,-195,24,-35,24,-36,24,24,24,24,24,-133,-139,-134,-150,-151,-213,-210,-212,-209,24,-197,-196,-34,-31,24,24,24,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,66,69,71,74,75,76,77,78,79,81,82,83,84,86,88,89,92,96,97,99,104,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,136,143,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[27,-112,-67,-304,-68,27,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,27,-29,-100,-106,-63,-304,-108,-107,27,-117,-109,-52,-216,-304,-102,-94,-66,-93,-111,-115,-99,27,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,-88,-89,27,-61,-130,-302,27,-131,-147,-148,-85,-81,27,-82,27,27,-161,27,-86,-92,-53,27,27,-141,-128,27,-140,27,27,-137,27,-70,27,-83,-30,-162,27,27,27,-71,27,-303,-132,-138,-129,-126,-127,27,-149,-194,-72,-74,-78,-73,-75,-193,-77,27,-76,-195,27,-35,27,-36,27,27,27,27,27,-133,-139,-134,-150,-151,-213,-210,-212,-209,27,-197,-196,-34,-31,27,27,27,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'LSHIFTEQUAL':([144,155,157,159,160,162,163,166,167,168,169,170,171,173,179,182,186,187,192,224,267,288,302,304,307,310,311,316,317,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,-280,-300,300,-254,-266,-293,-297,-278,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'SIZEOF':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,147,148,149,150,154,156,158,165,172,174,177,178,181,184,185,188,192,199,206,214,216,219,221,222,223,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,305,308,312,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,413,421,423,426,427,430,431,433,435,442,445,446,447,455,457,461,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,504,506,508,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,172,172,-162,-28,172,-304,172,-28,172,-304,-260,-264,172,-262,172,-265,172,-261,172,172,-263,-304,-303,172,172,172,-194,-72,172,-74,172,-78,-73,-75,-193,-77,172,-76,-195,172,-261,172,172,172,-261,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-220,-224,-229,-219,-228,-221,-223,172,-227,-225,-222,-226,172,172,172,172,172,-11,172,-12,172,-213,172,-210,-212,172,172,-209,172,172,-197,172,-196,172,-261,172,-304,172,-304,-177,-200,-211,-208,172,-198,172,-261,172,-28,-304,172,172,172,-304,-11,172,172,-199,172,172,172,172,-261,172,172,-204,172,-201,-203,172,-304,172,172,-205,172,-202,172,-207,-206,]),'CASE':([4,58,76,83,128,192,216,219,222,223,226,229,230,231,232,234,236,237,338,339,340,342,345,350,352,354,426,427,430,431,433,468,469,473,474,490,494,495,508,514,516,517,519,520,521,],[-68,-69,-302,-81,221,-303,-194,-72,-74,221,-78,-73,-75,-193,-77,221,-76,-195,-213,221,-210,-212,-209,221,-197,-196,-200,-211,-208,221,-198,221,-199,221,221,-204,-201,-203,221,-205,221,-202,221,-207,-206,]),'WCHAR_CONST':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,147,148,149,150,154,156,158,165,172,174,177,178,181,184,185,188,192,199,206,214,216,219,221,222,223,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,305,308,312,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,413,421,423,426,427,430,431,433,435,442,445,446,447,455,457,461,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,504,506,508,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,173,173,-162,-28,173,-304,173,-28,173,-304,-260,-264,173,-262,173,-265,173,-261,173,173,-263,-304,-303,173,173,173,-194,-72,173,-74,173,-78,-73,-75,-193,-77,173,-76,-195,173,-261,173,173,173,-261,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-220,-224,-229,-219,-228,-221,-223,173,-227,-225,-222,-226,173,173,173,173,173,-11,173,-12,173,-213,173,-210,-212,173,173,-209,173,173,-197,173,-196,173,-261,173,-304,173,-304,-177,-200,-211,-208,173,-198,173,-261,173,-28,-304,173,173,173,-304,-11,173,173,-199,173,173,173,173,-261,173,173,-204,173,-201,-203,173,-304,173,173,-205,173,-202,173,-207,-206,]),'PERIOD':([76,144,155,157,159,160,162,163,166,167,169,170,171,173,179,182,186,187,188,192,224,288,302,304,317,319,325,402,403,404,407,408,412,418,421,422,456,458,463,464,486,487,502,503,504,512,513,518,],[-302,-289,-279,-290,-294,-296,-292,-291,-280,-300,303,-266,-293,-297,-278,-295,-298,-281,320,-303,-289,-299,-275,-274,-301,-178,320,-271,-270,-269,-273,-272,-282,-181,320,-179,-267,-268,320,-180,-284,501,-283,-276,320,-285,-277,-286,]),'SIGNED':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,66,69,71,74,75,76,77,78,79,81,82,83,84,86,88,89,92,96,97,99,104,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,136,143,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[31,-112,-67,-304,-68,31,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,31,-29,-100,-106,-63,-304,-108,-107,31,-117,-109,-52,-216,-304,-102,-94,-66,-93,-111,-115,-99,31,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,-88,-89,31,-61,-130,-302,31,-131,-147,-148,-85,-81,31,-82,31,31,-161,31,-86,-92,-53,31,31,-141,-128,31,-140,31,31,-137,31,-70,31,-83,-30,-162,31,31,31,-71,31,-303,-132,-138,-129,-126,-127,31,-149,-194,-72,-74,-78,-73,-75,-193,-77,31,-76,-195,31,-35,31,-36,31,31,31,31,31,-133,-139,-134,-150,-151,-213,-210,-212,-209,31,-197,-196,-34,-31,31,31,31,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'LNOT':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,147,148,149,150,154,156,158,165,172,174,177,178,181,184,185,188,192,199,206,214,216,219,221,222,223,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,305,308,312,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,413,421,423,426,427,430,431,433,435,442,445,446,447,455,457,461,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,504,506,508,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,174,174,-162,-28,174,-304,174,-28,174,-304,-260,-264,174,-262,174,-265,174,-261,174,174,-263,-304,-303,174,174,174,-194,-72,174,-74,174,-78,-73,-75,-193,-77,174,-76,-195,174,-261,174,174,174,-261,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-220,-224,-229,-219,-228,-221,-223,174,-227,-225,-222,-226,174,174,174,174,174,-11,174,-12,174,-213,174,-210,-212,174,174,-209,174,174,-197,174,-196,174,-261,174,-304,174,-304,-177,-200,-211,-208,174,-198,174,-261,174,-28,-304,174,174,174,-304,-11,174,174,-199,174,174,174,174,-261,174,174,-204,174,-201,-203,174,-304,174,174,-205,174,-202,174,-207,-206,]),'OFFSETOF':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,147,148,149,150,154,156,158,165,172,174,177,178,181,184,185,188,192,199,206,214,216,219,221,222,223,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,305,308,312,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,413,421,423,426,427,430,431,433,435,442,445,446,447,455,457,461,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,504,506,508,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,175,175,-162,-28,175,-304,175,-28,175,-304,-260,-264,175,-262,175,-265,175,-261,175,175,-263,-304,-303,175,175,175,-194,-72,175,-74,175,-78,-73,-75,-193,-77,175,-76,-195,175,-261,175,175,175,-261,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,-220,-224,-229,-219,-228,-221,-223,175,-227,-225,-222,-226,175,175,175,175,175,-11,175,-12,175,-213,175,-210,-212,175,175,-209,175,175,-197,175,-196,175,-261,175,-304,175,-304,-177,-200,-211,-208,175,-198,175,-261,175,-28,-304,175,175,175,-304,-11,175,175,-199,175,175,175,175,-261,175,175,-204,175,-201,-203,175,-304,175,175,-205,175,-202,175,-207,-206,]),'_COMPLEX':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,66,69,71,74,75,76,77,78,79,81,82,83,84,86,88,89,92,96,97,99,104,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,136,143,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[32,-112,-67,-304,-68,32,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,32,-29,-100,-106,-63,-304,-108,-107,32,-117,-109,-52,-216,-304,-102,-94,-66,-93,-111,-115,-99,32,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,-88,-89,32,-61,-130,-302,32,-131,-147,-148,-85,-81,32,-82,32,32,-161,32,-86,-92,-53,32,32,-141,-128,32,-140,32,32,-137,32,-70,32,-83,-30,-162,32,32,32,-71,32,-303,-132,-138,-129,-126,-127,32,-149,-194,-72,-74,-78,-73,-75,-193,-77,32,-76,-195,32,-35,32,-36,32,32,32,32,32,-133,-139,-134,-150,-151,-213,-210,-212,-209,32,-197,-196,-34,-31,32,32,32,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'FLOAT_CONST':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,147,148,149,150,154,156,158,165,172,174,177,178,181,184,185,188,192,199,206,214,216,219,221,222,223,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,305,308,312,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,413,421,423,426,427,430,431,433,435,442,445,446,447,455,457,461,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,504,506,508,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,159,159,-162,-28,159,-304,159,-28,159,-304,-260,-264,159,-262,159,-265,159,-261,159,159,-263,-304,-303,159,159,159,-194,-72,159,-74,159,-78,-73,-75,-193,-77,159,-76,-195,159,-261,159,159,159,-261,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,-220,-224,-229,-219,-228,-221,-223,159,-227,-225,-222,-226,159,159,159,159,159,-11,159,-12,159,-213,159,-210,-212,159,159,-209,159,159,-197,159,-196,159,-261,159,-304,159,-304,-177,-200,-211,-208,159,-198,159,-261,159,-28,-304,159,159,159,-304,-11,159,159,-199,159,159,159,159,-261,159,159,-204,159,-201,-203,159,-304,159,159,-205,159,-202,159,-207,-206,]),'EXTERN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,58,59,60,66,69,71,74,75,76,78,79,81,83,84,86,88,96,99,104,107,127,128,129,130,136,190,192,193,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,327,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[16,-112,-67,16,-68,16,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,16,-29,-100,-106,-63,16,-108,-107,16,-117,-109,-52,-216,16,-102,-94,-66,-93,-111,-115,-99,-113,-103,-110,-98,-69,-90,-87,-88,-89,16,-61,-130,-302,-131,-147,-148,-81,16,-82,16,16,-92,-53,16,-70,16,-83,-30,16,-71,-303,-132,-149,-194,-72,-74,-78,-73,-75,-193,-77,16,-76,-195,16,-35,16,-36,-133,-134,-150,-151,-213,-210,-212,-209,16,-197,-196,-34,-31,16,16,16,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'INLINE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,58,59,60,66,69,71,74,75,76,78,79,81,83,84,86,88,96,99,104,107,127,128,129,130,136,190,192,193,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,327,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[54,-112,-67,54,-68,54,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,54,-29,-100,-106,-63,54,-108,-107,54,-117,-109,-52,-216,54,-102,-94,-66,-93,-111,-115,-99,-113,-103,-110,-98,-69,-90,-87,-88,-89,54,-61,-130,-302,-131,-147,-148,-81,54,-82,54,54,-92,-53,54,-70,54,-83,-30,54,-71,-303,-132,-149,-194,-72,-74,-78,-73,-75,-193,-77,54,-76,-195,54,-35,54,-36,-133,-134,-150,-151,-213,-210,-212,-209,54,-197,-196,-34,-31,54,54,54,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'XOREQUAL':([144,155,157,159,160,162,163,166,167,168,169,170,171,173,179,182,186,187,192,224,267,288,302,304,307,310,311,316,317,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,-280,-300,289,-254,-266,-293,-297,-278,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'UNSIGNED':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,66,69,71,74,75,76,77,78,79,81,82,83,84,86,88,89,92,96,97,99,104,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,136,143,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[37,-112,-67,-304,-68,37,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,37,-29,-100,-106,-63,-304,-108,-107,37,-117,-109,-52,-216,-304,-102,-94,-66,-93,-111,-115,-99,37,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,-88,-89,37,-61,-130,-302,37,-131,-147,-148,-85,-81,37,-82,37,37,-161,37,-86,-92,-53,37,37,-141,-128,37,-140,37,37,-137,37,-70,37,-83,-30,-162,37,37,37,-71,37,-303,-132,-138,-129,-126,-127,37,-149,-194,-72,-74,-78,-73,-75,-193,-77,37,-76,-195,37,-35,37,-36,37,37,37,37,37,-133,-139,-134,-150,-151,-213,-210,-212,-209,37,-197,-196,-34,-31,37,37,37,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'PPHASH':([0,2,4,6,9,10,18,22,28,43,58,74,83,127,190,192,352,],[2,-67,-68,-60,-64,-62,-65,2,-63,-66,-69,-61,-81,-70,-71,-303,-197,]),'GOTO':([4,58,76,83,128,192,216,219,222,223,226,229,230,231,232,234,236,237,338,339,340,342,345,350,352,354,426,427,430,431,433,468,469,473,474,490,494,495,508,514,516,517,519,520,521,],[-68,-69,-302,-81,220,-303,-194,-72,-74,220,-78,-73,-75,-193,-77,220,-76,-195,-213,220,-210,-212,-209,220,-197,-196,-200,-211,-208,220,-198,220,-199,220,220,-204,-201,-203,220,-205,220,-202,220,-207,-206,]),'RSHIFT':([144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,186,187,192,224,267,288,302,304,307,310,311,316,317,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,280,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,280,280,280,-234,280,280,-237,280,-240,280,280,-239,-236,-238,-235,280,280,280,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'BREAK':([4,58,76,83,128,192,216,219,222,223,226,229,230,231,232,234,236,237,338,339,340,342,345,350,352,354,426,427,430,431,433,468,469,473,474,490,494,495,508,514,516,517,519,520,521,],[-68,-69,-302,-81,218,-303,-194,-72,-74,218,-78,-73,-75,-193,-77,218,-76,-195,-213,218,-210,-212,-209,218,-197,-196,-200,-211,-208,218,-198,218,-199,218,218,-204,-201,-203,218,-205,218,-202,218,-207,-206,]),'ANDEQUAL':([144,155,157,159,160,162,163,166,167,168,169,170,171,173,179,182,186,187,192,224,267,288,302,304,307,310,311,316,317,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,-280,-300,293,-254,-266,-293,-297,-278,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'AUTO':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,58,59,60,66,69,71,74,75,76,78,79,81,83,84,86,88,96,99,104,107,127,128,129,130,136,190,192,193,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,327,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[44,-112,-67,44,-68,44,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,44,-29,-100,-106,-63,44,-108,-107,44,-117,-109,-52,-216,44,-102,-94,-66,-93,-111,-115,-99,-113,-103,-110,-98,-69,-90,-87,-88,-89,44,-61,-130,-302,-131,-147,-148,-81,44,-82,44,44,-92,-53,44,-70,44,-83,-30,44,-71,-303,-132,-149,-194,-72,-74,-78,-73,-75,-193,-77,44,-76,-195,44,-35,44,-36,-133,-134,-150,-151,-213,-210,-212,-209,44,-197,-196,-34,-31,44,44,44,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'CONDOP':([144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,186,187,192,224,267,288,302,304,307,310,311,316,317,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,282,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-242,-247,-246,-234,-243,-251,-237,-244,-240,-245,-248,-239,-236,-238,-235,-241,-250,-249,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'VOID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,66,69,71,74,75,76,77,78,79,81,82,83,84,86,88,89,92,96,97,99,104,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,136,143,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[47,-112,-67,-304,-68,47,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,47,-29,-100,-106,-63,-304,-108,-107,47,-117,-109,-52,-216,-304,-102,-94,-66,-93,-111,-115,-99,47,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,-88,-89,47,-61,-130,-302,47,-131,-147,-148,-85,-81,47,-82,47,47,-161,47,-86,-92,-53,47,47,-141,-128,47,-140,47,47,-137,47,-70,47,-83,-30,-162,47,47,47,-71,47,-303,-132,-138,-129,-126,-127,47,-149,-194,-72,-74,-78,-73,-75,-193,-77,47,-76,-195,47,-35,47,-36,47,47,47,47,47,-133,-139,-134,-150,-151,-213,-210,-212,-209,47,-197,-196,-34,-31,47,47,47,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'ELSE':([4,58,192,219,222,226,229,230,232,236,338,340,342,345,352,426,427,430,433,469,490,494,495,514,517,520,521,],[-68,-69,-303,-72,-74,-78,-73,-75,-77,-76,-213,-210,-212,-209,-197,-200,-211,-208,-198,-199,-204,508,-203,-205,-202,-207,-206,]),'DO':([4,58,76,83,128,192,216,219,222,223,226,229,230,231,232,234,236,237,338,339,340,342,345,350,352,354,426,427,430,431,433,468,469,473,474,490,494,495,508,514,516,517,519,520,521,],[-68,-69,-302,-81,223,-303,-194,-72,-74,223,-78,-73,-75,-193,-77,223,-76,-195,-213,223,-210,-212,-209,223,-197,-196,-200,-211,-208,223,-198,223,-199,223,223,-204,-201,-203,223,-205,223,-202,223,-207,-206,]),'STRUCT':([0,2,3,4,6,9,10,12,16,18,19,21,22,23,28,29,33,36,38,40,42,43,44,46,48,54,55,56,57,58,71,74,76,77,82,83,86,88,89,92,96,97,104,107,112,113,115,116,117,119,120,127,128,129,130,131,143,181,190,191,192,194,204,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,330,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[49,-67,-304,-68,-60,-64,-62,-95,-96,-65,-97,-116,49,-29,-63,-304,49,-117,-52,-304,-94,-66,-93,-115,49,-98,-84,-9,-10,-69,49,-61,-302,49,-85,-81,-82,49,49,-161,49,-86,-53,49,49,-141,49,-140,49,-137,49,-70,49,-83,-30,-162,49,49,-71,49,-303,-138,49,-194,-72,-74,-78,-73,-75,-193,-77,49,-76,-195,49,-35,49,-36,49,49,49,49,-139,-213,-210,-212,-209,49,-197,-196,-34,-31,49,49,49,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'ELLIPSIS':([257,],[375,]),'WHILE':([4,58,76,83,128,192,216,219,222,223,226,229,230,231,232,234,236,237,338,339,340,342,345,349,350,352,354,426,427,430,431,433,468,469,473,474,490,494,495,508,514,516,517,519,520,521,],[-68,-69,-302,-81,217,-303,-194,-72,-74,217,-78,-73,-75,-193,-77,217,-76,-195,-213,217,-210,-212,-209,432,217,-197,-196,-200,-211,-208,217,-198,217,-199,217,217,-204,-201,-203,217,-205,217,-202,217,-207,-206,]),'INT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,66,69,71,74,75,76,77,78,79,81,82,83,84,86,88,89,92,96,97,99,104,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,136,143,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[52,-112,-67,-304,-68,52,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,52,-29,-100,-106,-63,-304,-108,-107,52,-117,-109,-52,-216,-304,-102,-94,-66,-93,-111,-115,-99,52,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,-88,-89,52,-61,-130,-302,52,-131,-147,-148,-85,-81,52,-82,52,52,-161,52,-86,-92,-53,52,52,-141,-128,52,-140,52,52,-137,52,-70,52,-83,-30,-162,52,52,52,-71,52,-303,-132,-138,-129,-126,-127,52,-149,-194,-72,-74,-78,-73,-75,-193,-77,52,-76,-195,52,-35,52,-36,52,52,52,52,52,-133,-139,-134,-150,-151,-213,-210,-212,-209,52,-197,-196,-34,-31,52,52,52,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'LAND':([144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,186,187,192,224,267,288,302,304,307,310,311,316,317,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,286,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-242,-247,-246,-234,-243,286,-237,-244,-240,-245,-248,-239,-236,-238,-235,-241,-250,-249,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'__INT128':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,66,69,71,74,75,76,77,78,79,81,82,83,84,86,88,89,92,96,97,99,104,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,136,143,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[53,-112,-67,-304,-68,53,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,53,-29,-100,-106,-63,-304,-108,-107,53,-117,-109,-52,-216,-304,-102,-94,-66,-93,-111,-115,-99,53,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,-88,-89,53,-61,-130,-302,53,-131,-147,-148,-85,-81,53,-82,53,53,-161,53,-86,-92,-53,53,53,-141,-128,53,-140,53,53,-137,53,-70,53,-83,-30,-162,53,53,53,-71,53,-303,-132,-138,-129,-126,-127,53,-149,-194,-72,-74,-78,-73,-75,-193,-77,53,-76,-195,53,-35,53,-36,53,53,53,53,53,-133,-139,-134,-150,-151,-213,-210,-212,-209,53,-197,-196,-34,-31,53,53,53,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'MINUS':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,144,147,148,149,150,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,177,178,179,180,181,182,184,185,186,187,188,192,199,206,214,216,219,221,222,223,224,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,307,308,310,311,312,316,317,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,413,421,423,426,427,430,431,433,435,442,445,446,447,455,456,457,458,459,461,462,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,502,503,504,506,508,513,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,185,185,-162,-28,185,-304,-289,185,-28,185,-304,-260,-279,-264,-290,185,-294,-296,-292,-291,283,-262,-280,-300,-252,-254,-266,-293,185,-297,-265,185,-261,-278,-233,185,-295,185,-263,-298,-281,-304,-303,185,185,185,-194,-72,185,-74,185,-289,-78,-73,-75,-193,-77,185,-76,-195,185,-261,185,185,185,-261,185,-256,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,-299,-220,-224,-229,-219,-228,-221,-223,185,-227,-225,-222,-226,185,-275,-274,185,-258,185,-252,-257,185,-255,-301,185,-11,185,-12,185,-213,185,-210,-212,185,185,-209,185,185,-197,185,-196,185,-261,185,-304,283,283,283,-234,283,283,-237,283,283,283,283,283,-236,-238,-235,283,283,283,-271,-270,-269,-273,-272,-282,185,-304,-177,-200,-211,-208,185,-198,185,-261,185,-28,-304,185,-267,185,-268,-259,185,-253,-304,-11,185,185,-199,185,185,185,185,-261,185,185,-204,185,-201,-203,185,-283,-276,-304,185,185,-277,-205,185,-202,185,-207,-206,]),'LBRACKET':([1,7,8,11,12,13,15,16,19,21,23,24,27,31,32,35,36,37,38,39,41,42,44,45,46,47,51,52,53,54,59,60,63,66,68,69,75,76,78,79,81,91,92,93,94,99,104,105,114,130,131,132,136,144,155,157,159,160,162,163,166,167,169,170,171,173,179,182,186,187,188,189,192,193,195,196,197,207,224,245,246,250,251,252,255,258,265,266,288,302,304,315,317,319,325,327,333,334,337,357,358,362,363,368,377,378,402,403,404,407,408,412,414,415,418,421,422,438,439,440,441,450,451,452,453,456,458,463,464,475,476,477,482,483,486,487,496,497,502,503,504,509,510,512,513,518,],[-112,-104,-101,-91,-95,-114,-105,-96,-97,-116,-29,-100,-106,-108,-107,-304,-117,-109,95,-216,-102,-94,-93,-111,-115,-99,-113,-103,-110,-98,-90,-87,106,-88,-37,-89,-130,-302,-131,-147,-148,-28,-161,-27,-159,-92,95,106,-128,-30,-162,-160,244,-289,-279,-290,-294,-296,-292,-291,-280,-300,301,-266,-293,-297,-278,-295,-298,-281,318,-38,-303,-132,-129,-126,-127,-149,-289,244,364,366,244,-45,-35,-36,-43,-44,-299,-275,-274,244,-301,-178,318,-133,-134,-150,-151,-34,-31,366,364,244,-42,-39,-271,-270,-269,-273,-272,-282,244,244,-181,318,-179,-33,-32,-190,-188,-192,-186,-41,-40,-267,-268,318,-180,-189,-187,-191,-50,-51,-284,500,-49,-46,-283,-276,318,-48,-47,-285,-277,-286,]),'LE':([144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,186,187,192,224,267,288,302,304,307,310,311,316,317,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,269,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-242,269,269,-234,-243,269,-237,-244,-240,269,269,-239,-236,-238,-235,-241,269,269,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,66,69,71,74,75,76,77,78,79,81,82,83,84,86,88,89,92,96,97,99,104,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,136,143,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[15,-112,-67,-304,-68,15,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,15,-29,-100,-106,-63,-304,-108,-107,15,-117,-109,-52,-216,-304,-102,-94,-66,-93,-111,-115,-99,15,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,-88,-89,15,-61,-130,-302,15,-131,-147,-148,-85,-81,15,-82,15,15,-161,15,-86,-92,-53,15,15,-141,-128,15,-140,15,15,-137,15,-70,15,-83,-30,-162,15,15,15,-71,15,-303,-132,-138,-129,-126,-127,15,-149,-194,-72,-74,-78,-73,-75,-193,-77,15,-76,-195,15,-35,15,-36,15,15,15,15,15,-133,-139,-134,-150,-151,-213,-210,-212,-209,15,-197,-196,-34,-31,15,15,15,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'FOR':([4,58,76,83,128,192,216,219,222,223,226,229,230,231,232,234,236,237,338,339,340,342,345,350,352,354,426,427,430,431,433,468,469,473,474,490,494,495,508,514,516,517,519,520,521,],[-68,-69,-302,-81,225,-303,-194,-72,-74,225,-78,-73,-75,-193,-77,225,-76,-195,-213,225,-210,-212,-209,225,-197,-196,-200,-211,-208,225,-198,225,-199,225,225,-204,-201,-203,225,-205,225,-202,225,-207,-206,]),'NE':([144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,186,187,192,224,267,288,302,304,307,310,311,316,317,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,271,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-242,271,-246,-234,-243,271,-237,-244,-240,-245,271,-239,-236,-238,-235,-241,271,271,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'RESTRICT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,58,59,60,66,69,71,74,75,76,77,78,79,81,83,84,86,88,91,92,95,96,99,104,106,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,133,135,136,148,150,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,366,367,414,426,427,430,433,438,439,446,447,469,490,494,495,514,517,520,521,],[21,-112,-67,21,-68,21,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,21,-29,-100,-106,-63,21,-108,-107,21,21,-117,-109,-52,-216,21,-102,-94,-66,-93,-111,-115,-99,-113,-103,-110,-98,-69,-90,-87,-88,-89,21,-61,-130,-302,21,-131,-147,-148,-81,21,-82,21,21,-161,21,21,-92,-53,21,21,21,-141,-128,21,-140,21,21,-137,21,-70,21,-83,-30,-162,21,21,21,21,21,21,-71,21,-303,-132,-138,-129,-126,-127,21,-149,-194,-72,-74,-78,-73,-75,-193,-77,21,-76,-195,21,-35,21,-36,21,21,21,21,21,-133,-139,-134,-150,-151,-213,-210,-212,-209,21,-197,-196,-34,-31,21,21,21,21,-200,-211,-208,-198,-33,-32,21,21,-199,-204,-201,-203,-205,-202,-207,-206,]),'PLUSEQUAL':([144,155,157,159,160,162,163,166,167,168,169,170,171,173,179,182,186,187,192,224,267,288,302,304,307,310,311,316,317,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,-280,-300,290,-254,-266,-293,-297,-278,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'LBRACE':([4,14,23,25,26,33,38,49,58,71,75,76,78,79,81,83,85,86,87,88,104,109,111,128,129,130,147,188,192,216,219,222,223,226,229,230,231,232,234,236,237,255,258,321,322,326,338,339,340,342,345,350,352,354,357,358,413,421,423,426,427,430,431,433,438,439,454,459,461,463,465,466,468,469,473,474,490,494,495,504,508,514,516,517,519,520,521,],[-68,-136,-29,76,76,-304,-52,-135,-69,-304,76,-302,76,76,76,-81,-7,-82,76,-8,-53,76,76,76,-83,-30,76,-304,-303,-194,-72,-74,76,-78,-73,-75,-193,-77,76,-76,-195,-35,-36,-11,76,-12,-213,76,-210,-212,-209,76,-197,-196,-34,-31,76,-304,-177,-200,-211,-208,76,-198,-33,-32,76,76,76,-304,-11,76,76,-199,76,76,-204,-201,-203,-304,76,-205,76,-202,76,-207,-206,]),'RPAREN':([1,7,8,11,12,13,15,16,19,21,23,24,27,31,32,35,36,37,38,39,41,42,44,45,46,47,51,52,53,54,59,60,63,66,68,69,75,78,79,81,90,91,92,93,94,96,99,104,105,107,110,114,130,131,132,136,137,138,139,140,141,142,144,145,151,152,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,183,186,187,189,192,193,195,196,197,207,215,233,245,246,247,248,249,250,251,252,253,254,255,258,265,266,267,288,302,304,305,307,310,311,313,314,315,316,317,327,333,334,337,348,357,358,362,363,365,367,368,369,370,371,372,373,374,375,377,378,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,402,403,404,405,406,407,408,409,411,412,414,415,416,428,429,436,437,438,439,440,441,444,448,449,450,451,452,453,456,458,459,462,475,476,477,482,483,484,485,486,487,491,493,496,497,502,503,506,507,509,510,512,513,515,518,],[-112,-104,-101,-91,-95,-114,-105,-96,-97,-116,-29,-100,-106,-108,-107,-304,-117,-109,-52,-216,-102,-94,-93,-111,-115,-99,-113,-103,-110,-98,-90,-87,-54,-88,-37,-89,-130,-131,-147,-148,130,-28,-161,-27,-159,-304,-92,-53,-55,-304,189,-128,-30,-162,-160,-304,-165,-17,-170,255,-18,-163,-289,258,265,266,-279,-290,-294,-296,-292,-291,-231,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-217,-298,-281,-38,-303,-132,-129,-126,-127,-149,-14,-214,-183,-185,-1,-169,-2,-56,-304,-45,-168,-167,-35,-36,-43,-44,-256,-299,-275,-274,404,-258,-252,-257,412,413,-304,-255,-301,-133,-134,-150,-151,-13,-34,-31,-57,-184,-304,-304,-183,450,-23,451,-24,-171,-166,-164,-42,-39,454,-242,-247,-246,-234,-243,-251,-237,-244,-240,-245,-248,-239,-236,-238,-235,-241,-250,-249,-218,-271,-270,-269,458,-287,-273,-272,459,461,-282,-304,-183,-182,-215,468,473,474,-33,-32,-190,-188,477,482,483,-192,-186,-41,-40,-267,-268,-259,-253,-189,-187,-191,-50,-51,-232,-288,-284,502,505,-304,-49,-46,-283,-276,-304,516,-48,-47,-285,-277,519,-286,]),'LONG':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,66,69,71,74,75,76,77,78,79,81,82,83,84,86,88,89,92,96,97,99,104,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,136,143,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[7,-112,-67,-304,-68,7,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,7,-29,-100,-106,-63,-304,-108,-107,7,-117,-109,-52,-216,-304,-102,-94,-66,-93,-111,-115,-99,7,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,-88,-89,7,-61,-130,-302,7,-131,-147,-148,-85,-81,7,-82,7,7,-161,7,-86,-92,-53,7,7,-141,-128,7,-140,7,7,-137,7,-70,7,-83,-30,-162,7,7,7,-71,7,-303,-132,-138,-129,-126,-127,7,-149,-194,-72,-74,-78,-73,-75,-193,-77,7,-76,-195,7,-35,7,-36,7,7,7,7,7,-133,-139,-134,-150,-151,-213,-210,-212,-209,7,-197,-196,-34,-31,7,7,7,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'OREQUAL':([144,155,157,159,160,162,163,166,167,168,169,170,171,173,179,182,186,187,192,224,267,288,302,304,307,310,311,316,317,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,-280,-300,291,-254,-266,-293,-297,-278,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'CHAR_CONST':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,147,148,149,150,154,156,158,165,172,174,177,178,181,184,185,188,192,199,206,214,216,219,221,222,223,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,305,308,312,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,413,421,423,426,427,430,431,433,435,442,445,446,447,455,457,461,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,504,506,508,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,160,160,-162,-28,160,-304,160,-28,160,-304,-260,-264,160,-262,160,-265,160,-261,160,160,-263,-304,-303,160,160,160,-194,-72,160,-74,160,-78,-73,-75,-193,-77,160,-76,-195,160,-261,160,160,160,-261,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,-220,-224,-229,-219,-228,-221,-223,160,-227,-225,-222,-226,160,160,160,160,160,-11,160,-12,160,-213,160,-210,-212,160,160,-209,160,160,-197,160,-196,160,-261,160,-304,160,-304,-177,-200,-211,-208,160,-198,160,-261,160,-28,-304,160,160,160,-304,-11,160,160,-199,160,160,160,160,-261,160,160,-204,160,-201,-203,160,-304,160,160,-205,160,-202,160,-207,-206,]),'STATIC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,58,59,60,66,69,71,74,75,76,78,79,81,83,84,86,88,92,95,96,99,104,106,107,127,128,129,130,131,133,136,148,190,192,193,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,327,333,334,337,338,340,342,345,351,352,354,357,358,365,366,367,414,426,427,430,433,438,439,446,469,490,494,495,514,517,520,521,],[12,-112,-67,12,-68,12,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,12,-29,-100,-106,-63,12,-108,-107,12,-117,-109,-52,-216,12,-102,-94,-66,-93,-111,-115,-99,-113,-103,-110,-98,-69,-90,-87,-88,-89,12,-61,-130,-302,-131,-147,-148,-81,12,-82,12,-161,135,12,-92,-53,150,12,-70,12,-83,-30,-162,238,12,261,-71,-303,-132,-149,-194,-72,-74,-78,-73,-75,-193,-77,12,-76,-195,12,-35,12,-36,-133,-134,-150,-151,-213,-210,-212,-209,12,-197,-196,-34,-31,12,447,12,12,-200,-211,-208,-198,-33,-32,480,-199,-204,-201,-203,-205,-202,-207,-206,]),'PLUS':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,144,147,148,149,150,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,177,178,179,180,181,182,184,185,186,187,188,192,199,206,214,216,219,221,222,223,224,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,307,308,310,311,312,316,317,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,413,421,423,426,427,430,431,433,435,442,445,446,447,455,456,457,458,459,461,462,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,502,503,504,506,508,513,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,165,165,-162,-28,165,-304,-289,165,-28,165,-304,-260,-279,-264,-290,165,-294,-296,-292,-291,275,-262,-280,-300,-252,-254,-266,-293,165,-297,-265,165,-261,-278,-233,165,-295,165,-263,-298,-281,-304,-303,165,165,165,-194,-72,165,-74,165,-289,-78,-73,-75,-193,-77,165,-76,-195,165,-261,165,165,165,-261,165,-256,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-299,-220,-224,-229,-219,-228,-221,-223,165,-227,-225,-222,-226,165,-275,-274,165,-258,165,-252,-257,165,-255,-301,165,-11,165,-12,165,-213,165,-210,-212,165,165,-209,165,165,-197,165,-196,165,-261,165,-304,275,275,275,-234,275,275,-237,275,275,275,275,275,-236,-238,-235,275,275,275,-271,-270,-269,-273,-272,-282,165,-304,-177,-200,-211,-208,165,-198,165,-261,165,-28,-304,165,-267,165,-268,-259,165,-253,-304,-11,165,165,-199,165,165,165,165,-261,165,165,-204,165,-201,-203,165,-283,-276,-304,165,165,-277,-205,165,-202,165,-207,-206,]),'GT':([144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,186,187,192,224,267,288,302,304,307,310,311,316,317,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,276,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-242,276,276,-234,-243,276,-237,-244,-240,276,276,-239,-236,-238,-235,-241,276,276,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'INT_CONST_OCT':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,147,148,149,150,154,156,158,165,172,174,177,178,181,184,185,188,192,199,206,214,216,219,221,222,223,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,305,308,312,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,413,421,423,426,427,430,431,433,435,442,445,446,447,455,457,461,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,504,506,508,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,163,163,-162,-28,163,-304,163,-28,163,-304,-260,-264,163,-262,163,-265,163,-261,163,163,-263,-304,-303,163,163,163,-194,-72,163,-74,163,-78,-73,-75,-193,-77,163,-76,-195,163,-261,163,163,163,-261,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,-220,-224,-229,-219,-228,-221,-223,163,-227,-225,-222,-226,163,163,163,163,163,-11,163,-12,163,-213,163,-210,-212,163,163,-209,163,163,-197,163,-196,163,-261,163,-304,163,-304,-177,-200,-211,-208,163,-198,163,-261,163,-28,-304,163,163,163,-304,-11,163,163,-199,163,163,163,163,-261,163,163,-204,163,-201,-203,163,-304,163,163,-205,163,-202,163,-207,-206,]),'DIVIDE':([144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,186,187,192,224,267,288,302,304,307,310,311,316,317,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,284,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,284,284,284,-234,284,284,284,284,284,284,284,284,-236,284,-235,284,284,284,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'IF':([4,58,76,83,128,192,216,219,222,223,226,229,230,231,232,234,236,237,338,339,340,342,345,350,352,354,426,427,430,431,433,468,469,473,474,490,494,495,508,514,516,517,519,520,521,],[-68,-69,-302,-81,228,-303,-194,-72,-74,228,-78,-73,-75,-193,-77,228,-76,-195,-213,228,-210,-212,-209,228,-197,-196,-200,-211,-208,228,-198,228,-199,228,228,-204,-201,-203,228,-205,228,-202,228,-207,-206,]),'TYPEDEF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,58,59,60,66,69,71,74,75,76,78,79,81,83,84,86,88,96,99,104,107,127,128,129,130,136,190,192,193,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,327,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[19,-112,-67,19,-68,19,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,19,-29,-100,-106,-63,19,-108,-107,19,-117,-109,-52,-216,19,-102,-94,-66,-93,-111,-115,-99,-113,-103,-110,-98,-69,-90,-87,-88,-89,19,-61,-130,-302,-131,-147,-148,-81,19,-82,19,19,-92,-53,19,-70,19,-83,-30,19,-71,-303,-132,-149,-194,-72,-74,-78,-73,-75,-193,-77,19,-76,-195,19,-35,19,-36,-133,-134,-150,-151,-213,-210,-212,-209,19,-197,-196,-34,-31,19,19,19,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'PPPRAGMASTR':([4,],[58,]),'MODEQUAL':([144,155,157,159,160,162,163,166,167,168,169,170,171,173,179,182,186,187,192,224,267,288,302,304,307,310,311,316,317,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,-280,-300,295,-254,-266,-293,-297,-278,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'RETURN':([4,58,76,83,128,192,216,219,222,223,226,229,230,231,232,234,236,237,338,339,340,342,345,350,352,354,426,427,430,431,433,468,469,473,474,490,494,495,508,514,516,517,519,520,521,],[-68,-69,-302,-81,214,-303,-194,-72,-74,214,-78,-73,-75,-193,-77,214,-76,-195,-213,214,-210,-212,-209,214,-197,-196,-200,-211,-208,214,-198,214,-199,214,214,-204,-201,-203,214,-205,214,-202,214,-207,-206,]),'COMMA':([1,7,8,11,12,13,15,16,19,21,23,24,27,31,32,35,36,37,38,39,41,42,44,45,46,47,51,52,53,54,59,60,63,64,65,66,68,69,71,72,73,75,78,79,81,91,92,93,94,99,101,102,103,104,105,114,122,123,124,126,130,131,132,136,137,139,141,142,144,153,155,157,159,160,161,162,163,164,166,167,168,169,170,171,173,176,179,180,182,183,186,187,189,192,193,195,196,197,201,202,203,205,207,208,209,215,224,233,245,246,247,248,249,250,252,253,254,255,258,259,260,265,266,267,288,302,304,307,310,311,313,315,316,317,324,327,328,329,333,334,335,336,337,341,357,358,362,363,373,374,377,378,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,410,412,415,416,419,420,424,425,428,429,436,437,438,439,440,441,450,451,452,453,456,458,459,462,467,475,476,477,482,483,484,485,488,489,491,496,497,502,503,509,510,511,513,],[-112,-104,-101,-91,-95,-114,-105,-96,-97,-116,-29,-100,-106,-108,-107,-304,-117,-109,-52,-216,-102,-94,-93,-111,-115,-99,-113,-103,-110,-98,-90,-87,-54,108,-120,-88,-37,-89,-157,-118,-158,-130,-131,-147,-148,-28,-161,-27,-159,-92,146,-124,-122,-53,-55,-128,-155,-152,208,-157,-30,-162,-160,-304,-165,-170,256,257,-289,-119,-279,-290,-294,-296,-121,-292,-291,-231,-280,-300,-252,-254,-266,-293,-297,-172,-278,-233,-295,-217,-298,-281,-38,-303,-132,-129,-126,-127,-142,331,-144,208,-149,-153,208,343,-289,-214,-183,-185,-1,-169,-2,-56,-45,-168,-167,-35,-36,-123,-125,-43,-44,-256,-299,-275,-274,-258,-252,-257,343,-304,-255,-301,421,-133,-230,-146,-134,-150,-156,-154,-151,343,-34,-31,-57,-184,-171,-166,-42,-39,-242,-247,-246,-234,-243,-251,-237,-244,-240,-245,-248,-239,-236,343,-238,-235,-241,-250,-249,-218,343,-271,-270,-269,457,-287,-273,-272,460,-282,-183,-182,-175,-173,-143,-145,-215,343,343,343,-33,-32,-190,-188,-192,-186,-41,-40,-267,-268,-259,-253,-174,-189,-187,-191,-50,-51,-232,-288,504,-176,343,-49,-46,-283,-276,-48,-47,343,-277,]),'DIVEQUAL':([144,155,157,159,160,162,163,166,167,168,169,170,171,173,179,182,186,187,192,224,267,288,302,304,307,310,311,316,317,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,-280,-300,299,-254,-266,-293,-297,-278,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'COLON':([1,7,8,13,15,21,23,24,27,31,32,36,37,38,39,41,45,46,47,51,52,53,63,68,73,75,78,79,81,104,105,114,118,126,130,144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,183,186,187,189,192,193,195,196,197,203,207,211,224,233,255,258,265,266,267,288,302,304,307,310,311,316,317,327,328,331,333,334,337,347,357,358,377,378,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,402,403,404,407,408,412,428,438,439,452,453,456,458,459,462,484,502,503,513,],[-112,-104,-101,-114,-105,-116,-29,-100,-106,-108,-107,-117,-109,-52,-216,-102,-111,-115,-99,-113,-103,-110,-54,-37,-158,-130,-131,-147,-148,-53,-55,-128,199,-157,-30,-289,-279,-290,-294,-296,-292,-291,-231,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-217,-298,-281,-38,-303,-132,-129,-126,-127,332,-149,339,350,-214,-35,-36,-43,-44,-256,-299,-275,-274,-258,-252,-257,-255,-301,-133,-230,199,-134,-150,-151,431,-34,-31,-42,-39,-242,-247,-246,-234,-243,-251,-237,-244,-240,-245,-248,-239,-236,455,-238,-235,-241,-250,-249,-218,-271,-270,-269,-273,-272,-282,-215,-33,-32,-41,-40,-267,-268,-259,-253,-232,-283,-276,-277,]),'ENUM':([0,2,3,4,6,9,10,12,16,18,19,21,22,23,28,29,33,36,38,40,42,43,44,46,48,54,55,56,57,58,71,74,76,77,82,83,86,88,89,92,96,97,104,107,112,113,115,116,117,119,120,127,128,129,130,131,143,181,190,191,192,194,204,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,330,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[26,-67,-304,-68,-60,-64,-62,-95,-96,-65,-97,-116,26,-29,-63,-304,26,-117,-52,-304,-94,-66,-93,-115,26,-98,-84,-9,-10,-69,26,-61,-302,26,-85,-81,-82,26,26,-161,26,-86,-53,26,26,-141,26,-140,26,-137,26,-70,26,-83,-30,-162,26,26,-71,26,-303,-138,26,-194,-72,-74,-78,-73,-75,-193,-77,26,-76,-195,26,-35,26,-36,26,26,26,26,-139,-213,-210,-212,-209,26,-197,-196,-34,-31,26,26,26,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'INT_CONST_BIN':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,147,148,149,150,154,156,158,165,172,174,177,178,181,184,185,188,192,199,206,214,216,219,221,222,223,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,305,308,312,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,413,421,423,426,427,430,431,433,435,442,445,446,447,455,457,461,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,504,506,508,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,171,171,-162,-28,171,-304,171,-28,171,-304,-260,-264,171,-262,171,-265,171,-261,171,171,-263,-304,-303,171,171,171,-194,-72,171,-74,171,-78,-73,-75,-193,-77,171,-76,-195,171,-261,171,171,171,-261,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,-220,-224,-229,-219,-228,-221,-223,171,-227,-225,-222,-226,171,171,171,171,171,-11,171,-12,171,-213,171,-210,-212,171,171,-209,171,171,-197,171,-196,171,-261,171,-304,171,-304,-177,-200,-211,-208,171,-198,171,-261,171,-28,-304,171,171,171,-304,-11,171,171,-199,171,171,171,171,-261,171,171,-204,171,-201,-203,171,-304,171,171,-205,171,-202,171,-207,-206,]),'RSHIFTEQUAL':([144,155,157,159,160,162,163,166,167,168,169,170,171,173,179,182,186,187,192,224,267,288,302,304,307,310,311,316,317,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,-280,-300,297,-254,-266,-293,-297,-278,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'UNION':([0,2,3,4,6,9,10,12,16,18,19,21,22,23,28,29,33,36,38,40,42,43,44,46,48,54,55,56,57,58,71,74,76,77,82,83,86,88,89,92,96,97,104,107,112,113,115,116,117,119,120,127,128,129,130,131,143,181,190,191,192,194,204,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,330,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[14,-67,-304,-68,-60,-64,-62,-95,-96,-65,-97,-116,14,-29,-63,-304,14,-117,-52,-304,-94,-66,-93,-115,14,-98,-84,-9,-10,-69,14,-61,-302,14,-85,-81,-82,14,14,-161,14,-86,-53,14,14,-141,14,-140,14,-137,14,-70,14,-83,-30,-162,14,14,-71,14,-303,-138,14,-194,-72,-74,-78,-73,-75,-193,-77,14,-76,-195,14,-35,14,-36,14,14,14,14,-139,-213,-210,-212,-209,14,-197,-196,-34,-31,14,14,14,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'ARROW':([144,155,157,159,160,162,163,166,167,169,170,171,173,179,182,186,187,192,224,288,302,304,317,402,403,404,407,408,412,456,458,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,-280,-300,306,-266,-293,-297,-278,-295,-298,-281,-303,-289,-299,-275,-274,-301,-271,-270,-269,-273,-272,-282,-267,-268,-283,-276,-277,]),'CHAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,66,69,71,74,75,76,77,78,79,81,82,83,84,86,88,89,92,96,97,99,104,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,136,143,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[8,-112,-67,-304,-68,8,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,8,-29,-100,-106,-63,-304,-108,-107,8,-117,-109,-52,-216,-304,-102,-94,-66,-93,-111,-115,-99,8,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,-88,-89,8,-61,-130,-302,8,-131,-147,-148,-85,-81,8,-82,8,8,-161,8,-86,-92,-53,8,8,-141,-128,8,-140,8,8,-137,8,-70,8,-83,-30,-162,8,8,8,-71,8,-303,-132,-138,-129,-126,-127,8,-149,-194,-72,-74,-78,-73,-75,-193,-77,8,-76,-195,8,-35,8,-36,8,8,8,8,8,-133,-139,-134,-150,-151,-213,-210,-212,-209,8,-197,-196,-34,-31,8,8,8,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'LT':([144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,186,187,192,224,267,288,302,304,307,310,311,316,317,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,285,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-242,285,285,-234,-243,285,-237,-244,-240,285,285,-239,-236,-238,-235,-241,285,285,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,63,66,67,68,69,74,75,76,78,79,81,82,83,84,89,91,92,93,94,95,97,99,104,105,106,108,109,114,118,127,128,130,131,132,133,134,135,136,144,146,147,148,149,150,154,155,156,157,158,159,160,162,163,165,166,167,169,170,171,172,173,174,175,177,178,179,181,182,184,185,186,187,188,189,190,192,193,195,196,197,199,206,207,214,216,217,219,221,222,223,224,225,226,228,229,230,231,232,234,235,236,237,238,241,243,244,245,246,250,251,252,255,258,261,262,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,308,312,315,317,318,321,322,326,327,331,332,333,334,337,338,339,340,342,343,344,345,350,351,352,353,354,355,357,358,360,362,363,364,366,368,377,378,402,403,404,407,408,412,413,414,415,421,423,426,427,430,431,432,433,435,438,439,440,441,442,445,446,447,450,451,452,453,455,456,457,458,461,463,465,466,468,469,470,471,473,474,475,476,477,478,480,481,482,483,490,493,494,495,496,497,500,502,503,504,506,508,509,510,513,514,516,517,519,520,521,],[34,-112,-67,-304,-68,67,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,34,-29,-100,-106,-63,-304,-108,-107,34,-304,-117,-109,96,-216,-304,-102,-94,-66,-93,-111,-115,-99,34,34,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,67,107,-88,67,-37,-89,-61,-130,-302,-131,-147,-148,-85,-81,67,34,-28,-161,-27,-159,-304,-86,-92,96,107,-304,67,181,-128,67,-70,181,-30,-162,-160,-28,181,-304,251,-289,67,181,-28,181,-304,-260,-279,-264,-290,268,-294,-296,-292,-291,-262,-280,-300,305,-266,-293,308,-297,-265,309,312,-261,-278,181,-295,268,-263,-298,-281,-304,-38,-71,-303,-132,-129,-126,-127,312,312,-149,181,-194,344,-72,312,-74,181,-289,351,-78,353,-73,-75,-193,-77,181,355,-76,-195,181,-261,181,181,251,365,367,251,-45,-35,-36,181,-261,181,-43,-44,181,312,312,312,312,312,312,312,312,312,312,312,312,312,181,312,312,312,312,312,-299,-220,-224,-229,-219,-228,-221,-223,181,-227,-225,-222,-226,181,-275,-274,181,181,181,414,-301,312,-11,181,-12,-133,67,312,-134,-150,-151,-213,181,-210,-212,181,181,-209,181,181,-197,181,-196,181,-34,-31,-261,367,365,181,-304,251,-42,-39,-271,-270,-269,-273,-272,-282,312,414,414,-304,-177,-200,-211,-208,181,470,-198,181,-33,-32,-190,-188,-261,181,-28,-304,-192,-186,-41,-40,312,-267,181,-268,312,-304,-11,181,181,-199,181,181,181,181,-189,-187,-191,-261,181,181,-50,-51,-204,181,-201,-203,-49,-46,181,-283,-276,-304,181,181,-48,-47,-277,-205,181,-202,181,-207,-206,]),'NOT':([4,21,36,46,58,76,83,91,92,93,95,106,109,128,131,133,134,135,147,148,149,150,154,156,158,165,172,174,177,178,181,184,185,188,192,199,206,214,216,219,221,222,223,226,229,230,231,232,234,236,237,238,241,243,244,261,262,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,305,308,312,318,321,322,326,332,338,339,340,342,343,344,345,350,351,352,353,354,355,360,364,366,413,421,423,426,427,430,431,433,435,442,445,446,447,455,457,461,463,465,466,468,469,470,471,473,474,478,480,481,490,493,494,495,500,504,506,508,514,516,517,519,520,521,],[-68,-116,-117,-115,-69,-302,-81,-28,-161,-27,-304,-304,156,156,-162,-28,156,-304,156,-28,156,-304,-260,-264,156,-262,156,-265,156,-261,156,156,-263,-304,-303,156,156,156,-194,-72,156,-74,156,-78,-73,-75,-193,-77,156,-76,-195,156,-261,156,156,156,-261,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-220,-224,-229,-219,-228,-221,-223,156,-227,-225,-222,-226,156,156,156,156,156,-11,156,-12,156,-213,156,-210,-212,156,156,-209,156,156,-197,156,-196,156,-261,156,-304,156,-304,-177,-200,-211,-208,156,-198,156,-261,156,-28,-304,156,156,156,-304,-11,156,156,-199,156,156,156,156,-261,156,156,-204,156,-201,-203,156,-304,156,156,-205,156,-202,156,-207,-206,]),'MINUSEQUAL':([144,155,157,159,160,162,163,166,167,168,169,170,171,173,179,182,186,187,192,224,267,288,302,304,307,310,311,316,317,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,-280,-300,298,-254,-266,-293,-297,-278,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'TYPEID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,21,22,23,24,25,26,27,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,66,67,69,71,74,75,76,77,78,79,81,82,83,84,86,88,89,91,92,93,94,96,97,99,104,107,108,112,113,114,115,116,117,118,119,120,127,128,129,130,131,132,136,143,146,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,245,251,255,257,258,268,303,306,308,309,312,327,330,331,333,334,337,338,340,342,345,351,352,354,357,358,365,367,414,426,427,430,433,438,439,469,490,494,495,514,517,520,521,],[39,-112,-67,-304,-68,68,-60,-104,-101,-64,-62,-91,-95,-114,-136,-105,-96,-65,-97,-116,39,-29,-100,78,81,-106,-63,-304,-108,-107,39,-304,-117,-109,-52,-216,-304,-102,-94,-66,-93,-111,-115,-99,39,-135,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,68,-88,68,-89,39,-61,-130,-302,39,-131,-147,-148,-85,-81,68,-82,39,39,-28,-161,-27,-159,39,-86,-92,-53,39,68,39,-141,-128,39,-140,39,68,-137,39,-70,39,-83,-30,-162,-160,252,39,68,39,-71,39,-303,-132,-138,-129,-126,-127,39,-149,-194,-72,-74,-78,-73,-75,-193,-77,39,-76,-195,252,39,-35,39,-36,39,402,407,39,39,39,-133,-139,68,-134,-150,-151,-213,-210,-212,-209,39,-197,-196,-34,-31,39,39,39,-200,-211,-208,-198,-33,-32,-199,-204,-201,-203,-205,-202,-207,-206,]),'LSHIFT':([144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,186,187,192,224,267,288,302,304,307,310,311,316,317,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,277,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,277,277,277,-234,277,277,-237,277,-240,277,277,-239,-236,-238,-235,277,277,277,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'RBRACKET':([21,36,46,92,93,95,106,131,133,134,144,148,149,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,183,186,187,192,233,239,240,241,242,244,262,263,267,288,302,304,307,310,311,316,317,328,356,359,360,361,364,366,376,379,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,401,402,403,404,407,408,412,417,428,442,443,445,446,456,458,459,462,478,479,484,498,499,502,503,511,513,],[-116,-117,-115,-161,-27,-304,-304,-162,-28,-304,-289,-28,-304,-279,-290,-294,-296,-292,-291,-231,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-217,-298,-281,-303,-214,-3,-4,357,358,-304,377,378,-256,-299,-275,-274,-258,-252,-257,-255,-301,-230,438,439,440,441,-304,-304,452,453,-242,-247,-246,-234,-243,-251,-237,-244,-240,-245,-248,-239,-236,-238,-235,-241,-250,-249,-218,456,-271,-270,-269,-273,-272,-282,464,-215,475,476,-304,-28,-267,-268,-259,-253,496,497,-232,509,510,-283,-276,518,-277,]),'SEMI':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,89,97,98,99,100,101,102,103,104,105,112,113,114,115,116,118,119,120,126,127,128,130,144,153,155,157,159,160,161,162,163,164,166,167,168,169,170,171,173,176,179,180,182,183,186,187,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,207,210,212,213,214,215,216,218,219,222,223,224,226,229,230,231,232,233,234,236,237,255,258,259,260,265,266,267,288,302,304,307,310,311,316,317,327,328,329,330,333,334,337,338,339,340,341,342,345,346,348,350,351,352,354,357,358,377,378,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,402,403,404,407,408,412,420,424,425,426,427,428,430,431,433,434,435,438,439,452,453,456,458,459,462,467,468,469,471,472,473,474,484,490,492,494,495,502,503,505,508,513,514,516,517,519,520,521,],[43,-112,-67,-304,-68,-304,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,43,-29,-100,-106,-63,-304,83,-108,-107,-117,-109,-52,-216,-304,-102,-94,-66,-93,-111,-115,-99,-304,-113,-103,-110,-98,-84,-9,-10,-69,-90,-87,-19,-54,-20,-120,-88,-37,-89,-79,-157,-118,-158,-61,-130,-302,116,-131,-147,-148,-85,-81,-304,-304,-86,-80,-92,-15,-16,-124,-122,-53,-55,116,-141,-128,116,-140,-304,-137,116,-157,-70,-304,-30,-289,-119,-279,-290,-294,-296,-121,-292,-291,-231,-280,-300,-252,-254,-266,-293,-297,-172,-278,-233,-295,-217,-298,-281,-38,-71,116,-303,-132,-138,-129,-126,-127,-25,330,-142,-26,-144,116,-149,338,-13,340,342,-14,-194,345,-72,-74,-304,-289,-78,-73,-75,-193,-77,-214,-304,-76,-195,-35,-36,-123,-125,-43,-44,-256,-299,-275,-274,-258,-252,-257,-255,-301,-133,-230,-146,-139,-134,-150,-151,-213,-304,-210,427,-212,-209,430,-13,-304,-304,-197,-196,-34,-31,-42,-39,-242,-247,-246,-234,-243,-251,-237,-244,-240,-245,-248,-239,-236,-238,-235,-241,-250,-249,-218,-271,-270,-269,-273,-272,-282,-173,-143,-145,-200,-211,-215,-208,-304,-198,471,-304,-33,-32,-41,-40,-267,-268,-259,-253,-174,-304,-199,-304,493,-304,-304,-232,-204,506,-201,-203,-283,-276,514,-304,-277,-205,-304,-202,-304,-207,-206,]),'VOLATILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,18,19,21,22,23,24,27,28,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,58,59,60,66,69,71,74,75,76,77,78,79,81,83,84,86,88,91,92,95,96,99,104,106,107,112,113,114,115,116,117,118,119,120,127,128,129,130,131,133,135,136,148,150,181,190,191,192,193,194,195,196,197,204,207,216,219,222,226,229,230,231,232,234,236,237,251,255,257,258,268,308,309,312,315,327,330,333,334,337,338,340,342,345,351,352,354,357,358,365,366,367,414,426,427,430,433,438,439,446,447,469,490,494,495,514,517,520,521,],[36,-112,-67,36,-68,36,-60,-104,-101,-64,-62,-91,-95,-114,-105,-96,-65,-97,-116,36,-29,-100,-106,-63,36,-108,-107,36,36,-117,-109,-52,-216,36,-102,-94,-66,-93,-111,-115,-99,-113,-103,-110,-98,-69,-90,-87,-88,-89,36,-61,-130,-302,36,-131,-147,-148,-81,36,-82,36,36,-161,36,36,-92,-53,36,36,36,-141,-128,36,-140,36,36,-137,36,-70,36,-83,-30,-162,36,36,36,36,36,36,-71,36,-303,-132,-138,-129,-126,-127,36,-149,-194,-72,-74,-78,-73,-75,-193,-77,36,-76,-195,36,-35,36,-36,36,36,36,36,36,-133,-139,-134,-150,-151,-213,-210,-212,-209,36,-197,-196,-34,-31,36,36,36,36,-200,-211,-208,-198,-33,-32,36,36,-199,-204,-201,-203,-205,-202,-207,-206,]),'OR':([144,155,157,159,160,162,163,164,166,167,168,169,170,171,173,179,180,182,186,187,192,224,267,288,302,304,307,310,311,316,317,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,402,403,404,407,408,412,456,458,459,462,502,503,513,],[-289,-279,-290,-294,-296,-292,-291,279,-280,-300,-252,-254,-266,-293,-297,-278,-233,-295,-298,-281,-303,-289,-256,-299,-275,-274,-258,-252,-257,-255,-301,-242,-247,-246,-234,-243,279,-237,-244,-240,-245,-248,-239,-236,-238,-235,-241,279,-249,-271,-270,-269,-273,-272,-282,-267,-268,-259,-253,-283,-276,-277,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'id_init_declarator_list_opt':([48,89,],[98,98,]),'enum_specifier':([0,22,33,48,71,77,88,89,96,107,112,115,117,120,128,143,181,191,204,234,251,257,268,308,309,312,351,365,367,414,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'struct_declaration_list':([77,112,120,],[115,191,204,]),'expression_opt':([128,223,234,339,350,351,431,435,468,471,473,474,493,506,508,516,519,],[210,210,210,210,210,434,210,472,210,492,210,210,507,515,210,210,210,]),'initializer':([109,147,322,466,],[161,260,419,489,]),'primary_expression':([109,128,134,147,149,158,172,177,181,184,199,206,214,221,223,234,238,243,244,261,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,296,301,305,308,312,318,322,332,339,343,344,350,351,353,355,364,413,431,435,445,455,457,461,466,468,470,471,473,474,480,481,493,500,506,508,516,519,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'initializer_list_opt':([188,],[323,]),'offsetof_member_designator':([460,],[487,]),'translation_unit_or_empty':([0,],[17,]),'function_specifier':([0,3,5,22,29,33,40,71,84,88,96,107,128,136,234,251,257,351,365,367,414,],[40,40,69,40,40,40,40,40,69,40,40,40,40,69,40,40,40,40,40,40,40,]),'function_definition':([0,22,],[10,10,]),'unary_expression':([109,128,134,147,149,158,172,177,181,184,199,206,214,221,223,234,238,243,244,261,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,296,301,305,308,312,318,322,332,339,343,344,350,351,353,355,364,413,431,435,445,455,457,461,466,468,470,471,473,474,480,481,493,500,506,508,516,519,],[168,168,168,168,168,267,307,310,168,316,310,310,168,310,168,168,168,168,168,168,168,168,310,310,310,310,310,310,310,310,310,310,310,310,310,168,310,310,310,310,310,168,168,168,168,168,310,168,310,168,168,168,168,168,168,168,168,310,168,168,168,310,168,310,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'empty':([0,3,5,29,33,35,40,48,71,84,89,95,96,106,107,118,128,134,135,136,149,150,188,223,234,244,251,315,339,350,351,364,365,366,367,414,421,431,435,445,447,463,468,471,473,474,493,504,506,508,516,519,],[20,56,62,56,85,93,56,100,85,62,100,93,138,93,138,198,212,239,93,247,239,93,321,348,348,239,370,247,348,348,348,239,370,93,138,370,465,348,348,239,93,465,348,348,348,348,348,465,348,348,348,348,]),'abstract_declarator_opt':([136,315,],[248,416,]),'translation_unit':([0,],[22,]),'unified_string_literal':([109,128,134,147,149,158,172,177,181,184,199,206,214,221,223,234,238,243,244,261,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,296,301,305,308,312,318,322,332,339,343,344,350,351,353,355,364,413,431,435,445,455,457,461,466,468,470,471,473,474,480,481,493,500,506,508,516,519,],[166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'init_declarator_list':([5,84,],[64,64,]),'id_init_declarator_list':([48,89,],[101,101,]),'unary_operator':([109,128,134,147,149,158,172,177,181,184,199,206,214,221,223,234,238,243,244,261,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,296,301,305,308,312,318,322,332,339,343,344,350,351,353,355,364,413,431,435,445,455,457,461,466,468,470,471,473,474,480,481,493,500,506,508,516,519,],[177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,]),'statement':([128,223,234,339,350,431,468,473,474,508,516,519,],[216,349,216,426,433,469,490,494,495,517,520,521,]),'struct_declarator_list_opt':([118,],[200,]),'argument_expression_list':([305,],[405,]),'declaration_specifiers_no_type_opt':([3,29,40,],[55,82,97,]),'direct_typeid_noparen_declarator':([136,245,],[250,362,]),'storage_class_specifier':([0,3,5,22,29,33,40,71,84,88,96,107,128,136,234,251,257,351,365,367,414,],[29,29,66,29,29,29,29,29,66,29,29,29,29,66,29,29,29,29,29,29,29,]),'labeled_statement':([128,223,234,339,350,431,468,473,474,508,516,519,],[219,219,219,219,219,219,219,219,219,219,219,219,]),'enumerator':([80,121,125,208,],[123,123,123,336,]),'designation_opt':([188,421,463,504,],[322,466,322,466,]),'id_declarator':([0,5,22,34,48,67,84,89,108,118,136,146,251,331,],[33,71,33,90,102,90,126,102,126,126,254,126,90,126,]),'expression':([128,181,214,223,234,268,282,301,308,312,339,344,350,351,353,355,431,435,468,470,471,473,474,493,500,506,508,516,519,],[215,313,341,215,215,313,394,401,313,313,215,429,215,215,436,437,215,215,215,491,215,215,215,215,511,215,215,215,215,]),'parameter_declaration':([96,107,251,257,365,367,414,],[137,137,137,374,137,137,137,]),'identifier_list':([96,107,367,],[141,141,141,]),'declaration_list_opt':([33,71,],[87,111,]),'type_qualifier_list':([35,77,95,106,112,115,120,135,150,181,191,204,268,308,309,312,366,447,],[91,117,133,148,117,117,117,91,91,117,117,117,117,117,117,117,446,91,]),'typedef_name':([0,22,33,48,71,77,88,89,96,107,112,115,117,120,128,143,181,191,204,234,251,257,268,308,309,312,351,365,367,414,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'compound_statement':([87,111,128,223,234,339,350,431,468,473,474,508,516,519,],[127,190,222,222,222,222,222,222,222,222,222,222,222,222,]),'parameter_list':([96,107,251,365,367,414,],[142,142,142,142,142,142,]),'struct_or_union':([0,22,33,48,71,77,88,89,96,107,112,115,117,120,128,143,181,191,204,234,251,257,268,308,309,312,351,365,367,414,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'id_init_declarator':([48,89,],[103,103,]),'constant_expression':([199,206,221,318,332,],[329,335,347,417,425,]),'type_specifier':([0,22,33,48,71,77,88,89,96,107,112,115,117,120,128,143,181,191,204,234,251,257,268,308,309,312,351,365,367,414,],[11,11,11,99,11,114,11,99,11,11,114,114,195,114,11,99,114,114,114,11,11,11,114,114,114,114,11,11,11,11,]),'unified_wstring_literal':([109,128,134,147,149,158,172,177,181,184,199,206,214,221,223,234,238,243,244,261,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,296,301,305,308,312,318,322,332,339,343,344,350,351,353,355,364,413,431,435,445,455,457,461,466,468,470,471,473,474,480,481,493,500,506,508,516,519,],[187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,]),'typeid_declarator':([5,67,84,108,118,146,331,],[73,110,73,73,73,73,73,]),'block_item':([128,234,],[237,354,]),'constant':([109,128,134,147,149,158,172,177,181,184,199,206,214,221,223,234,238,243,244,261,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,296,301,305,308,312,318,322,332,339,343,344,350,351,353,355,364,413,431,435,445,455,457,461,466,468,470,471,473,474,480,481,493,500,506,508,516,519,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'type_name':([181,268,308,309,312,],[314,380,409,410,411,]),'type_specifier_no_typeid':([0,5,22,33,48,71,77,84,88,89,96,107,112,115,117,118,120,128,136,143,181,191,204,234,251,257,268,308,309,312,315,351,365,367,414,],[13,59,13,13,13,13,13,59,13,13,13,13,13,13,13,196,13,13,59,13,13,13,13,13,13,13,13,13,13,13,196,13,13,13,13,]),'designator':([188,325,421,463,504,],[319,422,319,319,319,]),'type_qualifier':([0,3,5,22,29,33,35,40,71,77,84,88,91,95,96,106,107,112,115,117,118,120,128,133,135,136,148,150,181,191,204,234,251,257,268,308,309,312,315,351,365,366,367,414,446,447,],[3,3,60,3,3,3,92,3,3,92,60,3,131,92,3,92,3,92,92,131,197,92,3,131,92,60,131,92,92,92,92,3,3,3,92,92,92,92,197,3,3,92,3,3,131,92,]),'declaration_specifiers':([0,22,33,71,88,96,107,128,234,251,257,351,365,367,414,],[5,5,84,84,84,136,136,84,84,136,136,84,136,136,136,]),'direct_typeid_declarator':([5,61,67,84,108,118,146,331,],[63,105,63,63,63,63,63,63,]),'pp_directive':([0,22,],[9,9,]),'pointer':([0,5,22,34,48,67,84,89,94,108,118,136,146,251,315,331,414,],[50,61,50,50,50,61,61,50,132,61,61,245,61,368,415,61,415,]),'external_declaration':([0,22,],[6,74,]),'binary_expression':([109,128,134,147,149,181,199,206,214,221,223,234,238,243,244,261,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,296,301,305,308,312,318,322,332,339,343,344,350,351,353,355,364,431,435,445,455,457,466,468,470,471,473,474,480,481,493,500,506,508,516,519,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,381,382,383,384,385,386,387,388,389,390,391,392,393,164,395,396,397,398,399,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'designation':([188,421,463,504,],[326,326,326,326,]),'decl_body':([0,22,33,71,88,128,234,351,],[30,30,30,30,30,30,30,30,]),'pppragma_directive':([0,22,77,112,115,120,128,191,204,223,234,339,350,431,468,473,474,508,516,519,],[18,18,113,113,113,113,226,113,113,226,226,226,226,226,226,226,226,226,226,226,]),'assignment_operator':([168,],[296,]),'postfix_expression':([109,128,134,147,149,158,172,177,181,184,199,206,214,221,223,234,238,243,244,261,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,296,301,305,308,312,318,322,332,339,343,344,350,351,353,355,364,413,431,435,445,455,457,461,466,468,470,471,473,474,480,481,493,500,506,508,516,519,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,]),'specifier_qualifier_list':([77,112,115,120,181,191,204,268,308,309,312,],[118,118,118,118,315,118,118,315,315,315,315,]),'parameter_type_list_opt':([251,365,414,],[369,444,369,]),'brace_close':([115,124,191,204,205,209,227,323,421,488,504,],[193,207,327,333,334,337,352,420,467,503,513,]),'direct_abstract_declarator':([136,245,251,315,368,414,415,],[246,363,246,246,363,246,363,]),'abstract_declarator':([136,251,315,414,],[249,371,249,371,]),'expression_statement':([128,223,234,339,350,431,468,473,474,508,516,519,],[229,229,229,229,229,229,229,229,229,229,229,229,]),'struct_declaration':([77,112,115,120,191,204,],[119,119,194,119,194,194,]),'initializer_list':([188,463,],[324,488,]),'init_declarator_list_opt':([5,84,],[70,70,]),'declarator':([5,84,108,118,146,331,],[65,65,65,203,65,203,]),'selection_statement':([128,223,234,339,350,431,468,473,474,508,516,519,],[230,230,230,230,230,230,230,230,230,230,230,230,]),'declaration':([0,22,33,71,88,128,234,351,],[28,28,86,86,129,231,231,435,]),'identifier':([96,107,109,128,134,147,149,158,172,177,181,184,199,206,214,221,223,234,238,243,244,256,261,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,296,301,305,308,312,318,320,322,332,339,343,344,350,351,353,355,364,367,413,431,435,445,455,457,460,461,466,468,470,471,473,474,480,481,493,500,501,506,508,516,519,],[139,139,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,373,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,418,179,179,179,179,179,179,179,179,179,179,139,179,179,179,179,179,179,486,179,179,179,179,179,179,179,179,179,179,179,512,179,179,179,179,]),'jump_statement':([128,223,234,339,350,431,468,473,474,508,516,519,],[232,232,232,232,232,232,232,232,232,232,232,232,]),'struct_declarator':([118,331,],[201,424,]),'parameter_type_list':([96,107,251,365,367,414,],[140,151,372,372,448,372,]),'type_qualifier_list_opt':([35,95,106,135,150,366,447,],[94,134,149,243,264,445,481,]),'assignment_expression':([109,128,134,147,149,181,214,223,234,238,243,244,261,264,268,282,296,301,305,308,312,322,339,343,344,350,351,353,355,364,431,435,445,457,466,468,470,471,473,474,480,481,493,500,506,508,516,519,],[176,233,240,176,240,233,233,233,233,356,359,240,376,379,233,233,400,233,406,233,233,176,233,428,233,233,233,233,233,240,233,233,240,485,176,233,233,233,233,233,498,499,233,233,233,233,233,233,]),'declaration_list':([33,71,],[88,88,]),'block_item_list_opt':([128,],[227,]),'direct_id_declarator':([0,5,22,34,48,50,61,67,84,89,108,118,136,146,245,251,331,368,],[38,38,38,38,38,104,104,38,38,38,38,38,38,38,104,38,38,104,]),'typeid_noparen_declarator':([136,],[253,]),'cast_expression':([109,128,134,147,149,177,181,199,206,214,221,223,234,238,243,244,261,264,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,296,301,305,308,312,318,322,332,339,343,344,350,351,353,355,364,413,431,435,445,455,457,461,466,468,470,471,473,474,480,481,493,500,506,508,516,519,],[180,180,180,180,180,311,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,462,180,180,180,180,180,462,180,180,180,180,180,180,180,180,180,180,180,180,180,180,]),'block_item_list':([128,],[234,]),'assignment_expression_opt':([134,149,244,364,445,],[242,263,361,443,479,]),'enumerator_list':([80,121,125,],[124,205,209,]),'iteration_statement':([128,223,234,339,350,431,468,473,474,508,516,519,],[236,236,236,236,236,236,236,236,236,236,236,236,]),'conditional_expression':([109,128,134,147,149,181,199,206,214,221,223,234,238,243,244,261,264,268,282,296,301,305,308,312,318,322,332,339,343,344,350,351,353,355,364,431,435,445,455,457,466,468,470,471,473,474,480,481,493,500,506,508,516,519,],[183,183,183,183,183,183,328,328,183,328,183,183,183,183,183,183,183,183,183,183,183,183,183,183,328,183,328,183,183,183,183,183,183,183,183,183,183,183,484,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,]),'declaration_specifiers_no_type':([0,3,22,29,33,40,71,88,96,107,128,234,251,257,351,365,367,414,],[48,57,48,57,89,57,89,89,143,143,89,89,143,143,89,143,143,143,]),'init_declarator':([5,84,108,146,],[72,72,153,259,]),'struct_or_union_specifier':([0,22,33,48,71,77,88,89,96,107,112,115,117,120,128,143,181,191,204,234,251,257,268,308,309,312,351,365,367,414,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'identifier_list_opt':([96,107,367,],[145,152,449,]),'designator_list':([188,421,463,504,],[325,325,325,325,]),'struct_declarator_list':([118,],[202,]),'brace_open':([25,26,75,78,79,81,87,109,111,128,147,223,234,322,339,350,413,431,454,459,461,466,468,473,474,508,516,519,],[77,80,112,120,121,125,128,188,128,128,188,128,128,188,128,128,463,128,463,463,463,188,128,128,128,128,128,128,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
