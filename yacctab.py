
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'OFFSETOF':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,129,143,146,153,155,157,163,166,167,169,173,174,179,180,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,234,235,245,256,257,258,263,266,269,270,274,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,504,508,509,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,149,-162,-28,149,-304,149,149,-304,-260,-304,149,-262,149,-261,149,149,149,-264,-263,-265,-303,149,149,-261,149,149,-74,149,149,-75,-194,-193,149,-72,-73,149,-76,-78,-77,-195,149,-28,149,-304,149,-11,149,-12,149,149,-228,-221,-229,-222,-225,-227,-220,-223,149,-219,-224,-226,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,-304,149,-261,149,-213,-209,149,149,149,-196,-210,149,-212,149,149,-197,149,149,-261,149,-177,-304,149,-28,149,-304,-261,149,149,-200,-211,-198,-208,-11,149,-304,149,149,149,149,-261,149,149,-199,149,149,149,149,-204,-201,149,-203,149,-304,149,149,-205,-202,149,149,-207,-206,]),'REGISTER':([0,1,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,67,68,69,75,77,81,83,84,85,86,87,89,90,92,99,100,101,107,119,128,129,131,147,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,241,255,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[49,-91,-216,-109,49,-112,-115,-98,-107,49,-65,-66,-110,-62,49,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,49,49,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,49,-92,-53,-148,-302,-147,-61,49,49,49,-82,-69,-131,-130,-81,-89,-88,-87,49,-90,-30,49,-70,49,-83,49,-149,-303,49,49,-35,-36,-74,-75,-194,-193,49,-72,-73,-76,-78,-77,-195,-132,-71,-151,-150,-34,-31,49,49,-213,-209,49,-196,-210,-212,-197,-134,-133,49,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'HEX_FLOAT_CONST':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,129,143,146,153,155,157,163,166,167,169,173,174,179,180,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,234,235,245,256,257,258,263,266,269,270,274,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,504,508,509,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,150,-162,-28,150,-304,150,150,-304,-260,-304,150,-262,150,-261,150,150,150,-264,-263,-265,-303,150,150,-261,150,150,-74,150,150,-75,-194,-193,150,-72,-73,150,-76,-78,-77,-195,150,-28,150,-304,150,-11,150,-12,150,150,-228,-221,-229,-222,-225,-227,-220,-223,150,-219,-224,-226,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,-304,150,-261,150,-213,-209,150,150,150,-196,-210,150,-212,150,150,-197,150,150,-261,150,-177,-304,150,-28,150,-304,-261,150,150,-200,-211,-198,-208,-11,150,-304,150,150,150,150,-261,150,150,-199,150,150,150,150,-204,-201,150,-203,150,-304,150,150,-205,-202,150,150,-207,-206,]),'TYPEID':([0,1,2,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,52,53,54,55,61,62,63,64,66,67,68,69,71,72,73,74,75,77,78,79,81,83,84,85,86,87,88,89,90,92,93,94,99,100,101,105,107,113,114,118,119,128,129,131,132,133,134,135,136,137,138,139,140,144,147,157,186,187,199,200,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,261,275,277,311,314,318,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,366,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[4,-91,4,-216,-109,-304,-112,-115,-98,-107,-304,67,-304,-65,-66,-110,-62,4,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-304,4,-95,-114,-67,-99,-64,-135,-63,-68,-100,-105,-94,86,-101,91,-136,-92,-53,-10,-85,-9,-86,-148,-302,-147,-27,-161,-28,-159,-61,4,-84,4,91,4,-82,-69,-131,-130,4,-81,-89,-88,91,91,-87,4,-90,91,-30,-162,-160,4,197,-70,4,-83,4,4,-128,-137,4,91,-141,-140,4,91,4,4,-149,-303,4,197,4,-35,-36,-74,-75,-194,-193,4,-72,-73,-76,-78,-77,-195,4,4,-132,-138,-127,-126,-129,-71,4,390,393,4,4,4,-151,-150,-34,-31,4,4,-213,-209,4,-196,-210,-212,-197,-134,-133,91,-139,4,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'BREAK':([45,68,85,89,129,187,211,212,218,221,223,224,225,227,231,232,234,235,349,350,355,356,357,359,360,363,436,441,442,443,444,476,477,478,481,495,496,499,508,514,515,517,519,520,521,],[-68,-302,-69,-81,215,-303,-74,215,-75,-194,-193,215,-72,-73,-76,-78,-77,-195,-213,-209,-196,-210,215,-212,215,-197,215,-200,-211,-198,-208,-199,215,215,215,-204,-201,-203,215,-205,-202,215,215,-207,-206,]),'AND':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,123,129,143,146,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,233,234,235,245,256,257,258,263,266,269,270,274,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,384,388,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,422,423,424,430,436,440,441,442,443,444,454,456,457,458,459,460,461,462,463,465,466,467,469,475,476,477,478,479,481,495,496,498,499,500,502,503,504,508,509,513,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,153,-162,-28,153,-304,-289,153,153,-304,-295,-266,-260,-293,-304,-296,153,-279,-254,-252,-294,-291,-262,294,153,-261,-300,153,-278,-280,-233,153,153,-292,-281,-297,-264,-263,-298,-290,-265,-303,153,153,-261,153,153,-74,153,153,-75,-194,-193,153,-72,-73,153,-76,-78,-289,-77,-195,153,-28,153,-304,153,-11,153,-12,153,-274,-275,153,-228,-221,-229,-222,-225,-227,-220,-223,153,-219,-224,-226,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,-252,-257,153,-255,-299,-256,153,-258,-301,-304,153,-261,153,-213,-209,153,153,153,-196,-210,153,-212,153,153,-197,153,153,-261,153,-177,-304,-282,153,-273,-272,-270,-271,-269,294,294,-247,-243,-235,-246,-242,-241,-236,-240,-237,-239,-238,-244,-234,294,-245,294,-28,153,-304,-261,153,153,-200,-211,-198,-208,-11,153,-304,-253,-267,153,-268,153,153,-259,153,-261,153,153,-199,153,153,153,153,-204,-201,153,-203,153,-283,-276,-304,153,153,-277,-205,-202,153,153,-207,-206,]),'DO':([45,68,85,89,129,187,211,212,218,221,223,224,225,227,231,232,234,235,349,350,355,356,357,359,360,363,436,441,442,443,444,476,477,478,481,495,496,499,508,514,515,517,519,520,521,],[-68,-302,-69,-81,212,-303,-74,212,-75,-194,-193,212,-72,-73,-76,-78,-77,-195,-213,-209,-196,-210,212,-212,212,-197,212,-200,-211,-198,-208,-199,212,212,212,-204,-201,-203,212,-205,-202,212,212,-207,-206,]),'CHAR_CONST':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,129,143,146,153,155,157,163,166,167,169,173,174,179,180,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,234,235,245,256,257,258,263,266,269,270,274,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,504,508,509,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,156,-162,-28,156,-304,156,156,-304,-260,-304,156,-262,156,-261,156,156,156,-264,-263,-265,-303,156,156,-261,156,156,-74,156,156,-75,-194,-193,156,-72,-73,156,-76,-78,-77,-195,156,-28,156,-304,156,-11,156,-12,156,156,-228,-221,-229,-222,-225,-227,-220,-223,156,-219,-224,-226,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-304,156,-261,156,-213,-209,156,156,156,-196,-210,156,-212,156,156,-197,156,156,-261,156,-177,-304,156,-28,156,-304,-261,156,156,-200,-211,-198,-208,-11,156,-304,156,156,156,156,-261,156,156,-199,156,156,156,156,-204,-201,156,-203,156,-304,156,156,-205,-202,156,156,-207,-206,]),'CONST':([0,1,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,67,68,69,72,73,75,76,77,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,115,117,119,128,129,131,132,133,134,135,136,137,138,139,140,146,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,256,258,261,272,311,314,318,321,322,327,328,330,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,422,424,441,442,443,444,476,495,496,499,514,515,520,521,],[8,-91,-216,-109,8,-112,-115,-98,-107,8,8,-65,-66,-110,-62,8,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,8,8,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,8,-92,-53,-148,-302,-147,-161,8,-61,8,8,8,8,-82,-69,-131,-130,8,-81,-89,-88,-87,8,-90,-30,-162,8,8,8,-70,8,-83,8,8,-128,-137,8,8,-141,-140,8,8,8,8,-149,-303,8,8,-35,-36,-74,-75,-194,-193,8,-72,-73,-76,-78,-77,-195,8,8,-132,-138,-127,-126,-129,-71,8,8,8,8,8,8,8,-151,-150,-34,-31,8,8,8,-213,-209,8,-196,-210,-212,-197,-134,-133,-139,8,-33,-32,8,8,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'INLINE':([0,1,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,67,68,69,75,77,81,83,84,85,86,87,89,90,92,99,100,101,107,119,128,129,131,147,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,241,255,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[9,-91,-216,-109,9,-112,-115,-98,-107,9,-65,-66,-110,-62,9,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,9,9,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,9,-92,-53,-148,-302,-147,-61,9,9,9,-82,-69,-131,-130,-81,-89,-88,-87,9,-90,-30,9,-70,9,-83,9,-149,-303,9,9,-35,-36,-74,-75,-194,-193,9,-72,-73,-76,-78,-77,-195,-132,-71,-151,-150,-34,-31,9,9,-213,-209,9,-196,-210,-212,-197,-134,-133,9,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,44,45,47,48,49,52,53,55,61,62,63,64,66,67,68,69,71,72,73,74,75,76,78,79,81,85,86,87,89,90,91,92,93,94,99,101,102,105,106,107,113,114,115,116,117,119,123,128,129,134,137,142,143,144,146,149,150,152,153,154,155,156,157,158,159,161,162,163,166,167,168,169,170,171,173,174,176,177,178,179,180,181,182,183,186,187,189,190,191,195,196,197,199,200,201,205,209,210,211,212,216,217,218,220,221,222,223,224,225,227,230,231,232,233,234,235,237,241,245,248,249,251,252,255,256,257,258,263,266,269,270,272,274,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,316,318,320,321,322,327,328,330,332,337,338,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,364,365,366,368,370,371,373,374,375,379,380,384,386,387,388,390,391,392,393,394,420,421,422,423,424,427,428,430,432,433,434,436,440,441,442,443,444,449,450,454,456,457,459,460,461,462,463,466,467,469,470,471,472,473,474,475,476,477,478,479,481,482,483,491,492,495,496,498,499,500,502,503,504,505,506,508,509,513,514,515,517,519,520,521,],[11,-91,11,11,-216,-109,-304,-112,-115,-98,-107,11,-304,-304,-65,-66,-110,-62,11,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,77,-304,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,93,-92,77,-10,-85,-9,-86,-148,-302,-147,-27,-161,-28,-159,-61,-304,-84,11,93,-69,-131,-130,-81,-89,-37,-88,93,93,-87,-90,147,93,157,-30,-162,-160,-28,157,-304,199,-289,-70,157,-128,93,147,157,93,-304,261,-295,-266,-260,-293,-304,-296,157,-279,279,-294,-291,-262,311,-261,-300,314,-278,-280,314,318,-292,-281,-297,-264,-263,-298,-290,-265,-149,-303,311,157,-261,157,331,-45,199,199,339,157,-35,-36,-74,157,311,352,-75,353,-194,354,-193,157,-72,-73,157,-76,-78,-289,-77,-195,362,-132,311,-127,-126,-129,-38,-71,-28,157,-304,311,-11,157,-12,386,157,-274,-275,157,-228,-221,-229,-222,-225,-227,-220,-223,157,-219,-224,-226,311,311,311,311,311,311,311,311,311,311,311,311,157,311,311,311,311,311,311,157,157,-299,157,-301,-151,-150,-34,-31,-304,199,331,339,157,-261,157,-213,-209,157,157,157,-196,-210,157,-212,157,157,-197,-134,-133,93,311,157,-261,157,-43,-44,-177,-304,-282,386,386,311,-273,-272,-270,-271,-269,-33,-32,-28,157,-304,-192,-186,-261,-190,-188,475,157,157,-200,-211,-198,-208,-42,-39,-11,157,-304,-267,157,-268,311,311,157,-261,157,-50,-51,-191,-189,-187,157,-199,157,157,157,157,-41,-40,-49,-46,-204,-201,157,-203,157,-283,-276,-304,-48,-47,157,157,-277,-205,-202,157,157,-207,-206,]),'LT':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,299,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,299,299,299,-243,-235,299,-242,-241,-236,-240,-237,-239,-238,-244,-234,299,299,299,-253,-267,-268,-259,-283,-276,-277,]),'TIMES':([0,1,2,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,25,26,28,29,30,31,32,33,34,36,38,39,40,41,42,44,45,47,48,49,52,53,55,62,63,64,66,67,68,69,71,72,73,74,75,76,78,79,81,85,86,87,89,90,92,93,99,101,105,106,113,115,116,117,119,123,128,129,134,137,143,144,146,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,186,187,189,190,191,195,199,205,211,212,216,218,221,223,224,225,227,230,231,232,233,234,235,241,245,248,249,251,255,256,257,258,263,266,269,270,272,274,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,364,365,366,368,370,371,373,379,380,384,386,388,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,422,423,424,430,436,440,441,442,443,444,454,456,457,458,459,460,461,462,463,465,466,467,469,475,476,477,478,479,481,495,496,498,499,500,502,503,504,508,509,513,514,515,517,519,520,521,],[14,-91,14,-216,-109,-304,-112,-115,-98,-107,14,-304,-304,-65,-66,-110,-62,14,-108,-113,-111,-60,-96,-104,-102,-116,-103,-97,-106,-117,-93,-304,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,14,-92,-10,-85,-9,-86,-148,-302,-147,-27,-161,-28,14,-61,-304,-84,14,14,-69,-131,-130,-81,-89,-88,14,-87,-90,14,167,-162,-28,191,-304,14,-289,-70,167,-128,14,167,14,-304,-295,-266,-260,-293,-304,-296,167,-279,-254,-252,-294,-291,-262,307,167,-261,-300,167,-278,-280,-233,167,167,-292,-281,-297,-264,-263,-298,-290,-265,-149,-303,167,167,-261,167,14,341,-74,167,167,-75,-194,-193,167,-72,-73,167,-76,-78,-289,-77,-195,-132,167,-127,-126,-129,-71,-28,371,-304,167,-11,167,-12,14,167,-274,-275,167,-228,-221,-229,-222,-225,-227,-220,-223,167,-219,-224,-226,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,-252,-257,167,-255,-299,-256,167,-258,-301,-151,-150,-304,430,-261,167,-213,-209,167,167,167,-196,-210,167,-212,167,167,-197,-134,-133,14,167,167,-261,167,-177,-304,-282,14,167,-273,-272,-270,-271,-269,307,307,307,307,-235,307,307,307,-236,307,307,307,307,307,-234,307,307,307,-28,467,-304,-261,167,167,-200,-211,-198,-208,-11,167,-304,-253,-267,167,-268,167,167,-259,167,-261,167,167,-199,167,167,167,167,-204,-201,167,-203,167,-283,-276,-304,167,167,-277,-205,-202,167,167,-207,-206,]),'FLOAT_CONST':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,129,143,146,153,155,157,163,166,167,169,173,174,179,180,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,234,235,245,256,257,258,263,266,269,270,274,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,504,508,509,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,161,-162,-28,161,-304,161,161,-304,-260,-304,161,-262,161,-261,161,161,161,-264,-263,-265,-303,161,161,-261,161,161,-74,161,161,-75,-194,-193,161,-72,-73,161,-76,-78,-77,-195,161,-28,161,-304,161,-11,161,-12,161,161,-228,-221,-229,-222,-225,-227,-220,-223,161,-219,-224,-226,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,-304,161,-261,161,-213,-209,161,161,161,-196,-210,161,-212,161,161,-197,161,161,-261,161,-177,-304,161,-28,161,-304,-261,161,161,-200,-211,-198,-208,-11,161,-304,161,161,161,161,-261,161,161,-199,161,161,161,161,-204,-201,161,-203,161,-304,161,161,-205,-202,161,161,-207,-206,]),'ELSE':([45,85,187,211,218,225,227,231,232,234,349,350,356,359,363,441,442,443,444,476,495,496,499,514,515,520,521,],[-68,-69,-303,-74,-75,-72,-73,-76,-78,-77,-213,-209,-210,-212,-197,-200,-211,-198,-208,-199,-204,508,-203,-205,-202,-207,-206,]),'ARROW':([123,150,152,154,156,158,159,161,162,168,170,171,176,177,178,181,182,187,233,276,278,316,320,384,390,391,392,393,394,459,461,502,503,513,],[-289,-295,-266,-293,-296,-279,275,-294,-291,-300,-278,-280,-292,-281,-297,-298,-290,-303,-289,-274,-275,-299,-301,-282,-273,-272,-270,-271,-269,-267,-268,-283,-276,-277,]),'PPPRAGMASTR':([45,],[85,]),'RSHIFT':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,303,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,303,303,303,303,-235,303,303,303,-236,-240,-237,-239,-238,303,-234,303,303,303,-253,-267,-268,-259,-283,-276,-277,]),'RPAREN':([1,4,5,7,8,9,10,14,17,20,21,22,25,26,27,28,29,30,31,32,33,34,35,38,39,41,47,48,49,52,55,61,65,67,69,71,72,73,74,77,86,87,90,91,92,99,101,102,107,113,114,119,120,121,122,123,124,125,126,127,134,141,142,147,150,151,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,186,187,196,197,198,199,200,201,202,203,204,206,209,210,213,219,241,248,249,251,252,259,260,271,272,273,276,278,279,312,313,315,316,317,319,320,321,322,327,328,331,332,333,334,335,336,337,338,339,343,344,345,347,364,365,374,375,384,385,386,387,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,417,418,419,420,421,425,426,427,428,429,432,433,435,437,438,445,449,450,458,459,461,465,470,471,472,473,474,482,483,484,485,488,489,491,492,494,498,502,503,505,506,509,510,512,513,516,518,],[-91,-216,-109,-112,-115,-98,-107,-304,-110,-108,-113,-111,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-95,-114,-99,-100,-105,-94,-101,-92,-53,107,-148,-147,-27,-161,-28,-159,-304,-131,-130,-89,-37,-88,-87,-90,-54,-30,-162,-160,-304,-18,-17,-165,-289,-170,-163,209,210,-128,252,-55,-304,-295,-217,-266,-293,-296,-279,-254,-252,-294,-291,-231,-300,-278,-280,-233,-292,-281,-297,-298,-290,-149,-303,-56,-45,-2,-304,-183,-185,-168,-169,-167,-1,-35,-36,-14,-214,-132,-127,-126,-129,-38,374,375,384,-304,388,-274,-275,394,-252,-257,-255,-299,-256,-258,-301,-151,-150,-34,-31,-304,-183,427,428,-23,-24,-57,-184,-304,-171,-164,-166,-13,-134,-133,-43,-44,-282,-182,-304,-183,-273,-272,-270,-271,-269,-287,461,-218,-250,-248,-247,-243,-235,-246,-242,-241,-236,-240,-237,-239,-238,-244,-234,-251,-245,-249,463,464,465,-33,-32,470,471,-192,-186,472,-190,-188,-215,477,478,481,-42,-39,-253,-267,-268,-259,-50,-51,-191,-189,-187,-41,-40,502,-284,-288,-232,-49,-46,507,-304,-283,-276,-48,-47,-304,517,-285,-277,519,-286,]),'XOREQUAL':([123,150,152,154,156,158,159,160,161,162,168,170,171,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,286,-294,-291,-300,-278,-280,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,-253,-267,-268,-259,-283,-276,-277,]),'GT':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,306,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,306,306,306,-243,-235,306,-242,-241,-236,-240,-237,-239,-238,-244,-234,306,306,306,-253,-267,-268,-259,-283,-276,-277,]),'_COMPLEX':([0,1,2,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,62,63,64,66,67,68,69,72,75,77,78,79,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,118,119,128,129,131,132,133,134,135,136,137,138,139,140,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,261,272,311,314,318,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[10,-91,10,-216,-109,-304,-112,-115,-98,-107,-304,-65,-66,-110,-62,10,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-304,10,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,10,-92,-53,-10,-85,-9,-86,-148,-302,-147,-161,-61,10,-84,10,10,10,-82,-69,-131,-130,10,-81,-89,-88,-87,10,-90,-30,-162,10,10,-70,10,-83,10,10,-128,-137,10,10,-141,-140,10,10,10,-149,-303,10,10,-35,-36,-74,-75,-194,-193,10,-72,-73,-76,-78,-77,-195,10,10,-132,-138,-127,-126,-129,-71,10,10,10,10,10,-151,-150,-34,-31,10,10,-213,-209,10,-196,-210,-212,-197,-134,-133,-139,10,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'SIZEOF':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,129,143,146,153,155,157,163,166,167,169,173,174,179,180,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,234,235,245,256,257,258,263,266,269,270,274,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,504,508,509,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,174,-162,-28,174,-304,174,174,-304,-260,-304,174,-262,174,-261,174,174,174,-264,-263,-265,-303,174,174,-261,174,174,-74,174,174,-75,-194,-193,174,-72,-73,174,-76,-78,-77,-195,174,-28,174,-304,174,-11,174,-12,174,174,-228,-221,-229,-222,-225,-227,-220,-223,174,-219,-224,-226,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-304,174,-261,174,-213,-209,174,174,174,-196,-210,174,-212,174,174,-197,174,174,-261,174,-177,-304,174,-28,174,-304,-261,174,174,-200,-211,-198,-208,-11,174,-304,174,174,174,174,-261,174,174,-199,174,174,174,174,-204,-201,174,-203,174,-304,174,174,-205,-202,174,174,-207,-206,]),'STRUCT':([0,2,6,8,9,12,15,16,18,19,23,25,27,29,31,33,34,35,36,37,38,40,42,44,45,49,61,62,63,64,66,68,72,75,77,78,79,83,84,85,88,89,100,107,113,118,128,129,131,132,133,135,136,138,139,140,147,157,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,242,255,261,311,314,318,327,328,331,339,349,350,354,355,356,359,363,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[43,43,-304,-115,-98,-304,-65,-66,-62,43,-60,-96,-29,-116,-97,-117,-93,-52,-304,43,-95,-67,-64,-63,-68,-94,-53,-10,-85,-9,-86,-302,-161,-61,43,-84,43,43,-82,-69,43,-81,43,-30,-162,43,-70,43,-83,43,43,-137,43,-141,-140,43,43,43,-303,43,43,-35,-36,-74,-75,-194,-193,43,-72,-73,-76,-78,-77,-195,43,43,-138,-71,43,43,43,43,-34,-31,43,43,-213,-209,43,-196,-210,-212,-197,-139,43,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'LONG':([0,1,2,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,62,63,64,66,67,68,69,72,75,77,78,79,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,118,119,128,129,131,132,133,134,135,136,137,138,139,140,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,261,272,311,314,318,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[26,-91,26,-216,-109,-304,-112,-115,-98,-107,-304,-65,-66,-110,-62,26,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-304,26,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,26,-92,-53,-10,-85,-9,-86,-148,-302,-147,-161,-61,26,-84,26,26,26,-82,-69,-131,-130,26,-81,-89,-88,-87,26,-90,-30,-162,26,26,-70,26,-83,26,26,-128,-137,26,26,-141,-140,26,26,26,-149,-303,26,26,-35,-36,-74,-75,-194,-193,26,-72,-73,-76,-78,-77,-195,26,26,-132,-138,-127,-126,-129,-71,26,26,26,26,26,-151,-150,-34,-31,26,26,-213,-209,26,-196,-210,-212,-197,-134,-133,-139,26,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'CASE':([45,68,85,89,129,187,211,212,218,221,223,224,225,227,231,232,234,235,349,350,355,356,357,359,360,363,436,441,442,443,444,476,477,478,481,495,496,499,508,514,515,517,519,520,521,],[-68,-302,-69,-81,216,-303,-74,216,-75,-194,-193,216,-72,-73,-76,-78,-77,-195,-213,-209,-196,-210,216,-212,216,-197,216,-200,-211,-198,-208,-199,216,216,216,-204,-201,-203,216,-205,-202,216,216,-207,-206,]),'COLON':([4,5,7,8,10,17,20,21,22,26,27,28,29,30,32,33,35,39,41,47,48,52,61,67,69,86,87,91,102,104,107,123,130,134,137,142,150,151,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,186,187,209,210,219,229,233,241,246,248,249,251,252,276,278,312,313,315,316,317,319,320,321,322,324,327,328,351,364,365,366,374,375,384,390,391,392,393,394,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,420,421,435,449,450,458,459,461,465,482,483,489,502,503,513,],[-216,-109,-112,-115,-107,-110,-108,-113,-111,-104,-29,-102,-116,-103,-106,-117,-52,-114,-99,-100,-105,-101,-53,-148,-147,-131,-130,-37,-54,-158,-30,-289,-157,-128,245,-55,-295,-217,-266,-293,-296,-279,-254,-252,-294,-291,-231,-300,-278,-280,-233,-292,-281,-297,-298,-290,-149,-303,-35,-36,-214,357,360,-132,368,-127,-126,-129,-38,-274,-275,-252,-257,-255,-299,-256,-258,-301,-151,-150,-230,-34,-31,436,-134,-133,245,-43,-44,-282,-273,-272,-270,-271,-269,-218,-250,-248,-247,-243,-235,-246,-242,-241,-236,-240,-237,-239,462,-238,-244,-234,-251,-245,-249,-33,-32,-215,-42,-39,-253,-267,-268,-259,-41,-40,-232,-283,-276,-277,]),'WHILE':([45,68,85,89,129,187,211,212,218,221,223,224,225,227,231,232,234,235,346,349,350,355,356,357,359,360,363,436,441,442,443,444,476,477,478,481,495,496,499,508,514,515,517,519,520,521,],[-68,-302,-69,-81,217,-303,-74,217,-75,-194,-193,217,-72,-73,-76,-78,-77,-195,434,-213,-209,-196,-210,217,-212,217,-197,217,-200,-211,-198,-208,-199,217,217,217,-204,-201,-203,217,-205,-202,217,217,-207,-206,]),'INT_CONST_BIN':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,129,143,146,153,155,157,163,166,167,169,173,174,179,180,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,234,235,245,256,257,258,263,266,269,270,274,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,504,508,509,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,154,-162,-28,154,-304,154,154,-304,-260,-304,154,-262,154,-261,154,154,154,-264,-263,-265,-303,154,154,-261,154,154,-74,154,154,-75,-194,-193,154,-72,-73,154,-76,-78,-77,-195,154,-28,154,-304,154,-11,154,-12,154,154,-228,-221,-229,-222,-225,-227,-220,-223,154,-219,-224,-226,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-304,154,-261,154,-213,-209,154,154,154,-196,-210,154,-212,154,154,-197,154,154,-261,154,-177,-304,154,-28,154,-304,-261,154,154,-200,-211,-198,-208,-11,154,-304,154,154,154,154,-261,154,154,-199,154,154,154,154,-204,-201,154,-203,154,-304,154,154,-205,-202,154,154,-207,-206,]),'MINUSEQUAL':([123,150,152,154,156,158,159,160,161,162,168,170,171,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,284,-294,-291,-300,-278,-280,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,-253,-267,-268,-259,-283,-276,-277,]),'OREQUAL':([123,150,152,154,156,158,159,160,161,162,168,170,171,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,282,-294,-291,-300,-278,-280,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,-253,-267,-268,-259,-283,-276,-277,]),'PLUSPLUS':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,123,129,143,146,150,152,153,154,155,156,157,158,159,161,162,163,166,167,168,169,170,171,173,174,176,177,178,179,180,181,182,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,233,234,235,245,256,257,258,263,266,269,270,274,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,316,318,320,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,384,388,390,391,392,393,394,422,423,424,430,436,440,441,442,443,444,454,456,457,459,460,461,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,502,503,504,508,509,513,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,169,-162,-28,169,-304,-289,169,169,-304,-295,-266,-260,-293,-304,-296,169,-279,276,-294,-291,-262,169,-261,-300,169,-278,-280,169,169,-292,-281,-297,-264,-263,-298,-290,-265,-303,169,169,-261,169,169,-74,169,169,-75,-194,-193,169,-72,-73,169,-76,-78,-289,-77,-195,169,-28,169,-304,169,-11,169,-12,169,-274,-275,169,-228,-221,-229,-222,-225,-227,-220,-223,169,-219,-224,-226,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,-299,169,-301,-304,169,-261,169,-213,-209,169,169,169,-196,-210,169,-212,169,169,-197,169,169,-261,169,-177,-304,-282,169,-273,-272,-270,-271,-269,-28,169,-304,-261,169,169,-200,-211,-198,-208,-11,169,-304,-267,169,-268,169,169,169,-261,169,169,-199,169,169,169,169,-204,-201,169,-203,169,-283,-276,-304,169,169,-277,-205,-202,169,169,-207,-206,]),'LAND':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,292,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,-250,-248,-247,-243,-235,-246,-242,-241,-236,-240,-237,-239,-238,-244,-234,292,-245,-249,-253,-267,-268,-259,-283,-276,-277,]),'DIVEQUAL':([123,150,152,154,156,158,159,160,161,162,168,170,171,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,283,-294,-291,-300,-278,-280,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,-253,-267,-268,-259,-283,-276,-277,]),'WCHAR_CONST':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,129,143,146,153,155,157,163,166,167,169,173,174,179,180,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,234,235,245,256,257,258,263,266,269,270,274,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,504,508,509,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,178,-162,-28,178,-304,178,178,-304,-260,-304,178,-262,178,-261,178,178,178,-264,-263,-265,-303,178,178,-261,178,178,-74,178,178,-75,-194,-193,178,-72,-73,178,-76,-78,-77,-195,178,-28,178,-304,178,-11,178,-12,178,178,-228,-221,-229,-222,-225,-227,-220,-223,178,-219,-224,-226,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,-304,178,-261,178,-213,-209,178,178,178,-196,-210,178,-212,178,178,-197,178,178,-261,178,-177,-304,178,-28,178,-304,-261,178,178,-200,-211,-198,-208,-11,178,-304,178,178,178,178,-261,178,178,-199,178,178,178,178,-204,-201,178,-203,178,-304,178,178,-205,-202,178,178,-207,-206,]),'MINUSMINUS':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,123,129,143,146,150,152,153,154,155,156,157,158,159,161,162,163,166,167,168,169,170,171,173,174,176,177,178,179,180,181,182,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,233,234,235,245,256,257,258,263,266,269,270,274,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,316,318,320,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,384,388,390,391,392,393,394,422,423,424,430,436,440,441,442,443,444,454,456,457,459,460,461,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,502,503,504,508,509,513,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,173,-162,-28,173,-304,-289,173,173,-304,-295,-266,-260,-293,-304,-296,173,-279,278,-294,-291,-262,173,-261,-300,173,-278,-280,173,173,-292,-281,-297,-264,-263,-298,-290,-265,-303,173,173,-261,173,173,-74,173,173,-75,-194,-193,173,-72,-73,173,-76,-78,-289,-77,-195,173,-28,173,-304,173,-11,173,-12,173,-274,-275,173,-228,-221,-229,-222,-225,-227,-220,-223,173,-219,-224,-226,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-299,173,-301,-304,173,-261,173,-213,-209,173,173,173,-196,-210,173,-212,173,173,-197,173,173,-261,173,-177,-304,-282,173,-273,-272,-270,-271,-269,-28,173,-304,-261,173,173,-200,-211,-198,-208,-11,173,-304,-267,173,-268,173,173,173,-261,173,173,-199,173,173,173,173,-204,-201,173,-203,173,-283,-276,-304,173,173,-277,-205,-202,173,173,-207,-206,]),'DIVIDE':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,296,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,296,296,296,296,-235,296,296,296,-236,296,296,296,296,296,-234,296,296,296,-253,-267,-268,-259,-283,-276,-277,]),'EQUALS':([27,35,59,61,91,95,100,102,104,107,111,123,130,142,150,152,154,156,158,159,160,161,162,168,170,171,176,177,178,181,182,187,209,210,233,252,262,264,276,278,312,313,315,316,317,319,320,327,328,374,375,378,381,384,390,391,392,393,394,420,421,449,450,453,458,459,461,465,482,483,502,503,513,],[-29,-52,106,-53,-37,143,-157,-54,-158,-30,189,-289,-157,-55,-295,-266,-293,-296,-279,-254,289,-294,-291,-300,-278,-280,-292,-281,-297,-298,-290,-303,-35,-36,-289,-38,-178,379,-274,-275,-252,-257,-255,-299,-256,-258,-301,-34,-31,-43,-44,-179,-181,-282,-273,-272,-270,-271,-269,-33,-32,-42,-39,-180,-253,-267,-268,-259,-41,-40,-283,-276,-277,]),'IF':([45,68,85,89,129,187,211,212,218,221,223,224,225,227,231,232,234,235,349,350,355,356,357,359,360,363,436,441,442,443,444,476,477,478,481,495,496,499,508,514,515,517,519,520,521,],[-68,-302,-69,-81,220,-303,-74,220,-75,-194,-193,220,-72,-73,-76,-78,-77,-195,-213,-209,-196,-210,220,-212,220,-197,220,-200,-211,-198,-208,-199,220,220,220,-204,-201,-203,220,-205,-202,220,220,-207,-206,]),'STATIC':([0,1,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,67,68,69,72,75,76,77,81,83,84,85,86,87,89,90,92,99,100,101,107,113,115,119,128,129,131,146,147,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,241,255,256,321,322,327,328,330,331,339,349,350,354,355,356,359,363,364,365,386,420,421,422,441,442,443,444,476,495,496,499,514,515,520,521,],[38,-91,-216,-109,38,-112,-115,-98,-107,38,-65,-66,-110,-62,38,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,38,38,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,38,-92,-53,-148,-302,-147,-161,-61,117,38,38,38,-82,-69,-131,-130,-81,-89,-88,-87,38,-90,-30,-162,190,38,-70,38,-83,258,38,-149,-303,38,38,-35,-36,-74,-75,-194,-193,38,-72,-73,-76,-78,-77,-195,-132,-71,370,-151,-150,-34,-31,424,38,38,-213,-209,38,-196,-210,-212,-197,-134,-133,38,-33,-32,466,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'PPHASH':([0,15,16,18,19,23,40,42,44,45,75,85,89,128,187,255,363,],[40,-65,-66,-62,40,-60,-67,-64,-63,-68,-61,-69,-81,-70,-303,-71,-197,]),'FOR':([45,68,85,89,129,187,211,212,218,221,223,224,225,227,231,232,234,235,349,350,355,356,357,359,360,363,436,441,442,443,444,476,477,478,481,495,496,499,508,514,515,517,519,520,521,],[-68,-302,-69,-81,222,-303,-74,222,-75,-194,-193,222,-72,-73,-76,-78,-77,-195,-213,-209,-196,-210,222,-212,222,-197,222,-200,-211,-198,-208,-199,222,222,222,-204,-201,-203,222,-205,-202,222,222,-207,-206,]),'LBRACKET':([1,4,5,7,8,9,10,14,17,20,21,22,25,26,27,28,29,30,31,32,33,34,35,38,39,41,47,48,49,52,55,61,67,68,69,71,72,73,74,86,87,90,91,92,99,101,102,107,113,114,119,123,134,142,150,152,154,155,156,158,159,161,162,168,170,171,176,177,178,181,182,186,187,196,197,199,200,201,209,210,233,241,248,249,251,252,262,264,272,276,278,316,320,321,322,327,328,332,337,338,364,365,374,375,378,380,381,384,386,387,390,391,392,393,394,420,421,427,428,432,433,449,450,453,457,459,461,470,471,472,473,474,482,483,484,485,491,492,502,503,504,505,506,512,513,518,],[-91,-216,-109,-112,-115,-98,-107,-304,-110,-108,-113,-111,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,76,-95,-114,-99,-100,-105,-94,-101,-92,76,-148,-302,-147,-27,-161,-28,-159,-131,-130,-89,-37,-88,-87,-90,146,-30,-162,-160,205,-289,-128,146,-295,-266,-293,263,-296,-279,274,-294,-291,-300,-278,-280,-292,-281,-297,-298,-290,-149,-303,330,-45,205,205,340,-35,-36,-289,-132,-127,-126,-129,-38,-178,263,205,-274,-275,-299,-301,-151,-150,-34,-31,205,330,340,-134,-133,-43,-44,-179,263,-181,-282,205,205,-273,-272,-270,-271,-269,-33,-32,-192,-186,-190,-188,-42,-39,-180,263,-267,-268,-50,-51,-191,-189,-187,-41,-40,500,-284,-49,-46,-283,-276,263,-48,-47,-285,-277,-286,]),'TIMESEQUAL':([123,150,152,154,156,158,159,160,161,162,168,170,171,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,281,-294,-291,-300,-278,-280,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,-253,-267,-268,-259,-283,-276,-277,]),'WSTRING_LITERAL':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,129,143,146,153,155,157,163,166,167,168,169,173,174,177,179,180,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,234,235,245,256,257,258,263,266,269,270,274,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,320,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,504,508,509,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,168,-162,-28,168,-304,168,168,-304,-260,-304,168,-262,168,-261,-300,168,168,168,320,-264,-263,-265,-303,168,168,-261,168,168,-74,168,168,-75,-194,-193,168,-72,-73,168,-76,-78,-77,-195,168,-28,168,-304,168,-11,168,-12,168,168,-228,-221,-229,-222,-225,-227,-220,-223,168,-219,-224,-226,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,-301,-304,168,-261,168,-213,-209,168,168,168,-196,-210,168,-212,168,168,-197,168,168,-261,168,-177,-304,168,-28,168,-304,-261,168,168,-200,-211,-198,-208,-11,168,-304,168,168,168,168,-261,168,168,-199,168,168,168,168,-204,-201,168,-203,168,-304,168,168,-205,-202,168,168,-207,-206,]),'NOT':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,129,143,146,153,155,157,163,166,167,169,173,174,179,180,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,234,235,245,256,257,258,263,266,269,270,274,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,504,508,509,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,179,-162,-28,179,-304,179,179,-304,-260,-304,179,-262,179,-261,179,179,179,-264,-263,-265,-303,179,179,-261,179,179,-74,179,179,-75,-194,-193,179,-72,-73,179,-76,-78,-77,-195,179,-28,179,-304,179,-11,179,-12,179,179,-228,-221,-229,-222,-225,-227,-220,-223,179,-219,-224,-226,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,-304,179,-261,179,-213,-209,179,179,179,-196,-210,179,-212,179,179,-197,179,179,-261,179,-177,-304,179,-28,179,-304,-261,179,179,-200,-211,-198,-208,-11,179,-304,179,179,179,179,-261,179,179,-199,179,179,179,179,-204,-201,179,-203,179,-304,179,179,-205,-202,179,179,-207,-206,]),'LBRACE':([13,27,35,37,43,45,50,54,61,67,68,69,80,82,83,84,85,86,87,89,100,106,107,129,131,143,145,155,187,209,210,211,212,218,221,223,224,225,227,231,232,234,235,266,269,270,327,328,349,350,355,356,357,359,360,363,379,380,388,420,421,436,441,442,443,444,454,456,457,463,464,465,476,477,478,481,495,496,499,504,508,514,515,517,519,520,521,],[68,-29,-52,-304,-135,-68,68,-136,-53,68,-302,68,68,-7,-8,-82,-69,68,68,-81,-304,68,-30,68,-83,68,68,-304,-303,-35,-36,-74,68,-75,-194,-193,68,-72,-73,-76,-78,-77,-195,-11,68,-12,-34,-31,-213,-209,-196,-210,68,-212,68,-197,-177,-304,68,-33,-32,68,-200,-211,-198,-208,-11,68,-304,68,68,68,-199,68,68,68,-204,-201,-203,-304,68,-205,-202,68,68,-207,-206,]),'MODEQUAL':([123,150,152,154,156,158,159,160,161,162,168,170,171,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,287,-294,-291,-300,-278,-280,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,-253,-267,-268,-259,-283,-276,-277,]),'LOR':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,308,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,-250,-248,-247,-243,-235,-246,-242,-241,-236,-240,-237,-239,-238,-244,-234,-251,-245,-249,-253,-267,-268,-259,-283,-276,-277,]),'UNION':([0,2,6,8,9,12,15,16,18,19,23,25,27,29,31,33,34,35,36,37,38,40,42,44,45,49,61,62,63,64,66,68,72,75,77,78,79,83,84,85,88,89,100,107,113,118,128,129,131,132,133,135,136,138,139,140,147,157,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,242,255,261,311,314,318,327,328,331,339,349,350,354,355,356,359,363,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[54,54,-304,-115,-98,-304,-65,-66,-62,54,-60,-96,-29,-116,-97,-117,-93,-52,-304,54,-95,-67,-64,-63,-68,-94,-53,-10,-85,-9,-86,-302,-161,-61,54,-84,54,54,-82,-69,54,-81,54,-30,-162,54,-70,54,-83,54,54,-137,54,-141,-140,54,54,54,-303,54,54,-35,-36,-74,-75,-194,-193,54,-72,-73,-76,-78,-77,-195,54,54,-138,-71,54,54,54,54,-34,-31,54,54,-213,-209,54,-196,-210,-212,-197,-139,54,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'MOD':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,300,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,300,300,300,300,-235,300,300,300,-236,300,300,300,300,300,-234,300,300,300,-253,-267,-268,-259,-283,-276,-277,]),'XOR':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,310,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,310,310,-247,-243,-235,-246,-242,-241,-236,-240,-237,-239,-238,-244,-234,310,-245,-249,-253,-267,-268,-259,-283,-276,-277,]),'CHAR':([0,1,2,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,62,63,64,66,67,68,69,72,75,77,78,79,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,118,119,128,129,131,132,133,134,135,136,137,138,139,140,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,261,272,311,314,318,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[52,-91,52,-216,-109,-304,-112,-115,-98,-107,-304,-65,-66,-110,-62,52,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-304,52,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,52,-92,-53,-10,-85,-9,-86,-148,-302,-147,-161,-61,52,-84,52,52,52,-82,-69,-131,-130,52,-81,-89,-88,-87,52,-90,-30,-162,52,52,-70,52,-83,52,52,-128,-137,52,52,-141,-140,52,52,52,-149,-303,52,52,-35,-36,-74,-75,-194,-193,52,-72,-73,-76,-78,-77,-195,52,52,-132,-138,-127,-126,-129,-71,52,52,52,52,52,-151,-150,-34,-31,52,52,-213,-209,52,-196,-210,-212,-197,-134,-133,-139,52,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'INT_CONST_DEC':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,129,143,146,153,155,157,163,166,167,169,173,174,179,180,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,234,235,245,256,257,258,263,266,269,270,274,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,504,508,509,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,182,-162,-28,182,-304,182,182,-304,-260,-304,182,-262,182,-261,182,182,182,-264,-263,-265,-303,182,182,-261,182,182,-74,182,182,-75,-194,-193,182,-72,-73,182,-76,-78,-77,-195,182,-28,182,-304,182,-11,182,-12,182,182,-228,-221,-229,-222,-225,-227,-220,-223,182,-219,-224,-226,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,-304,182,-261,182,-213,-209,182,182,182,-196,-210,182,-212,182,182,-197,182,182,-261,182,-177,-304,182,-28,182,-304,-261,182,182,-200,-211,-198,-208,-11,182,-304,182,182,182,182,-261,182,182,-199,182,182,182,182,-204,-201,182,-203,182,-304,182,182,-205,-202,182,182,-207,-206,]),'STRING_LITERAL':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,129,143,146,153,155,157,163,166,167,169,171,173,174,179,180,181,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,234,235,245,256,257,258,263,266,269,270,274,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,316,318,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,504,508,509,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,181,-162,-28,181,-304,181,181,-304,-260,-304,181,-262,181,-261,181,316,181,181,-264,-263,-298,-265,-303,181,181,-261,181,181,-74,181,181,-75,-194,-193,181,-72,-73,181,-76,-78,-77,-195,181,-28,181,-304,181,-11,181,-12,181,181,-228,-221,-229,-222,-225,-227,-220,-223,181,-219,-224,-226,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,-299,181,-304,181,-261,181,-213,-209,181,181,181,-196,-210,181,-212,181,181,-197,181,181,-261,181,-177,-304,181,-28,181,-304,-261,181,181,-200,-211,-198,-208,-11,181,-304,181,181,181,181,-261,181,181,-199,181,181,181,181,-204,-201,181,-203,181,-304,181,181,-205,-202,181,181,-207,-206,]),'UNSIGNED':([0,1,2,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,62,63,64,66,67,68,69,72,75,77,78,79,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,118,119,128,129,131,132,133,134,135,136,137,138,139,140,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,261,272,311,314,318,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[5,-91,5,-216,-109,-304,-112,-115,-98,-107,-304,-65,-66,-110,-62,5,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-304,5,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,5,-92,-53,-10,-85,-9,-86,-148,-302,-147,-161,-61,5,-84,5,5,5,-82,-69,-131,-130,5,-81,-89,-88,-87,5,-90,-30,-162,5,5,-70,5,-83,5,5,-128,-137,5,5,-141,-140,5,5,5,-149,-303,5,5,-35,-36,-74,-75,-194,-193,5,-72,-73,-76,-78,-77,-195,5,5,-132,-138,-127,-126,-129,-71,5,5,5,5,5,-151,-150,-34,-31,5,5,-213,-209,5,-196,-210,-212,-197,-134,-133,-139,5,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'CONTINUE':([45,68,85,89,129,187,211,212,218,221,223,224,225,227,231,232,234,235,349,350,355,356,357,359,360,363,436,441,442,443,444,476,477,478,481,495,496,499,508,514,515,517,519,520,521,],[-68,-302,-69,-81,228,-303,-74,228,-75,-194,-193,228,-72,-73,-76,-78,-77,-195,-213,-209,-196,-210,228,-212,228,-197,228,-200,-211,-198,-208,-199,228,228,228,-204,-201,-203,228,-205,-202,228,228,-207,-206,]),'LE':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,298,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,298,298,298,-243,-235,298,-242,-241,-236,-240,-237,-239,-238,-244,-234,298,298,298,-253,-267,-268,-259,-283,-276,-277,]),'DEFAULT':([45,68,85,89,129,187,211,212,218,221,223,224,225,227,231,232,234,235,349,350,355,356,357,359,360,363,436,441,442,443,444,476,477,478,481,495,496,499,508,514,515,517,519,520,521,],[-68,-302,-69,-81,229,-303,-74,229,-75,-194,-193,229,-72,-73,-76,-78,-77,-195,-213,-209,-196,-210,229,-212,229,-197,229,-200,-211,-198,-208,-199,229,229,229,-204,-201,-203,229,-205,-202,229,229,-207,-206,]),'$end':([0,15,16,18,19,23,24,40,42,44,45,46,75,85,89,128,187,255,363,],[-304,-65,-66,-62,-58,-60,0,-67,-64,-63,-68,-59,-61,-69,-81,-70,-303,-71,-197,]),'VOID':([0,1,2,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,62,63,64,66,67,68,69,72,75,77,78,79,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,118,119,128,129,131,132,133,134,135,136,137,138,139,140,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,261,272,311,314,318,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[41,-91,41,-216,-109,-304,-112,-115,-98,-107,-304,-65,-66,-110,-62,41,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-304,41,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,41,-92,-53,-10,-85,-9,-86,-148,-302,-147,-161,-61,41,-84,41,41,41,-82,-69,-131,-130,41,-81,-89,-88,-87,41,-90,-30,-162,41,41,-70,41,-83,41,41,-128,-137,41,41,-141,-140,41,41,41,-149,-303,41,41,-35,-36,-74,-75,-194,-193,41,-72,-73,-76,-78,-77,-195,41,41,-132,-138,-127,-126,-129,-71,41,41,41,41,41,-151,-150,-34,-31,41,41,-213,-209,41,-196,-210,-212,-197,-134,-133,-139,41,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'NE':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,297,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,297,297,297,-243,-235,-246,-242,-241,-236,-240,-237,-239,-238,-244,-234,297,-245,297,-253,-267,-268,-259,-283,-276,-277,]),'ELLIPSIS':([208,],[344,]),'PPPRAGMA':([0,15,16,18,19,23,40,42,44,45,68,75,85,88,89,128,129,132,133,135,136,138,139,187,211,212,218,221,223,224,225,227,231,232,234,235,239,240,242,255,349,350,355,356,357,359,360,363,369,436,441,442,443,444,476,477,478,481,495,496,499,508,514,515,517,519,520,521,],[45,-65,-66,-62,45,-60,-67,-64,-63,-68,-302,-61,-69,45,-81,-70,45,45,45,-137,45,-141,-140,-303,-74,45,-75,-194,-193,45,-72,-73,-76,-78,-77,-195,45,45,-138,-71,-213,-209,-196,-210,45,-212,45,-197,-139,45,-200,-211,-198,-208,-199,45,45,45,-204,-201,-203,45,-205,-202,45,45,-207,-206,]),'RETURN':([45,68,85,89,129,187,211,212,218,221,223,224,225,227,231,232,234,235,349,350,355,356,357,359,360,363,436,441,442,443,444,476,477,478,481,495,496,499,508,514,515,517,519,520,521,],[-68,-302,-69,-81,230,-303,-74,230,-75,-194,-193,230,-72,-73,-76,-78,-77,-195,-213,-209,-196,-210,230,-212,230,-197,230,-200,-211,-198,-208,-199,230,230,230,-204,-201,-203,230,-205,-202,230,230,-207,-206,]),'INT_CONST_OCT':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,129,143,146,153,155,157,163,166,167,169,173,174,179,180,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,234,235,245,256,257,258,263,266,269,270,274,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,504,508,509,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,162,-162,-28,162,-304,162,162,-304,-260,-304,162,-262,162,-261,162,162,162,-264,-263,-265,-303,162,162,-261,162,162,-74,162,162,-75,-194,-193,162,-72,-73,162,-76,-78,-77,-195,162,-28,162,-304,162,-11,162,-12,162,162,-228,-221,-229,-222,-225,-227,-220,-223,162,-219,-224,-226,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,-304,162,-261,162,-213,-209,162,162,162,-196,-210,162,-212,162,162,-197,162,162,-261,162,-177,-304,162,-28,162,-304,-261,162,162,-200,-211,-198,-208,-11,162,-304,162,162,162,162,-261,162,162,-199,162,162,162,162,-204,-201,162,-203,162,-304,162,162,-205,-202,162,162,-207,-206,]),'PLUS':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,123,129,143,146,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,233,234,235,245,256,257,258,263,266,269,270,274,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,384,388,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,422,423,424,430,436,440,441,442,443,444,454,456,457,458,459,460,461,462,463,465,466,467,469,475,476,477,478,479,481,495,496,498,499,500,502,503,504,508,509,513,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,163,-162,-28,163,-304,-289,163,163,-304,-295,-266,-260,-293,-304,-296,163,-279,-254,-252,-294,-291,-262,302,163,-261,-300,163,-278,-280,-233,163,163,-292,-281,-297,-264,-263,-298,-290,-265,-303,163,163,-261,163,163,-74,163,163,-75,-194,-193,163,-72,-73,163,-76,-78,-289,-77,-195,163,-28,163,-304,163,-11,163,-12,163,-274,-275,163,-228,-221,-229,-222,-225,-227,-220,-223,163,-219,-224,-226,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,-252,-257,163,-255,-299,-256,163,-258,-301,-304,163,-261,163,-213,-209,163,163,163,-196,-210,163,-212,163,163,-197,163,163,-261,163,-177,-304,-282,163,-273,-272,-270,-271,-269,302,302,302,302,-235,302,302,302,-236,302,-237,302,-238,302,-234,302,302,302,-28,163,-304,-261,163,163,-200,-211,-198,-208,-11,163,-304,-253,-267,163,-268,163,163,-259,163,-261,163,163,-199,163,163,163,163,-204,-201,163,-203,163,-283,-276,-304,163,163,-277,-205,-202,163,163,-207,-206,]),'SEMI':([0,1,2,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,44,45,47,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,66,67,68,69,75,78,79,81,85,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,107,123,128,129,130,132,133,134,135,136,137,138,139,142,148,150,151,152,154,156,158,159,160,161,162,164,165,168,170,171,172,175,176,177,178,181,182,186,187,209,210,211,212,213,214,215,218,219,221,223,224,225,226,227,228,230,231,232,233,234,235,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,276,278,312,313,315,316,317,319,320,321,322,324,327,328,347,349,350,354,355,356,357,358,359,360,361,363,364,365,367,369,374,375,382,384,390,391,392,393,394,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,420,421,435,436,439,440,441,442,443,444,446,447,449,450,455,458,459,461,465,476,477,478,479,480,481,482,483,489,495,496,497,499,502,503,507,508,513,514,515,517,519,520,521,],[16,-91,-304,-216,-109,-304,-112,-115,-98,-107,-304,-65,-66,-110,-62,16,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-304,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,89,-101,-304,-92,-122,-16,-80,-124,-15,-53,-10,-85,-9,-86,-148,-302,-147,-61,-84,-304,-304,-69,-131,-130,139,-81,-89,-37,-88,-120,-118,-79,-20,-87,-157,-90,-54,-19,-158,-30,-289,-70,-304,-157,139,139,-128,-137,139,-304,-141,-140,-55,-123,-295,-217,-266,-293,-296,-279,-254,-252,-294,-291,-172,-231,-300,-278,-280,-233,-125,-292,-281,-297,-298,-290,-149,-303,-35,-36,-74,-304,-14,349,350,-75,-214,-194,-193,-304,-72,-13,-73,356,359,-76,-78,-289,-77,-195,139,139,-132,-138,-142,-26,-144,369,-127,-126,-25,-129,-38,-121,-119,-71,-274,-275,-252,-257,-255,-299,-256,-258,-301,-151,-150,-230,-34,-31,-13,-213,-209,-304,-196,-210,-304,442,-212,-304,444,-197,-134,-133,-146,-139,-43,-44,-173,-282,-273,-272,-270,-271,-269,-218,-250,-248,-247,-243,-235,-246,-242,-241,-236,-240,-237,-239,-238,-244,-234,-251,-245,-249,-33,-32,-215,-304,479,-304,-200,-211,-198,-208,-143,-145,-42,-39,-174,-253,-267,-268,-259,-199,-304,-304,-304,498,-304,-41,-40,-232,-204,-201,509,-203,-283,-276,514,-304,-277,-205,-202,-304,-304,-207,-206,]),'CONDOP':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,304,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,-250,-248,-247,-243,-235,-246,-242,-241,-236,-240,-237,-239,-238,-244,-234,-251,-245,-249,-253,-267,-268,-259,-283,-276,-277,]),'SIGNED':([0,1,2,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,62,63,64,66,67,68,69,72,75,77,78,79,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,118,119,128,129,131,132,133,134,135,136,137,138,139,140,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,261,272,311,314,318,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[20,-91,20,-216,-109,-304,-112,-115,-98,-107,-304,-65,-66,-110,-62,20,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-304,20,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,20,-92,-53,-10,-85,-9,-86,-148,-302,-147,-161,-61,20,-84,20,20,20,-82,-69,-131,-130,20,-81,-89,-88,-87,20,-90,-30,-162,20,20,-70,20,-83,20,20,-128,-137,20,20,-141,-140,20,20,20,-149,-303,20,20,-35,-36,-74,-75,-194,-193,20,-72,-73,-76,-78,-77,-195,20,20,-132,-138,-127,-126,-129,-71,20,20,20,20,20,-151,-150,-34,-31,20,20,-213,-209,20,-196,-210,-212,-197,-134,-133,-139,20,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'PERIOD':([68,123,150,152,154,155,156,158,159,161,162,168,170,171,176,177,178,181,182,187,233,262,264,276,278,316,320,378,380,381,384,390,391,392,393,394,453,457,459,461,484,485,502,503,504,512,513,518,],[-302,-289,-295,-266,-293,267,-296,-279,277,-294,-291,-300,-278,-280,-292,-281,-297,-298,-290,-303,-289,-178,267,-274,-275,-299,-301,-179,267,-181,-282,-273,-272,-270,-271,-269,-180,267,-267,-268,501,-284,-283,-276,267,-285,-277,-286,]),'EXTERN':([0,1,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,67,68,69,75,77,81,83,84,85,86,87,89,90,92,99,100,101,107,119,128,129,131,147,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,241,255,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[25,-91,-216,-109,25,-112,-115,-98,-107,25,-65,-66,-110,-62,25,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,25,25,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,25,-92,-53,-148,-302,-147,-61,25,25,25,-82,-69,-131,-130,-81,-89,-88,-87,25,-90,-30,25,-70,25,-83,25,-149,-303,25,25,-35,-36,-74,-75,-194,-193,25,-72,-73,-76,-78,-77,-195,-132,-71,-151,-150,-34,-31,25,25,-213,-209,25,-196,-210,-212,-197,-134,-133,25,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'AUTO':([0,1,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,67,68,69,75,77,81,83,84,85,86,87,89,90,92,99,100,101,107,119,128,129,131,147,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,241,255,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[34,-91,-216,-109,34,-112,-115,-98,-107,34,-65,-66,-110,-62,34,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,34,34,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,34,-92,-53,-148,-302,-147,-61,34,34,34,-82,-69,-131,-130,-81,-89,-88,-87,34,-90,-30,34,-70,34,-83,34,-149,-303,34,34,-35,-36,-74,-75,-194,-193,34,-72,-73,-76,-78,-77,-195,-132,-71,-151,-150,-34,-31,34,34,-213,-209,34,-196,-210,-212,-197,-134,-133,34,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'INT':([0,1,2,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,62,63,64,66,67,68,69,72,75,77,78,79,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,118,119,128,129,131,132,133,134,135,136,137,138,139,140,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,261,272,311,314,318,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[30,-91,30,-216,-109,-304,-112,-115,-98,-107,-304,-65,-66,-110,-62,30,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-304,30,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,30,-92,-53,-10,-85,-9,-86,-148,-302,-147,-161,-61,30,-84,30,30,30,-82,-69,-131,-130,30,-81,-89,-88,-87,30,-90,-30,-162,30,30,-70,30,-83,30,30,-128,-137,30,30,-141,-140,30,30,30,-149,-303,30,30,-35,-36,-74,-75,-194,-193,30,-72,-73,-76,-78,-77,-195,30,30,-132,-138,-127,-126,-129,-71,30,30,30,30,30,-151,-150,-34,-31,30,30,-213,-209,30,-196,-210,-212,-197,-134,-133,-139,30,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'DOUBLE':([0,1,2,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,62,63,64,66,67,68,69,72,75,77,78,79,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,118,119,128,129,131,132,133,134,135,136,137,138,139,140,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,261,272,311,314,318,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[32,-91,32,-216,-109,-304,-112,-115,-98,-107,-304,-65,-66,-110,-62,32,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-304,32,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,32,-92,-53,-10,-85,-9,-86,-148,-302,-147,-161,-61,32,-84,32,32,32,-82,-69,-131,-130,32,-81,-89,-88,-87,32,-90,-30,-162,32,32,-70,32,-83,32,32,-128,-137,32,32,-141,-140,32,32,32,-149,-303,32,32,-35,-36,-74,-75,-194,-193,32,-72,-73,-76,-78,-77,-195,32,32,-132,-138,-127,-126,-129,-71,32,32,32,32,32,-151,-150,-34,-31,32,32,-213,-209,32,-196,-210,-212,-197,-134,-133,-139,32,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,29,30,31,32,33,34,36,38,39,40,41,42,43,44,45,47,48,49,50,52,53,54,55,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,85,86,87,89,90,92,93,94,99,101,105,106,108,109,113,114,115,116,117,119,128,129,134,137,143,144,146,147,153,155,157,163,166,167,169,173,174,179,180,183,186,187,188,189,190,191,195,199,200,205,207,211,212,216,218,221,223,224,225,227,230,231,232,234,235,236,241,245,248,249,251,255,256,257,258,263,266,267,269,270,274,275,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,321,322,330,331,332,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,364,365,366,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,452,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,501,504,508,509,514,515,517,519,520,521,],[27,-91,27,27,-216,-109,-304,-112,-115,-98,-107,27,-304,69,-304,-65,-66,-110,-62,27,-108,-113,-111,-60,-96,-104,-102,-116,-103,-97,-106,-117,-93,-304,-95,-114,-67,-99,-64,-135,-63,-68,-100,-105,-94,87,-101,27,-136,-92,-10,-85,-9,-86,-148,-302,-147,111,-27,-161,-28,-159,-61,-304,123,-84,27,27,-69,-131,-130,-81,-89,-88,27,27,-87,-90,27,123,111,111,-162,-160,-28,123,-304,27,-70,233,-128,27,123,27,-304,123,-260,-304,123,-262,123,-261,123,123,123,-264,-263,-265,-149,-303,111,123,123,-261,123,27,27,123,123,-74,233,123,-75,-194,-193,233,-72,-73,123,-76,-78,-77,-195,361,-132,123,-127,-126,-129,-71,-28,123,-304,123,-11,123,123,-12,123,391,392,123,-228,-221,-229,-222,-225,-227,-220,-223,123,-219,-224,-226,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-151,-150,-304,123,27,123,-261,123,-213,-209,123,123,123,-196,-210,233,-212,233,123,-197,-134,-133,27,123,123,-261,123,-177,-304,123,-28,123,-304,-261,233,123,-200,-211,-198,-208,123,-11,123,-304,123,123,123,123,-261,123,123,-199,233,233,123,233,-204,-201,123,-203,123,123,-304,233,123,-205,-202,233,233,-207,-206,]),'TYPEDEF':([0,1,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,67,68,69,75,77,81,83,84,85,86,87,89,90,92,99,100,101,107,119,128,129,131,147,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,241,255,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[31,-91,-216,-109,31,-112,-115,-98,-107,31,-65,-66,-110,-62,31,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,31,31,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,31,-92,-53,-148,-302,-147,-61,31,31,31,-82,-69,-131,-130,-81,-89,-88,-87,31,-90,-30,31,-70,31,-83,31,-149,-303,31,31,-35,-36,-74,-75,-194,-193,31,-72,-73,-76,-78,-77,-195,-132,-71,-151,-150,-34,-31,31,31,-213,-209,31,-196,-210,-212,-197,-134,-133,31,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'PLUSEQUAL':([123,150,152,154,156,158,159,160,161,162,168,170,171,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,290,-294,-291,-300,-278,-280,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,-253,-267,-268,-259,-283,-276,-277,]),'SHORT':([0,1,2,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,62,63,64,66,67,68,69,72,75,77,78,79,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,118,119,128,129,131,132,133,134,135,136,137,138,139,140,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,261,272,311,314,318,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[28,-91,28,-216,-109,-304,-112,-115,-98,-107,-304,-65,-66,-110,-62,28,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-304,28,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,28,-92,-53,-10,-85,-9,-86,-148,-302,-147,-161,-61,28,-84,28,28,28,-82,-69,-131,-130,28,-81,-89,-88,-87,28,-90,-30,-162,28,28,-70,28,-83,28,28,-128,-137,28,28,-141,-140,28,28,28,-149,-303,28,28,-35,-36,-74,-75,-194,-193,28,-72,-73,-76,-78,-77,-195,28,28,-132,-138,-127,-126,-129,-71,28,28,28,28,28,-151,-150,-34,-31,28,28,-213,-209,28,-196,-210,-212,-197,-134,-133,-139,28,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'RESTRICT':([0,1,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,67,68,69,72,73,75,76,77,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,115,117,119,128,129,131,132,133,134,135,136,137,138,139,140,146,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,256,258,261,272,311,314,318,321,322,327,328,330,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,422,424,441,442,443,444,476,495,496,499,514,515,520,521,],[29,-91,-216,-109,29,-112,-115,-98,-107,29,29,-65,-66,-110,-62,29,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,29,29,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,29,-92,-53,-148,-302,-147,-161,29,-61,29,29,29,29,-82,-69,-131,-130,29,-81,-89,-88,-87,29,-90,-30,-162,29,29,29,-70,29,-83,29,29,-128,-137,29,29,-141,-140,29,29,29,29,-149,-303,29,29,-35,-36,-74,-75,-194,-193,29,-72,-73,-76,-78,-77,-195,29,29,-132,-138,-127,-126,-129,-71,29,29,29,29,29,29,29,-151,-150,-34,-31,29,29,29,-213,-209,29,-196,-210,-212,-197,-134,-133,-139,29,-33,-32,29,29,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'OR':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,293,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,293,-248,-247,-243,-235,-246,-242,-241,-236,-240,-237,-239,-238,-244,-234,293,-245,-249,-253,-267,-268,-259,-283,-276,-277,]),'INT_CONST_HEX':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,129,143,146,153,155,157,163,166,167,169,173,174,179,180,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,234,235,245,256,257,258,263,266,269,270,274,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,504,508,509,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,176,-162,-28,176,-304,176,176,-304,-260,-304,176,-262,176,-261,176,176,176,-264,-263,-265,-303,176,176,-261,176,176,-74,176,176,-75,-194,-193,176,-72,-73,176,-76,-78,-77,-195,176,-28,176,-304,176,-11,176,-12,176,176,-228,-221,-229,-222,-225,-227,-220,-223,176,-219,-224,-226,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,-304,176,-261,176,-213,-209,176,176,176,-196,-210,176,-212,176,176,-197,176,176,-261,176,-177,-304,176,-28,176,-304,-261,176,176,-200,-211,-198,-208,-11,176,-304,176,176,176,176,-261,176,176,-199,176,176,176,176,-204,-201,176,-203,176,-304,176,176,-205,-202,176,176,-207,-206,]),'GOTO':([45,68,85,89,129,187,211,212,218,221,223,224,225,227,231,232,234,235,349,350,355,356,357,359,360,363,436,441,442,443,444,476,477,478,481,495,496,499,508,514,515,517,519,520,521,],[-68,-302,-69,-81,236,-303,-74,236,-75,-194,-193,236,-72,-73,-76,-78,-77,-195,-213,-209,-196,-210,236,-212,236,-197,236,-200,-211,-198,-208,-199,236,236,236,-204,-201,-203,236,-205,-202,236,236,-207,-206,]),'_BOOL':([0,1,2,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,62,63,64,66,67,68,69,72,75,77,78,79,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,118,119,128,129,131,132,133,134,135,136,137,138,139,140,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,261,272,311,314,318,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[47,-91,47,-216,-109,-304,-112,-115,-98,-107,-304,-65,-66,-110,-62,47,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-304,47,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,47,-92,-53,-10,-85,-9,-86,-148,-302,-147,-161,-61,47,-84,47,47,47,-82,-69,-131,-130,47,-81,-89,-88,-87,47,-90,-30,-162,47,47,-70,47,-83,47,47,-128,-137,47,47,-141,-140,47,47,47,-149,-303,47,47,-35,-36,-74,-75,-194,-193,47,-72,-73,-76,-78,-77,-195,47,47,-132,-138,-127,-126,-129,-71,47,47,47,47,47,-151,-150,-34,-31,47,47,-213,-209,47,-196,-210,-212,-197,-134,-133,-139,47,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'EQ':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,309,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,309,309,309,-243,-235,-246,-242,-241,-236,-240,-237,-239,-238,-244,-234,309,-245,309,-253,-267,-268,-259,-283,-276,-277,]),'GE':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,295,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,295,295,295,-243,-235,295,-242,-241,-236,-240,-237,-239,-238,-244,-234,295,295,295,-253,-267,-268,-259,-283,-276,-277,]),'LNOT':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,129,143,146,153,155,157,163,166,167,169,173,174,179,180,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,234,235,245,256,257,258,263,266,269,270,274,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,388,422,423,424,430,436,440,441,442,443,444,454,456,457,460,462,463,466,467,469,475,476,477,478,479,481,495,496,498,499,500,504,508,509,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,183,-162,-28,183,-304,183,183,-304,-260,-304,183,-262,183,-261,183,183,183,-264,-263,-265,-303,183,183,-261,183,183,-74,183,183,-75,-194,-193,183,-72,-73,183,-76,-78,-77,-195,183,-28,183,-304,183,-11,183,-12,183,183,-228,-221,-229,-222,-225,-227,-220,-223,183,-219,-224,-226,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,-304,183,-261,183,-213,-209,183,183,183,-196,-210,183,-212,183,183,-197,183,183,-261,183,-177,-304,183,-28,183,-304,-261,183,183,-200,-211,-198,-208,-11,183,-304,183,183,183,183,-261,183,183,-199,183,183,183,183,-204,-201,183,-203,183,-304,183,183,-205,-202,183,183,-207,-206,]),'RBRACE':([45,68,85,89,110,111,112,123,129,135,136,138,139,150,151,152,154,155,156,158,159,160,161,162,164,165,168,170,171,172,176,177,178,181,182,184,185,187,188,211,218,221,223,224,225,226,227,231,232,234,235,238,239,240,242,265,266,268,276,278,312,313,315,316,317,319,320,323,324,325,349,350,355,356,359,363,369,380,382,383,384,390,391,392,393,394,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,441,442,443,444,455,458,459,461,465,476,486,487,489,495,496,499,502,503,504,513,514,515,520,521,],[-68,-302,-69,-81,187,-155,-152,-289,-304,-137,187,-141,-140,-295,-217,-266,-293,-304,-296,-279,-254,-252,-294,-291,-172,-231,-300,-278,-280,-233,-292,-281,-297,-298,-290,187,187,-303,-153,-74,-75,-194,-193,-6,-72,-5,-73,-76,-78,-77,-195,187,187,187,-138,-22,-21,187,-274,-275,-252,-257,-255,-299,-256,-258,-301,-154,-230,-156,-213,-209,-196,-210,-212,-197,-139,187,-173,-175,-282,-273,-272,-270,-271,-269,-218,-250,-248,-247,-243,-235,-246,-242,-241,-236,-240,-237,-239,-238,-244,-234,-251,-245,-249,-200,-211,-198,-208,-174,-253,-267,-268,-259,-199,-176,187,-232,-204,-201,-203,-283,-276,187,-277,-205,-202,-207,-206,]),'LSHIFTEQUAL':([123,150,152,154,156,158,159,160,161,162,168,170,171,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,291,-294,-291,-300,-278,-280,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,-253,-267,-268,-259,-283,-276,-277,]),'LSHIFT':([123,150,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,-252,-294,-291,301,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,301,301,301,301,-235,301,301,301,-236,-240,-237,-239,-238,301,-234,301,301,301,-253,-267,-268,-259,-283,-276,-277,]),'ANDEQUAL':([123,150,152,154,156,158,159,160,161,162,168,170,171,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,280,-294,-291,-300,-278,-280,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,-253,-267,-268,-259,-283,-276,-277,]),'ENUM':([0,2,6,8,9,12,15,16,18,19,23,25,27,29,31,33,34,35,36,37,38,40,42,44,45,49,61,62,63,64,66,68,72,75,77,78,79,83,84,85,88,89,100,107,113,118,128,129,131,132,133,135,136,138,139,140,147,157,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,242,255,261,311,314,318,327,328,331,339,349,350,354,355,356,359,363,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[13,13,-304,-115,-98,-304,-65,-66,-62,13,-60,-96,-29,-116,-97,-117,-93,-52,-304,13,-95,-67,-64,-63,-68,-94,-53,-10,-85,-9,-86,-302,-161,-61,13,-84,13,13,-82,-69,13,-81,13,-30,-162,13,-70,13,-83,13,13,-137,13,-141,-140,13,13,13,-303,13,13,-35,-36,-74,-75,-194,-193,13,-72,-73,-76,-78,-77,-195,13,13,-138,-71,13,13,13,13,-34,-31,13,13,-213,-209,13,-196,-210,-212,-197,-139,13,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'SWITCH':([45,68,85,89,129,187,211,212,218,221,223,224,225,227,231,232,234,235,349,350,355,356,357,359,360,363,436,441,442,443,444,476,477,478,481,495,496,499,508,514,515,517,519,520,521,],[-68,-302,-69,-81,237,-303,-74,237,-75,-194,-193,237,-72,-73,-76,-78,-77,-195,-213,-209,-196,-210,237,-212,237,-197,237,-200,-211,-198,-208,-199,237,237,237,-204,-201,-203,237,-205,-202,237,237,-207,-206,]),'VOLATILE':([0,1,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,67,68,69,72,73,75,76,77,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,115,117,119,128,129,131,132,133,134,135,136,137,138,139,140,146,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,256,258,261,272,311,314,318,321,322,327,328,330,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,422,424,441,442,443,444,476,495,496,499,514,515,520,521,],[33,-91,-216,-109,33,-112,-115,-98,-107,33,33,-65,-66,-110,-62,33,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,33,33,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,33,-92,-53,-148,-302,-147,-161,33,-61,33,33,33,33,-82,-69,-131,-130,33,-81,-89,-88,-87,33,-90,-30,-162,33,33,33,-70,33,-83,33,33,-128,-137,33,33,-141,-140,33,33,33,33,-149,-303,33,33,-35,-36,-74,-75,-194,-193,33,-72,-73,-76,-78,-77,-195,33,33,-132,-138,-127,-126,-129,-71,33,33,33,33,33,33,33,-151,-150,-34,-31,33,33,33,-213,-209,33,-196,-210,-212,-197,-134,-133,-139,33,-33,-32,33,33,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'MINUS':([8,29,33,45,68,71,72,73,76,85,89,106,113,115,116,117,123,129,143,146,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,187,189,190,191,195,205,211,212,216,218,221,223,224,225,227,230,231,232,233,234,235,245,256,257,258,263,266,269,270,274,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,330,340,341,348,349,350,352,353,354,355,356,357,359,360,362,363,368,370,371,373,379,380,384,388,390,391,392,393,394,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,422,423,424,430,436,440,441,442,443,444,454,456,457,458,459,460,461,462,463,465,466,467,469,475,476,477,478,479,481,495,496,498,499,500,502,503,504,508,509,513,514,515,517,519,520,521,],[-115,-116,-117,-68,-302,-27,-161,-28,-304,-69,-81,180,-162,-28,180,-304,-289,180,180,-304,-295,-266,-260,-293,-304,-296,180,-279,-254,-252,-294,-291,-262,305,180,-261,-300,180,-278,-280,-233,180,180,-292,-281,-297,-264,-263,-298,-290,-265,-303,180,180,-261,180,180,-74,180,180,-75,-194,-193,180,-72,-73,180,-76,-78,-289,-77,-195,180,-28,180,-304,180,-11,180,-12,180,-274,-275,180,-228,-221,-229,-222,-225,-227,-220,-223,180,-219,-224,-226,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,-252,-257,180,-255,-299,-256,180,-258,-301,-304,180,-261,180,-213,-209,180,180,180,-196,-210,180,-212,180,180,-197,180,180,-261,180,-177,-304,-282,180,-273,-272,-270,-271,-269,305,305,305,305,-235,305,305,305,-236,305,-237,305,-238,305,-234,305,305,305,-28,180,-304,-261,180,180,-200,-211,-198,-208,-11,180,-304,-253,-267,180,-268,180,180,-259,180,-261,180,180,-199,180,180,180,180,-204,-201,180,-203,180,-283,-276,-304,180,180,-277,-205,-202,180,180,-207,-206,]),'RBRACKET':([8,29,33,71,72,76,113,115,116,123,146,150,151,152,154,156,158,159,160,161,162,165,168,170,171,172,176,177,178,181,182,187,191,192,193,194,205,219,256,257,276,278,312,313,315,316,317,319,320,324,326,329,330,340,341,342,371,372,377,384,389,390,391,392,393,394,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,422,423,430,431,435,448,451,458,459,461,465,467,468,489,490,493,502,503,511,513,],[-115,-116,-117,-27,-161,-304,-162,-28,-304,-289,-304,-295,-217,-266,-293,-296,-279,-254,-252,-294,-291,-231,-300,-278,-280,-233,-292,-281,-297,-298,-290,-303,327,-4,328,-3,-304,-214,-28,-304,-274,-275,-252,-257,-255,-299,-256,-258,-301,-230,420,421,-304,-304,432,433,449,450,453,-282,459,-273,-272,-270,-271,-269,-218,-250,-248,-247,-243,-235,-246,-242,-241,-236,-240,-237,-239,-238,-244,-234,-251,-245,-249,-28,-304,473,474,-215,482,483,-253,-267,-268,-259,491,492,-232,505,506,-283,-276,518,-277,]),'FLOAT':([0,1,2,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,62,63,64,66,67,68,69,72,75,77,78,79,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,118,119,128,129,131,132,133,134,135,136,137,138,139,140,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,261,272,311,314,318,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[48,-91,48,-216,-109,-304,-112,-115,-98,-107,-304,-65,-66,-110,-62,48,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-304,48,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,48,-92,-53,-10,-85,-9,-86,-148,-302,-147,-161,-61,48,-84,48,48,48,-82,-69,-131,-130,48,-81,-89,-88,-87,48,-90,-30,-162,48,48,-70,48,-83,48,48,-128,-137,48,48,-141,-140,48,48,48,-149,-303,48,48,-35,-36,-74,-75,-194,-193,48,-72,-73,-76,-78,-77,-195,48,48,-132,-138,-127,-126,-129,-71,48,48,48,48,48,-151,-150,-34,-31,48,48,-213,-209,48,-196,-210,-212,-197,-134,-133,-139,48,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),'COMMA':([1,4,5,7,8,9,10,14,17,20,21,22,25,26,27,28,29,30,31,32,33,34,35,38,39,41,47,48,49,52,55,56,57,59,61,67,69,71,72,73,74,86,87,90,91,92,95,96,98,99,100,101,102,104,107,110,111,112,113,114,119,120,122,123,124,125,130,134,142,148,150,151,152,154,156,158,159,160,161,162,164,165,168,170,171,172,175,176,177,178,181,182,184,185,186,187,188,196,197,198,200,201,202,203,204,206,209,210,213,219,233,241,243,244,246,248,249,251,252,253,254,265,271,272,276,278,312,313,315,316,317,319,320,321,322,323,324,325,327,328,337,338,343,345,358,364,365,367,374,375,376,382,383,384,385,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,420,421,427,428,432,433,435,437,438,445,446,447,449,450,455,458,459,461,465,470,471,472,473,474,482,483,486,487,488,489,491,492,494,502,503,505,506,511,513,],[-91,-216,-109,-112,-115,-98,-107,-304,-110,-108,-113,-111,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-95,-114,-99,-100,-105,-94,-101,-92,-122,105,-124,-53,-148,-147,-27,-161,-28,-159,-131,-130,-89,-37,-88,-120,-118,144,-87,-157,-90,-54,-158,-30,188,-155,-152,-162,-160,-304,207,-165,-289,-170,208,-157,-128,-55,-123,-295,-217,-266,-293,-296,-279,-254,-252,-294,-291,-172,-231,-300,-278,-280,-233,-125,-292,-281,-297,-298,-290,188,188,-149,-303,-153,-56,-45,-2,-183,-185,-168,-169,-167,-1,-35,-36,348,-214,-289,-132,-142,366,-144,-127,-126,-129,-38,-121,-119,380,348,-304,-274,-275,-252,-257,-255,-299,-256,-258,-301,-151,-150,-154,-230,-156,-34,-31,-57,-184,-171,-166,348,-134,-133,-146,-43,-44,452,-173,-175,-282,-182,-183,348,-273,-272,-270,-271,-269,-287,460,-218,-250,-248,-247,-243,-235,-246,-242,-241,-236,-240,-237,-239,348,-238,-244,-234,-251,-245,-249,-33,-32,-192,-186,-190,-188,-215,348,348,348,-143,-145,-42,-39,-174,-253,-267,-268,-259,-50,-51,-191,-189,-187,-41,-40,-176,504,-288,-232,-49,-46,348,-283,-276,-48,-47,348,-277,]),'RSHIFTEQUAL':([123,150,152,154,156,158,159,160,161,162,168,170,171,176,177,178,181,182,187,233,276,278,312,313,315,316,317,319,320,384,390,391,392,393,394,458,459,461,465,502,503,513,],[-289,-295,-266,-293,-296,-279,-254,285,-294,-291,-300,-278,-280,-292,-281,-297,-298,-290,-303,-289,-274,-275,-252,-257,-255,-299,-256,-258,-301,-282,-273,-272,-270,-271,-269,-253,-267,-268,-259,-283,-276,-277,]),'__INT128':([0,1,2,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,52,53,55,61,62,63,64,66,67,68,69,72,75,77,78,79,81,83,84,85,86,87,88,89,90,92,99,100,101,107,113,118,119,128,129,131,132,133,134,135,136,137,138,139,140,147,157,186,187,199,208,209,210,211,218,221,223,224,225,227,231,232,234,235,239,240,241,242,248,249,251,255,261,272,311,314,318,321,322,327,328,331,339,349,350,354,355,356,359,363,364,365,369,386,420,421,441,442,443,444,476,495,496,499,514,515,520,521,],[17,-91,17,-216,-109,-304,-112,-115,-98,-107,-304,-65,-66,-110,-62,17,-108,-113,-111,-60,-96,-104,-29,-102,-116,-103,-97,-106,-117,-93,-52,-304,17,-95,-114,-67,-99,-64,-63,-68,-100,-105,-94,-101,17,-92,-53,-10,-85,-9,-86,-148,-302,-147,-161,-61,17,-84,17,17,17,-82,-69,-131,-130,17,-81,-89,-88,-87,17,-90,-30,-162,17,17,-70,17,-83,17,17,-128,-137,17,17,-141,-140,17,17,17,-149,-303,17,17,-35,-36,-74,-75,-194,-193,17,-72,-73,-76,-78,-77,-195,17,17,-132,-138,-127,-126,-129,-71,17,17,17,17,17,-151,-150,-34,-31,17,17,-213,-209,17,-196,-210,-212,-197,-134,-133,-139,17,-33,-32,-200,-211,-198,-208,-199,-204,-201,-203,-205,-202,-207,-206,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'direct_typeid_noparen_declarator':([119,200,],[196,337,]),'declaration_specifiers_no_type':([0,6,12,19,36,37,77,83,100,129,147,199,208,224,331,339,354,386,],[2,62,62,2,62,79,118,79,79,79,118,118,118,79,118,118,79,118,]),'pointer':([0,2,11,19,53,74,79,81,93,105,119,137,144,199,272,366,386,],[3,3,3,3,94,114,3,94,94,94,200,94,94,332,387,94,387,]),'parameter_type_list_opt':([199,339,386,],[333,429,333,]),'compound_statement':([80,129,145,212,224,357,360,436,477,478,481,508,517,519,],[128,211,255,211,211,211,211,211,211,211,211,211,211,211,]),'designator':([155,264,380,457,504,],[262,378,262,262,262,]),'brace_open':([13,50,67,69,80,86,87,106,129,143,145,212,224,269,357,360,388,436,456,463,464,465,477,478,481,508,517,519,],[70,88,108,109,129,132,133,155,129,155,129,129,129,155,129,129,457,129,155,457,457,457,129,129,129,129,129,129,]),'function_definition':([0,19,],[18,18,]),'typeid_declarator':([53,81,93,105,137,144,366,],[104,104,141,104,104,104,104,]),'expression':([129,157,212,224,230,274,304,311,314,318,352,353,354,357,360,362,436,440,475,477,478,479,481,498,500,508,509,517,519,],[213,271,213,213,358,389,410,271,271,271,437,438,213,213,213,445,213,213,494,213,213,213,213,213,511,213,213,213,213,]),'struct_declaration_list':([88,132,133,],[136,239,240,]),'unary_operator':([106,116,129,143,157,166,169,173,174,189,190,195,205,212,216,224,230,245,257,263,269,274,279,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,340,348,352,353,354,357,360,362,368,370,373,388,423,436,440,456,460,462,463,466,469,475,477,478,479,481,498,500,508,509,517,519,],[166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'postfix_expression':([106,116,129,143,157,166,169,173,174,189,190,195,205,212,216,224,230,245,257,263,269,274,279,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,340,348,352,353,354,357,360,362,368,370,373,388,423,436,440,456,460,462,463,466,469,475,477,478,479,481,498,500,508,509,517,519,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'unary_expression':([106,116,129,143,157,166,169,173,174,189,190,195,205,212,216,224,230,245,257,263,269,274,279,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,340,348,352,353,354,357,360,362,368,370,373,388,423,436,440,456,460,462,463,466,469,475,477,478,479,481,498,500,508,509,517,519,],[160,160,160,160,160,312,315,317,319,312,160,160,160,160,312,160,160,312,160,312,160,160,160,160,312,312,312,312,312,312,312,312,312,312,312,312,160,312,312,312,312,312,312,160,160,160,160,160,160,160,160,160,160,160,312,160,160,312,160,160,160,160,160,312,312,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'expression_opt':([129,212,224,354,357,360,436,440,477,478,479,481,498,508,509,517,519,],[214,214,214,439,214,214,214,480,214,214,497,214,510,214,516,214,214,]),'binary_expression':([106,116,129,143,157,189,190,195,205,212,216,224,230,245,257,263,269,274,279,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,340,348,352,353,354,357,360,362,368,370,373,423,436,440,456,460,462,466,469,475,477,478,479,481,498,500,508,509,517,519,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,398,399,400,401,402,403,404,405,406,407,408,409,165,411,412,413,414,415,416,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'declaration_specifiers':([0,19,37,77,83,100,129,147,199,208,224,331,339,354,386,],[53,53,81,119,81,81,81,119,119,119,81,119,119,81,119,]),'id_init_declarator_list':([2,79,],[57,57,]),'struct_or_union_specifier':([0,2,19,37,77,79,83,88,100,118,129,132,133,136,140,147,157,199,208,224,239,240,261,311,314,318,331,339,354,386,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'typedef_name':([0,2,19,37,77,79,83,88,100,118,129,132,133,136,140,147,157,199,208,224,239,240,261,311,314,318,331,339,354,386,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'external_declaration':([0,19,],[23,75,]),'parameter_declaration':([77,147,199,208,331,339,386,],[122,122,122,345,122,122,122,]),'offsetof_member_designator':([452,],[484,]),'selection_statement':([129,212,224,357,360,436,477,478,481,508,517,519,],[218,218,218,218,218,218,218,218,218,218,218,218,]),'unified_string_literal':([106,116,129,143,157,166,169,173,174,189,190,195,205,212,216,224,230,245,257,263,269,274,279,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,340,348,352,353,354,357,360,362,368,370,373,388,423,436,440,456,460,462,463,466,469,475,477,478,479,481,498,500,508,509,517,519,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'typeid_noparen_declarator':([119,],[202,]),'assignment_expression':([106,116,129,143,157,190,195,205,212,224,230,257,269,274,279,288,304,311,314,318,340,348,352,353,354,357,360,362,370,373,423,436,440,456,460,466,469,475,477,478,479,481,498,500,508,509,517,519,],[164,192,219,164,219,326,329,192,219,219,219,192,164,219,395,397,219,219,219,219,192,435,219,219,219,219,219,219,448,451,192,219,219,164,488,490,493,219,219,219,219,219,219,219,219,219,219,219,]),'identifier':([77,106,116,129,143,147,157,166,169,173,174,189,190,195,205,207,212,216,224,230,245,257,263,267,269,274,279,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,331,340,348,352,353,354,357,360,362,368,370,373,388,423,436,440,452,456,460,462,463,466,469,475,477,478,479,481,498,500,501,508,509,517,519,],[124,170,170,170,170,124,170,170,170,170,170,170,170,170,170,343,170,170,170,170,170,170,170,381,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,124,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,485,170,170,170,170,170,170,170,170,170,170,170,170,170,512,170,170,170,170,]),'assignment_expression_opt':([116,205,257,340,423,],[193,342,372,431,468,]),'parameter_type_list':([77,147,199,331,339,386,],[126,259,336,425,336,336,]),'init_declarator':([53,81,105,144,],[96,96,148,254,]),'init_declarator_list':([53,81,],[98,98,]),'type_qualifier':([0,6,12,14,19,36,37,53,73,76,77,81,83,88,100,115,117,119,129,132,133,136,137,140,146,147,157,199,208,224,239,240,256,258,261,272,311,314,318,330,331,339,354,386,422,424,],[36,36,36,72,36,36,36,99,113,72,36,99,36,72,36,113,72,99,36,72,72,72,248,113,72,36,72,36,36,36,72,72,113,72,72,248,72,72,72,72,36,36,36,36,113,72,]),'initializer':([106,143,269,456,],[175,253,383,486,]),'id_declarator':([0,2,11,19,53,79,81,93,105,119,137,144,199,366,],[37,59,65,37,100,59,130,65,130,204,130,130,65,130,]),'designation_opt':([155,380,457,504,],[269,456,269,456,]),'iteration_statement':([129,212,224,357,360,436,477,478,481,508,517,519,],[231,231,231,231,231,231,231,231,231,231,231,231,]),'specifier_qualifier_list':([88,132,133,136,157,239,240,261,311,314,318,],[137,137,137,137,272,137,137,272,272,272,272,]),'type_name':([157,261,311,314,318,],[273,376,417,418,419,]),'direct_id_declarator':([0,2,3,11,19,53,79,81,93,94,105,119,137,144,199,200,332,366,],[35,35,61,35,35,35,35,35,35,61,35,35,35,35,35,61,61,35,]),'enum_specifier':([0,2,19,37,77,79,83,88,100,118,129,132,133,136,140,147,157,199,208,224,239,240,261,311,314,318,331,339,354,386,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'declaration':([0,19,37,83,100,129,224,354,],[44,44,84,131,84,223,223,440,]),'block_item_list':([129,],[224,]),'labeled_statement':([129,212,224,357,360,436,477,478,481,508,517,519,],[225,225,225,225,225,225,225,225,225,225,225,225,]),'brace_close':([110,136,184,185,238,239,240,268,380,487,504,],[186,241,321,322,363,364,365,382,455,503,513,]),'constant_expression':([189,216,245,263,368,],[325,351,367,377,447,]),'initializer_list_opt':([155,],[268,]),'expression_statement':([129,212,224,357,360,436,477,478,481,508,517,519,],[227,227,227,227,227,227,227,227,227,227,227,227,]),'statement':([129,212,224,357,360,436,477,478,481,508,517,519,],[221,346,221,441,443,476,495,496,499,515,520,521,]),'direct_typeid_declarator':([53,81,93,94,105,137,144,366,],[102,102,102,142,102,102,102,102,]),'designator_list':([155,380,457,504,],[264,264,264,264,]),'enumerator_list':([70,108,109,],[110,184,185,]),'type_specifier':([0,2,19,37,77,79,83,88,100,118,129,132,133,136,140,147,157,199,208,224,239,240,261,311,314,318,331,339,354,386,],[1,55,1,1,1,55,1,134,1,55,1,134,134,134,251,1,134,1,1,1,134,134,134,134,134,134,1,1,1,1,]),'function_specifier':([0,6,12,19,36,37,53,77,81,83,100,119,129,147,199,208,224,331,339,354,386,],[12,12,12,12,12,12,90,12,90,12,12,90,12,12,12,12,12,12,12,12,12,]),'conditional_expression':([106,116,129,143,157,189,190,195,205,212,216,224,230,245,257,263,269,274,279,288,304,311,314,318,340,348,352,353,354,357,360,362,368,370,373,423,436,440,456,460,462,466,469,475,477,478,479,481,498,500,508,509,517,519,],[151,151,151,151,151,324,151,151,151,151,324,151,151,324,151,324,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,324,151,151,151,151,151,151,151,489,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'declaration_list_opt':([37,100,],[80,145,]),'primary_expression':([106,116,129,143,157,166,169,173,174,189,190,195,205,212,216,224,230,245,257,263,269,274,279,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,340,348,352,353,354,357,360,362,368,370,373,388,423,436,440,456,460,462,463,466,469,475,477,478,479,481,498,500,508,509,517,519,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'struct_declarator':([137,366,],[243,446,]),'storage_class_specifier':([0,6,12,19,36,37,53,77,81,83,100,119,129,147,199,208,224,331,339,354,386,],[6,6,6,6,6,6,92,6,92,6,6,92,6,6,6,6,6,6,6,6,6,]),'identifier_list':([77,147,331,],[120,120,120,]),'id_init_declarator':([2,79,],[56,56,]),'designation':([155,380,457,504,],[270,270,270,270,]),'type_specifier_no_typeid':([0,2,19,37,53,77,79,81,83,88,100,118,119,129,132,133,136,137,140,147,157,199,208,224,239,240,261,272,311,314,318,331,339,354,386,],[39,39,39,39,101,39,39,101,39,39,39,39,101,39,39,39,39,249,39,39,39,39,39,39,39,39,39,249,39,39,39,39,39,39,39,]),'struct_declarator_list':([137,],[244,]),'pppragma_directive':([0,19,88,129,132,133,136,212,224,239,240,357,360,436,477,478,481,508,517,519,],[15,15,138,232,138,138,138,232,232,138,138,232,232,232,232,232,232,232,232,232,]),'initializer_list':([155,457,],[265,487,]),'abstract_declarator':([119,199,272,386,],[198,334,198,334,]),'translation_unit':([0,],[19,]),'constant':([106,116,129,143,157,166,169,173,174,189,190,195,205,212,216,224,230,245,257,263,269,274,279,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,340,348,352,353,354,357,360,362,368,370,373,388,423,436,440,456,460,462,463,466,469,475,477,478,479,481,498,500,508,509,517,519,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'init_declarator_list_opt':([53,81,],[97,97,]),'translation_unit_or_empty':([0,],[24,]),'enumerator':([70,108,109,188,],[112,112,112,323,]),'parameter_list':([77,147,199,331,339,386,],[125,125,125,125,125,125,]),'declarator':([53,81,105,137,144,366,],[95,95,95,246,95,246,]),'assignment_operator':([160,],[288,]),'id_init_declarator_list_opt':([2,79,],[58,58,]),'jump_statement':([129,212,224,357,360,436,477,478,481,508,517,519,],[234,234,234,234,234,234,234,234,234,234,234,234,]),'struct_declarator_list_opt':([137,],[247,]),'empty':([0,2,6,12,14,36,37,53,76,77,79,81,100,116,117,119,129,137,146,147,155,199,205,212,224,257,258,272,330,331,339,340,354,357,360,380,386,423,424,436,440,457,477,478,479,481,498,504,508,509,517,519,],[46,60,64,64,71,64,82,103,71,121,60,103,82,194,71,206,226,250,71,121,266,335,194,347,347,194,71,206,71,121,335,194,347,347,347,454,335,194,71,347,347,454,347,347,347,347,347,454,347,347,347,347,]),'type_qualifier_list_opt':([14,76,117,146,258,330,424,],[74,116,195,257,373,423,469,]),'identifier_list_opt':([77,147,331,],[127,260,426,]),'cast_expression':([106,116,129,143,157,166,189,190,195,205,212,216,224,230,245,257,263,269,274,279,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,340,348,352,353,354,357,360,362,368,370,373,388,423,436,440,456,460,462,463,466,469,475,477,478,479,481,498,500,508,509,517,519,],[172,172,172,172,172,313,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,458,172,172,172,172,172,172,458,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'abstract_declarator_opt':([119,272,],[203,385,]),'declaration_list':([37,100,],[83,83,]),'type_qualifier_list':([14,76,88,117,132,133,136,146,157,239,240,258,261,311,314,318,330,424,],[73,115,140,73,140,140,140,256,140,140,140,73,140,140,140,140,422,73,]),'struct_or_union':([0,2,19,37,77,79,83,88,100,118,129,132,133,136,140,147,157,199,208,224,239,240,261,311,314,318,331,339,354,386,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'direct_abstract_declarator':([119,199,200,272,332,386,387,],[201,201,338,201,338,201,338,]),'unified_wstring_literal':([106,116,129,143,157,166,169,173,174,189,190,195,205,212,216,224,230,245,257,263,269,274,279,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,314,318,340,348,352,353,354,357,360,362,368,370,373,388,423,436,440,456,460,462,463,466,469,475,477,478,479,481,498,500,508,509,517,519,],[177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,]),'argument_expression_list':([279,],[396,]),'pp_directive':([0,19,],[42,42,]),'declaration_specifiers_no_type_opt':([6,12,36,],[63,66,78,]),'block_item':([129,224,],[235,355,]),'block_item_list_opt':([129,],[238,]),'decl_body':([0,19,37,83,100,129,224,354,],[51,51,51,51,51,51,51,51,]),'struct_declaration':([88,132,133,136,239,240,],[135,135,135,242,242,242,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
