
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {end':([0,12,16,18,23,29,31,39,43,45,46,49,87,88,104,117,152,260,337,],[-304,-63,-67,-60,-66,-59,-62,0,-58,-68,-65,-64,-81,-61,-69,-70,-303,-71,-197,]),'INT_CONST_HEX':([21,33,38,45,59,79,80,81,83,87,104,115,118,131,132,133,134,143,145,152,161,162,163,164,167,173,174,177,178,182,185,191,194,198,199,201,202,206,208,209,210,211,214,216,221,223,225,230,241,242,245,249,257,258,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,300,301,303,306,309,312,313,314,315,316,317,318,319,320,321,322,323,326,328,331,333,334,335,336,337,338,339,340,341,343,344,354,359,361,372,373,374,383,405,407,425,427,428,429,432,433,439,443,444,445,452,453,455,458,460,463,466,467,468,470,471,472,478,479,480,491,492,493,495,501,504,506,508,514,515,516,519,520,521,],[-117,-115,-116,-68,-302,-304,-161,-28,-27,-81,-69,176,176,-28,-304,176,-162,176,-304,-303,176,-260,-265,176,-262,176,-264,-304,-263,-261,176,176,176,-74,-195,-75,176,176,-73,-78,-193,-76,-194,-77,-72,176,176,176,176,176,-261,176,-28,-304,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,-11,-12,176,176,176,176,-226,-221,-228,-222,-219,-223,-229,-227,-224,-220,-225,176,176,176,-212,176,-213,176,-197,-209,176,176,176,-196,-210,-261,176,-304,176,176,-261,176,-304,-177,-211,-200,-198,176,-208,176,-261,-28,-304,176,176,-304,176,-11,176,176,176,176,176,176,176,-199,176,176,-261,-203,-201,176,-204,-304,176,176,176,-205,-202,176,-207,176,-206,]),'CONDOP':([123,152,165,166,169,170,171,175,176,179,183,184,186,187,188,189,190,192,193,195,196,218,269,292,295,305,308,310,324,325,327,379,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,401,402,412,415,416,418,419,454,462,464,465,500,502,511,],[-289,-303,-297,-298,289,-280,-266,-293,-292,-294,-300,-295,-254,-278,-252,-279,-281,-233,-291,-296,-290,-289,-252,-299,-255,-256,-274,-275,-301,-257,-258,-282,-243,-238,-241,-251,-250,-239,-244,-237,-235,-248,-247,-240,-242,-236,-246,-245,-234,-249,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'RSHIFTEQUAL':([123,152,165,166,170,171,175,176,179,183,184,186,187,188,189,190,193,195,196,218,269,292,295,305,308,310,324,325,327,379,412,415,416,418,419,454,462,464,465,500,502,511,],[-289,-303,-297,-298,-280,-266,-293,-292,-294,-300,-295,-254,-278,320,-279,-281,-291,-296,-290,-289,-252,-299,-255,-256,-274,-275,-301,-257,-258,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'RPAREN':([1,3,5,9,13,14,17,19,20,21,22,24,25,26,28,30,32,33,34,36,37,38,40,47,48,50,51,52,53,54,55,56,57,61,76,78,80,81,82,83,84,85,92,93,95,98,100,102,105,108,121,122,123,124,126,127,128,129,130,134,135,141,144,147,150,151,152,157,159,165,166,168,169,170,171,175,176,179,183,184,186,187,188,189,190,192,193,195,196,200,204,227,229,231,232,233,234,235,236,237,238,239,240,250,252,255,256,261,262,269,270,271,272,292,295,305,306,308,310,324,325,327,329,346,347,348,349,350,351,352,353,356,357,358,360,364,365,366,367,370,371,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,401,402,404,412,413,414,415,416,418,419,420,421,422,424,426,431,434,435,436,437,438,441,442,446,447,450,451,454,462,464,465,473,474,475,476,477,482,483,485,486,487,489,490,493,498,499,500,502,507,508,509,510,511,512,517,518,],[-94,-105,-109,-112,-93,-111,-107,-29,-216,-117,-104,-113,-102,-91,-52,-304,-99,-115,-110,-114,-106,-116,-103,-100,-98,-95,-108,-96,-97,-101,105,-130,-131,-92,-53,-304,-161,-28,-159,-27,-147,-148,-54,-89,-88,-37,-87,-90,-30,-128,-18,-170,-289,227,-163,-17,-165,-304,240,-162,-160,252,-304,-55,-129,-132,-303,-127,-126,-297,-298,-217,-231,-280,-266,-293,-292,-294,-300,-295,-254,-278,-252,-279,-281,-233,-291,-296,-290,-14,-214,-36,-304,-45,-167,-183,-168,-2,-1,-169,-185,-56,-35,-149,-38,370,371,-133,-134,-252,379,-304,383,-299,-255,-256,412,-274,-275,-301,-257,-258,-13,-171,-166,-164,434,435,-183,-24,-23,-57,-184,-304,-304,-34,-31,-150,-151,-44,-43,452,-282,-182,-304,-183,-243,-238,-241,-251,-250,-239,-244,-237,-235,-248,-247,-240,-242,-236,-246,-245,-234,-249,457,-269,462,-287,-273,-272,-271,-270,-218,465,-215,467,468,471,-192,-186,-190,-188,473,476,477,-33,-32,-42,-39,-253,-268,-267,-259,-191,-189,-187,-51,-50,-41,-40,-232,-284,502,-288,505,-304,-49,-46,-276,-283,516,-304,-48,-47,-277,-285,520,-286,]),'TIMESEQUAL':([123,152,165,166,170,171,175,176,179,183,184,186,187,188,189,190,193,195,196,218,269,292,295,305,308,310,324,325,327,379,412,415,416,418,419,454,462,464,465,500,502,511,],[-289,-303,-297,-298,-280,-266,-293,-292,-294,-300,-295,-254,-278,314,-279,-281,-291,-296,-290,-289,-252,-299,-255,-256,-274,-275,-301,-257,-258,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'ID':([0,1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,61,66,67,68,70,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,96,100,102,104,108,112,115,116,117,118,129,131,132,133,134,135,136,137,142,143,144,145,150,151,152,157,159,161,162,163,164,167,173,174,177,178,182,185,191,194,198,199,201,202,206,208,209,210,211,214,216,221,222,223,225,226,229,230,233,241,242,245,249,250,251,257,258,259,260,261,262,263,264,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,300,301,303,304,306,307,309,311,312,313,314,315,316,317,318,319,320,321,322,323,326,328,331,333,334,335,336,337,338,339,340,341,343,344,351,354,359,360,361,366,367,372,373,374,383,405,407,425,427,428,429,432,433,439,443,444,445,452,453,455,456,458,460,463,466,467,468,470,471,472,478,479,480,491,492,493,495,501,503,504,506,508,514,515,516,519,520,521,],[19,-94,19,-105,56,-109,19,-304,-112,-304,-135,-63,-93,-111,19,-67,-107,-60,-216,-117,-104,-66,-113,-102,-91,-304,-304,-62,-99,-115,-110,84,-114,-106,-116,-103,-136,19,19,-68,-65,-100,-98,-64,-95,-108,-96,-97,-101,-130,-131,-302,-92,-9,-86,-10,19,19,-85,-84,123,-304,-161,-28,-159,-27,-147,-148,138,-81,-61,19,-89,-88,19,-87,-90,-69,-128,19,123,19,-70,218,19,-28,-304,123,-162,-160,138,138,19,123,123,-304,-129,-132,-303,-127,-126,123,-260,-265,123,-262,123,-264,-304,-263,-261,123,123,123,-74,-195,-75,218,123,-73,-78,-193,-76,-194,-77,-72,342,218,123,123,19,123,19,123,123,-261,123,-149,138,-28,-304,123,-71,-133,-134,123,19,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-11,-12,123,123,123,416,123,419,123,-226,-221,-228,-222,-219,-223,-229,-227,-224,-220,-225,123,123,123,-212,123,-213,218,-197,-209,218,123,123,-196,-210,19,-261,123,123,-304,-150,-151,123,123,-261,123,-304,-177,-211,-200,-198,123,-208,218,-261,-28,-304,123,123,-304,123,123,-11,123,123,123,218,218,123,218,-199,123,123,-261,-203,-201,123,-204,-304,123,123,218,123,-205,-202,218,-207,218,-206,]),'SEMI':([0,1,3,5,6,7,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,36,37,38,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,74,75,76,77,84,85,87,88,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,117,118,120,123,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,166,168,169,170,171,175,176,179,180,181,183,184,186,187,188,189,190,192,193,195,196,197,198,199,200,201,202,204,205,206,208,209,210,211,212,214,216,217,218,221,223,224,227,240,250,252,253,254,260,261,262,265,267,268,269,292,295,305,308,310,324,325,327,329,332,333,335,336,337,338,339,340,342,343,344,364,365,366,367,370,371,376,377,379,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,401,402,409,412,415,416,418,419,420,422,425,427,428,429,430,432,433,446,447,450,451,454,459,462,464,465,467,468,469,470,471,472,482,483,485,491,492,494,495,500,502,505,506,511,514,515,516,519,520,521,],[23,-94,-105,-109,-304,-304,-112,-304,-63,-93,-111,-67,-107,-60,-29,-216,-117,-104,-66,-113,-102,-91,-304,-52,-62,-99,-115,-110,-114,-106,-116,-103,87,23,-304,-68,-65,-100,-98,-64,-95,-108,-96,-97,-101,-130,-131,111,-302,-124,-92,-15,-122,-16,-80,-9,-86,-10,-304,-304,-85,-53,-84,-147,-148,-81,-61,-20,-120,-54,-89,-157,-88,-79,-37,-158,-87,-19,-90,-118,-69,-30,111,111,-128,111,-140,-304,-141,-137,-70,-304,-157,-289,-55,111,111,-129,-132,-303,-138,-144,-26,-142,-127,-25,-126,265,-297,-298,-217,-231,-280,-266,-293,-292,-294,-125,-172,-300,-295,-254,-278,-252,-279,-281,-233,-291,-296,-290,-123,-74,-195,-14,-75,-304,-214,-13,333,-73,-78,-193,-76,335,-194,-77,338,-289,-72,-304,344,-36,-35,-149,-38,-119,-121,-71,-133,-134,-139,-230,-146,-252,-299,-255,-256,-274,-275,-301,-257,-258,-13,425,-212,-213,-304,-197,-209,-304,-304,432,-196,-210,-34,-31,-150,-151,-44,-43,-145,-143,-282,-243,-238,-241,-251,-250,-239,-244,-237,-235,-248,-247,-240,-242,-236,-246,-245,-234,-249,-173,-269,-273,-272,-271,-270,-218,-215,-211,-200,-198,-304,470,-208,-304,-33,-32,-42,-39,-253,-174,-268,-267,-259,-304,-304,493,-304,-304,-199,-41,-40,-232,-203,-201,508,-204,-276,-283,514,-304,-277,-205,-202,-304,-207,-304,-206,]),'NE':([123,152,165,166,169,170,171,175,176,179,183,184,186,187,188,189,190,192,193,195,196,218,269,292,295,305,308,310,324,325,327,379,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,401,402,412,415,416,418,419,454,462,464,465,500,502,511,],[-289,-303,-297,-298,287,-280,-266,-293,-292,-294,-300,-295,-254,-278,-252,-279,-281,-233,-291,-296,-290,-289,-252,-299,-255,-256,-274,-275,-301,-257,-258,-282,-243,-238,-241,287,287,-239,-244,-237,-235,287,287,-240,-242,-236,-246,-245,-234,287,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'SIZEOF':([21,33,38,45,59,79,80,81,83,87,104,115,118,131,132,133,134,143,145,152,161,162,163,164,167,173,174,177,178,182,185,191,194,198,199,201,202,206,208,209,210,211,214,216,221,223,225,230,241,242,245,249,257,258,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,300,301,303,306,309,312,313,314,315,316,317,318,319,320,321,322,323,326,328,331,333,334,335,336,337,338,339,340,341,343,344,354,359,361,372,373,374,383,405,407,425,427,428,429,432,433,439,443,444,445,452,453,455,458,460,463,466,467,468,470,471,472,478,479,480,491,492,493,495,501,504,506,508,514,515,516,519,520,521,],[-117,-115,-116,-68,-302,-304,-161,-28,-27,-81,-69,194,194,-28,-304,194,-162,194,-304,-303,194,-260,-265,194,-262,194,-264,-304,-263,-261,194,194,194,-74,-195,-75,194,194,-73,-78,-193,-76,-194,-77,-72,194,194,194,194,194,-261,194,-28,-304,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,-11,-12,194,194,194,194,-226,-221,-228,-222,-219,-223,-229,-227,-224,-220,-225,194,194,194,-212,194,-213,194,-197,-209,194,194,194,-196,-210,-261,194,-304,194,194,-261,194,-304,-177,-211,-200,-198,194,-208,194,-261,-28,-304,194,194,-304,194,-11,194,194,194,194,194,194,194,-199,194,194,-261,-203,-201,194,-204,-304,194,194,194,-205,-202,194,-207,194,-206,]),'GE':([123,152,165,166,169,170,171,175,176,179,183,184,186,187,188,189,190,192,193,195,196,218,269,292,295,305,308,310,324,325,327,379,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,401,402,412,415,416,418,419,454,462,464,465,500,502,511,],[-289,-303,-297,-298,273,-280,-266,-293,-292,-294,-300,-295,-254,-278,-252,-279,-281,-233,-291,-296,-290,-289,-252,-299,-255,-256,-274,-275,-301,-257,-258,-282,-243,-238,-241,273,273,-239,-244,-237,-235,273,273,-240,-242,-236,273,273,-234,273,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'WCHAR_CONST':([21,33,38,45,59,79,80,81,83,87,104,115,118,131,132,133,134,143,145,152,161,162,163,164,167,173,174,177,178,182,185,191,194,198,199,201,202,206,208,209,210,211,214,216,221,223,225,230,241,242,245,249,257,258,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,300,301,303,306,309,312,313,314,315,316,317,318,319,320,321,322,323,326,328,331,333,334,335,336,337,338,339,340,341,343,344,354,359,361,372,373,374,383,405,407,425,427,428,429,432,433,439,443,444,445,452,453,455,458,460,463,466,467,468,470,471,472,478,479,480,491,492,493,495,501,504,506,508,514,515,516,519,520,521,],[-117,-115,-116,-68,-302,-304,-161,-28,-27,-81,-69,165,165,-28,-304,165,-162,165,-304,-303,165,-260,-265,165,-262,165,-264,-304,-263,-261,165,165,165,-74,-195,-75,165,165,-73,-78,-193,-76,-194,-77,-72,165,165,165,165,165,-261,165,-28,-304,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-11,-12,165,165,165,165,-226,-221,-228,-222,-219,-223,-229,-227,-224,-220,-225,165,165,165,-212,165,-213,165,-197,-209,165,165,165,-196,-210,-261,165,-304,165,165,-261,165,-304,-177,-211,-200,-198,165,-208,165,-261,-28,-304,165,165,-304,165,-11,165,165,165,165,165,165,165,-199,165,165,-261,-203,-201,165,-204,-304,165,165,165,-205,-202,165,-207,165,-206,]),'RSHIFT':([123,152,165,166,169,170,171,175,176,179,183,184,186,187,188,189,190,192,193,195,196,218,269,292,295,305,308,310,324,325,327,379,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,401,402,412,415,416,418,419,454,462,464,465,500,502,511,],[-289,-303,-297,-298,278,-280,-266,-293,-292,-294,-300,-295,-254,-278,-252,-279,-281,-233,-291,-296,-290,-289,-252,-299,-255,-256,-274,-275,-301,-257,-258,-282,278,-238,278,278,278,-239,278,-237,-235,278,278,-240,278,-236,278,278,-234,278,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'LBRACE':([4,8,11,19,28,35,42,45,56,57,59,69,71,72,73,76,84,85,87,94,104,105,115,118,119,143,146,152,177,198,199,201,202,208,209,210,211,214,216,221,223,227,240,300,301,303,333,335,336,337,338,339,343,344,364,365,383,405,407,425,427,428,432,433,446,447,452,453,457,458,460,465,467,468,471,472,491,492,495,501,506,514,515,516,519,520,521,],[59,-304,-135,-29,-52,59,-136,-68,59,59,-302,-82,59,-7,-8,-53,59,59,-81,-304,-69,-30,59,59,-83,59,59,-303,-304,-74,-195,-75,59,-73,-78,-193,-76,-194,-77,-72,59,-36,-35,-11,-12,59,-212,-213,59,-197,-209,59,-196,-210,-34,-31,59,-304,-177,-211,-200,-198,-208,59,-33,-32,59,-304,59,-11,59,59,59,59,59,-199,-203,-201,-204,-304,59,-205,-202,59,-207,59,-206,]),'FOR':([45,59,87,104,118,152,198,199,201,202,208,209,210,211,214,216,221,223,333,335,336,337,338,339,343,344,425,427,428,432,433,467,468,471,472,491,492,495,506,514,515,516,519,520,521,],[-68,-302,-81,-69,219,-303,-74,-195,-75,219,-73,-78,-193,-76,-194,-77,-72,219,-212,-213,219,-197,-209,219,-196,-210,-211,-200,-198,-208,219,219,219,219,-199,-203,-201,-204,219,-205,-202,219,-207,219,-206,]),'LAND':([123,152,165,166,169,170,171,175,176,179,183,184,186,187,188,189,190,192,193,195,196,218,269,292,295,305,308,310,324,325,327,379,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,401,402,412,415,416,418,419,454,462,464,465,500,502,511,],[-289,-303,-297,-298,277,-280,-266,-293,-292,-294,-300,-295,-254,-278,-252,-279,-281,-233,-291,-296,-290,-289,-252,-299,-255,-256,-274,-275,-301,-257,-258,-282,-243,-238,-241,277,-250,-239,-244,-237,-235,-248,-247,-240,-242,-236,-246,-245,-234,-249,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'VOID':([0,1,3,5,6,7,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,36,37,38,40,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,61,66,67,68,69,70,73,74,75,76,77,78,80,84,85,87,88,93,94,95,100,102,104,105,106,107,108,109,110,111,112,113,114,117,118,119,125,129,134,144,148,149,150,151,152,153,157,159,164,198,199,201,208,209,210,211,214,216,221,223,227,228,229,240,250,260,261,262,265,266,271,293,294,326,333,335,337,338,340,343,344,358,360,364,365,366,367,381,425,427,428,432,446,447,472,491,492,495,514,515,519,521,],[32,-94,-105,-109,32,-304,32,-112,-304,-63,-93,-111,-67,-107,-60,-29,-216,-117,-104,-66,-113,-102,-91,-304,-52,-62,-99,-115,-110,-114,-106,-116,-103,32,32,-68,-65,-100,-98,-64,-95,-108,-96,-97,-101,-130,-131,32,-302,-92,-9,-86,-10,-82,32,32,32,-85,-53,-84,32,-161,-147,-148,-81,-61,-89,32,-88,-87,-90,-69,-30,32,32,-128,32,32,-140,32,-141,-137,-70,32,-83,32,32,-162,32,32,32,-129,-132,-303,-138,-127,-126,32,-74,-195,-75,-73,-78,-193,-76,-194,-77,-72,32,-36,32,32,-35,-149,-71,-133,-134,-139,32,32,32,32,32,-212,-213,-197,-209,32,-196,-210,32,32,-34,-31,-150,-151,32,-211,-200,-198,-208,-33,-32,-199,-203,-201,-204,-205,-202,-207,-206,]),'TIMES':([0,1,2,3,5,6,7,9,10,12,13,14,16,17,18,20,21,22,23,24,25,26,27,30,31,32,33,34,36,37,38,40,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,61,66,67,68,70,74,75,77,79,80,81,82,83,84,85,87,88,89,93,95,100,102,104,108,112,115,116,117,118,123,129,131,132,133,134,142,143,145,150,151,152,157,159,161,162,163,164,165,166,167,169,170,171,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,201,202,206,208,209,210,211,214,216,218,221,223,225,229,230,241,242,245,249,250,257,258,259,260,261,262,263,264,266,269,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,299,300,301,303,305,306,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,331,333,334,335,336,337,338,339,340,341,343,344,354,359,361,366,367,372,373,374,379,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,401,402,405,407,412,415,416,418,419,425,427,428,429,432,433,439,443,444,445,452,453,454,455,458,460,462,463,464,465,466,467,468,470,471,472,478,479,480,491,492,493,495,500,501,502,504,506,508,511,514,515,516,519,520,521,],[30,-94,30,-105,-109,30,-304,-112,-304,-63,-93,-111,-67,-107,-60,-216,-117,-104,-66,-113,-102,-91,-304,-304,-62,-99,-115,-110,-114,-106,-116,-103,30,30,-68,-65,-100,-98,-64,-95,-108,-96,-97,-101,-130,-131,-302,-92,-9,-86,-10,30,30,-85,-84,-304,-161,-28,30,-27,-147,-148,-81,-61,30,-89,-88,-87,-90,-69,-128,30,182,30,-70,182,-289,30,-28,-304,245,-162,30,182,-304,-129,-132,-303,-127,-126,182,-260,-265,182,-297,-298,-262,290,-280,-266,182,-264,-293,-292,-304,-263,-294,-261,-300,-295,182,-254,-278,-252,-279,-281,182,-233,-291,182,-296,-290,-74,-195,-75,182,182,-73,-78,-193,-76,-194,-77,-289,-72,182,182,30,354,182,182,-261,182,-149,-28,-304,374,-71,-133,-134,182,30,182,-252,30,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,-299,182,-255,182,-11,-12,182,-256,182,-274,182,-275,182,-226,-221,-228,-222,-219,-223,-229,-227,-224,-220,-225,-301,-257,182,-258,182,182,-212,182,-213,182,-197,-209,182,182,182,-196,-210,-261,439,-304,-150,-151,182,182,-261,-282,30,182,290,290,290,290,290,290,290,290,-235,290,290,290,290,-236,290,290,-234,290,-304,-177,-269,-273,-272,-271,-270,-211,-200,-198,182,-208,182,-261,-28,-304,480,182,-304,-253,182,-11,182,-268,182,-267,-259,182,182,182,182,182,-199,182,182,-261,-203,-201,182,-204,-276,-304,-283,182,182,182,-277,-205,-202,182,-207,182,-206,]),'WHILE':([45,59,87,104,118,152,198,199,201,202,208,209,210,211,214,216,221,223,330,333,335,336,337,338,339,343,344,425,427,428,432,433,467,468,471,472,491,492,495,506,514,515,516,519,520,521,],[-68,-302,-81,-69,220,-303,-74,-195,-75,220,-73,-78,-193,-76,-194,-77,-72,220,423,-212,-213,220,-197,-209,220,-196,-210,-211,-200,-198,-208,220,220,220,220,-199,-203,-201,-204,220,-205,-202,220,-207,220,-206,]),'OREQUAL':([123,152,165,166,170,171,175,176,179,183,184,186,187,188,189,190,193,195,196,218,269,292,295,305,308,310,324,325,327,379,412,415,416,418,419,454,462,464,465,500,502,511,],[-289,-303,-297,-298,-280,-266,-293,-292,-294,-300,-295,-254,-278,319,-279,-281,-291,-296,-290,-289,-252,-299,-255,-256,-274,-275,-301,-257,-258,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'__INT128':([0,1,3,5,6,7,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,36,37,38,40,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,61,66,67,68,69,70,73,74,75,76,77,78,80,84,85,87,88,93,94,95,100,102,104,105,106,107,108,109,110,111,112,113,114,117,118,119,125,129,134,144,148,149,150,151,152,153,157,159,164,198,199,201,208,209,210,211,214,216,221,223,227,228,229,240,250,260,261,262,265,266,271,293,294,326,333,335,337,338,340,343,344,358,360,364,365,366,367,381,425,427,428,432,446,447,472,491,492,495,514,515,519,521,],[34,-94,-105,-109,34,-304,34,-112,-304,-63,-93,-111,-67,-107,-60,-29,-216,-117,-104,-66,-113,-102,-91,-304,-52,-62,-99,-115,-110,-114,-106,-116,-103,34,34,-68,-65,-100,-98,-64,-95,-108,-96,-97,-101,-130,-131,34,-302,-92,-9,-86,-10,-82,34,34,34,-85,-53,-84,34,-161,-147,-148,-81,-61,-89,34,-88,-87,-90,-69,-30,34,34,-128,34,34,-140,34,-141,-137,-70,34,-83,34,34,-162,34,34,34,-129,-132,-303,-138,-127,-126,34,-74,-195,-75,-73,-78,-193,-76,-194,-77,-72,34,-36,34,34,-35,-149,-71,-133,-134,-139,34,34,34,34,34,-212,-213,-197,-209,34,-196,-210,34,34,-34,-31,-150,-151,34,-211,-200,-198,-208,-33,-32,-199,-203,-201,-204,-205,-202,-207,-206,]),'DIVIDE':([123,152,165,166,169,170,171,175,176,179,183,184,186,187,188,189,190,192,193,195,196,218,269,292,295,305,308,310,324,325,327,379,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,401,402,412,415,416,418,419,454,462,464,465,500,502,511,],[-289,-303,-297,-298,281,-280,-266,-293,-292,-294,-300,-295,-254,-278,-252,-279,-281,-233,-291,-296,-290,-289,-252,-299,-255,-256,-274,-275,-301,-257,-258,-282,281,281,281,281,281,281,281,281,-235,281,281,281,281,-236,281,281,-234,281,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'PERIOD':([59,123,152,165,166,170,171,175,176,177,179,183,184,186,187,189,190,193,195,196,218,292,297,298,308,310,324,379,405,406,411,412,415,416,418,419,453,461,462,464,486,487,500,501,502,511,512,518,],[-302,-289,-303,-297,-298,-280,-266,-293,-292,304,-294,-300,-295,311,-278,-279,-281,-291,-296,-290,-289,-299,304,-178,-274,-275,-301,-282,304,-179,-181,-269,-273,-272,-271,-270,304,-180,-268,-267,-284,503,-276,304,-283,-277,-285,-286,]),'OR':([123,152,165,166,169,170,171,175,176,179,183,184,186,187,188,189,190,192,193,195,196,218,269,292,295,305,308,310,324,325,327,379,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,401,402,412,415,416,418,419,454,462,464,465,500,502,511,],[-289,-303,-297,-298,282,-280,-266,-293,-292,-294,-300,-295,-254,-278,-252,-279,-281,-233,-291,-296,-290,-289,-252,-299,-255,-256,-274,-275,-301,-257,-258,-282,-243,-238,-241,282,282,-239,-244,-237,-235,-248,-247,-240,-242,-236,-246,-245,-234,-249,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'RESTRICT':([0,1,3,5,7,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,40,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,61,69,73,74,76,78,79,80,81,84,85,87,88,93,94,95,100,102,104,105,106,107,108,109,110,111,112,113,114,117,118,119,129,131,132,134,144,145,148,149,150,151,152,153,157,159,164,198,199,201,208,209,210,211,214,216,221,223,227,228,229,240,250,257,258,260,261,262,265,266,271,293,294,326,333,335,337,338,340,343,344,358,360,361,364,365,366,367,381,425,427,428,432,443,444,446,447,472,491,492,495,514,515,519,521,],[38,-94,-105,-109,38,38,-112,38,-63,-93,-111,-67,-107,-60,-29,-216,-117,-104,-66,-113,-102,-91,38,-52,38,-62,-99,-115,-110,-114,-106,-116,-103,38,38,-68,-65,-100,-98,-64,-95,-108,-96,-97,-101,-130,-131,38,-302,-92,-82,38,38,-53,38,38,-161,38,-147,-148,-81,-61,-89,38,-88,-87,-90,-69,-30,38,38,-128,38,38,-140,38,-141,-137,-70,38,-83,38,38,38,-162,38,38,38,38,-129,-132,-303,-138,-127,-126,38,-74,-195,-75,-73,-78,-193,-76,-194,-77,-72,38,-36,38,38,-35,-149,38,38,-71,-133,-134,-139,38,38,38,38,38,-212,-213,-197,-209,38,-196,-210,38,38,38,-34,-31,-150,-151,38,-211,-200,-198,-208,38,38,-33,-32,-199,-203,-201,-204,-205,-202,-207,-206,]),'CONST':([0,1,3,5,7,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,40,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,61,69,73,74,76,78,79,80,81,84,85,87,88,93,94,95,100,102,104,105,106,107,108,109,110,111,112,113,114,117,118,119,129,131,132,134,144,145,148,149,150,151,152,153,157,159,164,198,199,201,208,209,210,211,214,216,221,223,227,228,229,240,250,257,258,260,261,262,265,266,271,293,294,326,333,335,337,338,340,343,344,358,360,361,364,365,366,367,381,425,427,428,432,443,444,446,447,472,491,492,495,514,515,519,521,],[33,-94,-105,-109,33,33,-112,33,-63,-93,-111,-67,-107,-60,-29,-216,-117,-104,-66,-113,-102,-91,33,-52,33,-62,-99,-115,-110,-114,-106,-116,-103,33,33,-68,-65,-100,-98,-64,-95,-108,-96,-97,-101,-130,-131,33,-302,-92,-82,33,33,-53,33,33,-161,33,-147,-148,-81,-61,-89,33,-88,-87,-90,-69,-30,33,33,-128,33,33,-140,33,-141,-137,-70,33,-83,33,33,33,-162,33,33,33,33,-129,-132,-303,-138,-127,-126,33,-74,-195,-75,-73,-78,-193,-76,-194,-77,-72,33,-36,33,33,-35,-149,33,33,-71,-133,-134,-139,33,33,33,33,33,-212,-213,-197,-209,33,-196,-210,33,33,33,-34,-31,-150,-151,33,-211,-200,-198,-208,33,33,-33,-32,-199,-203,-201,-204,-205,-202,-207,-206,]),'GOTO':([45,59,87,104,118,152,198,199,201,202,208,209,210,211,214,216,221,223,333,335,336,337,338,339,343,344,425,427,428,432,433,467,468,471,472,491,492,495,506,514,515,516,519,520,521,],[-68,-302,-81,-69,222,-303,-74,-195,-75,222,-73,-78,-193,-76,-194,-77,-72,222,-212,-213,222,-197,-209,222,-196,-210,-211,-200,-198,-208,222,222,222,222,-199,-203,-201,-204,222,-205,-202,222,-207,222,-206,]),'RBRACE':([45,59,87,104,110,111,113,114,118,123,138,139,140,148,149,152,153,165,166,168,169,170,171,175,176,177,179,181,183,184,186,187,188,189,190,192,193,195,196,198,199,201,205,208,209,210,211,214,215,216,221,223,247,248,251,265,267,269,292,295,296,300,302,305,308,310,324,325,327,333,335,337,338,343,344,368,369,379,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,401,402,405,409,410,412,415,416,418,419,420,425,427,428,432,454,459,462,464,465,472,484,485,488,491,492,495,500,501,502,511,514,515,519,521,],[-68,-302,-81,-69,152,-140,-141,-137,-304,-289,-155,152,-152,152,152,-303,-138,-297,-298,-217,-231,-280,-266,-293,-292,-304,-294,-172,-300,-295,-254,-278,-252,-279,-281,-233,-291,-296,-290,-74,-195,-75,-5,-73,-78,-193,-76,-194,152,-77,-72,-6,152,152,-153,-139,-230,-252,-299,-255,-22,-21,152,-256,-274,-275,-301,-257,-258,-212,-213,-197,-209,-196,-210,-156,-154,-282,-243,-238,-241,-251,-250,-239,-244,-237,-235,-248,-247,-240,-242,-236,-246,-245,-234,-249,152,-173,-175,-269,-273,-272,-271,-270,-218,-211,-200,-198,-208,-253,-174,-268,-267,-259,-199,152,-232,-176,-203,-201,-204,-276,152,-283,-277,-205,-202,-207,-206,]),'ANDEQUAL':([123,152,165,166,170,171,175,176,179,183,184,186,187,188,189,190,193,195,196,218,269,292,295,305,308,310,324,325,327,379,412,415,416,418,419,454,462,464,465,500,502,511,],[-289,-303,-297,-298,-280,-266,-293,-292,-294,-300,-295,-254,-278,315,-279,-281,-291,-296,-290,-289,-252,-299,-255,-256,-274,-275,-301,-257,-258,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'STATIC':([0,1,3,5,7,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,36,37,38,40,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,61,69,73,74,76,78,79,80,84,85,87,88,93,94,95,100,102,104,105,117,118,119,129,131,134,144,145,151,152,198,199,201,208,209,210,211,214,216,221,223,227,228,229,240,250,257,260,261,262,333,335,337,338,340,343,344,358,360,361,364,365,366,367,381,425,427,428,432,443,446,447,472,491,492,495,514,515,519,521,],[50,-94,-105,-109,50,50,-112,50,-63,-93,-111,-67,-107,-60,-29,-216,-117,-104,-66,-113,-102,-91,50,-52,-62,-99,-115,-110,-114,-106,-116,-103,50,50,-68,-65,-100,-98,-64,-95,-108,-96,-97,-101,-130,-131,-302,-92,-82,50,50,-53,50,132,-161,-147,-148,-81,-61,-89,50,-88,-87,-90,-69,-30,-70,50,-83,50,241,-162,50,258,-132,-303,-74,-195,-75,-73,-78,-193,-76,-194,-77,-72,50,-36,50,50,-35,-149,372,-71,-133,-134,-212,-213,-197,-209,50,-196,-210,50,50,444,-34,-31,-150,-151,50,-211,-200,-198,-208,478,-33,-32,-199,-203,-201,-204,-205,-202,-207,-206,]),'INT_CONST_DEC':([21,33,38,45,59,79,80,81,83,87,104,115,118,131,132,133,134,143,145,152,161,162,163,164,167,173,174,177,178,182,185,191,194,198,199,201,202,206,208,209,210,211,214,216,221,223,225,230,241,242,245,249,257,258,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,300,301,303,306,309,312,313,314,315,316,317,318,319,320,321,322,323,326,328,331,333,334,335,336,337,338,339,340,341,343,344,354,359,361,372,373,374,383,405,407,425,427,428,429,432,433,439,443,444,445,452,453,455,458,460,463,466,467,468,470,471,472,478,479,480,491,492,493,495,501,504,506,508,514,515,516,519,520,521,],[-117,-115,-116,-68,-302,-304,-161,-28,-27,-81,-69,196,196,-28,-304,196,-162,196,-304,-303,196,-260,-265,196,-262,196,-264,-304,-263,-261,196,196,196,-74,-195,-75,196,196,-73,-78,-193,-76,-194,-77,-72,196,196,196,196,196,-261,196,-28,-304,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,-11,-12,196,196,196,196,-226,-221,-228,-222,-219,-223,-229,-227,-224,-220,-225,196,196,196,-212,196,-213,196,-197,-209,196,196,196,-196,-210,-261,196,-304,196,196,-261,196,-304,-177,-211,-200,-198,196,-208,196,-261,-28,-304,196,196,-304,196,-11,196,196,196,196,196,196,196,-199,196,196,-261,-203,-201,196,-204,-304,196,196,196,-205,-202,196,-207,196,-206,]),'PLUSPLUS':([21,33,38,45,59,79,80,81,83,87,104,115,118,123,131,132,133,134,143,145,152,161,162,163,164,165,166,167,170,171,173,174,175,176,177,178,179,182,183,184,185,186,187,189,190,191,193,194,195,196,198,199,201,202,206,208,209,210,211,214,216,218,221,223,225,230,241,242,245,249,257,258,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,299,300,301,303,306,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,326,328,331,333,334,335,336,337,338,339,340,341,343,344,354,359,361,372,373,374,379,383,405,407,412,415,416,418,419,425,427,428,429,432,433,439,443,444,445,452,453,455,458,460,462,463,464,466,467,468,470,471,472,478,479,480,491,492,493,495,500,501,502,504,506,508,511,514,515,516,519,520,521,],[-117,-115,-116,-68,-302,-304,-161,-28,-27,-81,-69,173,173,-289,-28,-304,173,-162,173,-304,-303,173,-260,-265,173,-297,-298,-262,-280,-266,173,-264,-293,-292,-304,-263,-294,-261,-300,-295,173,308,-278,-279,-281,173,-291,173,-296,-290,-74,-195,-75,173,173,-73,-78,-193,-76,-194,-77,-289,-72,173,173,173,173,173,-261,173,-28,-304,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-299,173,173,-11,-12,173,173,-274,173,-275,173,-226,-221,-228,-222,-219,-223,-229,-227,-224,-220,-225,-301,173,173,173,-212,173,-213,173,-197,-209,173,173,173,-196,-210,-261,173,-304,173,173,-261,-282,173,-304,-177,-269,-273,-272,-271,-270,-211,-200,-198,173,-208,173,-261,-28,-304,173,173,-304,173,-11,173,-268,173,-267,173,173,173,173,173,-199,173,173,-261,-203,-201,173,-204,-276,-304,-283,173,173,173,-277,-205,-202,173,-207,173,-206,]),'DIVEQUAL':([123,152,165,166,170,171,175,176,179,183,184,186,187,188,189,190,193,195,196,218,269,292,295,305,308,310,324,325,327,379,412,415,416,418,419,454,462,464,465,500,502,511,],[-289,-303,-297,-298,-280,-266,-293,-292,-294,-300,-295,-254,-278,316,-279,-281,-291,-296,-290,-289,-252,-299,-255,-256,-274,-275,-301,-257,-258,-282,-269,-273,-272,-271,-270,-253,-268,-267,-259,-276,-283,-277,]),'CONTINUE':([45,59,87,104,118,152,198,199,201,202,208,209,210,211,214,216,221,223,333,335,336,337,338,339,343,344,425,427,428,432,433,467,468,471,472,491,492,495,506,514,515,516,519,520,521,],[-68,-302,-81,-69,224,-303,-74,-195,-75,224,-73,-78,-193,-76,-194,-77,-72,224,-212,-213,224,-197,-209,224,-196,-210,-211,-200,-198,-208,224,224,224,224,-199,-203,-201,-204,224,-205,-202,224,-207,224,-206,]),'_BOOL':([0,1,3,5,6,7,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,36,37,38,40,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,61,66,67,68,69,70,73,74,75,76,77,78,80,84,85,87,88,93,94,95,100,102,104,105,106,107,108,109,110,111,112,113,114,117,118,119,125,129,134,144,148,149,150,151,152,153,157,159,164,198,199,201,208,209,210,211,214,216,221,223,227,228,229,240,250,260,261,262,265,266,271,293,294,326,333,335,337,338,340,343,344,358,360,364,365,366,367,381,425,427,428,432,446,447,472,491,492,495,514,515,519,521,],[47,-94,-105,-109,47,-304,47,-112,-304,-63,-93,-111,-67,-107,-60,-29,-216,-117,-104,-66,-113,-102,-91,-304,-52,-62,-99,-115,-110,-114,-106,-116,-103,47,47,-68,-65,-100,-98,-64,-95,-108,-96,-97,-101,-130,-131,47,-302,-92,-9,-86,-10,-82,47,47,47,-85,-53,-84,47,-161,-147,-148,-81,-61,-89,47,-88,-87,-90,-69,-30,47,47,-128,47,47,-140,47,-141,-137,-70,47,-83,47,47,-162,47,47,47,-129,-132,-303,-138,-127,-126,47,-74,-195,-75,-73,-78,-193,-76,-194,-77,-72,47,-36,47,47,-35,-149,-71,-133,-134,-139,47,47,47,47,47,-212,-213,-197,-209,47,-196,-210,47,47,-34,-31,-150,-151,47,-211,-200,-198,-208,-33,-32,-199,-203,-201,-204,-205,-202,-207,-206,]),'COLON':([3,5,9,14,17,19,20,21,22,24,25,28,32,33,34,36,37,38,40,47,51,54,56,57,76,84,85,92,98,99,105,108,112,120,123,147,150,151,152,154,157,159,165,166,168,169,170,171,175,176,179,183,184,186,187,188,189,190,192,193,195,196,204,213,218,227,240,250,252,261,262,264,267,269,292,295,305,308,310,324,325,327,345,364,365,366,367,370,371,379,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,412,415,416,418,419,420,422,446,447,450,451,454,462,464,465,482,483,485,500,502,511,],[-105,-109,-112,-111,-107,-29,-216,-117,-104,-113,-102,-52,-99,-115,-110,-114,-106,-116,-103,-100,-108,-101,-130,-131,-53,-147,-148,-54,-37,-158,-30,-128,161,-157,-289,-55,-129,-132,-303,263,-127,-126,-297,-298,-217,-231,-280,-266,-293,-292,-294,-300,-295,-254,-278,-252,-279,-281,-233,-291,-296,-290,-214,336,339,-36,-35,-149,-38,-133,-134,161,-230,-252,-299,-255,-256,-274,-275,-301,-257,-258,433,-34,-31,-150,-151,-44,-43,-282,-243,-238,-241,-251,-250,-239,-244,-237,-235,-248,-247,-240,-242,-236,-246,-245,455,-234,-249,-269,-273,-272,-271,-270,-218,-215,-33,-32,-42,-39,-253,-268,-267,-259,-41,-40,-232,-276,-283,-277,]),'SIGNED':([0,1,3,5,6,7,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,36,37,38,40,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,61,66,67,68,69,70,73,74,75,76,77,78,80,84,85,87,88,93,94,95,100,102,104,105,106,107,108,109,110,111,112,113,114,117,118,119,125,129,134,144,148,149,150,151,152,153,157,159,164,198,199,201,208,209,210,211,214,216,221,223,227,228,229,240,250,260,261,262,265,266,271,293,294,326,333,335,337,338,340,343,344,358,360,364,365,366,367,381,425,427,428,432,446,447,472,491,492,495,514,515,519,521,],[51,-94,-105,-109,51,-304,51,-112,-304,-63,-93,-111,-67,-107,-60,-29,-216,-117,-104,-66,-113,-102,-91,-304,-52,-62,-99,-115,-110,-114,-106,-116,-103,51,51,-68,-65,-100,-98,-64,-95,-108,-96,-97,-101,-130,-131,51,-302,-92,-9,-86,-10,-82,51,51,51,-85,-53,-84,51,-161,-147,-148,-81,-61,-89,51,-88,-87,-90,-69,-30,51,51,-128,51,51,-140,51,-141,-137,-70,51,-83,51,51,-162,51,51,51,-129,-132,-303,-138,-127,-126,51,-74,-195,-75,-73,-78,-193,-76,-194,-77,-72,51,-36,51,51,-35,-149,-71,-133,-134,-139,51,51,51,51,51,-212,-213,-197,-209,51,-196,-210,51,51,-34,-31,-150,-151,51,-211,-200,-198,-208,-33,-32,-199,-203,-201,-204,-205,-202,-207,-206,]),'ENUM':([0,1,6,7,8,10,12,13,16,18,19,21,23,27,28,31,33,38,43,45,46,48,49,50,52,53,58,59,66,67,68,69,70,73,75,76,77,78,80,87,88,94,104,105,106,107,109,110,111,113,114,117,118,119,125,134,144,148,149,152,153,164,198,199,201,208,209,210,211,214,216,221,223,227,228,229,240,260,265,266,293,294,326,333,335,337,338,340,343,344,358,360,364,365,381,425,427,428,432,446,447,472,491,492,495,514,515,519,521,],[35,-94,35,-304,35,-304,-63,-93,-67,-60,-29,-117,-66,-304,-52,-62,-115,-116,35,-68,-65,-98,-64,-95,-96,-97,35,-302,-9,-86,-10,-82,35,35,-85,-53,-84,35,-161,-81,-61,35,-69,-30,35,35,35,35,-140,-141,-137,-70,35,-83,35,-162,35,35,35,-303,-138,35,-74,-195,-75,-73,-78,-193,-76,-194,-77,-72,35,-36,35,35,-35,-71,-139,35,35,35,35,-212,-213,-197,-209,35,-196,-210,35,35,-34,-31,35,-211,-200,-198,-208,-33,-32,-199,-203,-201,-204,-205,-202,-207,-206,]),'TYPEDEF':([0,1,3,5,7,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,34,36,37,38,40,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,61,69,73,74,76,78,84,85,87,88,93,94,95,100,102,104,105,117,118,119,129,144,151,152,198,199,201,208,209,210,211,214,216,221,223,227,228,229,240,250,260,261,262,333,335,337,338,340,343,344,358,360,364,365,366,367,381,425,427,428,432,446,447,472,491,492,495,514,515,519,521,],[53,-94,-105,-109,53,53,-112,53,-63,-93,-111,-67,-107,-60,-29,-216,-117,-104,-66,-113,-102,-91,53,-52,-62,-99,-115,-110,-114,-106,-116,-103,53,53,-68,-65,-100,-98,-64,-95,-108,-96,-97,-101,-130,-131,-302,-92,-82,53,53,-53,53,-147,-148,-81,-61,-89,53,-88,-87,-90,-69,-30,-70,53,-83,53,53,-132,-303,-74,-195,-75,-73,-78,-193,-76,-194,-77,-72,53,-36,53,53,-35,-149,-71,-133,-134,-212,-213,-197,-209,53,-196,-210,53,53,-34,-31,-150,-151,53,-211,-200,-198,-208,-33,-32,-199,-203,-201,-204,-205,-202,-207,-206,]),'COMMA':([1,3,5,9,13,14,17,19,20,21,22,24,25,26,28,30,32,33,34,36,37,38,40,47,48,50,51,52,53,54,56,57,60,61,63,64,76,80,81,82,83,84,85,90,91,92,93,94,95,98,99,100,102,103,105,108,120,121,122,123,126,128,129,134,135,138,139,140,147,150,151,152,154,155,156,157,159,165,166,168,169,170,171,175,176,179,180,181,183,184,186,187,188,189,190,192,193,195,196,197,200,204,218,227,231,232,233,234,235,236,237,238,239,240,247,248,250,251,252,253,254,261,262,267,268,269,270,271,292,295,296,305,308,310,324,325,327,332,346,347,356,357,364,365,366,367,368,369,370,371,376,377,379,380,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,409,410,412,413,414,415,416,417,418,419,420,422,424,426,431,434,435,436,437,446,447,450,451,454,459,462,464,465,473,474,475,476,477,482,483,484,485,488,489,490,498,499,500,502,509,510,511,513,],[-94,-105,-109,-112,-93,-111,-107,-29,-216,-117,-104,-113,-102,-91,-52,-304,-99,-115,-110,-114,-106,-116,-103,-100,-98,-95,-108,-96,-97,-101,-130,-131,-124,-92,-122,116,-53,-161,-28,-159,-27,-147,-148,142,-120,-54,-89,-157,-88,-37,-158,-87,-90,-118,-30,-128,-157,226,-170,-289,228,-165,-304,-162,-160,-155,251,-152,-55,-129,-132,-303,-144,264,-142,-127,-126,-297,-298,-217,-231,-280,-266,-293,-292,-294,-125,-172,-300,-295,-254,-278,-252,-279,-281,-233,-291,-296,-290,-123,328,-214,-289,-36,-45,-167,-183,-168,-2,-1,-169,-185,-56,-35,251,251,-149,-153,-38,-119,-121,-133,-134,-230,-146,-252,328,-304,-299,-255,405,-256,-274,-275,-301,-257,-258,328,-171,-166,-57,-184,-34,-31,-150,-151,-156,-154,-44,-43,-145,-143,-282,-182,-183,-243,-238,-241,-251,-250,-239,-244,-237,-235,-248,-247,-240,-242,-236,-246,-245,328,-234,-249,456,-173,-175,-269,463,-287,-273,-272,328,-271,-270,-218,-215,328,328,328,-192,-186,-190,-188,-33,-32,-42,-39,-253,-174,-268,-267,-259,-191,-189,-187,-51,-50,-41,-40,501,-232,-176,-288,328,-49,-46,-276,-283,-48,-47,-277,328,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'compound_statement':([71,118,146,202,223,336,339,433,467,468,471,506,516,520,],[117,198,260,198,198,198,198,198,198,198,198,198,198,198,]),'parameter_type_list_opt':([229,358,381,],[349,438,349,]),'enumerator':([86,136,137,251,],[140,140,140,369,]),'block_item':([118,223,],[199,343,]),'designation':([177,405,453,501,],[301,301,301,301,]),'expression':([118,164,202,206,223,266,289,294,309,326,331,334,336,339,340,341,429,433,466,467,468,470,471,493,504,506,508,516,520,],[200,270,200,332,200,270,400,270,417,270,424,426,200,200,200,431,200,200,490,200,200,200,200,200,513,200,200,200,200,]),'initializer_list_opt':([177,],[302,]),'init_declarator_list':([44,74,],[90,90,]),'declarator':([44,74,112,116,142,264,],[91,91,154,91,91,154,]),'id_declarator':([0,2,6,43,44,70,74,89,112,116,129,142,229,264,],[8,55,60,8,94,60,120,55,120,120,232,120,55,120,]),'designation_opt':([177,405,453,501,],[303,460,303,460,]),'assignment_operator':([188,],[312,]),'selection_statement':([118,202,223,336,339,433,467,468,471,506,516,520,],[201,201,201,201,201,201,201,201,201,201,201,201,]),'constant':([115,118,133,143,161,164,173,185,191,194,202,206,223,225,230,241,242,249,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,303,306,309,312,326,328,331,334,336,339,340,341,359,372,373,383,429,433,445,452,455,460,463,466,467,468,470,471,478,479,493,504,506,508,516,520,],[189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,]),'translation_unit_or_empty':([0,],[39,]),'identifier_list_opt':([78,144,360,],[124,255,441,]),'declaration_specifiers_no_type_opt':([7,10,27,],[67,75,77,]),'struct_declarator':([112,264,],[156,377,]),'struct_or_union':([0,6,8,43,58,70,73,78,94,106,107,109,110,118,125,144,148,149,164,223,228,229,266,293,294,326,340,358,360,381,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'type_qualifier':([0,7,8,10,27,30,43,44,58,73,74,78,79,81,94,106,107,109,110,112,118,129,131,132,144,145,148,149,164,223,228,229,257,258,266,271,293,294,326,340,358,360,361,381,443,444,],[27,27,27,27,27,80,27,100,80,27,100,27,80,134,27,80,80,134,80,157,27,100,134,80,27,80,80,80,80,27,27,27,134,80,80,157,80,80,80,27,27,27,80,27,134,80,]),'type_qualifier_list':([30,58,79,106,107,110,132,145,148,149,164,258,266,293,294,326,361,444,],[81,109,131,109,109,109,81,257,109,109,109,81,109,109,109,109,443,81,]),'constant_expression':([161,225,249,263,299,],[268,345,368,376,408,]),'statement':([118,202,223,336,339,433,467,468,471,506,516,520,],[214,330,214,427,428,472,491,492,495,515,519,521,]),'assignment_expression':([115,118,133,143,164,202,206,223,230,241,242,259,266,289,294,303,306,309,312,326,328,331,334,336,339,340,341,359,372,373,429,433,445,460,463,466,467,468,470,471,478,479,493,504,506,508,516,520,],[181,204,243,181,204,204,204,204,243,362,363,243,204,204,204,181,414,204,420,204,422,204,204,204,204,204,204,243,448,449,204,204,243,181,489,204,204,204,204,204,496,497,204,204,204,204,204,204,]),'empty':([0,6,7,8,10,27,30,44,70,74,78,79,94,112,118,129,132,133,144,145,177,202,223,229,230,258,259,271,336,339,340,358,359,360,361,381,405,429,433,444,445,453,467,468,470,471,493,501,506,508,516,520,],[29,62,66,72,66,66,83,101,62,101,127,83,72,158,205,236,83,244,127,83,300,329,329,353,244,83,244,236,329,329,329,353,244,127,83,353,458,329,329,83,244,458,329,329,329,329,329,458,329,329,329,329,]),'function_definition':([0,43,],[31,31,]),'conditional_expression':([115,118,133,143,161,164,202,206,223,225,230,241,242,249,259,263,266,289,294,299,303,306,309,312,326,328,331,334,336,339,340,341,359,372,373,429,433,445,455,460,463,466,467,468,470,471,478,479,493,504,506,508,516,520,],[168,168,168,168,267,168,168,168,168,267,168,168,168,267,168,267,168,168,168,267,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,485,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'decl_body':([0,8,43,73,94,118,223,340,],[41,41,41,41,41,41,41,41,]),'specifier_qualifier_list':([58,106,107,110,148,149,164,266,293,294,326,],[112,112,112,112,112,112,271,271,271,271,271,]),'expression_statement':([118,202,223,336,339,433,467,468,471,506,516,520,],[208,208,208,208,208,208,208,208,208,208,208,208,]),'enumerator_list':([86,136,137,],[139,247,248,]),'declaration_specifiers':([0,8,43,73,78,94,118,144,223,228,229,340,358,360,381,],[44,74,44,74,129,74,74,129,74,129,129,74,129,129,129,]),'cast_expression':([115,118,133,143,161,164,191,202,206,223,225,230,241,242,249,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,303,306,309,312,326,328,331,334,336,339,340,341,359,372,373,383,429,433,445,452,455,460,463,466,467,468,470,471,478,479,493,504,506,508,516,520,],[192,192,192,192,192,192,325,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,454,192,192,192,454,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,]),'offsetof_member_designator':([456,],[487,]),'pppragma_directive':([0,43,58,106,107,110,118,148,149,202,223,336,339,433,467,468,471,506,516,520,],[46,46,113,113,113,113,209,113,113,209,209,209,209,209,209,209,209,209,209,209,]),'typeid_noparen_declarator':([129,],[234,]),'parameter_list':([78,144,229,358,360,381,],[126,126,126,126,126,126,]),'abstract_declarator_opt':([129,271,],[237,380,]),'iteration_statement':([118,202,223,336,339,433,467,468,471,506,516,520,],[211,211,211,211,211,211,211,211,211,211,211,211,]),'expression_opt':([118,202,223,336,339,340,429,433,467,468,470,471,493,506,508,516,520,],[212,212,212,212,212,430,469,212,212,212,494,212,507,212,517,212,212,]),'typeid_declarator':([44,74,89,112,116,142,264,],[99,99,141,99,99,99,99,]),'pp_directive':([0,43,],[49,49,]),'type_qualifier_list_opt':([30,79,132,145,258,361,444,],[82,133,242,259,373,445,479,]),'direct_abstract_declarator':([129,229,233,271,351,381,382,],[238,238,357,238,357,238,357,]),'direct_typeid_noparen_declarator':([129,233,],[239,356,]),'struct_declaration':([58,106,107,110,148,149,],[114,114,114,153,153,153,]),'designator':([177,297,405,453,501,],[298,406,298,298,298,]),'struct_or_union_specifier':([0,6,8,43,58,70,73,78,94,106,107,109,110,118,125,144,148,149,164,223,228,229,266,293,294,326,340,358,360,381,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'identifier_list':([78,144,360,],[121,121,121,]),'argument_expression_list':([306,],[413,]),'block_item_list_opt':([118,],[215,]),'jump_statement':([118,202,223,336,339,433,467,468,471,506,516,520,],[216,216,216,216,216,216,216,216,216,216,216,216,]),'declaration_specifiers_no_type':([0,7,8,10,27,43,73,78,94,118,144,223,228,229,340,358,360,381,],[6,68,70,68,68,6,70,125,70,70,125,70,125,125,70,125,125,125,]),'direct_typeid_declarator':([44,74,89,96,112,116,142,264,],[92,92,92,147,92,92,92,92,]),'function_specifier':([0,7,8,10,27,43,44,73,74,78,94,118,129,144,223,228,229,340,358,360,381,],[7,7,7,7,7,7,93,7,93,7,7,7,93,7,7,7,7,7,7,7,7,]),'enum_specifier':([0,6,8,43,58,70,73,78,94,106,107,109,110,118,125,144,148,149,164,223,228,229,266,293,294,326,340,358,360,381,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'identifier':([78,115,118,133,143,144,161,164,173,185,191,194,202,206,223,225,226,230,241,242,249,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,303,304,306,309,312,326,328,331,334,336,339,340,341,359,360,372,373,383,429,433,445,452,455,456,460,463,466,467,468,470,471,478,479,493,503,504,506,508,516,520,],[122,187,187,187,187,122,187,187,187,187,187,187,187,187,187,187,346,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,411,187,187,187,187,187,187,187,187,187,187,187,187,122,187,187,187,187,187,187,187,187,486,187,187,187,187,187,187,187,187,187,187,512,187,187,187,187,187,]),'storage_class_specifier':([0,7,8,10,27,43,44,73,74,78,94,118,129,144,223,228,229,340,358,360,381,],[10,10,10,10,10,10,95,10,95,10,10,10,95,10,10,10,10,10,10,10,10,]),'unified_string_literal':([115,118,133,143,161,164,173,185,191,194,202,206,223,225,230,241,242,249,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,303,306,309,312,326,328,331,334,336,339,340,341,359,372,373,383,429,433,445,452,455,460,463,466,467,468,470,471,478,479,493,504,506,508,516,520,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'id_init_declarator_list':([6,70,],[64,64,]),'binary_expression':([115,118,133,143,161,164,202,206,223,225,230,241,242,249,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,303,306,309,312,326,328,331,334,336,339,340,341,359,372,373,429,433,445,455,460,463,466,467,468,470,471,478,479,493,504,506,508,516,520,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,169,401,402,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,]),'primary_expression':([115,118,133,143,161,164,173,185,191,194,202,206,223,225,230,241,242,249,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,303,306,309,312,326,328,331,334,336,339,340,341,359,372,373,383,429,433,445,452,455,460,463,466,467,468,470,471,478,479,493,504,506,508,516,520,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'labeled_statement':([118,202,223,336,339,433,467,468,471,506,516,520,],[221,221,221,221,221,221,221,221,221,221,221,221,]),'typedef_name':([0,6,8,43,58,70,73,78,94,106,107,109,110,118,125,144,148,149,164,223,228,229,266,293,294,326,340,358,360,381,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'pointer':([0,2,6,43,44,70,74,82,89,112,116,129,142,229,264,271,381,],[15,15,15,15,96,15,96,135,96,96,96,233,96,351,96,382,382,]),'struct_declarator_list':([112,],[155,]),'init_declarator_list_opt':([44,74,],[97,97,]),'external_declaration':([0,43,],[18,88,]),'declaration':([0,8,43,73,94,118,223,340,],[12,69,12,119,69,210,210,429,]),'abstract_declarator':([129,229,271,381,],[235,350,235,350,]),'brace_open':([4,35,56,57,71,84,85,115,118,143,146,202,223,303,336,339,383,433,452,457,460,465,467,468,471,506,516,520,],[58,86,106,107,118,136,137,177,118,177,118,118,118,177,118,118,453,118,453,453,177,453,118,118,118,118,118,118,]),'declaration_list_opt':([8,94,],[71,146,]),'initializer_list':([177,453,],[296,484,]),'type_specifier':([0,6,8,43,58,70,73,78,94,106,107,109,110,118,125,144,148,149,164,223,228,229,266,293,294,326,340,358,360,381,],[26,61,26,26,108,61,26,26,26,108,108,150,108,26,61,26,108,108,108,26,26,26,108,108,108,108,26,26,26,26,]),'initializer':([115,143,303,460,],[180,254,410,488,]),'struct_declaration_list':([58,106,107,],[110,148,149,]),'block_item_list':([118,],[223,]),'direct_id_declarator':([0,2,6,15,43,44,70,74,89,96,112,116,129,142,229,233,264,351,],[28,28,28,76,28,28,28,28,28,76,28,28,28,28,28,76,28,76,]),'parameter_declaration':([78,144,228,229,358,360,381,],[128,128,347,128,128,128,128,]),'brace_close':([110,139,148,149,215,247,248,302,405,484,501,],[151,250,261,262,337,366,367,409,459,500,511,]),'type_specifier_no_typeid':([0,6,8,43,44,58,70,73,74,78,94,106,107,109,110,112,118,125,129,144,148,149,164,223,228,229,266,271,293,294,326,340,358,360,381,],[36,36,36,36,102,36,36,36,102,36,36,36,36,36,36,159,36,36,102,36,36,36,36,36,36,36,36,159,36,36,36,36,36,36,36,]),'postfix_expression':([115,118,133,143,161,164,173,185,191,194,202,206,223,225,230,241,242,249,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,303,306,309,312,326,328,331,334,336,339,340,341,359,372,373,383,429,433,445,452,455,460,463,466,467,468,470,471,478,479,493,504,506,508,516,520,],[186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,]),'type_name':([164,266,293,294,326,],[272,378,403,404,421,]),'designator_list':([177,405,453,501,],[297,297,297,297,]),'id_init_declarator':([6,70,],[63,63,]),'init_declarator':([44,74,116,142,],[103,103,197,253,]),'unary_expression':([115,118,133,143,161,164,173,185,191,194,202,206,223,225,230,241,242,249,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,303,306,309,312,326,328,331,334,336,339,340,341,359,372,373,383,429,433,445,452,455,460,463,466,467,468,470,471,478,479,493,504,506,508,516,520,],[188,188,188,188,269,188,295,305,269,327,188,188,188,269,188,188,188,269,188,269,188,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,188,269,269,188,269,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,269,188,188,188,269,269,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,]),'declaration_list':([8,94,],[73,73,]),'unified_wstring_literal':([115,118,133,143,161,164,173,185,191,194,202,206,223,225,230,241,242,249,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,303,306,309,312,326,328,331,334,336,339,340,341,359,372,373,383,429,433,445,452,455,460,463,466,467,468,470,471,478,479,493,504,506,508,516,520,],[190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,]),'translation_unit':([0,],[43,]),'assignment_expression_opt':([133,230,259,359,445,],[246,355,375,440,481,]),'unary_operator':([115,118,133,143,161,164,173,185,191,194,202,206,223,225,230,241,242,249,259,263,266,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,299,303,306,309,312,326,328,331,334,336,339,340,341,359,372,373,383,429,433,445,452,455,460,463,466,467,468,470,471,478,479,493,504,506,508,516,520,],[191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,]),'parameter_type_list':([78,144,229,358,360,381,],[130,256,352,352,442,352,]),'id_init_declarator_list_opt':([6,70,],[65,65,]),'struct_declarator_list_opt':([112,],[160,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
