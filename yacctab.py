
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'INT':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,19,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,66,67,68,70,71,72,73,74,75,76,78,80,83,85,90,94,95,98,101,102,103,104,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,131,145,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[1,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,1,-116,-110,-99,-216,1,-117,-68,-62,-107,-67,-95,1,-98,-108,-94,-52,1,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-53,-9,-10,-84,-92,-302,-147,-148,1,-131,-130,-61,-69,-82,1,1,1,-161,1,-87,1,-88,-89,-90,-85,-81,-86,-30,-140,-128,1,1,1,-141,-137,1,1,1,-70,-83,-162,1,1,1,1,-303,-149,-132,-138,-129,-127,-126,1,1,-76,-72,-195,-194,1,-73,-78,-77,-74,-193,-75,1,1,-35,-36,-71,1,1,1,1,1,-150,-151,-139,-134,-133,-212,1,-196,-197,-213,-210,-209,1,1,-31,-34,1,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'SEMI':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,19,20,23,25,26,27,28,29,30,31,32,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,66,67,68,70,71,72,73,74,76,78,87,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,117,118,119,120,121,122,123,124,128,141,148,149,150,152,154,155,157,158,160,163,164,165,168,169,170,172,175,177,179,180,181,182,183,185,186,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,212,213,214,217,219,222,223,224,225,226,228,229,230,244,245,252,253,254,260,292,294,295,308,310,311,314,316,320,322,324,325,326,327,330,331,332,333,334,335,336,337,338,339,340,343,345,346,368,369,370,371,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,402,408,411,412,414,416,417,420,421,422,423,424,425,426,429,430,431,446,447,450,451,456,459,461,462,464,466,467,468,469,470,471,482,483,484,491,492,493,494,500,502,507,508,511,514,516,517,519,520,521,],[3,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,-304,-116,-110,-99,-216,3,-117,-68,-62,-107,-67,-95,-98,-108,-94,-52,-304,-304,103,-97,-111,-113,-101,-60,-304,-114,-65,-102,-53,-9,-10,-84,-122,-92,-80,-124,-15,-16,-302,-147,-148,113,-131,-130,-61,-69,-304,-304,-118,-79,-87,-37,-19,-157,-88,-158,-120,-89,-54,-20,-90,-85,-81,-86,-30,-140,-128,113,-304,-141,-137,113,113,-157,-304,-70,-289,-55,-231,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-125,-233,-172,-296,-291,-254,-294,-281,-292,-217,-293,-123,-303,-149,-132,-138,-129,326,-127,-26,-25,-144,-126,-142,113,113,-76,-72,-195,-194,332,-289,-304,339,-13,-73,-78,-77,-74,345,346,-214,-14,-193,-304,-75,-35,-36,-38,-71,-121,-119,-255,-256,-299,-252,-257,-258,-275,-274,-301,-230,-150,-151,-139,-146,-134,-133,-212,422,-304,-304,-196,-13,-197,-213,-304,429,-210,-209,-31,-34,-43,-44,-237,-239,-250,-242,-234,-241,-247,-251,-243,-238,-248,-235,-244,-240,-249,-245,-236,-246,-218,-173,-282,-272,-273,-269,-270,-271,-143,-145,-211,-304,467,-198,-200,-208,-304,-215,-33,-32,-39,-42,-174,-253,-259,-268,-267,490,-304,-304,-304,-199,-304,-41,-40,-232,506,-204,-201,-203,-276,-283,-304,517,-277,-304,-202,-205,-207,-304,-206,]),'LAND':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,263,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-237,-239,-250,-242,-234,-241,-247,263,-243,-238,-248,-235,-244,-240,-249,-245,-236,-246,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'INT_CONST_DEC':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,138,139,140,144,146,151,153,156,159,161,162,166,167,171,173,174,178,184,185,194,203,204,205,206,207,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,303,309,312,315,318,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,506,507,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,149,149,-162,-28,-304,149,149,-304,-260,149,149,-304,149,-262,-264,-261,149,149,-263,-265,149,-303,149,-76,-72,-195,-194,149,149,-73,-78,-77,149,-74,-193,149,-75,149,149,149,-261,-28,-304,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,-228,-226,-219,149,-221,-223,-222,-229,-224,-225,-227,-220,149,-12,-11,149,149,149,149,149,149,149,-212,149,149,-196,-197,-213,149,149,149,-210,-209,149,149,-261,149,-304,149,149,-261,-177,-304,149,-211,149,-198,-200,-208,149,-261,-28,-304,149,149,149,-11,-304,149,149,149,149,149,-199,149,149,149,149,-261,149,-204,-201,-203,-304,149,149,149,149,-202,-205,-207,149,-206,]),'ID':([0,1,2,3,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,39,40,42,43,45,46,47,48,49,50,51,52,53,54,56,57,58,60,65,66,67,68,71,72,73,74,76,78,81,82,83,84,85,86,88,90,91,95,98,101,102,103,104,105,106,110,111,114,117,123,124,126,127,130,138,139,140,144,145,146,147,151,153,156,159,161,162,166,167,171,173,174,178,184,185,186,187,190,192,194,195,199,203,204,205,206,207,210,214,217,219,220,221,222,228,229,230,231,233,235,236,246,247,249,253,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,301,303,309,312,313,315,317,318,324,325,328,329,330,331,332,334,335,336,338,339,340,341,342,345,346,347,348,354,355,361,362,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,465,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,504,506,507,514,516,517,519,520,521,],[4,-103,-63,-66,4,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,4,-116,67,4,-110,72,-99,-216,4,-117,-68,-62,-107,-67,-136,-95,-98,-304,-108,-94,4,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-135,-9,-10,-84,-92,107,-302,-147,-148,-131,-130,-61,-69,4,4,-159,-27,-161,-28,128,-304,4,-87,4,-88,-89,-90,-85,-81,-86,128,4,107,107,-128,4,209,-70,-160,-162,4,-28,-304,128,128,128,-304,4,-260,128,128,-304,128,-262,-264,-261,128,128,-263,-265,128,-303,-149,107,-132,-129,128,-127,-126,-76,-72,-195,-194,128,209,-73,-78,-77,343,128,-74,-193,209,-75,128,4,128,4,128,128,-261,-71,-28,-304,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-228,-226,-219,128,-221,-223,-222,-229,-224,-225,-227,-220,128,-12,-11,128,128,128,128,128,411,128,416,128,-150,-151,4,128,-134,-133,-212,128,209,-196,-197,-213,209,128,128,-210,-209,128,128,-261,4,128,128,-304,128,128,-261,-177,-304,128,-211,128,-198,-200,-208,209,-261,-28,-304,128,128,128,-11,-304,128,128,128,128,209,209,-199,209,128,128,128,-261,128,-204,-201,-203,-304,128,128,128,209,209,-202,-205,-207,209,-206,]),'LE':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,264,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-237,-239,264,-242,-234,-241,264,264,-243,-238,264,-235,-244,-240,264,264,-236,264,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'UNSIGNED':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,19,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,66,67,68,70,71,72,73,74,75,76,78,80,83,85,90,94,95,98,101,102,103,104,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,131,145,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[6,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,6,-116,-110,-99,-216,6,-117,-68,-62,-107,-67,-95,6,-98,-108,-94,-52,6,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-53,-9,-10,-84,-92,-302,-147,-148,6,-131,-130,-61,-69,-82,6,6,6,-161,6,-87,6,-88,-89,-90,-85,-81,-86,-30,-140,-128,6,6,6,-141,-137,6,6,6,-70,-83,-162,6,6,6,6,-303,-149,-132,-138,-129,-127,-126,6,6,-76,-72,-195,-194,6,-73,-78,-77,-74,-193,-75,6,6,-35,-36,-71,6,6,6,6,6,-150,-151,-139,-134,-133,-212,6,-196,-197,-213,-210,-209,6,6,-31,-34,6,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'LONG':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,19,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,66,67,68,70,71,72,73,74,75,76,78,80,83,85,90,94,95,98,101,102,103,104,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,131,145,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[7,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,7,-116,-110,-99,-216,7,-117,-68,-62,-107,-67,-95,7,-98,-108,-94,-52,7,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-53,-9,-10,-84,-92,-302,-147,-148,7,-131,-130,-61,-69,-82,7,7,7,-161,7,-87,7,-88,-89,-90,-85,-81,-86,-30,-140,-128,7,7,7,-141,-137,7,7,7,-70,-83,-162,7,7,7,7,-303,-149,-132,-138,-129,-127,-126,7,7,-76,-72,-195,-194,7,-73,-78,-77,-74,-193,-75,7,7,-35,-36,-71,7,7,7,7,7,-150,-151,-139,-134,-133,-212,7,-196,-197,-213,-210,-209,7,7,-31,-34,7,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'TIMES':([0,1,2,3,6,7,8,9,10,12,13,14,15,16,17,18,19,20,22,23,25,26,27,28,29,30,31,32,35,37,38,39,40,42,43,45,46,47,48,49,50,51,52,53,56,57,58,60,66,67,68,71,72,73,74,76,78,81,82,83,84,86,90,91,95,98,101,102,103,104,105,106,114,117,123,124,127,128,130,138,139,140,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,170,171,172,173,174,175,177,178,179,180,182,184,185,186,190,192,194,195,199,203,204,205,206,207,209,210,214,217,219,221,222,228,229,230,235,236,246,247,249,253,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,303,306,308,309,310,311,312,314,315,316,318,320,324,325,328,329,330,331,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,398,400,404,405,408,411,412,414,416,417,422,423,425,426,429,430,440,443,444,445,452,454,455,458,459,460,461,462,463,464,467,468,469,470,471,472,478,479,481,490,492,493,494,500,501,502,503,506,507,511,514,516,517,519,520,521,],[38,-103,-63,-66,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,38,-116,38,-110,-99,-216,38,-117,-68,-62,-107,-67,-95,-98,-304,-108,-94,38,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-9,-10,-84,-92,-302,-147,-148,-131,-130,-61,-69,38,38,38,-27,-161,-28,-304,-87,38,-88,-89,-90,-85,-81,-86,167,38,-128,38,167,-70,-162,-289,38,-28,-304,249,167,-304,38,265,-290,-252,-260,-295,167,-279,-278,167,-280,-298,-304,-300,167,-262,-297,-266,-264,-261,-233,-296,167,-291,167,-263,-254,-294,-265,-281,-292,-293,167,-303,-149,-132,-129,167,-127,-126,-76,-72,-195,-194,167,-289,167,-73,-78,-77,167,-74,-193,167,-75,354,38,167,167,-261,-71,-28,-304,375,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,-228,-226,-219,167,-221,-223,-222,-229,-224,-225,-227,-220,-255,167,-256,-299,-12,-11,167,167,38,-252,167,-257,-258,167,-275,167,-274,167,-301,-150,-151,38,167,-134,-133,-212,167,167,-196,-197,-213,167,167,167,-210,-209,167,167,-261,440,-304,167,167,-261,265,265,265,265,-234,265,265,265,265,265,265,-235,265,265,265,265,-236,265,-177,-304,167,38,-282,-272,-273,-269,-270,-271,-211,167,-198,-200,-208,167,-261,-28,-304,481,167,167,-11,-304,-253,167,-259,-268,167,-267,167,167,167,-199,167,167,167,167,-261,167,-204,-201,-203,-276,-304,-283,167,167,167,-277,167,-202,-205,-207,167,-206,]),'AUTO':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,60,66,67,68,71,72,73,74,75,76,80,85,90,94,95,98,101,103,112,123,124,125,130,145,185,186,190,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,324,325,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[18,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,18,-96,-105,-115,-64,-93,-116,-110,-99,-216,18,-117,-68,-62,-107,-67,-95,18,-98,-108,-94,-52,18,18,-97,-111,-113,-101,-60,18,-114,-65,-102,-53,-92,-302,-147,-148,-131,-130,-61,-69,-82,18,18,18,-87,18,-88,-89,-90,-81,-30,18,-70,-83,18,18,-303,-149,-132,-76,-72,-195,-194,18,-73,-78,-77,-74,-193,-75,18,18,-35,-36,-71,-150,-151,-134,-133,-212,18,-196,-197,-213,-210,-209,18,18,-31,-34,18,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'SIGNED':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,19,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,66,67,68,70,71,72,73,74,75,76,78,80,83,85,90,94,95,98,101,102,103,104,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,131,145,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[39,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,39,-116,-110,-99,-216,39,-117,-68,-62,-107,-67,-95,39,-98,-108,-94,-52,39,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-53,-9,-10,-84,-92,-302,-147,-148,39,-131,-130,-61,-69,-82,39,39,39,-161,39,-87,39,-88,-89,-90,-85,-81,-86,-30,-140,-128,39,39,39,-141,-137,39,39,39,-70,-83,-162,39,39,39,39,-303,-149,-132,-138,-129,-127,-126,39,39,-76,-72,-195,-194,39,-73,-78,-77,-74,-193,-75,39,39,-35,-36,-71,39,39,39,39,39,-150,-151,-139,-134,-133,-212,39,-196,-197,-213,-210,-209,39,39,-31,-34,39,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'RBRACKET':([16,20,28,82,83,86,127,128,138,140,146,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,181,182,185,225,235,248,249,250,251,257,259,292,294,295,308,310,311,314,316,320,322,353,354,361,363,366,367,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,403,408,411,412,414,416,417,418,431,439,440,443,445,448,449,459,461,462,464,480,481,484,496,497,500,502,511,512,],[-115,-116,-117,-27,-161,-304,-162,-289,-28,-304,-304,-231,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-217,-293,-303,-214,-304,368,369,-3,-4,-28,-304,-255,-256,-299,-252,-257,-258,-275,-274,-301,-230,434,435,-304,-304,446,447,450,451,-237,-239,-250,-242,-234,-241,-247,-251,-243,-238,-248,-235,-244,-240,-249,-245,-236,-246,-218,457,-282,-272,-273,-269,-270,-271,464,-215,474,475,-28,-304,482,483,-253,-259,-268,-267,498,499,-232,509,510,-276,-283,-277,518,]),'HEX_FLOAT_CONST':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,138,139,140,144,146,151,153,156,159,161,162,166,167,171,173,174,178,184,185,194,203,204,205,206,207,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,303,309,312,315,318,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,506,507,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,152,152,-162,-28,-304,152,152,-304,-260,152,152,-304,152,-262,-264,-261,152,152,-263,-265,152,-303,152,-76,-72,-195,-194,152,152,-73,-78,-77,152,-74,-193,152,-75,152,152,152,-261,-28,-304,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,-228,-226,-219,152,-221,-223,-222,-229,-224,-225,-227,-220,152,-12,-11,152,152,152,152,152,152,152,-212,152,152,-196,-197,-213,152,152,152,-210,-209,152,152,-261,152,-304,152,152,-261,-177,-304,152,-211,152,-198,-200,-208,152,-261,-28,-304,152,152,152,-11,-304,152,152,152,152,152,-199,152,152,152,152,-261,152,-204,-201,-203,-304,152,152,152,152,-202,-205,-207,152,-206,]),'PLUSPLUS':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,128,138,139,140,144,146,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,170,171,172,173,174,175,177,178,179,180,182,184,185,194,203,204,205,206,207,209,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,295,296,297,298,303,309,312,314,315,316,318,320,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,408,411,412,414,416,417,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,462,463,464,467,468,469,470,471,472,478,479,481,490,492,493,494,500,501,502,503,506,507,511,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,153,153,-162,-289,-28,-304,153,153,-304,-290,-260,-295,153,-279,-278,153,-280,-298,-304,-300,153,-262,-297,-266,-264,-261,-296,153,-291,153,-263,316,-294,-265,-281,-292,-293,153,-303,153,-76,-72,-195,-194,153,-289,153,-73,-78,-77,153,-74,-193,153,-75,153,153,153,-261,-28,-304,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,-228,-226,-219,153,-221,-223,-222,-229,-224,-225,-227,-220,153,-299,-12,-11,153,153,153,153,-275,153,-274,153,-301,153,-212,153,153,-196,-197,-213,153,153,153,-210,-209,153,153,-261,153,-304,153,153,-261,-177,-304,153,-282,-272,-273,-269,-270,-271,-211,153,-198,-200,-208,153,-261,-28,-304,153,153,153,-11,-304,153,-268,153,-267,153,153,153,-199,153,153,153,153,-261,153,-204,-201,-203,-276,-304,-283,153,153,153,-277,153,-202,-205,-207,153,-206,]),'DOUBLE':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,19,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,66,67,68,70,71,72,73,74,75,76,78,80,83,85,90,94,95,98,101,102,103,104,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,131,145,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[10,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,10,-116,-110,-99,-216,10,-117,-68,-62,-107,-67,-95,10,-98,-108,-94,-52,10,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-53,-9,-10,-84,-92,-302,-147,-148,10,-131,-130,-61,-69,-82,10,10,10,-161,10,-87,10,-88,-89,-90,-85,-81,-86,-30,-140,-128,10,10,10,-141,-137,10,10,10,-70,-83,-162,10,10,10,10,-303,-149,-132,-138,-129,-127,-126,10,10,-76,-72,-195,-194,10,-73,-78,-77,-74,-193,-75,10,10,-35,-36,-71,10,10,10,10,10,-150,-151,-139,-134,-133,-212,10,-196,-197,-213,-210,-209,10,10,-31,-34,10,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'OREQUAL':([128,149,150,152,154,155,157,158,160,163,164,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,-290,287,-295,-279,-278,-280,-298,-300,-297,-266,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'LBRACKET':([1,4,6,7,8,9,10,12,14,15,16,18,20,23,25,26,28,31,35,37,38,39,40,41,45,46,47,48,51,53,55,60,66,67,68,71,72,81,82,83,84,90,92,95,98,99,101,112,114,126,127,128,130,141,149,152,154,155,157,158,159,160,163,164,170,172,175,177,179,180,182,185,186,190,192,195,199,209,233,236,240,241,242,244,245,252,295,299,304,306,314,316,320,324,325,330,331,351,352,355,368,369,370,371,399,400,401,405,407,408,411,412,414,416,417,434,435,436,437,446,447,450,451,457,458,462,464,473,474,475,476,477,482,483,488,489,498,499,500,501,502,509,510,511,513,518,],[-103,-29,-109,-104,-112,-100,-106,-91,-96,-105,-115,-93,-116,-110,-99,-216,-117,-107,-95,-98,-304,-108,-94,86,-97,-111,-113,-101,-114,-102,86,-92,-302,-147,-148,-131,-130,-159,-27,-161,-28,-87,-37,-88,-89,146,-90,-30,-128,-160,-162,-289,235,146,-290,-295,-279,-278,-280,-298,303,-300,-297,-266,-296,-291,318,-294,-281,-292,-293,-303,-149,-132,-129,-127,-126,-289,235,235,-45,361,363,-35,-36,-38,-299,303,-178,235,-275,-274,-301,-150,-151,-134,-133,363,361,235,-31,-34,-43,-44,-179,303,-181,235,235,-282,-272,-273,-269,-270,-271,-188,-190,-192,-186,-33,-32,-39,-42,-180,303,-268,-267,-191,-187,-189,-50,-51,-41,-40,-284,503,-46,-49,-276,303,-283,-48,-47,-277,-285,-286,]),'CONST':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,20,23,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,60,66,67,68,70,71,72,73,74,75,76,80,83,84,85,86,90,94,95,98,101,103,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,138,139,145,146,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,257,258,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,363,368,369,405,422,425,426,429,443,444,446,447,470,492,493,494,516,517,519,521,],[16,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,16,-96,-105,-115,-64,-93,-116,-110,-99,-216,16,-117,-68,-62,-107,-67,-95,16,-98,16,-108,-94,-52,16,16,-97,-111,-113,-101,-60,16,-114,-65,-102,-53,-92,-302,-147,-148,16,-131,-130,-61,-69,-82,16,16,-161,16,16,16,-87,16,-88,-89,-90,-81,-30,-140,-128,16,16,16,-141,-137,16,16,16,-70,-83,-162,16,16,16,16,16,16,-303,-149,-132,-138,-129,-127,-126,16,16,-76,-72,-195,-194,16,-73,-78,-77,-74,-193,-75,16,16,-35,-36,-71,16,16,16,16,16,16,16,-150,-151,-139,-134,-133,-212,16,-196,-197,-213,-210,-209,16,16,16,-31,-34,16,-211,-198,-200,-208,16,16,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'LSHIFTEQUAL':([128,149,150,152,154,155,157,158,160,163,164,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,-290,281,-295,-279,-278,-280,-298,-300,-297,-266,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'RETURN':([29,66,74,103,123,185,203,204,205,206,210,214,217,219,222,228,229,230,332,335,336,338,339,340,345,346,422,425,426,429,430,468,469,470,471,492,493,494,507,514,516,517,519,520,521,],[-68,-302,-69,-81,207,-303,-76,-72,-195,-194,207,-73,-78,-77,-74,-193,207,-75,-212,207,-196,-197,-213,207,-210,-209,-211,-198,-200,-208,207,207,207,-199,207,-204,-201,-203,207,207,-202,-205,-207,207,-206,]),'TYPEDEF':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,60,66,67,68,71,72,73,74,75,76,80,85,90,94,95,98,101,103,112,123,124,125,130,145,185,186,190,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,324,325,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[45,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,45,-96,-105,-115,-64,-93,-116,-110,-99,-216,45,-117,-68,-62,-107,-67,-95,45,-98,-108,-94,-52,45,45,-97,-111,-113,-101,-60,45,-114,-65,-102,-53,-92,-302,-147,-148,-131,-130,-61,-69,-82,45,45,45,-87,45,-88,-89,-90,-81,-30,45,-70,-83,45,45,-303,-149,-132,-76,-72,-195,-194,45,-73,-78,-77,-74,-193,-75,45,45,-35,-36,-71,-150,-151,-134,-133,-212,45,-196,-197,-213,-210,-209,45,45,-31,-34,45,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'MINUSMINUS':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,128,138,139,140,144,146,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,170,171,172,173,174,175,177,178,179,180,182,184,185,194,203,204,205,206,207,209,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,295,296,297,298,303,309,312,314,315,316,318,320,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,408,411,412,414,416,417,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,462,463,464,467,468,469,470,471,472,478,479,481,490,492,493,494,500,501,502,503,506,507,511,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,156,156,-162,-289,-28,-304,156,156,-304,-290,-260,-295,156,-279,-278,156,-280,-298,-304,-300,156,-262,-297,-266,-264,-261,-296,156,-291,156,-263,314,-294,-265,-281,-292,-293,156,-303,156,-76,-72,-195,-194,156,-289,156,-73,-78,-77,156,-74,-193,156,-75,156,156,156,-261,-28,-304,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-228,-226,-219,156,-221,-223,-222,-229,-224,-225,-227,-220,156,-299,-12,-11,156,156,156,156,-275,156,-274,156,-301,156,-212,156,156,-196,-197,-213,156,156,156,-210,-209,156,156,-261,156,-304,156,156,-261,-177,-304,156,-282,-272,-273,-269,-270,-271,-211,156,-198,-200,-208,156,-261,-28,-304,156,156,156,-11,-304,156,-268,156,-267,156,156,156,-199,156,156,156,156,-261,156,-204,-201,-203,-276,-304,-283,156,156,156,-277,156,-202,-205,-207,156,-206,]),'XOR':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,276,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-237,-239,276,-242,-234,-241,-247,276,-243,-238,276,-235,-244,-240,-249,-245,-236,-246,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'INT_CONST_BIN':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,138,139,140,144,146,151,153,156,159,161,162,166,167,171,173,174,178,184,185,194,203,204,205,206,207,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,303,309,312,315,318,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,506,507,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,182,182,-162,-28,-304,182,182,-304,-260,182,182,-304,182,-262,-264,-261,182,182,-263,-265,182,-303,182,-76,-72,-195,-194,182,182,-73,-78,-77,182,-74,-193,182,-75,182,182,182,-261,-28,-304,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,-228,-226,-219,182,-221,-223,-222,-229,-224,-225,-227,-220,182,-12,-11,182,182,182,182,182,182,182,-212,182,182,-196,-197,-213,182,182,182,-210,-209,182,182,-261,182,-304,182,182,-261,-177,-304,182,-211,182,-198,-200,-208,182,-261,-28,-304,182,182,182,-11,-304,182,182,182,182,182,-199,182,182,182,182,-261,182,-204,-201,-203,-304,182,182,182,182,-202,-205,-207,182,-206,]),'FOR':([29,66,74,103,123,185,203,204,205,206,210,214,217,219,222,228,229,230,332,335,336,338,339,340,345,346,422,425,426,429,430,468,469,470,471,492,493,494,507,514,516,517,519,520,521,],[-68,-302,-69,-81,208,-303,-76,-72,-195,-194,208,-73,-78,-77,-74,-193,208,-75,-212,208,-196,-197,-213,208,-210,-209,-211,-198,-200,-208,208,208,208,-199,208,-204,-201,-203,208,208,-202,-205,-207,208,-206,]),'RESTRICT':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,20,23,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,60,66,67,68,70,71,72,73,74,75,76,80,83,84,85,86,90,94,95,98,101,103,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,138,139,145,146,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,257,258,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,363,368,369,405,422,425,426,429,443,444,446,447,470,492,493,494,516,517,519,521,],[20,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,20,-96,-105,-115,-64,-93,-116,-110,-99,-216,20,-117,-68,-62,-107,-67,-95,20,-98,20,-108,-94,-52,20,20,-97,-111,-113,-101,-60,20,-114,-65,-102,-53,-92,-302,-147,-148,20,-131,-130,-61,-69,-82,20,20,-161,20,20,20,-87,20,-88,-89,-90,-81,-30,-140,-128,20,20,20,-141,-137,20,20,20,-70,-83,-162,20,20,20,20,20,20,-303,-149,-132,-138,-129,-127,-126,20,20,-76,-72,-195,-194,20,-73,-78,-77,-74,-193,-75,20,20,-35,-36,-71,20,20,20,20,20,20,20,-150,-151,-139,-134,-133,-212,20,-196,-197,-213,-210,-209,20,20,20,-31,-34,20,-211,-198,-200,-208,20,20,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'__INT128':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,19,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,66,67,68,70,71,72,73,74,75,76,78,80,83,85,90,94,95,98,101,102,103,104,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,131,145,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[23,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,23,-116,-110,-99,-216,23,-117,-68,-62,-107,-67,-95,23,-98,-108,-94,-52,23,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-53,-9,-10,-84,-92,-302,-147,-148,23,-131,-130,-61,-69,-82,23,23,23,-161,23,-87,23,-88,-89,-90,-85,-81,-86,-30,-140,-128,23,23,23,-141,-137,23,23,23,-70,-83,-162,23,23,23,23,-303,-149,-132,-138,-129,-127,-126,23,23,-76,-72,-195,-194,23,-73,-78,-77,-74,-193,-75,23,23,-35,-36,-71,23,23,23,23,23,-150,-151,-139,-134,-133,-212,23,-196,-197,-213,-210,-209,23,23,-31,-34,23,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'MODEQUAL':([128,149,150,152,154,155,157,158,160,163,164,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,-290,285,-295,-279,-278,-280,-298,-300,-297,-266,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'NOT':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,138,139,140,144,146,151,153,156,159,161,162,166,167,171,173,174,178,184,185,194,203,204,205,206,207,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,303,309,312,315,318,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,506,507,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,166,166,-162,-28,-304,166,166,-304,-260,166,166,-304,166,-262,-264,-261,166,166,-263,-265,166,-303,166,-76,-72,-195,-194,166,166,-73,-78,-77,166,-74,-193,166,-75,166,166,166,-261,-28,-304,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,-228,-226,-219,166,-221,-223,-222,-229,-224,-225,-227,-220,166,-12,-11,166,166,166,166,166,166,166,-212,166,166,-196,-197,-213,166,166,166,-210,-209,166,166,-261,166,-304,166,166,-261,-177,-304,166,-211,166,-198,-200,-208,166,-261,-28,-304,166,166,166,-11,-304,166,166,166,166,166,-199,166,166,166,166,-261,166,-204,-201,-203,-304,166,166,166,166,-202,-205,-207,166,-206,]),'EXTERN':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,60,66,67,68,71,72,73,74,75,76,80,85,90,94,95,98,101,103,112,123,124,125,130,145,185,186,190,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,324,325,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[14,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,14,-96,-105,-115,-64,-93,-116,-110,-99,-216,14,-117,-68,-62,-107,-67,-95,14,-98,-108,-94,-52,14,14,-97,-111,-113,-101,-60,14,-114,-65,-102,-53,-92,-302,-147,-148,-131,-130,-61,-69,-82,14,14,14,-87,14,-88,-89,-90,-81,-30,14,-70,-83,14,14,-303,-149,-132,-76,-72,-195,-194,14,-73,-78,-77,-74,-193,-75,14,14,-35,-36,-71,-150,-151,-134,-133,-212,14,-196,-197,-213,-210,-209,14,14,-31,-34,14,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'LBRACE':([4,21,24,29,34,36,41,54,55,66,67,68,71,72,74,75,77,79,80,94,103,105,112,123,125,143,144,159,185,203,204,205,206,210,214,217,219,222,228,229,230,244,245,296,297,298,332,335,336,338,339,340,345,346,368,369,398,400,404,422,425,426,429,430,446,447,453,454,455,458,460,461,468,469,470,471,492,493,494,501,507,514,516,517,519,520,521,],[-29,66,66,-68,-136,-304,-52,-135,-53,-302,66,66,66,66,-69,-82,66,-7,-8,-304,-81,66,-30,66,-83,66,66,-304,-303,-76,-72,-195,-194,66,-73,-78,-77,-74,-193,66,-75,-35,-36,-12,-11,66,-212,66,-196,-197,-213,66,-210,-209,-31,-34,-177,-304,66,-211,-198,-200,-208,66,-33,-32,66,66,-11,-304,66,66,66,66,-199,66,-204,-201,-203,-304,66,66,-202,-205,-207,66,-206,]),'NE':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,279,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-237,-239,279,-242,-234,-241,279,279,-243,-238,279,-235,-244,-240,279,-245,-236,-246,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'PPPRAGMA':([0,2,3,17,27,29,30,32,49,52,66,70,73,74,103,113,115,118,119,120,121,123,124,185,191,201,202,203,204,205,206,210,214,217,219,222,228,229,230,253,326,332,335,336,338,339,340,345,346,422,425,426,429,430,468,469,470,471,492,493,494,507,514,516,517,519,520,521,],[29,-63,-66,-64,29,-68,-62,-67,-60,-65,-302,29,-61,-69,-81,-140,29,-141,-137,29,29,29,-70,-303,-138,29,29,-76,-72,-195,-194,29,-73,-78,-77,-74,-193,29,-75,-71,-139,-212,29,-196,-197,-213,29,-210,-209,-211,-198,-200,-208,29,29,29,-199,29,-204,-201,-203,29,29,-202,-205,-207,29,-206,]),'ANDEQUAL':([128,149,150,152,154,155,157,158,160,163,164,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,-290,280,-295,-279,-278,-280,-298,-300,-297,-266,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'GE':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,269,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-237,-239,269,-242,-234,-241,269,269,-243,-238,269,-235,-244,-240,269,269,-236,269,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'STATIC':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,60,66,67,68,71,72,73,74,75,76,80,83,85,86,90,94,95,98,101,103,112,123,124,125,127,130,138,145,146,185,186,190,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,257,324,325,330,331,332,334,336,338,339,345,346,360,362,363,368,369,405,422,425,426,429,443,446,447,470,492,493,494,516,517,519,521,],[35,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,35,-96,-105,-115,-64,-93,-116,-110,-99,-216,35,-117,-68,-62,-107,-67,-95,35,-98,-108,-94,-52,35,35,-97,-111,-113,-101,-60,35,-114,-65,-102,-53,-92,-302,-147,-148,-131,-130,-61,-69,-82,35,35,-161,35,139,-87,35,-88,-89,-90,-81,-30,35,-70,-83,-162,35,246,35,258,-303,-149,-132,-76,-72,-195,-194,35,-73,-78,-77,-74,-193,-75,35,35,-35,-36,-71,372,-150,-151,-134,-133,-212,35,-196,-197,-213,-210,-209,35,35,444,-31,-34,35,-211,-198,-200,-208,478,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'DIVEQUAL':([128,149,150,152,154,155,157,158,160,163,164,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,-290,286,-295,-279,-278,-280,-298,-300,-297,-266,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'_COMPLEX':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,19,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,66,67,68,70,71,72,73,74,75,76,78,80,83,85,90,94,95,98,101,102,103,104,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,131,145,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[31,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,31,-116,-110,-99,-216,31,-117,-68,-62,-107,-67,-95,31,-98,-108,-94,-52,31,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-53,-9,-10,-84,-92,-302,-147,-148,31,-131,-130,-61,-69,-82,31,31,31,-161,31,-87,31,-88,-89,-90,-85,-81,-86,-30,-140,-128,31,31,31,-141,-137,31,31,31,-70,-83,-162,31,31,31,31,-303,-149,-132,-138,-129,-127,-126,31,31,-76,-72,-195,-194,31,-73,-78,-77,-74,-193,-75,31,31,-35,-36,-71,31,31,31,31,31,-150,-151,-139,-134,-133,-212,31,-196,-197,-213,-210,-209,31,31,-31,-34,31,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'STRING_LITERAL':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,138,139,140,144,146,151,153,156,157,158,159,161,162,166,167,171,173,174,178,184,185,194,203,204,205,206,207,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,295,296,297,298,303,309,312,315,318,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,506,507,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,158,158,-162,-28,-304,158,158,-304,-260,158,158,295,-298,-304,158,-262,-264,-261,158,158,-263,-265,158,-303,158,-76,-72,-195,-194,158,158,-73,-78,-77,158,-74,-193,158,-75,158,158,158,-261,-28,-304,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,-228,-226,-219,158,-221,-223,-222,-229,-224,-225,-227,-220,158,-299,-12,-11,158,158,158,158,158,158,158,-212,158,158,-196,-197,-213,158,158,158,-210,-209,158,158,-261,158,-304,158,158,-261,-177,-304,158,-211,158,-198,-200,-208,158,-261,-28,-304,158,158,158,-11,-304,158,158,158,158,158,-199,158,158,158,158,-261,158,-204,-201,-203,-304,158,158,158,158,-202,-205,-207,158,-206,]),'STRUCT':([0,2,3,4,13,14,16,17,18,19,20,27,28,29,30,32,35,36,37,40,41,43,45,49,50,52,55,56,57,58,66,70,73,74,75,78,80,83,85,94,102,103,104,112,113,115,116,118,119,120,121,123,124,125,127,131,145,161,185,191,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,309,312,319,326,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[54,-63,-66,-29,-304,-96,-115,-64,-93,54,-116,54,-117,-68,-62,-67,-95,54,-98,-94,-52,-304,-97,-60,-304,-65,-53,-9,-10,-84,-302,54,-61,-69,-82,54,54,-161,54,54,-85,-81,-86,-30,-140,54,54,-141,-137,54,54,54,-70,-83,-162,54,54,54,-303,-138,54,54,-76,-72,-195,-194,54,-73,-78,-77,-74,-193,-75,54,54,-35,-36,-71,54,54,54,54,-139,-212,54,-196,-197,-213,-210,-209,54,54,-31,-34,54,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'AND':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,128,138,139,140,144,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,170,171,172,173,174,175,177,178,179,180,182,184,185,194,203,204,205,206,207,209,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,303,308,309,310,311,312,314,315,316,318,320,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,398,400,404,408,411,412,414,416,417,422,423,425,426,429,430,440,443,444,445,452,454,455,458,459,460,461,462,463,464,467,468,469,470,471,472,478,479,481,490,492,493,494,500,501,502,503,506,507,511,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,151,151,-162,-289,-28,-304,151,151,-304,267,-290,-252,-260,-295,151,-279,-278,151,-280,-298,-304,-300,151,-262,-297,-266,-264,-261,-233,-296,151,-291,151,-263,-254,-294,-265,-281,-292,-293,151,-303,151,-76,-72,-195,-194,151,-289,151,-73,-78,-77,151,-74,-193,151,-75,151,151,151,-261,-28,-304,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,-228,-226,-219,151,-221,-223,-222,-229,-224,-225,-227,-220,-255,151,-256,-299,-12,-11,151,151,-252,151,-257,-258,151,-275,151,-274,151,-301,151,-212,151,151,-196,-197,-213,151,151,151,-210,-209,151,151,-261,151,-304,151,151,-261,-237,-239,267,-242,-234,-241,-247,267,-243,-238,267,-235,-244,-240,267,-245,-236,-246,-177,-304,151,-282,-272,-273,-269,-270,-271,-211,151,-198,-200,-208,151,-261,-28,-304,151,151,151,-11,-304,-253,151,-259,-268,151,-267,151,151,151,-199,151,151,151,151,-261,151,-204,-201,-203,-276,-304,-283,151,151,151,-277,151,-202,-205,-207,151,-206,]),'PLUSEQUAL':([128,149,150,152,154,155,157,158,160,163,164,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,-290,288,-295,-279,-278,-280,-298,-300,-297,-266,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'REGISTER':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,60,66,67,68,71,72,73,74,75,76,80,85,90,94,95,98,101,103,112,123,124,125,130,145,185,186,190,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,324,325,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[40,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,40,-96,-105,-115,-64,-93,-116,-110,-99,-216,40,-117,-68,-62,-107,-67,-95,40,-98,-108,-94,-52,40,40,-97,-111,-113,-101,-60,40,-114,-65,-102,-53,-92,-302,-147,-148,-131,-130,-61,-69,-82,40,40,40,-87,40,-88,-89,-90,-81,-30,40,-70,-83,40,40,-303,-149,-132,-76,-72,-195,-194,40,-73,-78,-77,-74,-193,-75,40,40,-35,-36,-71,-150,-151,-134,-133,-212,40,-196,-197,-213,-210,-209,40,40,-31,-34,40,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'OR':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,271,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-237,-239,271,-242,-234,-241,-247,271,-243,-238,-248,-235,-244,-240,-249,-245,-236,-246,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'MINUS':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,128,138,139,140,144,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,170,171,172,173,174,175,177,178,179,180,182,184,185,194,203,204,205,206,207,209,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,303,308,309,310,311,312,314,315,316,318,320,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,398,400,404,408,411,412,414,416,417,422,423,425,426,429,430,440,443,444,445,452,454,455,458,459,460,461,462,463,464,467,468,469,470,471,472,478,479,481,490,492,493,494,500,501,502,503,506,507,511,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,174,174,-162,-289,-28,-304,174,174,-304,270,-290,-252,-260,-295,174,-279,-278,174,-280,-298,-304,-300,174,-262,-297,-266,-264,-261,-233,-296,174,-291,174,-263,-254,-294,-265,-281,-292,-293,174,-303,174,-76,-72,-195,-194,174,-289,174,-73,-78,-77,174,-74,-193,174,-75,174,174,174,-261,-28,-304,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-228,-226,-219,174,-221,-223,-222,-229,-224,-225,-227,-220,-255,174,-256,-299,-12,-11,174,174,-252,174,-257,-258,174,-275,174,-274,174,-301,174,-212,174,174,-196,-197,-213,174,174,174,-210,-209,174,174,-261,174,-304,174,174,-261,-237,270,270,270,-234,270,270,270,270,-238,270,-235,270,270,270,270,-236,270,-177,-304,174,-282,-272,-273,-269,-270,-271,-211,174,-198,-200,-208,174,-261,-28,-304,174,174,174,-11,-304,-253,174,-259,-268,174,-267,174,174,174,-199,174,174,174,174,-261,174,-204,-201,-203,-276,-304,-283,174,174,174,-277,174,-202,-205,-207,174,-206,]),'EQUALS':([4,41,55,62,92,94,96,97,99,107,112,122,128,141,149,150,152,154,155,157,158,160,163,164,170,172,175,177,179,180,182,185,209,244,245,252,292,294,295,299,304,308,310,311,314,316,320,368,369,370,371,399,401,408,411,412,414,416,417,446,447,450,451,457,459,461,462,464,482,483,500,502,511,],[-29,-52,-53,105,-37,-157,-158,144,-54,184,-30,-157,-289,-55,-290,282,-295,-279,-278,-280,-298,-300,-297,-266,-296,-291,-254,-294,-281,-292,-293,-303,-289,-35,-36,-38,-255,-256,-299,398,-178,-252,-257,-258,-275,-274,-301,-31,-34,-43,-44,-179,-181,-282,-272,-273,-269,-270,-271,-33,-32,-39,-42,-180,-253,-259,-268,-267,-41,-40,-276,-283,-277,]),'ENUM':([0,2,3,4,13,14,16,17,18,19,20,27,28,29,30,32,35,36,37,40,41,43,45,49,50,52,55,56,57,58,66,70,73,74,75,78,80,83,85,94,102,103,104,112,113,115,116,118,119,120,121,123,124,125,127,131,145,161,185,191,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,309,312,319,326,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[21,-63,-66,-29,-304,-96,-115,-64,-93,21,-116,21,-117,-68,-62,-67,-95,21,-98,-94,-52,-304,-97,-60,-304,-65,-53,-9,-10,-84,-302,21,-61,-69,-82,21,21,-161,21,21,-85,-81,-86,-30,-140,21,21,-141,-137,21,21,21,-70,-83,-162,21,21,21,-303,-138,21,21,-76,-72,-195,-194,21,-73,-78,-77,-74,-193,-75,21,21,-35,-36,-71,21,21,21,21,-139,-212,21,-196,-197,-213,-210,-209,21,21,-31,-34,21,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'DEFAULT':([29,66,74,103,123,185,203,204,205,206,210,214,217,219,222,228,229,230,332,335,336,338,339,340,345,346,422,425,426,429,430,468,469,470,471,492,493,494,507,514,516,517,519,520,521,],[-68,-302,-69,-81,215,-303,-76,-72,-195,-194,215,-73,-78,-77,-74,-193,215,-75,-212,215,-196,-197,-213,215,-210,-209,-211,-198,-200,-208,215,215,215,-199,215,-204,-201,-203,215,215,-202,-205,-207,215,-206,]),'CHAR':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,19,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,66,67,68,70,71,72,73,74,75,76,78,80,83,85,90,94,95,98,101,102,103,104,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,131,145,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[48,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,48,-116,-110,-99,-216,48,-117,-68,-62,-107,-67,-95,48,-98,-108,-94,-52,48,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-53,-9,-10,-84,-92,-302,-147,-148,48,-131,-130,-61,-69,-82,48,48,48,-161,48,-87,48,-88,-89,-90,-85,-81,-86,-30,-140,-128,48,48,48,-141,-137,48,48,48,-70,-83,-162,48,48,48,48,-303,-149,-132,-138,-129,-127,-126,48,48,-76,-72,-195,-194,48,-73,-78,-77,-74,-193,-75,48,48,-35,-36,-71,48,48,48,48,48,-150,-151,-139,-134,-133,-212,48,-196,-197,-213,-210,-209,48,48,-31,-34,48,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'LNOT':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,138,139,140,144,146,151,153,156,159,161,162,166,167,171,173,174,178,184,185,194,203,204,205,206,207,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,303,309,312,315,318,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,506,507,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,178,178,-162,-28,-304,178,178,-304,-260,178,178,-304,178,-262,-264,-261,178,178,-263,-265,178,-303,178,-76,-72,-195,-194,178,178,-73,-78,-77,178,-74,-193,178,-75,178,178,178,-261,-28,-304,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,-228,-226,-219,178,-221,-223,-222,-229,-224,-225,-227,-220,178,-12,-11,178,178,178,178,178,178,178,-212,178,178,-196,-197,-213,178,178,178,-210,-209,178,178,-261,178,-304,178,178,-261,-177,-304,178,-211,178,-198,-200,-208,178,-261,-28,-304,178,178,178,-11,-304,178,178,178,178,178,-199,178,178,178,178,-261,178,-204,-201,-203,-304,178,178,178,178,-202,-205,-207,178,-206,]),'LSHIFT':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,275,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-237,-239,275,275,-234,275,275,275,275,-238,275,-235,275,-240,275,275,-236,275,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'WHILE':([29,66,74,103,123,185,203,204,205,206,210,214,217,219,222,228,229,230,332,335,336,338,339,340,345,346,349,422,425,426,429,430,468,469,470,471,492,493,494,507,514,516,517,519,520,521,],[-68,-302,-69,-81,216,-303,-76,-72,-195,-194,216,-73,-78,-77,-74,-193,216,-75,-212,216,-196,-197,-213,216,-210,-209,433,-211,-198,-200,-208,216,216,216,-199,216,-204,-201,-203,216,216,-202,-205,-207,216,-206,]),'XOREQUAL':([128,149,150,152,154,155,157,158,160,163,164,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,-290,291,-295,-279,-278,-280,-298,-300,-297,-266,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'ARROW':([128,149,152,154,155,157,158,160,163,164,170,172,175,177,179,180,182,185,209,295,314,316,320,408,411,412,414,416,417,462,464,500,502,511,],[-289,-290,-295,-279,-278,-280,-298,-300,-297,-266,-296,-291,313,-294,-281,-292,-293,-303,-289,-299,-275,-274,-301,-282,-272,-273,-269,-270,-271,-268,-267,-276,-283,-277,]),'ELSE':([29,74,185,203,204,214,217,219,222,230,332,338,339,345,346,422,425,426,429,470,492,493,494,516,517,519,521,],[-68,-69,-303,-76,-72,-73,-78,-77,-74,-75,-212,-197,-213,-210,-209,-211,-198,-200,-208,-199,-204,507,-203,-202,-205,-207,-206,]),'TIMESEQUAL':([128,149,150,152,154,155,157,158,160,163,164,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,-290,284,-295,-279,-278,-280,-298,-300,-297,-266,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'IF':([29,66,74,103,123,185,203,204,205,206,210,214,217,219,222,228,229,230,332,335,336,338,339,340,345,346,422,425,426,429,430,468,469,470,471,492,493,494,507,514,516,517,519,520,521,],[-68,-302,-69,-81,218,-303,-76,-72,-195,-194,218,-73,-78,-77,-74,-193,218,-75,-212,218,-196,-197,-213,218,-210,-209,-211,-198,-200,-208,218,218,218,-199,218,-204,-201,-203,218,218,-202,-205,-207,218,-206,]),'ELLIPSIS':([243,],[364,]),'GOTO':([29,66,74,103,123,185,203,204,205,206,210,214,217,219,222,228,229,230,332,335,336,338,339,340,345,346,422,425,426,429,430,468,469,470,471,492,493,494,507,514,516,517,519,520,521,],[-68,-302,-69,-81,220,-303,-76,-72,-195,-194,220,-73,-78,-77,-74,-193,220,-75,-212,220,-196,-197,-213,220,-210,-209,-211,-198,-200,-208,220,220,220,-199,220,-204,-201,-203,220,220,-202,-205,-207,220,-206,]),'CASE':([29,66,74,103,123,185,203,204,205,206,210,214,217,219,222,228,229,230,332,335,336,338,339,340,345,346,422,425,426,429,430,468,469,470,471,492,493,494,507,514,516,517,519,520,521,],[-68,-302,-69,-81,221,-303,-76,-72,-195,-194,221,-73,-78,-77,-74,-193,221,-75,-212,221,-196,-197,-213,221,-210,-209,-211,-198,-200,-208,221,221,221,-199,221,-204,-201,-203,221,221,-202,-205,-207,221,-206,]),'COLON':([1,4,6,7,8,9,10,15,16,20,23,25,26,28,31,39,41,46,47,48,51,53,55,67,68,71,72,92,96,99,112,114,117,122,128,141,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,181,182,185,186,190,192,195,198,199,209,215,225,244,245,252,292,294,295,308,310,311,314,316,320,322,324,325,328,330,331,344,368,369,370,371,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,408,411,412,414,416,417,431,446,447,450,451,459,461,462,464,482,483,484,500,502,511,],[-103,-29,-109,-104,-112,-100,-106,-105,-115,-116,-110,-99,-216,-117,-107,-108,-52,-111,-113,-101,-114,-102,-53,-147,-148,-131,-130,-37,-158,-54,-30,-128,194,-157,-289,-55,-231,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-217,-293,-303,-149,-132,-129,-127,329,-126,335,340,-214,-35,-36,-38,-255,-256,-299,-252,-257,-258,-275,-274,-301,-230,-150,-151,194,-134,-133,430,-31,-34,-43,-44,-237,-239,-250,-242,-234,-241,-247,-251,-243,-238,-248,-235,452,-244,-240,-249,-245,-236,-246,-218,-282,-272,-273,-269,-270,-271,-215,-33,-32,-39,-42,-253,-259,-268,-267,-41,-40,-232,-276,-283,-277,]),'MINUSEQUAL':([128,149,150,152,154,155,157,158,160,163,164,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,-290,289,-295,-279,-278,-280,-298,-300,-297,-266,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'CONTINUE':([29,66,74,103,123,185,203,204,205,206,210,214,217,219,222,228,229,230,332,335,336,338,339,340,345,346,422,425,426,429,430,468,469,470,471,492,493,494,507,514,516,517,519,520,521,],[-68,-302,-69,-81,223,-303,-76,-72,-195,-194,223,-73,-78,-77,-74,-193,223,-75,-212,223,-196,-197,-213,223,-210,-209,-211,-198,-200,-208,223,223,223,-199,223,-204,-201,-203,223,223,-202,-205,-207,223,-206,]),'FLOAT':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,19,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,66,67,68,70,71,72,73,74,75,76,78,80,83,85,90,94,95,98,101,102,103,104,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,131,145,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[15,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,15,-116,-110,-99,-216,15,-117,-68,-62,-107,-67,-95,15,-98,-108,-94,-52,15,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-53,-9,-10,-84,-92,-302,-147,-148,15,-131,-130,-61,-69,-82,15,15,15,-161,15,-87,15,-88,-89,-90,-85,-81,-86,-30,-140,-128,15,15,15,-141,-137,15,15,15,-70,-83,-162,15,15,15,15,-303,-149,-132,-138,-129,-127,-126,15,15,-76,-72,-195,-194,15,-73,-78,-77,-74,-193,-75,15,15,-35,-36,-71,15,15,15,15,15,-150,-151,-139,-134,-133,-212,15,-196,-197,-213,-210,-209,15,15,-31,-34,15,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'BREAK':([29,66,74,103,123,185,203,204,205,206,210,214,217,219,222,228,229,230,332,335,336,338,339,340,345,346,422,425,426,429,430,468,469,470,471,492,493,494,507,514,516,517,519,520,521,],[-68,-302,-69,-81,224,-303,-76,-72,-195,-194,224,-73,-78,-77,-74,-193,224,-75,-212,224,-196,-197,-213,224,-210,-209,-211,-198,-200,-208,224,224,224,-199,224,-204,-201,-203,224,224,-202,-205,-207,224,-206,]),'LT':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,266,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-237,-239,266,-242,-234,-241,266,266,-243,-238,266,-235,-244,-240,266,266,-236,266,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'PPHASH':([0,2,3,17,27,29,30,32,49,52,73,74,103,124,185,253,338,],[32,-63,-66,-64,32,-68,-62,-67,-60,-65,-61,-69,-81,-70,-303,-71,-197,]),'RPAREN':([1,4,6,7,8,9,10,12,14,15,16,18,20,23,25,26,28,31,35,37,38,39,40,41,45,46,47,48,51,53,55,60,67,68,69,71,72,81,82,83,84,85,90,92,95,98,99,101,112,114,126,127,128,129,130,132,133,134,135,136,137,141,142,145,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,181,182,185,186,190,192,195,199,225,226,232,233,234,236,237,238,239,240,241,242,244,245,252,255,256,292,294,295,305,306,307,308,310,311,314,315,316,320,324,325,330,331,337,350,351,352,355,356,357,358,359,360,362,364,365,368,369,370,371,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,405,406,407,408,409,410,411,412,413,414,415,416,417,427,428,431,432,434,435,436,437,438,441,442,446,447,450,451,459,461,462,464,473,474,475,476,477,482,483,484,487,488,489,490,495,498,499,500,502,505,506,509,510,511,513,515,518,],[-103,-29,-109,-104,-112,-100,-106,-91,-96,-105,-115,-93,-116,-110,-99,-216,-117,-107,-95,-98,-304,-108,-94,-52,-97,-111,-113,-101,-114,-102,-53,-92,-147,-148,112,-131,-130,-159,-27,-161,-28,-304,-87,-37,-88,-89,-54,-90,-30,-128,-160,-162,-289,-18,-304,-163,-17,244,245,-170,-165,-55,252,-304,-231,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-217,-293,-303,-149,-132,-129,-127,-126,-214,-14,-168,-183,-2,-304,-169,-1,-167,-45,-185,-56,-35,-36,-38,370,371,-255,-256,-299,404,-304,408,-252,-257,-258,-275,414,-274,-301,-150,-151,-134,-133,-13,-171,-57,-184,-183,436,-24,-23,437,-304,-304,-164,-166,-31,-34,-43,-44,-237,-239,-250,-242,-234,-241,-247,-251,-243,-238,-248,-235,-244,-240,-249,-245,-236,-246,-218,453,-304,-182,-183,-282,460,461,-272,-273,462,-269,-287,-270,-271,468,469,-215,471,-188,-190,-192,-186,473,476,477,-33,-32,-39,-42,-253,-259,-268,-267,-191,-187,-189,-50,-51,-41,-40,-232,-288,-284,502,-304,508,-46,-49,-276,-283,514,-304,-48,-47,-277,-285,520,-286,]),'COMMA':([1,4,6,7,8,9,10,12,14,15,16,18,20,23,25,26,28,31,35,37,38,39,40,41,45,46,47,48,51,53,55,59,60,62,64,67,68,71,72,81,82,83,84,87,90,92,94,95,96,97,98,99,100,101,107,108,109,112,114,122,126,127,128,129,130,132,136,137,141,148,149,150,152,154,155,157,158,160,163,164,165,168,169,170,172,175,177,179,180,181,182,183,185,186,187,188,189,190,192,195,196,198,199,200,209,225,226,232,233,234,237,238,239,240,241,242,244,245,252,254,260,292,294,295,300,306,307,308,310,311,314,316,320,321,322,323,324,325,327,330,331,333,350,351,352,365,368,369,370,371,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,402,406,407,408,411,412,413,414,415,416,417,418,419,420,421,427,428,431,432,434,435,436,437,446,447,450,451,456,459,461,462,464,473,474,475,476,477,482,483,484,485,486,487,495,498,499,500,502,509,510,511,512,],[-103,-29,-109,-104,-112,-100,-106,-91,-96,-105,-115,-93,-116,-110,-99,-216,-117,-107,-95,-98,-304,-108,-94,-52,-97,-111,-113,-101,-114,-102,-53,-122,-92,-124,106,-147,-148,-131,-130,-159,-27,-161,-28,-118,-87,-37,-157,-88,-158,-120,-89,-54,147,-90,-155,-152,187,-30,-128,-157,-160,-162,-289,231,-304,243,-170,-165,-55,-231,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-125,-233,-172,-296,-291,-254,-294,-281,-292,-217,-293,-123,-303,-149,-153,187,187,-132,-129,-127,328,-144,-126,-142,-289,-214,347,-168,-183,-2,-169,-1,-167,-45,-185,-56,-35,-36,-38,-121,-119,-255,-256,-299,400,-304,347,-252,-257,-258,-275,-274,-301,-156,-230,-154,-150,-151,-146,-134,-133,347,-171,-57,-184,-166,-31,-34,-43,-44,-237,-239,-250,-242,-234,-241,-247,-251,-243,-238,-248,-235,347,-244,-240,-249,-245,-236,-246,-218,-175,-173,-182,-183,-282,-272,-273,463,-269,-287,-270,-271,347,465,-143,-145,347,347,-215,347,-188,-190,-192,-186,-33,-32,-39,-42,-174,-253,-259,-268,-267,-191,-187,-189,-50,-51,-41,-40,-232,-176,501,-288,347,-46,-49,-276,-283,-48,-47,-277,347,]),'RSHIFT':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,262,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-237,-239,262,262,-234,262,262,262,262,-238,262,-235,262,-240,262,262,-236,262,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'_BOOL':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,19,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,66,67,68,70,71,72,73,74,75,76,78,80,83,85,90,94,95,98,101,102,103,104,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,131,145,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[9,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,9,-116,-110,-99,-216,9,-117,-68,-62,-107,-67,-95,9,-98,-108,-94,-52,9,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-53,-9,-10,-84,-92,-302,-147,-148,9,-131,-130,-61,-69,-82,9,9,9,-161,9,-87,9,-88,-89,-90,-85,-81,-86,-30,-140,-128,9,9,9,-141,-137,9,9,9,-70,-83,-162,9,9,9,9,-303,-149,-132,-138,-129,-127,-126,9,9,-76,-72,-195,-194,9,-73,-78,-77,-74,-193,-75,9,9,-35,-36,-71,9,9,9,9,9,-150,-151,-139,-134,-133,-212,9,-196,-197,-213,-210,-209,9,9,-31,-34,9,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,22,23,25,26,27,28,29,30,31,32,35,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,66,67,68,71,72,73,74,76,78,81,82,83,84,86,88,90,91,92,95,98,99,101,102,103,104,105,106,112,114,117,123,124,126,127,128,130,138,139,140,141,144,146,147,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,170,171,172,173,174,175,176,177,178,179,180,182,184,185,186,190,192,194,195,199,203,204,205,206,207,208,209,210,214,216,217,218,219,221,222,227,228,229,230,233,235,236,240,241,242,244,245,246,247,249,252,253,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,295,296,297,298,303,306,309,312,314,315,316,318,320,324,325,328,329,330,331,332,334,335,336,338,339,340,341,342,345,346,347,348,351,352,354,355,361,363,368,369,370,371,372,373,375,398,400,404,405,407,408,411,412,414,416,417,422,423,425,426,429,430,433,434,435,436,437,440,443,444,445,446,447,450,451,452,454,455,458,460,462,463,464,467,468,469,470,471,472,473,474,475,476,477,478,479,481,482,483,490,492,493,494,498,499,500,501,502,503,506,507,509,510,511,514,516,517,519,520,521,],[22,-103,-63,-66,-29,22,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,22,-116,22,-110,-99,-216,22,-117,-68,-62,-107,-67,-95,-98,-304,-108,-94,85,91,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,85,-9,-10,-84,-92,-302,-147,-148,-131,-130,-61,-69,91,22,-159,-27,-161,-28,-304,91,-87,91,-37,-88,-89,145,-90,-85,-81,-86,161,91,-30,-128,91,161,-70,-160,-162,-289,236,-28,-304,161,145,161,-304,91,-290,-260,-295,293,-279,-278,293,-280,-298,-304,-300,161,-262,-297,-266,-264,-261,-296,309,-291,312,-263,315,319,-294,-265,-281,-292,-293,309,-303,-149,-132,-129,309,-127,-126,-76,-72,-195,-194,161,334,-289,161,-73,341,-78,342,-77,309,-74,348,-193,161,-75,236,161,236,-45,360,362,-35,-36,161,161,-261,-38,-71,-28,-304,161,309,309,309,309,309,309,309,309,309,309,309,309,161,309,309,309,309,309,309,-228,-226,-219,161,-221,-223,-222,-229,-224,-225,-227,-220,161,-299,-12,-11,161,309,405,161,161,-275,161,-274,161,-301,-150,-151,91,309,-134,-133,-212,161,161,-196,-197,-213,161,161,161,-210,-209,161,161,362,360,-261,236,161,-304,-31,-34,-43,-44,161,161,-261,-177,-304,309,405,405,-282,-272,-273,-269,-270,-271,-211,161,-198,-200,-208,161,472,-188,-190,-192,-186,-261,-28,-304,161,-33,-32,-39,-42,309,161,-11,-304,309,-268,161,-267,161,161,161,-199,161,161,-191,-187,-189,-50,-51,161,161,-261,-41,-40,161,-204,-201,-203,-46,-49,-276,-304,-283,161,161,161,-48,-47,-277,161,-202,-205,-207,161,-206,]),'PERIOD':([66,128,149,152,154,155,157,158,159,160,163,164,170,172,175,177,179,180,182,185,209,295,299,304,314,316,320,399,400,401,408,411,412,414,416,417,457,458,462,464,488,489,500,501,502,511,513,518,],[-302,-289,-290,-295,-279,-278,-280,-298,301,-300,-297,-266,-296,-291,317,-294,-281,-292,-293,-303,-289,-299,301,-178,-275,-274,-301,-179,301,-181,-282,-272,-273,-269,-270,-271,-180,301,-268,-267,-284,504,-276,301,-283,-277,-285,-286,]),'VOID':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,19,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,66,67,68,70,71,72,73,74,75,76,78,80,83,85,90,94,95,98,101,102,103,104,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,131,145,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[25,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,25,-116,-110,-99,-216,25,-117,-68,-62,-107,-67,-95,25,-98,-108,-94,-52,25,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-53,-9,-10,-84,-92,-302,-147,-148,25,-131,-130,-61,-69,-82,25,25,25,-161,25,-87,25,-88,-89,-90,-85,-81,-86,-30,-140,-128,25,25,25,-141,-137,25,25,25,-70,-83,-162,25,25,25,25,-303,-149,-132,-138,-129,-127,-126,25,25,-76,-72,-195,-194,25,-73,-78,-77,-74,-193,-75,25,25,-35,-36,-71,25,25,25,25,25,-150,-151,-139,-134,-133,-212,25,-196,-197,-213,-210,-209,25,25,-31,-34,25,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'EQ':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,277,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-237,-239,277,-242,-234,-241,277,277,-243,-238,277,-235,-244,-240,277,-245,-236,-246,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'TYPEID':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,66,67,68,70,71,72,73,74,75,76,78,80,81,82,83,84,85,88,90,91,94,95,98,101,102,103,104,106,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,130,131,145,147,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,233,236,243,244,245,253,293,309,312,313,317,319,324,325,326,328,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[26,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,26,-116,68,-110,71,-99,-216,26,-117,-68,-62,-107,-67,-136,-95,26,-98,-304,-108,-94,-52,92,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-135,-53,-9,-10,-84,-92,-302,-147,-148,26,-131,-130,-61,-69,-82,92,26,26,-159,-27,-161,-28,26,92,-87,92,26,-88,-89,-90,-85,-81,-86,92,-30,-140,-128,26,26,92,-141,-137,26,26,26,-70,-83,-160,-162,240,26,26,92,26,-303,-149,-132,-138,-129,-127,-126,26,26,-76,-72,-195,-194,26,-73,-78,-77,-74,-193,-75,240,26,26,-35,-36,-71,26,26,26,412,417,26,-150,-151,-139,92,-134,-133,-212,26,-196,-197,-213,-210,-209,26,26,-31,-34,26,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'MOD':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,278,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,278,278,278,278,-234,278,278,278,278,278,278,-235,278,278,278,278,-236,278,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'PLUS':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,128,138,139,140,144,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,170,171,172,173,174,175,177,178,179,180,182,184,185,194,203,204,205,206,207,209,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,303,308,309,310,311,312,314,315,316,318,320,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,398,400,404,408,411,412,414,416,417,422,423,425,426,429,430,440,443,444,445,452,454,455,458,459,460,461,462,463,464,467,468,469,470,471,472,478,479,481,490,492,493,494,500,501,502,503,506,507,511,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,162,162,-162,-289,-28,-304,162,162,-304,261,-290,-252,-260,-295,162,-279,-278,162,-280,-298,-304,-300,162,-262,-297,-266,-264,-261,-233,-296,162,-291,162,-263,-254,-294,-265,-281,-292,-293,162,-303,162,-76,-72,-195,-194,162,-289,162,-73,-78,-77,162,-74,-193,162,-75,162,162,162,-261,-28,-304,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,-228,-226,-219,162,-221,-223,-222,-229,-224,-225,-227,-220,-255,162,-256,-299,-12,-11,162,162,-252,162,-257,-258,162,-275,162,-274,162,-301,162,-212,162,162,-196,-197,-213,162,162,162,-210,-209,162,162,-261,162,-304,162,162,-261,-237,261,261,261,-234,261,261,261,261,-238,261,-235,261,261,261,261,-236,261,-177,-304,162,-282,-272,-273,-269,-270,-271,-211,162,-198,-200,-208,162,-261,-28,-304,162,162,162,-11,-304,-253,162,-259,-268,162,-267,162,162,162,-199,162,162,162,162,-261,162,-204,-201,-203,-276,-304,-283,162,162,162,-277,162,-202,-205,-207,162,-206,]),'WCHAR_CONST':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,138,139,140,144,146,151,153,156,159,161,162,166,167,171,173,174,178,184,185,194,203,204,205,206,207,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,303,309,312,315,318,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,506,507,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,163,163,-162,-28,-304,163,163,-304,-260,163,163,-304,163,-262,-264,-261,163,163,-263,-265,163,-303,163,-76,-72,-195,-194,163,163,-73,-78,-77,163,-74,-193,163,-75,163,163,163,-261,-28,-304,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,-228,-226,-219,163,-221,-223,-222,-229,-224,-225,-227,-220,163,-12,-11,163,163,163,163,163,163,163,-212,163,163,-196,-197,-213,163,163,163,-210,-209,163,163,-261,163,-304,163,163,-261,-177,-304,163,-211,163,-198,-200,-208,163,-261,-28,-304,163,163,163,-11,-304,163,163,163,163,163,-199,163,163,163,163,-261,163,-204,-201,-203,-304,163,163,163,163,-202,-205,-207,163,-206,]),'UNION':([0,2,3,4,13,14,16,17,18,19,20,27,28,29,30,32,35,36,37,40,41,43,45,49,50,52,55,56,57,58,66,70,73,74,75,78,80,83,85,94,102,103,104,112,113,115,116,118,119,120,121,123,124,125,127,131,145,161,185,191,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,309,312,319,326,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[34,-63,-66,-29,-304,-96,-115,-64,-93,34,-116,34,-117,-68,-62,-67,-95,34,-98,-94,-52,-304,-97,-60,-304,-65,-53,-9,-10,-84,-302,34,-61,-69,-82,34,34,-161,34,34,-85,-81,-86,-30,-140,34,34,-141,-137,34,34,34,-70,-83,-162,34,34,34,-303,-138,34,34,-76,-72,-195,-194,34,-73,-78,-77,-74,-193,-75,34,34,-35,-36,-71,34,34,34,34,-139,-212,34,-196,-197,-213,-210,-209,34,34,-31,-34,34,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'VOLATILE':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,20,23,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,60,66,67,68,70,71,72,73,74,75,76,80,83,84,85,86,90,94,95,98,101,103,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,138,139,145,146,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,257,258,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,363,368,369,405,422,425,426,429,443,444,446,447,470,492,493,494,516,517,519,521,],[28,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,28,-96,-105,-115,-64,-93,-116,-110,-99,-216,28,-117,-68,-62,-107,-67,-95,28,-98,28,-108,-94,-52,28,28,-97,-111,-113,-101,-60,28,-114,-65,-102,-53,-92,-302,-147,-148,28,-131,-130,-61,-69,-82,28,28,-161,28,28,28,-87,28,-88,-89,-90,-81,-30,-140,-128,28,28,28,-141,-137,28,28,28,-70,-83,-162,28,28,28,28,28,28,-303,-149,-132,-138,-129,-127,-126,28,28,-76,-72,-195,-194,28,-73,-78,-77,-74,-193,-75,28,28,-35,-36,-71,28,28,28,28,28,28,28,-150,-151,-139,-134,-133,-212,28,-196,-197,-213,-210,-209,28,28,28,-31,-34,28,-211,-198,-200,-208,28,28,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'PPPRAGMASTR':([29,],[74,]),'WSTRING_LITERAL':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,138,139,140,144,146,151,153,156,159,160,161,162,166,167,171,173,174,178,179,184,185,194,203,204,205,206,207,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,303,309,312,315,318,320,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,506,507,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,160,160,-162,-28,-304,160,160,-304,-260,160,160,-304,-300,160,-262,-264,-261,160,160,-263,-265,320,160,-303,160,-76,-72,-195,-194,160,160,-73,-78,-77,160,-74,-193,160,-75,160,160,160,-261,-28,-304,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,-228,-226,-219,160,-221,-223,-222,-229,-224,-225,-227,-220,160,-12,-11,160,160,160,160,160,160,-301,160,-212,160,160,-196,-197,-213,160,160,160,-210,-209,160,160,-261,160,-304,160,160,-261,-177,-304,160,-211,160,-198,-200,-208,160,-261,-28,-304,160,160,160,-11,-304,160,160,160,160,160,-199,160,160,160,160,-261,160,-204,-201,-203,-304,160,160,160,160,-202,-205,-207,160,-206,]),'INLINE':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,60,66,67,68,71,72,73,74,75,76,80,85,90,94,95,98,101,103,112,123,124,125,130,145,185,186,190,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,324,325,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[37,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,37,-96,-105,-115,-64,-93,-116,-110,-99,-216,37,-117,-68,-62,-107,-67,-95,37,-98,-108,-94,-52,37,37,-97,-111,-113,-101,-60,37,-114,-65,-102,-53,-92,-302,-147,-148,-131,-130,-61,-69,-82,37,37,37,-87,37,-88,-89,-90,-81,-30,37,-70,-83,37,37,-303,-149,-132,-76,-72,-195,-194,37,-73,-78,-77,-74,-193,-75,37,37,-35,-36,-71,-150,-151,-134,-133,-212,37,-196,-197,-213,-210,-209,37,37,-31,-34,37,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'CHAR_CONST':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,138,139,140,144,146,151,153,156,159,161,162,166,167,171,173,174,178,184,185,194,203,204,205,206,207,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,303,309,312,315,318,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,506,507,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,170,170,-162,-28,-304,170,170,-304,-260,170,170,-304,170,-262,-264,-261,170,170,-263,-265,170,-303,170,-76,-72,-195,-194,170,170,-73,-78,-77,170,-74,-193,170,-75,170,170,170,-261,-28,-304,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,-228,-226,-219,170,-221,-223,-222,-229,-224,-225,-227,-220,170,-12,-11,170,170,170,170,170,170,170,-212,170,170,-196,-197,-213,170,170,170,-210,-209,170,170,-261,170,-304,170,170,-261,-177,-304,170,-211,170,-198,-200,-208,170,-261,-28,-304,170,170,170,-11,-304,170,170,170,170,170,-199,170,170,170,170,-261,170,-204,-201,-203,-304,170,170,170,170,-202,-205,-207,170,-206,]),'DIVIDE':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,272,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,272,272,272,272,-234,272,272,272,272,272,272,-235,272,272,272,272,-236,272,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'INT_CONST_OCT':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,138,139,140,144,146,151,153,156,159,161,162,166,167,171,173,174,178,184,185,194,203,204,205,206,207,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,303,309,312,315,318,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,506,507,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,172,172,-162,-28,-304,172,172,-304,-260,172,172,-304,172,-262,-264,-261,172,172,-263,-265,172,-303,172,-76,-72,-195,-194,172,172,-73,-78,-77,172,-74,-193,172,-75,172,172,172,-261,-28,-304,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-228,-226,-219,172,-221,-223,-222,-229,-224,-225,-227,-220,172,-12,-11,172,172,172,172,172,172,172,-212,172,172,-196,-197,-213,172,172,172,-210,-209,172,172,-261,172,-304,172,172,-261,-177,-304,172,-211,172,-198,-200,-208,172,-261,-28,-304,172,172,172,-11,-304,172,172,172,172,172,-199,172,172,172,172,-261,172,-204,-201,-203,-304,172,172,172,172,-202,-205,-207,172,-206,]),'SIZEOF':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,138,139,140,144,146,151,153,156,159,161,162,166,167,171,173,174,178,184,185,194,203,204,205,206,207,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,303,309,312,315,318,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,506,507,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,173,173,-162,-28,-304,173,173,-304,-260,173,173,-304,173,-262,-264,-261,173,173,-263,-265,173,-303,173,-76,-72,-195,-194,173,173,-73,-78,-77,173,-74,-193,173,-75,173,173,173,-261,-28,-304,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-228,-226,-219,173,-221,-223,-222,-229,-224,-225,-227,-220,173,-12,-11,173,173,173,173,173,173,173,-212,173,173,-196,-197,-213,173,173,173,-210,-209,173,173,-261,173,-304,173,173,-261,-177,-304,173,-211,173,-198,-200,-208,173,-261,-28,-304,173,173,173,-11,-304,173,173,173,173,173,-199,173,173,173,173,-261,173,-204,-201,-203,-304,173,173,173,173,-202,-205,-207,173,-206,]),'RSHIFTEQUAL':([128,149,150,152,154,155,157,158,160,163,164,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,-290,290,-295,-279,-278,-280,-298,-300,-297,-266,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'LOR':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,268,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-237,-239,-250,-242,-234,-241,-247,-251,-243,-238,-248,-235,-244,-240,-249,-245,-236,-246,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'CONDOP':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,273,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-237,-239,-250,-242,-234,-241,-247,-251,-243,-238,-248,-235,-244,-240,-249,-245,-236,-246,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'SWITCH':([29,66,74,103,123,185,203,204,205,206,210,214,217,219,222,228,229,230,332,335,336,338,339,340,345,346,422,425,426,429,430,468,469,470,471,492,493,494,507,514,516,517,519,520,521,],[-68,-302,-69,-81,227,-303,-76,-72,-195,-194,227,-73,-78,-77,-74,-193,227,-75,-212,227,-196,-197,-213,227,-210,-209,-211,-198,-200,-208,227,227,227,-199,227,-204,-201,-203,227,227,-202,-205,-207,227,-206,]),'OFFSETOF':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,138,139,140,144,146,151,153,156,159,161,162,166,167,171,173,174,178,184,185,194,203,204,205,206,207,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,303,309,312,315,318,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,506,507,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,176,176,-162,-28,-304,176,176,-304,-260,176,176,-304,176,-262,-264,-261,176,176,-263,-265,176,-303,176,-76,-72,-195,-194,176,176,-73,-78,-77,176,-74,-193,176,-75,176,176,176,-261,-28,-304,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,-228,-226,-219,176,-221,-223,-222,-229,-224,-225,-227,-220,176,-12,-11,176,176,176,176,176,176,176,-212,176,176,-196,-197,-213,176,176,176,-210,-209,176,176,-261,176,-304,176,176,-261,-177,-304,176,-211,176,-198,-200,-208,176,-261,-28,-304,176,176,176,-11,-304,176,176,176,176,176,-199,176,176,176,176,-261,176,-204,-201,-203,-304,176,176,176,176,-202,-205,-207,176,-206,]),'GT':([128,148,149,150,152,154,155,157,158,160,163,164,168,170,172,175,177,179,180,182,185,209,292,294,295,308,310,311,314,316,320,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,408,411,412,414,416,417,459,461,462,464,500,502,511,],[-289,274,-290,-252,-295,-279,-278,-280,-298,-300,-297,-266,-233,-296,-291,-254,-294,-281,-292,-293,-303,-289,-255,-256,-299,-252,-257,-258,-275,-274,-301,-237,-239,274,-242,-234,-241,274,274,-243,-238,274,-235,-244,-240,274,274,-236,274,-282,-272,-273,-269,-270,-271,-253,-259,-268,-267,-276,-283,-277,]),'FLOAT_CONST':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,138,139,140,144,146,151,153,156,159,161,162,166,167,171,173,174,178,184,185,194,203,204,205,206,207,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,303,309,312,315,318,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,506,507,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,177,177,-162,-28,-304,177,177,-304,-260,177,177,-304,177,-262,-264,-261,177,177,-263,-265,177,-303,177,-76,-72,-195,-194,177,177,-73,-78,-77,177,-74,-193,177,-75,177,177,177,-261,-28,-304,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,-228,-226,-219,177,-221,-223,-222,-229,-224,-225,-227,-220,177,-12,-11,177,177,177,177,177,177,177,-212,177,177,-196,-197,-213,177,177,177,-210,-209,177,177,-261,177,-304,177,177,-261,-177,-304,177,-211,177,-198,-200,-208,177,-261,-28,-304,177,177,177,-11,-304,177,177,177,177,177,-199,177,177,177,177,-261,177,-204,-201,-203,-304,177,177,177,177,-202,-205,-207,177,-206,]),'DO':([29,66,74,103,123,185,203,204,205,206,210,214,217,219,222,228,229,230,332,335,336,338,339,340,345,346,422,425,426,429,430,468,469,470,471,492,493,494,507,514,516,517,519,520,521,],[-68,-302,-69,-81,229,-303,-76,-72,-195,-194,229,-73,-78,-77,-74,-193,229,-75,-212,229,-196,-197,-213,229,-210,-209,-211,-198,-200,-208,229,229,229,-199,229,-204,-201,-203,229,229,-202,-205,-207,229,-206,]),'SHORT':([0,1,2,3,4,6,7,8,9,10,12,13,14,15,16,17,18,19,20,23,25,26,27,28,29,30,31,32,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,55,56,57,58,60,66,67,68,70,71,72,73,74,75,76,78,80,83,85,90,94,95,98,101,102,103,104,112,113,114,115,116,117,118,119,120,121,123,124,125,127,130,131,145,161,185,186,190,191,192,195,199,201,202,203,204,205,206,210,214,217,219,222,228,230,236,243,244,245,253,293,306,309,312,319,324,325,326,330,331,332,334,336,338,339,345,346,360,362,368,369,405,422,425,426,429,446,447,470,492,493,494,516,517,519,521,],[53,-103,-63,-66,-29,-109,-104,-112,-100,-106,-91,-304,-96,-105,-115,-64,-93,53,-116,-110,-99,-216,53,-117,-68,-62,-107,-67,-95,53,-98,-108,-94,-52,53,-304,-97,-111,-113,-101,-60,-304,-114,-65,-102,-53,-9,-10,-84,-92,-302,-147,-148,53,-131,-130,-61,-69,-82,53,53,53,-161,53,-87,53,-88,-89,-90,-85,-81,-86,-30,-140,-128,53,53,53,-141,-137,53,53,53,-70,-83,-162,53,53,53,53,-303,-149,-132,-138,-129,-127,-126,53,53,-76,-72,-195,-194,53,-73,-78,-77,-74,-193,-75,53,53,-35,-36,-71,53,53,53,53,53,-150,-151,-139,-134,-133,-212,53,-196,-197,-213,-210,-209,53,53,-31,-34,53,-211,-198,-200,-208,-33,-32,-199,-204,-201,-203,-202,-205,-207,-206,]),'INT_CONST_HEX':([16,20,28,29,66,74,82,83,84,86,103,105,123,127,138,139,140,144,146,151,153,156,159,161,162,166,167,171,173,174,178,184,185,194,203,204,205,206,207,210,214,217,219,221,222,228,229,230,235,246,247,249,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,303,309,312,315,318,329,332,334,335,336,338,339,340,341,342,345,346,347,348,354,361,363,372,373,375,398,400,404,422,423,425,426,429,430,440,443,444,445,452,454,455,458,460,463,467,468,469,470,471,472,478,479,481,490,492,493,494,501,503,506,507,514,516,517,519,520,521,],[-115,-116,-117,-68,-302,-69,-27,-161,-28,-304,-81,180,180,-162,-28,-304,180,180,-304,-260,180,180,-304,180,-262,-264,-261,180,180,-263,-265,180,-303,180,-76,-72,-195,-194,180,180,-73,-78,-77,180,-74,-193,180,-75,180,180,180,-261,-28,-304,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,-228,-226,-219,180,-221,-223,-222,-229,-224,-225,-227,-220,180,-12,-11,180,180,180,180,180,180,180,-212,180,180,-196,-197,-213,180,180,180,-210,-209,180,180,-261,180,-304,180,180,-261,-177,-304,180,-211,180,-198,-200,-208,180,-261,-28,-304,180,180,180,-11,-304,180,180,180,180,180,-199,180,180,180,180,-261,180,-204,-201,-203,-304,180,180,180,180,-202,-205,-207,180,-206,]),'$end':([0,2,3,11,17,27,29,30,32,33,49,52,73,74,103,124,185,253,338,],[-304,-63,-66,0,-64,-58,-68,-62,-67,-59,-60,-65,-61,-69,-81,-70,-303,-71,-197,]),'RBRACE':([29,66,74,103,107,108,109,113,115,118,119,123,128,148,149,150,152,154,155,157,158,159,160,163,164,168,169,170,172,175,177,179,180,181,182,185,187,188,189,191,201,202,203,204,205,206,210,211,213,214,217,219,222,228,230,292,294,295,297,300,302,308,310,311,314,316,320,321,322,323,326,332,336,338,339,345,346,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,397,400,402,408,411,412,414,416,417,422,425,426,429,456,459,461,462,464,470,484,485,486,492,493,494,500,501,502,511,516,517,519,521,],[-68,-302,-69,-81,-155,-152,185,-140,185,-141,-137,-304,-289,-231,-290,-252,-295,-279,-278,-280,-298,-304,-300,-297,-266,-233,-172,-296,-291,-254,-294,-281,-292,-217,-293,-303,-153,185,185,-138,185,185,-76,-72,-195,-194,-6,185,-5,-73,-78,-77,-74,-193,-75,-255,-256,-299,-21,-22,185,-252,-257,-258,-275,-274,-301,-156,-230,-154,-139,-212,-196,-197,-213,-210,-209,-237,-239,-250,-242,-234,-241,-247,-251,-243,-238,-248,-235,-244,-240,-249,-245,-236,-246,-218,-175,185,-173,-282,-272,-273,-269,-270,-271,-211,-198,-200,-208,-174,-253,-259,-268,-267,-199,-232,-176,185,-204,-201,-203,-276,185,-283,-277,-202,-205,-207,-206,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init_declarator':([42,76,106,147,],[87,87,183,260,]),'iteration_statement':([123,210,229,335,340,430,468,469,471,507,514,520,],[203,203,203,203,203,203,203,203,203,203,203,203,]),'designation_opt':([159,400,458,501,],[298,454,298,454,]),'labeled_statement':([123,210,229,335,340,430,468,469,471,507,514,520,],[204,204,204,204,204,204,204,204,204,204,204,204,]),'init_declarator_list_opt':([42,76,],[89,89,]),'block_item':([123,210,],[205,336,]),'type_name':([161,293,309,312,319,],[305,396,409,410,419,]),'parameter_type_list_opt':([236,360,405,],[356,438,356,]),'id_init_declarator_list_opt':([19,78,],[61,61,]),'statement':([123,210,229,335,340,430,468,469,471,507,514,520,],[206,206,349,425,426,470,492,493,494,516,519,521,]),'pp_directive':([0,27,],[17,17,]),'constant':([105,123,140,144,153,156,161,171,173,184,194,207,210,221,229,235,246,247,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,283,293,298,303,309,312,315,318,329,334,335,340,341,342,347,348,361,372,373,404,423,430,445,452,454,460,463,467,468,469,471,472,478,479,490,503,506,507,514,520,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'argument_expression_list':([315,],[413,]),'brace_open':([21,24,67,68,71,72,77,105,123,143,144,210,229,298,335,340,404,430,453,454,460,461,468,469,471,507,514,520,],[65,70,110,111,120,121,123,159,123,123,159,123,123,159,123,123,458,123,458,159,458,458,123,123,123,123,123,123,]),'abstract_declarator_opt':([130,306,],[237,406,]),'offsetof_member_designator':([465,],[489,]),'translation_unit':([0,],[27,]),'block_item_list':([123,],[210,]),'function_definition':([0,27,],[30,30,]),'block_item_list_opt':([123,],[211,]),'expression_opt':([123,210,229,334,335,340,423,430,467,468,469,471,490,506,507,514,520,],[212,212,212,424,212,212,466,212,491,212,212,212,505,515,212,212,212,]),'struct_declarator_list':([117,],[196,]),'empty':([0,13,19,36,38,42,43,50,76,78,85,86,94,117,123,130,139,140,145,146,159,210,229,235,236,258,259,306,334,335,340,360,361,362,363,400,405,423,430,444,445,458,467,468,469,471,490,501,506,507,514,520,],[33,56,63,79,82,93,56,56,93,63,133,82,79,197,213,238,82,250,133,82,297,337,337,250,358,82,250,238,337,337,337,358,250,133,82,455,358,337,337,82,250,455,337,337,337,337,337,455,337,337,337,337,]),'primary_expression':([105,123,140,144,153,156,161,171,173,184,194,207,210,221,229,235,246,247,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,283,293,298,303,309,312,315,318,329,334,335,340,341,342,347,348,361,372,373,404,423,430,445,452,454,460,463,467,468,469,471,472,478,479,490,503,506,507,514,520,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'direct_abstract_declarator':([130,233,236,306,355,405,407,],[241,352,241,241,352,241,352,]),'id_declarator':([0,19,22,27,42,76,78,91,106,117,130,147,236,328,],[36,62,69,36,94,122,62,69,122,122,239,122,69,122,]),'enumerator_list':([65,110,111,],[109,188,189,]),'cast_expression':([105,123,140,144,161,171,184,194,207,210,221,229,235,246,247,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,283,293,298,303,309,312,315,318,329,334,335,340,341,342,347,348,361,372,373,404,423,430,445,452,454,460,463,467,468,469,471,472,478,479,490,503,506,507,514,520,],[168,168,168,168,168,310,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,459,168,168,168,168,168,459,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'typedef_name':([0,19,27,36,70,78,80,85,94,115,116,120,121,123,131,145,161,201,202,210,236,243,293,309,312,319,334,360,362,405,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'constant_expression':([184,194,221,303,329,],[321,327,344,403,421,]),'expression_statement':([123,210,229,335,340,430,468,469,471,507,514,520,],[214,214,214,214,214,214,214,214,214,214,214,214,]),'declaration_list':([36,94,],[80,80,]),'typeid_declarator':([42,76,91,106,117,147,328,],[96,96,142,96,96,96,96,]),'postfix_expression':([105,123,140,144,153,156,161,171,173,184,194,207,210,221,229,235,246,247,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,283,293,298,303,309,312,315,318,329,334,335,340,341,342,347,348,361,372,373,404,423,430,445,452,454,460,463,467,468,469,471,472,478,479,490,503,506,507,514,520,],[175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,]),'assignment_operator':([150,],[283,]),'declarator':([42,76,106,117,147,328,],[97,97,97,198,97,198,]),'external_declaration':([0,27,],[49,73,]),'function_specifier':([0,13,27,36,42,43,50,76,80,85,94,123,130,145,210,236,243,334,360,362,405,],[50,50,50,50,98,50,50,98,50,50,50,50,98,50,50,50,50,50,50,50,50,]),'init_declarator_list':([42,76,],[100,100,]),'unified_string_literal':([105,123,140,144,153,156,161,171,173,184,194,207,210,221,229,235,246,247,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,283,293,298,303,309,312,315,318,329,334,335,340,341,342,347,348,361,372,373,404,423,430,445,452,454,460,463,467,468,469,471,472,478,479,490,503,506,507,514,520,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'declaration_specifiers_no_type_opt':([13,43,50,],[58,102,104,]),'initializer_list_opt':([159,],[302,]),'type_specifier_no_typeid':([0,19,27,36,42,70,76,78,80,85,94,115,116,117,120,121,123,130,131,145,161,201,202,210,236,243,293,306,309,312,319,334,360,362,405,],[51,51,51,51,101,51,101,51,51,51,51,51,51,199,51,51,51,101,51,51,51,51,51,51,51,51,51,199,51,51,51,51,51,51,51,]),'conditional_expression':([105,123,140,144,161,184,194,207,210,221,229,235,246,247,259,273,283,293,298,303,309,312,315,318,329,334,335,340,341,342,347,348,361,372,373,423,430,445,452,454,463,467,468,469,471,472,478,479,490,503,506,507,514,520,],[181,181,181,181,181,322,322,181,181,322,181,181,181,181,181,181,181,181,181,322,181,181,181,181,322,181,181,181,181,181,181,181,181,181,181,181,181,181,484,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,]),'struct_declarator':([117,328,],[200,420,]),'enumerator':([65,110,111,187,],[108,108,108,323,]),'struct_or_union_specifier':([0,19,27,36,70,78,80,85,94,115,116,120,121,123,131,145,161,201,202,210,236,243,293,309,312,319,334,360,362,405,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'designation':([159,400,458,501,],[296,296,296,296,]),'typeid_noparen_declarator':([130,],[232,]),'declaration':([0,27,36,80,94,123,210,334,],[2,2,75,125,75,228,228,423,]),'binary_expression':([105,123,140,144,161,184,194,207,210,221,229,235,246,247,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,283,293,298,303,309,312,315,318,329,334,335,340,341,342,347,348,361,372,373,423,430,445,452,454,463,467,468,469,471,472,478,479,490,503,506,507,514,520,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,376,377,378,379,380,381,382,383,384,385,386,387,148,389,390,391,392,393,394,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'assignment_expression_opt':([140,235,259,361,445,],[248,353,374,439,480,]),'id_init_declarator':([19,78,],[59,59,]),'pointer':([0,19,22,27,42,76,78,81,91,106,117,130,147,236,306,328,405,],[5,5,5,5,88,88,5,126,88,88,88,233,88,355,407,88,407,]),'type_specifier':([0,19,27,36,70,78,80,85,94,115,116,120,121,123,131,145,161,201,202,210,236,243,293,309,312,319,334,360,362,405,],[12,60,12,12,114,60,12,12,12,114,192,114,114,12,60,12,114,114,114,12,12,12,114,114,114,114,12,12,12,12,]),'unary_expression':([105,123,140,144,153,156,161,171,173,184,194,207,210,221,229,235,246,247,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,283,293,298,303,309,312,315,318,329,334,335,340,341,342,347,348,361,372,373,404,423,430,445,452,454,460,463,467,468,469,471,472,478,479,490,503,506,507,514,520,],[150,150,150,150,292,294,150,308,311,308,308,150,150,308,150,150,150,150,150,308,308,308,308,308,308,308,308,308,308,308,308,150,308,308,308,308,308,308,150,150,150,308,150,150,150,150,308,150,150,150,150,150,150,150,150,150,150,308,150,150,150,308,150,308,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'enum_specifier':([0,19,27,36,70,78,80,85,94,115,116,120,121,123,131,145,161,201,202,210,236,243,293,309,312,319,334,360,362,405,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'jump_statement':([123,210,229,335,340,430,468,469,471,507,514,520,],[219,219,219,219,219,219,219,219,219,219,219,219,]),'translation_unit_or_empty':([0,],[11,]),'identifier_list':([85,145,362,],[129,129,129,]),'type_qualifier':([0,13,27,36,38,42,43,50,70,76,80,84,85,86,94,115,116,117,120,121,123,130,138,139,145,146,161,201,202,210,236,243,257,258,293,306,309,312,319,334,360,362,363,405,443,444,],[13,13,13,13,83,90,13,13,83,90,13,127,13,83,13,83,127,195,83,83,13,90,127,83,13,83,83,83,83,13,13,13,127,83,83,195,83,83,83,13,13,13,83,13,127,83,]),'abstract_declarator':([130,236,306,405,],[234,359,234,359,]),'compound_statement':([77,123,143,210,229,335,340,430,468,469,471,507,514,520,],[124,222,253,222,222,222,222,222,222,222,222,222,222,222,]),'id_init_declarator_list':([19,78,],[64,64,]),'struct_declaration_list':([70,120,121,],[115,201,202,]),'unary_operator':([105,123,140,144,153,156,161,171,173,184,194,207,210,221,229,235,246,247,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,283,293,298,303,309,312,315,318,329,334,335,340,341,342,347,348,361,372,373,404,423,430,445,452,454,460,463,467,468,469,471,472,478,479,490,503,506,507,514,520,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'declaration_list_opt':([36,94,],[77,143,]),'parameter_type_list':([85,145,236,360,362,405,],[134,255,357,357,441,357,]),'declaration_specifiers_no_type':([0,13,27,36,43,50,80,85,94,123,145,210,236,243,334,360,362,405,],[19,57,19,78,57,57,78,131,78,78,131,78,131,131,78,131,131,131,]),'parameter_list':([85,145,236,360,362,405,],[132,132,132,132,132,132,]),'struct_or_union':([0,19,27,36,70,78,80,85,94,115,116,120,121,123,131,145,161,201,202,210,236,243,293,309,312,319,334,360,362,405,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'specifier_qualifier_list':([70,115,120,121,161,201,202,293,309,312,319,],[117,117,117,117,306,117,117,306,306,306,306,]),'assignment_expression':([105,123,140,144,161,207,210,229,235,246,247,259,273,283,293,298,309,312,315,318,334,335,340,341,342,347,348,361,372,373,423,430,445,454,463,467,468,469,471,472,478,479,490,503,506,507,514,520,],[169,225,251,169,225,225,225,225,251,366,367,251,225,395,225,169,225,225,415,225,225,225,225,225,225,431,225,251,448,449,225,225,251,169,487,225,225,225,225,225,496,497,225,225,225,225,225,225,]),'pppragma_directive':([0,27,70,115,120,121,123,201,202,210,229,335,340,430,468,469,471,507,514,520,],[52,52,118,118,118,118,217,118,118,217,217,217,217,217,217,217,217,217,217,217,]),'struct_declarator_list_opt':([117,],[193,]),'initializer':([105,144,298,454,],[165,254,397,485,]),'designator_list':([159,400,458,501,],[299,299,299,299,]),'direct_typeid_declarator':([42,76,88,91,106,117,147,328,],[99,99,141,99,99,99,99,99,]),'type_qualifier_list_opt':([38,86,139,146,258,363,444,],[81,140,247,259,373,445,479,]),'direct_id_declarator':([0,5,19,22,27,42,76,78,88,91,106,117,130,147,233,236,328,355,],[41,55,41,41,41,41,41,41,55,41,41,41,41,41,55,41,41,55,]),'declaration_specifiers':([0,27,36,80,85,94,123,145,210,236,243,334,360,362,405,],[42,42,76,76,130,76,76,130,76,130,130,76,130,130,130,]),'storage_class_specifier':([0,13,27,36,42,43,50,76,80,85,94,123,130,145,210,236,243,334,360,362,405,],[43,43,43,43,95,43,43,95,43,43,43,43,95,43,43,43,43,43,43,43,43,]),'decl_body':([0,27,36,80,94,123,210,334,],[44,44,44,44,44,44,44,44,]),'expression':([123,161,207,210,229,273,293,309,312,318,334,335,340,341,342,348,423,430,467,468,469,471,472,490,503,506,507,514,520,],[226,307,333,226,226,388,307,307,307,418,226,226,226,427,428,432,226,226,226,226,226,226,495,226,512,226,226,226,226,]),'designator':([159,299,400,458,501,],[304,399,304,304,304,]),'type_qualifier_list':([38,70,86,115,120,121,139,146,161,201,202,258,293,309,312,319,363,444,],[84,116,138,116,116,116,84,257,116,116,116,84,116,116,116,116,443,84,]),'identifier_list_opt':([85,145,362,],[135,256,442,]),'direct_typeid_noparen_declarator':([130,233,],[242,351,]),'identifier':([85,105,123,140,144,145,153,156,161,171,173,184,194,207,210,221,229,231,235,246,247,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,283,293,298,301,303,309,312,315,318,329,334,335,340,341,342,347,348,361,362,372,373,404,423,430,445,452,454,460,463,465,467,468,469,471,472,478,479,490,503,504,506,507,514,520,],[136,155,155,155,155,136,155,155,155,155,155,155,155,155,155,155,155,350,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,401,155,155,155,155,155,155,155,155,155,155,155,155,155,155,136,155,155,155,155,155,155,155,155,155,155,488,155,155,155,155,155,155,155,155,155,513,155,155,155,155,]),'brace_close':([109,115,188,189,201,202,211,302,400,486,501,],[186,190,324,325,330,331,338,402,456,500,511,]),'initializer_list':([159,458,],[300,486,]),'struct_declaration':([70,115,120,121,201,202,],[119,191,119,119,191,191,]),'unified_wstring_literal':([105,123,140,144,153,156,161,171,173,184,194,207,210,221,229,235,246,247,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,283,293,298,303,309,312,315,318,329,334,335,340,341,342,347,348,361,372,373,404,423,430,445,452,454,460,463,467,468,469,471,472,478,479,490,503,506,507,514,520,],[179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,]),'selection_statement':([123,210,229,335,340,430,468,469,471,507,514,520,],[230,230,230,230,230,230,230,230,230,230,230,230,]),'parameter_declaration':([85,145,236,243,360,362,405,],[137,137,137,365,137,137,137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
