
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'UNSIGNED':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,68,69,71,72,73,76,85,86,88,89,90,91,95,96,98,99,100,102,103,104,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,139,142,160,189,191,193,194,197,198,200,202,203,205,209,212,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[6,-62,-110,6,-66,-109,-304,6,6,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,6,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,6,6,6,-82,-88,6,-90,-89,-87,-61,6,-130,-131,-302,-161,-53,-147,-148,-69,6,-86,-84,-83,6,-70,6,-30,6,6,-140,-137,-141,6,-128,6,6,-162,6,6,6,-78,6,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-129,-126,-127,-132,-138,-303,6,6,-149,6,6,-35,-36,6,6,6,6,6,-209,-213,6,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,6,6,6,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'IF':([38,55,91,100,109,189,191,193,194,197,198,200,202,203,205,208,209,232,322,323,324,325,328,333,337,339,421,422,426,428,429,466,469,470,471,490,493,494,505,514,516,517,519,520,521,],[-68,-81,-302,-69,184,-78,184,-77,-73,-74,-75,-72,-193,-195,-194,184,-76,-303,-209,184,-213,184,-196,-212,-210,-197,-200,-198,184,-211,-208,184,184,-199,184,-201,-203,-204,184,-202,184,-205,184,-207,-206,]),'STATIC':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,66,68,69,71,72,73,76,85,86,89,90,91,95,96,98,99,100,101,102,108,109,110,116,117,118,128,135,139,189,191,193,194,197,198,200,202,203,205,209,212,217,230,232,235,253,258,259,260,322,324,326,328,333,337,339,350,351,354,355,358,359,361,371,372,416,421,422,428,429,438,439,447,470,490,493,494,514,517,520,521,],[14,-62,-110,-66,-109,14,14,14,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,14,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,14,-117,14,-81,-92,14,14,-82,-88,14,-90,-89,-87,-61,-130,-131,-302,-161,-53,-147,-148,-69,136,14,-83,14,-70,216,14,-30,-162,240,14,-78,14,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,341,-132,-303,-149,14,14,-35,-36,-209,-213,14,-196,-212,-210,-197,-133,-134,-150,-151,-31,-34,14,448,14,14,-200,-198,-211,-208,-33,-32,478,-199,-201,-203,-204,-202,-205,-207,-206,]),'TYPEID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,68,69,71,72,73,76,79,80,85,86,88,89,90,91,92,93,94,95,96,98,99,100,102,103,104,106,108,109,110,112,117,118,119,120,121,122,123,124,125,126,127,128,129,139,142,160,189,191,193,194,197,198,200,202,203,205,209,212,221,228,229,230,231,232,233,234,235,250,253,258,259,260,262,266,286,287,290,305,322,324,326,328,333,337,339,347,349,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[51,-62,-110,51,-66,-109,-304,51,78,-108,-114,-29,-112,-95,-65,-136,-106,-100,-115,-96,-91,51,-99,-63,-113,90,-67,-111,-304,-102,99,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-135,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,51,78,51,-82,-88,51,-90,-89,78,78,-87,-61,51,-130,-131,-302,-28,-27,-159,-161,-53,-147,-148,-69,51,-86,-84,78,-83,51,-70,78,51,-30,51,78,-140,-137,-141,51,-128,51,51,-162,-160,252,51,51,-78,51,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-129,-126,-127,-132,-138,-303,51,51,-149,252,51,51,-35,-36,376,382,51,51,51,51,-209,-213,51,-196,-212,-210,-197,78,-139,-133,-134,-150,-151,-31,-34,51,51,51,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'DOUBLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,68,69,71,72,73,76,85,86,88,89,90,91,95,96,98,99,100,102,103,104,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,139,142,160,189,191,193,194,197,198,200,202,203,205,209,212,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[17,-62,-110,17,-66,-109,-304,17,17,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,17,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,17,17,17,-82,-88,17,-90,-89,-87,-61,17,-130,-131,-302,-161,-53,-147,-148,-69,17,-86,-84,-83,17,-70,17,-30,17,17,-140,-137,-141,17,-128,17,17,-162,17,17,17,-78,17,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-129,-126,-127,-132,-138,-303,17,17,-149,17,17,-35,-36,17,17,17,17,17,-209,-213,17,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,17,17,17,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'ARROW':([140,148,153,155,156,159,162,163,164,166,168,169,173,174,178,180,182,188,232,261,263,292,307,376,377,379,382,383,417,452,453,501,503,513,],[-289,262,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-295,-280,-266,-298,-300,-289,-303,-274,-275,-301,-299,-273,-272,-269,-271,-270,-282,-267,-268,-283,-276,-277,]),'NE':([140,148,149,153,155,156,159,162,163,164,166,168,169,171,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,417,452,453,464,465,501,503,513,],[-289,-254,273,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-233,-295,-280,-252,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,273,273,-237,-234,-242,273,-246,273,-245,-239,-238,-241,-240,-243,-235,273,-244,-236,-282,-267,-268,-253,-259,-283,-276,-277,]),'DEFAULT':([38,55,91,100,109,189,191,193,194,197,198,200,202,203,205,208,209,232,322,323,324,325,328,333,337,339,421,422,426,428,429,466,469,470,471,490,493,494,505,514,516,517,519,520,521,],[-68,-81,-302,-69,186,-78,186,-77,-73,-74,-75,-72,-193,-195,-194,186,-76,-303,-209,186,-213,186,-196,-212,-210,-197,-200,-198,186,-211,-208,186,186,-199,186,-201,-203,-204,186,-202,186,-205,186,-207,-206,]),'RPAREN':([3,6,10,11,12,13,14,17,18,19,20,21,24,26,30,31,33,35,37,39,40,41,42,43,44,48,49,50,51,53,59,71,73,76,78,82,85,87,89,90,92,93,94,95,96,98,99,102,113,114,117,118,125,128,129,138,139,140,141,143,144,145,146,147,148,149,153,155,156,159,162,163,164,166,167,168,169,171,173,174,177,178,180,182,206,210,214,219,220,221,228,229,230,232,235,246,247,248,249,250,252,253,254,255,256,259,260,261,263,265,288,289,291,292,302,303,304,306,307,320,327,344,345,350,351,354,355,358,359,361,362,363,366,367,368,369,370,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,404,405,414,415,416,417,418,419,420,425,427,430,434,435,438,439,442,443,444,445,446,450,451,452,453,464,465,473,474,475,476,477,482,483,484,485,486,487,492,495,498,499,501,503,506,507,509,510,512,513,515,518,],[-110,-109,-108,-114,-29,-112,-95,-106,-100,-115,-96,-91,-99,-113,-111,-304,-102,-101,-93,-52,-116,-94,-97,-104,-103,-98,-105,-107,-216,-117,-92,-88,-90,-89,-37,-54,-87,118,-130,-131,-28,-27,-159,-161,-53,-147,-148,-304,214,-55,-304,-30,-128,-162,-160,-17,-304,-289,-165,-18,-163,-170,259,260,-254,-231,-296,-281,-291,-279,-278,-294,-290,-292,-217,-293,-297,-233,-295,-280,-252,-266,-298,-300,-14,-214,-38,344,345,-129,-126,-127,-132,-303,-149,-185,-167,-1,-2,-183,-45,-304,-169,-56,-168,-35,-36,-274,-275,379,-257,-252,-255,-301,413,-304,417,-258,-299,-256,-13,-43,-44,-133,-134,-150,-151,-31,-34,-304,-184,-57,-23,445,446,-183,-24,-304,-171,-164,-166,-273,-272,-269,453,-287,-271,-270,-250,-249,-237,-234,-242,-251,-246,-247,-245,-239,-238,-241,-240,-243,-235,-248,-244,-236,457,458,-182,-183,-304,-282,465,-218,466,469,471,-215,-39,-42,-33,-32,477,-188,-190,-186,-192,482,483,-267,-268,-253,-259,-40,-41,-187,-189,-191,-50,-51,-288,-232,-284,501,-304,508,-46,-49,-283,-276,-304,516,-48,-47,-285,-277,519,-286,]),'ID':([0,2,3,4,5,6,7,9,10,11,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,71,73,76,79,80,85,86,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,109,110,112,115,116,117,120,125,128,129,133,134,135,136,137,139,151,152,154,157,158,160,165,170,172,175,176,181,189,191,193,194,195,197,198,200,201,202,203,204,205,208,209,212,216,217,218,221,224,228,229,230,232,235,236,237,240,241,244,250,251,253,257,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,295,297,299,300,301,305,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,347,348,350,351,354,355,360,365,369,371,372,407,410,413,421,422,424,426,428,429,441,447,448,449,454,455,456,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,502,504,505,506,514,516,517,519,520,521,],[12,-62,-110,12,-66,-109,-304,12,-108,-114,-112,-95,-65,-136,-106,-100,-115,-96,-91,12,-99,-63,-113,12,89,-67,-111,-304,12,-102,98,-101,-60,-93,-68,-116,-94,-97,-104,-103,-135,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,12,12,-88,-90,-89,12,12,-87,-61,-130,-131,-302,-28,-27,-159,-161,132,-147,-148,-69,-304,140,-86,-84,140,12,188,-70,12,140,-304,140,12,-128,-162,-160,132,132,-28,-304,140,12,140,140,-260,-304,-262,140,-261,-265,140,-264,-263,140,-78,188,-77,-73,140,-74,-75,-72,140,-193,-195,335,-194,188,-76,-71,-304,-28,140,-129,140,-126,-127,-132,-303,-149,132,140,140,140,-261,12,140,12,140,377,140,140,383,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,-12,140,140,-11,140,140,-228,-219,140,-227,-229,-221,-226,-223,-225,-220,-222,-224,140,-209,188,-213,188,140,-196,140,140,-212,140,-210,-197,140,140,-261,12,140,-133,-134,-150,-151,140,-261,12,-304,140,-177,-304,140,-200,-198,140,188,-211,-208,-261,-28,-304,140,140,140,140,140,140,-11,-304,188,140,188,-199,188,140,140,140,-261,-201,140,-203,-204,140,140,-304,188,140,-202,188,-205,188,-207,-206,]),'ELLIPSIS':([258,],[374,]),'LE':([140,148,149,153,155,156,159,162,163,164,166,168,169,171,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,417,452,453,464,465,501,503,513,],[-289,-254,271,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-233,-295,-280,-252,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,271,271,-237,-234,-242,271,271,271,271,-239,-238,-241,-240,-243,-235,271,-244,-236,-282,-267,-268,-253,-259,-283,-276,-277,]),'LOR':([140,148,149,153,155,156,159,162,163,164,166,168,169,171,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,417,452,453,464,465,501,503,513,],[-289,-254,272,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-233,-295,-280,-252,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,-250,-249,-237,-234,-242,-251,-246,-247,-245,-239,-238,-241,-240,-243,-235,-248,-244,-236,-282,-267,-268,-253,-259,-283,-276,-277,]),'OFFSETOF':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,151,152,154,157,158,160,165,170,172,175,176,181,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,295,297,299,300,305,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,407,410,413,421,422,424,426,428,429,441,447,448,449,454,455,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,504,505,506,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,150,150,150,-304,-162,-28,-304,150,150,150,-260,-304,-262,150,-261,-265,150,-264,-263,150,-78,150,-77,-73,150,-74,-75,-72,150,-193,-195,-194,150,-76,-304,-28,150,150,-303,150,150,150,-261,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,-12,150,150,-11,150,-228,-219,150,-227,-229,-221,-226,-223,-225,-220,-222,-224,150,-209,150,-213,150,150,-196,150,150,-212,150,-210,-197,150,150,-261,150,150,-261,-304,-177,-304,150,-200,-198,150,150,-211,-208,-261,-28,-304,150,150,150,150,150,-11,-304,150,150,150,-199,150,150,150,150,-261,-201,150,-203,-204,150,-304,150,150,-202,150,-205,150,-207,-206,]),'CHAR_CONST':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,151,152,154,157,158,160,165,170,172,175,176,181,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,295,297,299,300,305,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,407,410,413,421,422,424,426,428,429,441,447,448,449,454,455,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,504,505,506,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,153,153,153,-304,-162,-28,-304,153,153,153,-260,-304,-262,153,-261,-265,153,-264,-263,153,-78,153,-77,-73,153,-74,-75,-72,153,-193,-195,-194,153,-76,-304,-28,153,153,-303,153,153,153,-261,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,-12,153,153,-11,153,-228,-219,153,-227,-229,-221,-226,-223,-225,-220,-222,-224,153,-209,153,-213,153,153,-196,153,153,-212,153,-210,-197,153,153,-261,153,153,-261,-304,-177,-304,153,-200,-198,153,153,-211,-208,-261,-28,-304,153,153,153,153,153,-11,-304,153,153,153,-199,153,153,153,153,-261,-201,153,-203,-204,153,-304,153,153,-202,153,-205,153,-207,-206,]),'HEX_FLOAT_CONST':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,151,152,154,157,158,160,165,170,172,175,176,181,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,295,297,299,300,305,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,407,410,413,421,422,424,426,428,429,441,447,448,449,454,455,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,504,505,506,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,173,173,173,-304,-162,-28,-304,173,173,173,-260,-304,-262,173,-261,-265,173,-264,-263,173,-78,173,-77,-73,173,-74,-75,-72,173,-193,-195,-194,173,-76,-304,-28,173,173,-303,173,173,173,-261,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-12,173,173,-11,173,-228,-219,173,-227,-229,-221,-226,-223,-225,-220,-222,-224,173,-209,173,-213,173,173,-196,173,173,-212,173,-210,-197,173,173,-261,173,173,-261,-304,-177,-304,173,-200,-198,173,173,-211,-208,-261,-28,-304,173,173,173,173,173,-11,-304,173,173,173,-199,173,173,173,173,-261,-201,173,-203,-204,173,-304,173,173,-202,173,-205,173,-207,-206,]),'RSHIFTEQUAL':([140,148,153,155,156,159,162,163,164,166,168,169,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,417,452,453,464,465,501,503,513,],[-289,-254,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-295,-280,311,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,-282,-267,-268,-253,-259,-283,-276,-277,]),'RSHIFT':([140,148,149,153,155,156,159,162,163,164,166,168,169,171,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,417,452,453,464,465,501,503,513,],[-289,-254,277,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-233,-295,-280,-252,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,277,277,-237,-234,277,277,277,277,277,-239,-238,277,-240,277,-235,277,277,-236,-282,-267,-268,-253,-259,-283,-276,-277,]),'FOR':([38,55,91,100,109,189,191,193,194,197,198,200,202,203,205,208,209,232,322,323,324,325,328,333,337,339,421,422,426,428,429,466,469,470,471,490,493,494,505,514,516,517,519,520,521,],[-68,-81,-302,-69,190,-78,190,-77,-73,-74,-75,-72,-193,-195,-194,190,-76,-303,-209,190,-213,190,-196,-212,-210,-197,-200,-198,190,-211,-208,190,190,-199,190,-201,-203,-204,190,-202,190,-205,190,-207,-206,]),'LBRACKET':([3,6,10,11,12,13,14,17,18,19,20,21,24,26,30,31,33,35,37,39,40,41,42,43,44,48,49,50,51,53,59,71,73,76,78,82,85,89,90,91,92,93,94,95,96,98,99,114,118,125,128,129,139,140,148,153,155,156,157,159,162,163,164,166,168,169,173,174,178,180,182,188,214,221,228,229,230,232,235,246,250,252,253,255,259,260,261,263,292,293,294,303,307,344,345,350,351,354,355,358,359,362,363,369,376,377,379,382,383,406,410,412,415,416,417,434,435,438,439,443,444,445,446,452,453,462,463,473,474,475,476,477,482,483,486,487,498,499,501,503,504,509,510,512,513,518,],[-110,-109,-108,-114,-29,-112,-95,-106,-100,-115,-96,-91,-99,-113,-111,-304,-102,-101,-93,101,-116,-94,-97,-104,-103,-98,-105,-107,-216,-117,-92,-88,-90,-89,-37,116,-87,-130,-131,-302,-28,-27,-159,-161,101,-147,-148,116,-30,-128,-162,-160,251,-289,264,-296,-281,-291,299,-279,-278,-294,-290,-292,-293,-297,-295,-280,-266,-298,-300,-289,-38,-129,-126,-127,-132,-303,-149,360,251,-45,251,371,-35,-36,-274,-275,-301,-178,299,251,-299,-43,-44,-133,-134,-150,-151,-31,-34,360,371,251,-273,-272,-269,-271,-270,-179,299,-181,251,251,-282,-39,-42,-33,-32,-188,-190,-186,-192,-267,-268,-180,299,-40,-41,-187,-189,-191,-50,-51,-284,500,-46,-49,-283,-276,299,-48,-47,-285,-277,-286,]),'PLUS':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,140,148,149,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,188,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,261,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,295,297,299,300,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,407,410,413,417,421,422,424,426,428,429,441,447,448,449,452,453,454,455,457,460,461,463,464,465,466,467,469,470,471,472,478,479,481,490,492,493,494,500,501,503,504,505,506,513,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,158,158,158,-304,-162,-28,-304,158,-289,-254,269,158,158,-296,-260,-281,-291,-304,-262,-279,158,-278,-294,-290,-261,-292,-293,-297,-265,-233,158,-295,-280,-264,-263,-252,-266,-298,158,-300,-289,-78,158,-77,-73,158,-74,-75,-72,158,-193,-195,-194,158,-76,-304,-28,158,158,-303,158,158,158,-261,158,-274,-275,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,-257,-252,158,-255,-301,-12,158,158,-11,158,-258,-299,-228,-219,158,-227,-229,-221,-226,-223,-225,-220,-222,-224,-256,158,-209,158,-213,158,158,-196,158,158,-212,158,-210,-197,158,158,-261,158,158,-261,-304,-273,-272,-269,-271,-270,269,269,-237,-234,269,269,269,269,269,269,-238,269,269,269,-235,269,269,-236,-177,-304,158,-282,-200,-198,158,158,-211,-208,-261,-28,-304,158,-267,-268,158,158,158,158,-11,-304,-253,-259,158,158,158,-199,158,158,158,158,-261,-201,158,-203,-204,158,-283,-276,-304,158,158,-277,-202,158,-205,158,-207,-206,]),'COMMA':([3,6,10,11,12,13,14,17,18,19,20,21,24,26,30,31,33,35,37,39,40,41,42,43,44,48,49,50,51,53,57,59,60,61,71,72,73,76,77,78,81,82,83,84,85,89,90,92,93,94,95,96,98,99,107,114,118,125,128,129,130,131,132,139,140,141,143,144,145,148,149,153,155,156,159,161,162,163,164,166,167,168,169,171,173,174,177,178,179,180,182,183,188,206,210,213,214,215,221,223,225,226,228,229,230,232,235,236,238,239,246,247,248,249,250,252,254,255,256,259,260,261,263,288,289,291,292,298,303,304,306,307,320,331,334,344,345,346,350,351,352,353,354,355,358,359,362,363,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,408,409,414,415,417,419,420,425,427,430,434,435,436,437,438,439,443,444,445,446,452,453,459,464,465,473,474,475,476,477,482,483,484,485,488,489,495,498,499,501,503,509,510,511,513,],[-110,-109,-108,-114,-29,-112,-95,-106,-100,-115,-96,-91,-99,-113,-111,-304,-102,-101,-93,-52,-116,-94,-97,-104,-103,-98,-105,-107,-216,-117,-124,-92,-122,106,-88,-157,-90,-89,112,-37,-120,-54,-158,-118,-87,-130,-131,-28,-27,-159,-161,-53,-147,-148,-157,-55,-30,-128,-162,-160,236,-152,-155,-304,-289,-165,257,258,-170,-254,-231,-296,-281,-291,-279,-125,-278,-294,-290,-292,-217,-293,-297,-233,-295,-280,-252,-266,-172,-298,-300,-123,-289,336,-214,-119,-38,-121,-129,-142,347,-144,-126,-127,-132,-303,-149,-153,236,236,-185,-167,-1,-2,-183,-45,-169,-56,-168,-35,-36,-274,-275,-257,-252,-255,-301,410,-304,336,-258,-299,-256,-230,336,-43,-44,-146,-133,-134,-154,-156,-150,-151,-31,-34,-184,-57,-171,-166,-273,-272,336,-269,454,-287,-271,-270,-250,-249,-237,-234,-242,-251,-246,336,-247,-245,-239,-238,-241,-240,-243,-235,-248,-244,-236,456,-173,-175,-182,-183,-282,-218,336,336,336,-215,-39,-42,-143,-145,-33,-32,-188,-190,-186,-192,-267,-268,-174,-253,-259,-40,-41,-187,-189,-191,-50,-51,-288,-232,-176,504,336,-46,-49,-283,-276,-48,-47,336,-277,]),'VOID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,68,69,71,72,73,76,85,86,88,89,90,91,95,96,98,99,100,102,103,104,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,139,142,160,189,191,193,194,197,198,200,202,203,205,209,212,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[24,-62,-110,24,-66,-109,-304,24,24,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,24,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,24,24,24,-82,-88,24,-90,-89,-87,-61,24,-130,-131,-302,-161,-53,-147,-148,-69,24,-86,-84,-83,24,-70,24,-30,24,24,-140,-137,-141,24,-128,24,24,-162,24,24,24,-78,24,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-129,-126,-127,-132,-138,-303,24,24,-149,24,24,-35,-36,24,24,24,24,24,-209,-213,24,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,24,24,24,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'DIVIDE':([140,148,149,153,155,156,159,162,163,164,166,168,169,171,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,417,452,453,464,465,501,503,513,],[-289,-254,282,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-233,-295,-280,-252,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,282,282,282,-234,282,282,282,282,282,282,282,282,282,282,-235,282,282,-236,-282,-267,-268,-253,-259,-283,-276,-277,]),'OREQUAL':([140,148,153,155,156,159,162,163,164,166,168,169,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,417,452,453,464,465,501,503,513,],[-289,-254,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-295,-280,312,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,-282,-267,-268,-253,-259,-283,-276,-277,]),'MOD':([140,148,149,153,155,156,159,162,163,164,166,168,169,171,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,417,452,453,464,465,501,503,513,],[-289,-254,285,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-233,-295,-280,-252,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,285,285,285,-234,285,285,285,285,285,285,285,285,285,285,-235,285,285,-236,-282,-267,-268,-253,-259,-283,-276,-277,]),'SWITCH':([38,55,91,100,109,189,191,193,194,197,198,200,202,203,205,208,209,232,322,323,324,325,328,333,337,339,421,422,426,428,429,466,469,470,471,490,493,494,505,514,516,517,519,520,521,],[-68,-81,-302,-69,192,-78,192,-77,-73,-74,-75,-72,-193,-195,-194,192,-76,-303,-209,192,-213,192,-196,-212,-210,-197,-200,-198,192,-211,-208,192,192,-199,192,-201,-203,-204,192,-202,192,-205,192,-207,-206,]),'BREAK':([38,55,91,100,109,189,191,193,194,197,198,200,202,203,205,208,209,232,322,323,324,325,328,333,337,339,421,422,426,428,429,466,469,470,471,490,493,494,505,514,516,517,519,520,521,],[-68,-81,-302,-69,185,-78,185,-77,-73,-74,-75,-72,-193,-195,-194,185,-76,-303,-209,185,-213,185,-196,-212,-210,-197,-200,-198,185,-211,-208,185,185,-199,185,-201,-203,-204,185,-202,185,-205,185,-207,-206,]),'LBRACE':([8,12,16,28,34,38,39,46,55,67,68,69,70,72,89,90,91,96,98,99,100,105,108,109,111,115,118,157,189,191,193,194,197,198,200,202,203,205,208,209,232,259,260,295,297,300,322,323,324,325,328,333,337,339,358,359,407,410,413,421,422,426,428,429,438,439,457,458,460,461,463,465,466,469,470,471,490,493,494,504,505,514,516,517,519,520,521,],[-304,-29,-136,91,91,-68,-52,-135,-81,-7,-8,-82,91,-304,91,91,-302,-53,91,91,-69,91,-83,91,91,91,-30,-304,-78,91,-77,-73,-74,-75,-72,-193,-195,-194,91,-76,-303,-35,-36,-12,91,-11,-209,91,-213,91,-196,-212,-210,-197,-31,-34,-177,-304,91,-200,-198,91,-211,-208,-33,-32,91,91,91,-11,-304,91,91,91,-199,91,-201,-203,-204,-304,91,-202,91,-205,91,-207,-206,]),'TIMES':([0,2,3,4,5,6,7,9,10,11,13,14,15,17,18,19,20,21,22,24,25,26,27,29,30,31,33,35,36,37,38,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,71,73,76,79,85,86,89,90,91,92,93,94,95,98,99,100,101,103,104,105,106,109,110,112,115,116,120,125,128,135,136,137,139,140,148,149,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,188,189,191,193,194,195,197,198,200,201,202,203,205,208,209,212,216,217,218,221,224,228,229,230,232,235,237,240,241,244,251,253,261,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,295,297,299,300,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,347,348,350,351,354,355,360,365,371,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,407,410,413,416,417,421,422,424,426,428,429,441,447,448,449,452,453,454,455,457,460,461,463,464,465,466,467,469,470,471,472,478,479,481,490,492,493,494,500,501,503,504,505,506,513,514,516,517,519,520,521,],[31,-62,-110,31,-66,-109,-304,31,-108,-114,-112,-95,-65,-106,-100,-115,-96,-91,31,-99,-63,-113,31,-67,-111,-304,-102,-101,-60,-93,-68,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,31,31,-88,-90,-89,31,-87,-61,-130,-131,-302,-28,-27,31,-161,-147,-148,-69,-304,-86,-84,165,31,165,-70,31,165,-304,31,-128,-162,-28,-304,244,31,-289,-254,270,165,165,-296,-260,-281,-291,-304,-262,-279,165,-278,-294,-290,-261,-292,-293,-297,-265,-233,165,-295,-280,-264,-263,-252,-266,-298,165,-300,-289,-78,165,-77,-73,165,-74,-75,-72,165,-193,-195,-194,165,-76,-71,-304,-28,343,-129,165,-126,-127,-132,-303,-149,165,165,165,-261,365,31,-274,-275,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-257,-252,165,-255,-301,-12,165,165,-11,31,165,-258,-299,-228,-219,165,-227,-229,-221,-226,-223,-225,-220,-222,-224,-256,165,-209,165,-213,165,165,-196,165,165,-212,165,-210,-197,165,165,-261,31,165,-133,-134,-150,-151,441,-261,-304,-273,-272,-269,-271,-270,270,270,270,-234,270,270,270,270,270,270,270,270,270,270,-235,270,270,-236,-177,-304,165,31,-282,-200,-198,165,165,-211,-208,-261,-28,-304,481,-267,-268,165,165,165,165,-11,-304,-253,-259,165,165,165,-199,165,165,165,165,-261,-201,165,-203,-204,165,-283,-276,-304,165,165,-277,-202,165,-205,165,-207,-206,]),'INT_CONST_BIN':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,151,152,154,157,158,160,165,170,172,175,176,181,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,295,297,299,300,305,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,407,410,413,421,422,424,426,428,429,441,447,448,449,454,455,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,504,505,506,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,168,168,168,-304,-162,-28,-304,168,168,168,-260,-304,-262,168,-261,-265,168,-264,-263,168,-78,168,-77,-73,168,-74,-75,-72,168,-193,-195,-194,168,-76,-304,-28,168,168,-303,168,168,168,-261,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,-12,168,168,-11,168,-228,-219,168,-227,-229,-221,-226,-223,-225,-220,-222,-224,168,-209,168,-213,168,168,-196,168,168,-212,168,-210,-197,168,168,-261,168,168,-261,-304,-177,-304,168,-200,-198,168,168,-211,-208,-261,-28,-304,168,168,168,168,168,-11,-304,168,168,168,-199,168,168,168,168,-261,-201,168,-203,-204,168,-304,168,168,-202,168,-205,168,-207,-206,]),'WCHAR_CONST':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,151,152,154,157,158,160,165,170,172,175,176,181,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,295,297,299,300,305,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,407,410,413,421,422,424,426,428,429,441,447,448,449,454,455,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,504,505,506,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,169,169,169,-304,-162,-28,-304,169,169,169,-260,-304,-262,169,-261,-265,169,-264,-263,169,-78,169,-77,-73,169,-74,-75,-72,169,-193,-195,-194,169,-76,-304,-28,169,169,-303,169,169,169,-261,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,-12,169,169,-11,169,-228,-219,169,-227,-229,-221,-226,-223,-225,-220,-222,-224,169,-209,169,-213,169,169,-196,169,169,-212,169,-210,-197,169,169,-261,169,169,-261,-304,-177,-304,169,-200,-198,169,169,-211,-208,-261,-28,-304,169,169,169,169,169,-11,-304,169,169,169,-199,169,169,169,169,-261,-201,169,-203,-204,169,-304,169,169,-202,169,-205,169,-207,-206,]),'ENUM':([0,2,4,5,7,8,12,14,15,19,20,22,25,29,36,37,38,39,40,41,42,47,48,52,53,54,55,62,63,64,65,68,69,72,86,88,91,95,96,100,102,103,104,108,109,110,117,118,119,121,122,123,124,126,127,128,142,160,189,191,193,194,197,198,200,202,203,205,209,212,231,232,233,234,253,258,259,260,286,287,290,305,322,324,326,328,333,337,339,349,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[34,-62,34,-66,-304,34,-29,-95,-65,-115,-96,34,-63,-67,-60,-93,-68,-52,-116,-94,-97,-64,-98,-304,-117,-304,-81,-10,-85,-9,34,34,-82,34,-61,34,-302,-161,-53,-69,34,-86,-84,-83,34,-70,34,-30,34,-140,-137,-141,34,34,34,-162,34,34,-78,34,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-138,-303,34,34,34,34,-35,-36,34,34,34,34,-209,-213,34,-196,-212,-210,-197,-139,-31,-34,34,34,34,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'CHAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,68,69,71,72,73,76,85,86,88,89,90,91,95,96,98,99,100,102,103,104,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,139,142,160,189,191,193,194,197,198,200,202,203,205,209,212,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[35,-62,-110,35,-66,-109,-304,35,35,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,35,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,35,35,35,-82,-88,35,-90,-89,-87,-61,35,-130,-131,-302,-161,-53,-147,-148,-69,35,-86,-84,-83,35,-70,35,-30,35,35,-140,-137,-141,35,-128,35,35,-162,35,35,35,-78,35,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-129,-126,-127,-132,-138,-303,35,35,-149,35,35,-35,-36,35,35,35,35,35,-209,-213,35,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,35,35,35,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'CASE':([38,55,91,100,109,189,191,193,194,197,198,200,202,203,205,208,209,232,322,323,324,325,328,333,337,339,421,422,426,428,429,466,469,470,471,490,493,494,505,514,516,517,519,520,521,],[-68,-81,-302,-69,195,-78,195,-77,-73,-74,-75,-72,-193,-195,-194,195,-76,-303,-209,195,-213,195,-196,-212,-210,-197,-200,-198,195,-211,-208,195,195,-199,195,-201,-203,-204,195,-202,195,-205,195,-207,-206,]),'RBRACKET':([19,40,53,93,95,101,116,128,135,137,140,148,149,153,155,156,159,162,163,164,166,167,168,169,171,173,174,177,178,180,182,210,217,218,232,242,243,244,245,251,261,263,288,289,291,292,306,307,320,331,342,343,356,357,360,364,365,371,376,377,378,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,411,417,419,430,432,433,440,441,447,449,452,453,464,465,480,481,485,496,497,501,503,511,513,],[-115,-116,-117,-27,-161,-304,-304,-162,-28,-304,-289,-254,-231,-296,-281,-291,-279,-278,-294,-290,-292,-217,-293,-297,-233,-295,-280,-252,-266,-298,-300,-214,-28,-304,-303,-3,358,359,-4,-304,-274,-275,-257,-252,-255,-301,-258,-299,-256,-230,434,435,438,439,-304,443,444,-304,-273,-272,452,-269,-271,-270,-250,-249,-237,-234,-242,-251,-246,-247,-245,-239,-238,-241,-240,-243,-235,-248,-244,-236,462,-282,-218,-215,473,474,475,476,-28,-304,-267,-268,-253,-259,498,499,-232,509,510,-283,-276,518,-277,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,68,69,71,72,73,76,85,86,88,89,90,91,95,96,98,99,100,102,103,104,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,139,142,160,189,191,193,194,197,198,200,202,203,205,209,212,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[44,-62,-110,44,-66,-109,-304,44,44,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,44,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,44,44,44,-82,-88,44,-90,-89,-87,-61,44,-130,-131,-302,-161,-53,-147,-148,-69,44,-86,-84,-83,44,-70,44,-30,44,44,-140,-137,-141,44,-128,44,44,-162,44,44,44,-78,44,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-129,-126,-127,-132,-138,-303,44,44,-149,44,44,-35,-36,44,44,44,44,44,-209,-213,44,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,44,44,44,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'STRUCT':([0,2,4,5,7,8,12,14,15,19,20,22,25,29,36,37,38,39,40,41,42,47,48,52,53,54,55,62,63,64,65,68,69,72,86,88,91,95,96,100,102,103,104,108,109,110,117,118,119,121,122,123,124,126,127,128,142,160,189,191,193,194,197,198,200,202,203,205,209,212,231,232,233,234,253,258,259,260,286,287,290,305,322,324,326,328,333,337,339,349,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[46,-62,46,-66,-304,46,-29,-95,-65,-115,-96,46,-63,-67,-60,-93,-68,-52,-116,-94,-97,-64,-98,-304,-117,-304,-81,-10,-85,-9,46,46,-82,46,-61,46,-302,-161,-53,-69,46,-86,-84,-83,46,-70,46,-30,46,-140,-137,-141,46,46,46,-162,46,46,-78,46,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-138,-303,46,46,46,46,-35,-36,46,46,46,46,-209,-213,46,-196,-212,-210,-197,-139,-31,-34,46,46,46,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'MINUS':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,140,148,149,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,188,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,261,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,295,297,299,300,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,407,410,413,417,421,422,424,426,428,429,441,447,448,449,452,453,454,455,457,460,461,463,464,465,466,467,469,470,471,472,478,479,481,490,492,493,494,500,501,503,504,505,506,513,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,176,176,176,-304,-162,-28,-304,176,-289,-254,278,176,176,-296,-260,-281,-291,-304,-262,-279,176,-278,-294,-290,-261,-292,-293,-297,-265,-233,176,-295,-280,-264,-263,-252,-266,-298,176,-300,-289,-78,176,-77,-73,176,-74,-75,-72,176,-193,-195,-194,176,-76,-304,-28,176,176,-303,176,176,176,-261,176,-274,-275,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,-257,-252,176,-255,-301,-12,176,176,-11,176,-258,-299,-228,-219,176,-227,-229,-221,-226,-223,-225,-220,-222,-224,-256,176,-209,176,-213,176,176,-196,176,176,-212,176,-210,-197,176,176,-261,176,176,-261,-304,-273,-272,-269,-271,-270,278,278,-237,-234,278,278,278,278,278,278,-238,278,278,278,-235,278,278,-236,-177,-304,176,-282,-200,-198,176,176,-211,-208,-261,-28,-304,176,-267,-268,176,176,176,176,-11,-304,-253,-259,176,176,176,-199,176,176,176,176,-261,-201,176,-203,-204,176,-283,-276,-304,176,176,-277,-202,176,-205,176,-207,-206,]),'LT':([140,148,149,153,155,156,159,162,163,164,166,168,169,171,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,417,452,453,464,465,501,503,513,],[-289,-254,279,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-233,-295,-280,-252,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,279,279,-237,-234,-242,279,279,279,279,-239,-238,-241,-240,-243,-235,279,-244,-236,-282,-267,-268,-253,-259,-283,-276,-277,]),'LSHIFTEQUAL':([140,148,153,155,156,159,162,163,164,166,168,169,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,417,452,453,464,465,501,503,513,],[-289,-254,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-295,-280,314,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,-282,-267,-268,-253,-259,-283,-276,-277,]),'STRING_LITERAL':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,151,152,154,157,158,160,165,170,172,174,175,176,180,181,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,295,297,299,300,305,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,407,410,413,421,422,424,426,428,429,441,447,448,449,454,455,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,504,505,506,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,180,180,180,-304,-162,-28,-304,180,180,180,-260,-304,-262,180,-261,-265,180,307,-264,-263,-298,180,-78,180,-77,-73,180,-74,-75,-72,180,-193,-195,-194,180,-76,-304,-28,180,180,-303,180,180,180,-261,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,-12,180,180,-11,180,-299,-228,-219,180,-227,-229,-221,-226,-223,-225,-220,-222,-224,180,-209,180,-213,180,180,-196,180,180,-212,180,-210,-197,180,180,-261,180,180,-261,-304,-177,-304,180,-200,-198,180,180,-211,-208,-261,-28,-304,180,180,180,180,180,-11,-304,180,180,180,-199,180,180,180,180,-261,-201,180,-203,-204,180,-304,180,180,-202,180,-205,180,-207,-206,]),'LSHIFT':([140,148,149,153,155,156,159,162,163,164,166,168,169,171,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,417,452,453,464,465,501,503,513,],[-289,-254,280,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-233,-295,-280,-252,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,280,280,-237,-234,280,280,280,280,280,-239,-238,280,-240,280,-235,280,280,-236,-282,-267,-268,-253,-259,-283,-276,-277,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,68,69,71,72,73,76,85,86,88,89,90,91,95,96,98,99,100,102,103,104,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,139,142,160,189,191,193,194,197,198,200,202,203,205,209,212,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[49,-62,-110,49,-66,-109,-304,49,49,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,49,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,49,49,49,-82,-88,49,-90,-89,-87,-61,49,-130,-131,-302,-161,-53,-147,-148,-69,49,-86,-84,-83,49,-70,49,-30,49,49,-140,-137,-141,49,-128,49,49,-162,49,49,49,-78,49,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-129,-126,-127,-132,-138,-303,49,49,-149,49,49,-35,-36,49,49,49,49,49,-209,-213,49,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,49,49,49,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'PPPRAGMASTR':([38,],[100,]),'WSTRING_LITERAL':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,151,152,154,155,157,158,160,165,170,172,175,176,181,182,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,292,295,297,299,300,305,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,407,410,413,421,422,424,426,428,429,441,447,448,449,454,455,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,504,505,506,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,182,182,182,-304,-162,-28,-304,182,182,182,-260,292,-304,-262,182,-261,-265,182,-264,-263,182,-300,-78,182,-77,-73,182,-74,-75,-72,182,-193,-195,-194,182,-76,-304,-28,182,182,-303,182,182,182,-261,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,-301,-12,182,182,-11,182,-228,-219,182,-227,-229,-221,-226,-223,-225,-220,-222,-224,182,-209,182,-213,182,182,-196,182,182,-212,182,-210,-197,182,182,-261,182,182,-261,-304,-177,-304,182,-200,-198,182,182,-211,-208,-261,-28,-304,182,182,182,182,182,-11,-304,182,182,182,-199,182,182,182,182,-261,-201,182,-203,-204,182,-304,182,182,-202,182,-205,182,-207,-206,]),'AUTO':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,66,68,69,71,72,73,76,85,86,89,90,91,96,98,99,100,102,108,109,110,117,118,139,189,191,193,194,197,198,200,202,203,205,209,212,230,232,235,253,258,259,260,322,324,326,328,333,337,339,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[37,-62,-110,-66,-109,37,37,37,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,37,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,37,-117,37,-81,-92,37,37,-82,-88,37,-90,-89,-87,-61,-130,-131,-302,-53,-147,-148,-69,37,-83,37,-70,37,-30,37,-78,37,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-132,-303,-149,37,37,-35,-36,-209,-213,37,-196,-212,-210,-197,-133,-134,-150,-151,-31,-34,37,37,37,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'TYPEDEF':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,66,68,69,71,72,73,76,85,86,89,90,91,96,98,99,100,102,108,109,110,117,118,139,189,191,193,194,197,198,200,202,203,205,209,212,230,232,235,253,258,259,260,322,324,326,328,333,337,339,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[42,-62,-110,-66,-109,42,42,42,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,42,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,42,-117,42,-81,-92,42,42,-82,-88,42,-90,-89,-87,-61,-130,-131,-302,-53,-147,-148,-69,42,-83,42,-70,42,-30,42,-78,42,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-132,-303,-149,42,42,-35,-36,-209,-213,42,-196,-212,-210,-197,-133,-134,-150,-151,-31,-34,42,42,42,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'ELSE':([38,100,189,193,194,197,198,200,209,232,322,324,333,337,339,421,422,428,429,470,490,493,494,514,517,520,521,],[-68,-69,-78,-77,-73,-74,-75,-72,-76,-303,-209,-213,-212,-210,-197,-200,-198,-211,-208,-199,505,-203,-204,-202,-205,-207,-206,]),'VOLATILE':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,31,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,66,68,69,71,72,73,76,85,86,88,89,90,91,92,95,96,98,99,100,101,102,108,109,110,116,117,118,119,120,121,122,123,124,125,126,127,128,135,136,139,160,189,191,193,194,197,198,200,202,203,205,209,212,216,217,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,371,372,416,421,422,428,429,438,439,447,448,470,490,493,494,514,517,520,521,],[53,-62,-110,-66,-109,53,53,53,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,53,-99,-63,-113,-67,-111,53,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,53,-117,53,-81,-92,53,53,-82,-88,53,-90,-89,-87,-61,53,-130,-131,-302,53,-161,-53,-147,-148,-69,53,53,-83,53,-70,53,53,-30,53,53,-140,-137,-141,53,-128,53,53,-162,53,53,53,53,-78,53,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,53,53,-129,-126,-127,-132,-138,-303,53,53,-149,53,53,-35,-36,53,53,53,53,53,-209,-213,53,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,53,53,53,53,-200,-198,-211,-208,-33,-32,53,53,-199,-201,-203,-204,-202,-205,-207,-206,]),'MINUSEQUAL':([140,148,153,155,156,159,162,163,164,166,168,169,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,417,452,453,464,465,501,503,513,],[-289,-254,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-295,-280,316,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,-282,-267,-268,-253,-259,-283,-276,-277,]),'WHILE':([38,55,91,100,109,189,191,193,194,197,198,200,202,203,205,208,209,232,322,323,324,325,328,333,337,338,339,421,422,426,428,429,466,469,470,471,490,493,494,505,514,516,517,519,520,521,],[-68,-81,-302,-69,199,-78,199,-77,-73,-74,-75,-72,-193,-195,-194,199,-76,-303,-209,199,-213,199,-196,-212,-210,431,-197,-200,-198,199,-211,-208,199,199,-199,199,-201,-203,-204,199,-202,199,-205,199,-207,-206,]),'INT_CONST_OCT':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,151,152,154,157,158,160,165,170,172,175,176,181,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,295,297,299,300,305,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,407,410,413,421,422,424,426,428,429,441,447,448,449,454,455,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,504,505,506,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,156,156,156,-304,-162,-28,-304,156,156,156,-260,-304,-262,156,-261,-265,156,-264,-263,156,-78,156,-77,-73,156,-74,-75,-72,156,-193,-195,-194,156,-76,-304,-28,156,156,-303,156,156,156,-261,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-12,156,156,-11,156,-228,-219,156,-227,-229,-221,-226,-223,-225,-220,-222,-224,156,-209,156,-213,156,156,-196,156,156,-212,156,-210,-197,156,156,-261,156,156,-261,-304,-177,-304,156,-200,-198,156,156,-211,-208,-261,-28,-304,156,156,156,156,156,-11,-304,156,156,156,-199,156,156,156,156,-261,-201,156,-203,-204,156,-304,156,156,-202,156,-205,156,-207,-206,]),'ANDEQUAL':([140,148,153,155,156,159,162,163,164,166,168,169,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,417,452,453,464,465,501,503,513,],[-289,-254,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-295,-280,308,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,-282,-267,-268,-253,-259,-283,-276,-277,]),'SEMI':([0,1,2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,73,74,75,76,77,78,81,82,83,84,85,86,88,89,90,91,96,98,99,100,103,104,107,109,110,114,118,120,121,122,123,124,125,126,127,140,148,149,153,155,156,159,161,162,163,164,166,167,168,169,171,173,174,177,178,179,180,182,183,185,187,188,189,191,193,194,196,197,198,200,201,202,203,205,206,207,208,209,210,212,213,214,215,221,222,223,225,226,227,228,229,230,231,232,233,234,235,259,260,261,263,288,289,291,292,306,307,320,322,323,324,325,326,327,328,331,333,334,335,337,339,344,345,346,349,350,351,354,355,358,359,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,408,417,419,421,422,423,424,426,428,429,430,434,435,436,437,438,439,452,453,459,464,465,466,467,468,469,470,471,473,474,485,490,491,493,494,501,503,505,508,513,514,516,517,519,520,521,],[5,55,-62,-110,-304,-66,-109,-304,-304,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,5,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-80,-124,-15,-92,-122,-16,-10,-85,-9,-304,-304,-88,-157,-90,-19,-79,-89,-20,-37,-120,-54,-158,-118,-87,-61,121,-130,-131,-302,-53,-147,-148,-69,-86,-84,-157,-304,-70,-55,-30,-304,-140,-137,-141,121,-128,121,121,-289,-254,-231,-296,-281,-291,-279,-125,-278,-294,-290,-292,-217,-293,-297,-233,-295,-280,-252,-266,-172,-298,-300,-123,322,324,-289,-78,-304,-77,-73,-13,-74,-75,-72,333,-193,-195,-194,-14,337,-304,-76,-214,-71,-119,-38,-121,-129,-25,-142,-26,-144,349,-126,-127,-132,-138,-303,121,121,-149,-35,-36,-274,-275,-257,-252,-255,-301,-258,-299,-256,-209,-304,-213,-304,-304,-13,-196,-230,-212,428,429,-210,-197,-43,-44,-146,-139,-133,-134,-150,-151,-31,-34,-273,-272,-269,-271,-270,-250,-249,-237,-234,-242,-251,-246,-247,-245,-239,-238,-241,-240,-243,-235,-248,-244,-236,-173,-282,-218,-200,-198,467,-304,-304,-211,-208,-215,-39,-42,-143,-145,-33,-32,-267,-268,-174,-253,-259,-304,-304,492,-304,-199,-304,-40,-41,-232,-201,506,-203,-204,-283,-276,-304,517,-277,-202,-304,-205,-304,-207,-206,]),'GE':([140,148,149,153,155,156,159,162,163,164,166,168,169,171,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,417,452,453,464,465,501,503,513,],[-289,-254,281,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-233,-295,-280,-252,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,281,281,-237,-234,-242,281,281,281,281,-239,-238,-241,-240,-243,-235,281,-244,-236,-282,-267,-268,-253,-259,-283,-276,-277,]),'FLOAT_CONST':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,151,152,154,157,158,160,165,170,172,175,176,181,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,295,297,299,300,305,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,407,410,413,421,422,424,426,428,429,441,447,448,449,454,455,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,504,505,506,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,163,163,163,-304,-162,-28,-304,163,163,163,-260,-304,-262,163,-261,-265,163,-264,-263,163,-78,163,-77,-73,163,-74,-75,-72,163,-193,-195,-194,163,-76,-304,-28,163,163,-303,163,163,163,-261,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,-12,163,163,-11,163,-228,-219,163,-227,-229,-221,-226,-223,-225,-220,-222,-224,163,-209,163,-213,163,163,-196,163,163,-212,163,-210,-197,163,163,-261,163,163,-261,-304,-177,-304,163,-200,-198,163,163,-211,-208,-261,-28,-304,163,163,163,163,163,-11,-304,163,163,163,-199,163,163,163,163,-261,-201,163,-203,-204,163,-304,163,163,-202,163,-205,163,-207,-206,]),'TIMESEQUAL':([140,148,153,155,156,159,162,163,164,166,168,169,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,417,452,453,464,465,501,503,513,],[-289,-254,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-295,-280,313,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,-282,-267,-268,-253,-259,-283,-276,-277,]),'SIGNED':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,68,69,71,72,73,76,85,86,88,89,90,91,95,96,98,99,100,102,103,104,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,139,142,160,189,191,193,194,197,198,200,202,203,205,209,212,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[10,-62,-110,10,-66,-109,-304,10,10,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,10,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,10,10,10,-82,-88,10,-90,-89,-87,-61,10,-130,-131,-302,-161,-53,-147,-148,-69,10,-86,-84,-83,10,-70,10,-30,10,10,-140,-137,-141,10,-128,10,10,-162,10,10,10,-78,10,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-129,-126,-127,-132,-138,-303,10,10,-149,10,10,-35,-36,10,10,10,10,10,-209,-213,10,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,10,10,10,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'COLON':([3,6,10,11,12,13,17,18,19,24,26,30,33,35,39,40,43,44,49,50,51,53,78,82,83,89,90,96,98,99,107,114,118,120,125,140,148,149,153,155,156,159,162,163,164,166,167,168,169,171,173,174,177,178,180,182,186,188,210,214,221,226,228,229,230,232,235,259,260,261,263,288,289,291,292,306,307,320,330,331,344,345,347,350,351,354,355,358,359,376,377,379,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,417,419,430,434,435,438,439,452,453,464,465,473,474,485,501,503,513,],[-110,-109,-108,-114,-29,-112,-106,-100,-115,-99,-113,-111,-102,-101,-52,-116,-104,-103,-105,-107,-216,-117,-37,-54,-158,-130,-131,-53,-147,-148,-157,-55,-30,224,-128,-289,-254,-231,-296,-281,-291,-279,-278,-294,-290,-292,-217,-293,-297,-233,-295,-280,-252,-266,-298,-300,323,325,-214,-38,-129,348,-126,-127,-132,-303,-149,-35,-36,-274,-275,-257,-252,-255,-301,-258,-299,-256,426,-230,-43,-44,224,-133,-134,-150,-151,-31,-34,-273,-272,-269,-271,-270,-250,-249,-237,-234,-242,-251,-246,455,-247,-245,-239,-238,-241,-240,-243,-235,-248,-244,-236,-282,-218,-215,-39,-42,-33,-32,-267,-268,-253,-259,-40,-41,-232,-283,-276,-277,]),'MODEQUAL':([140,148,153,155,156,159,162,163,164,166,168,169,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,417,452,453,464,465,501,503,513,],[-289,-254,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-295,-280,315,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,-282,-267,-268,-253,-259,-283,-276,-277,]),'RETURN':([38,55,91,100,109,189,191,193,194,197,198,200,202,203,205,208,209,232,322,323,324,325,328,333,337,339,421,422,426,428,429,466,469,470,471,490,493,494,505,514,516,517,519,520,521,],[-68,-81,-302,-69,201,-78,201,-77,-73,-74,-75,-72,-193,-195,-194,201,-76,-303,-209,201,-213,201,-196,-212,-210,-197,-200,-198,201,-211,-208,201,201,-199,201,-201,-203,-204,201,-202,201,-205,201,-207,-206,]),'_COMPLEX':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,68,69,71,72,73,76,85,86,88,89,90,91,95,96,98,99,100,102,103,104,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,139,142,160,189,191,193,194,197,198,200,202,203,205,209,212,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[50,-62,-110,50,-66,-109,-304,50,50,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,50,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,50,50,50,-82,-88,50,-90,-89,-87,-61,50,-130,-131,-302,-161,-53,-147,-148,-69,50,-86,-84,-83,50,-70,50,-30,50,50,-140,-137,-141,50,-128,50,50,-162,50,50,50,-78,50,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-129,-126,-127,-132,-138,-303,50,50,-149,50,50,-35,-36,50,50,50,50,50,-209,-213,50,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,50,50,50,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'RBRACE':([38,55,91,100,109,121,122,123,124,130,131,132,140,148,149,153,155,156,157,159,162,163,164,166,167,168,169,171,173,174,177,178,179,180,182,189,191,193,194,196,197,198,200,202,203,205,209,211,231,232,233,234,236,238,239,261,263,288,289,291,292,296,298,300,306,307,320,322,324,328,331,333,337,339,349,352,353,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,408,409,410,417,419,421,422,428,429,452,453,459,464,465,470,485,488,489,490,493,494,501,503,504,513,514,517,520,521,],[-68,-81,-302,-69,-304,-140,-137,-141,232,232,-152,-155,-289,-254,-231,-296,-281,-291,-304,-279,-278,-294,-290,-292,-217,-293,-297,-233,-295,-280,-252,-266,-172,-298,-300,-78,-6,-77,-73,-5,-74,-75,-72,-193,-195,-194,-76,232,-138,-303,232,232,-153,232,232,-274,-275,-257,-252,-255,-301,232,-22,-21,-258,-299,-256,-209,-213,-196,-230,-212,-210,-197,-139,-154,-156,-273,-272,-269,-271,-270,-250,-249,-237,-234,-242,-251,-246,-247,-245,-239,-238,-241,-240,-243,-235,-248,-244,-236,-173,-175,232,-282,-218,-200,-198,-211,-208,-267,-268,-174,-253,-259,-199,-232,-176,232,-201,-203,-204,-283,-276,232,-277,-202,-205,-207,-206,]),'EQUALS':([12,39,57,72,78,81,82,83,96,107,114,118,132,140,148,153,155,156,159,162,163,164,166,168,169,173,174,177,178,180,182,188,214,232,259,260,261,263,288,289,291,292,293,294,306,307,320,344,345,358,359,376,377,379,382,383,406,412,417,434,435,438,439,452,453,462,464,465,473,474,501,503,513,],[-29,-52,105,-157,-37,115,-54,-158,-53,-157,-55,-30,237,-289,-254,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-295,-280,309,-266,-298,-300,-289,-38,-303,-35,-36,-274,-275,-257,-252,-255,-301,-178,407,-258,-299,-256,-43,-44,-31,-34,-273,-272,-269,-271,-270,-179,-181,-282,-39,-42,-33,-32,-267,-268,-180,-253,-259,-40,-41,-283,-276,-277,]),'PLUSEQUAL':([140,148,153,155,156,159,162,163,164,166,168,169,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,417,452,453,464,465,501,503,513,],[-289,-254,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-295,-280,319,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,-282,-267,-268,-253,-259,-283,-276,-277,]),'PLUSPLUS':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,140,148,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,168,169,170,172,173,174,175,176,178,180,181,182,188,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,261,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,292,295,297,299,300,305,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,376,377,379,382,383,407,410,413,417,421,422,424,426,428,429,441,447,448,449,452,453,454,455,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,501,503,504,505,506,513,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,152,152,152,-304,-162,-28,-304,152,-289,261,152,152,-296,-260,-281,-291,-304,-262,-279,152,-278,-294,-290,-261,-292,-293,-297,-265,152,-295,-280,-264,-263,-266,-298,152,-300,-289,-78,152,-77,-73,152,-74,-75,-72,152,-193,-195,-194,152,-76,-304,-28,152,152,-303,152,152,152,-261,152,-274,-275,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,-301,-12,152,152,-11,152,-299,-228,-219,152,-227,-229,-221,-226,-223,-225,-220,-222,-224,152,-209,152,-213,152,152,-196,152,152,-212,152,-210,-197,152,152,-261,152,152,-261,-304,-273,-272,-269,-271,-270,-177,-304,152,-282,-200,-198,152,152,-211,-208,-261,-28,-304,152,-267,-268,152,152,152,152,-11,-304,152,152,152,-199,152,152,152,152,-261,-201,152,-203,-204,152,-283,-276,-304,152,152,-277,-202,152,-205,152,-207,-206,]),'AND':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,140,148,149,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,180,181,182,188,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,261,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,295,297,299,300,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,407,410,413,417,421,422,424,426,428,429,441,447,448,449,452,453,454,455,457,460,461,463,464,465,466,467,469,470,471,472,478,479,481,490,492,493,494,500,501,503,504,505,506,513,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,154,154,154,-304,-162,-28,-304,154,-289,-254,275,154,154,-296,-260,-281,-291,-304,-262,-279,154,-278,-294,-290,-261,-292,-293,-297,-265,-233,154,-295,-280,-264,-263,-252,-266,-298,154,-300,-289,-78,154,-77,-73,154,-74,-75,-72,154,-193,-195,-194,154,-76,-304,-28,154,154,-303,154,154,154,-261,154,-274,-275,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-257,-252,154,-255,-301,-12,154,154,-11,154,-258,-299,-228,-219,154,-227,-229,-221,-226,-223,-225,-220,-222,-224,-256,154,-209,154,-213,154,154,-196,154,154,-212,154,-210,-197,154,154,-261,154,154,-261,-304,-273,-272,-269,-271,-270,275,275,-237,-234,-242,275,-246,-247,-245,-239,-238,-241,-240,-243,-235,275,-244,-236,-177,-304,154,-282,-200,-198,154,154,-211,-208,-261,-28,-304,154,-267,-268,154,154,154,154,-11,-304,-253,-259,154,154,154,-199,154,154,154,154,-261,-201,154,-203,-204,154,-283,-276,-304,154,154,-277,-202,154,-205,154,-207,-206,]),'GOTO':([38,55,91,100,109,189,191,193,194,197,198,200,202,203,205,208,209,232,322,323,324,325,328,333,337,339,421,422,426,428,429,466,469,470,471,490,493,494,505,514,516,517,519,520,521,],[-68,-81,-302,-69,204,-78,204,-77,-73,-74,-75,-72,-193,-195,-194,204,-76,-303,-209,204,-213,204,-196,-212,-210,-197,-200,-198,204,-211,-208,204,204,-199,204,-201,-203,-204,204,-202,204,-205,204,-207,-206,]),'UNION':([0,2,4,5,7,8,12,14,15,19,20,22,25,29,36,37,38,39,40,41,42,47,48,52,53,54,55,62,63,64,65,68,69,72,86,88,91,95,96,100,102,103,104,108,109,110,117,118,119,121,122,123,124,126,127,128,142,160,189,191,193,194,197,198,200,202,203,205,209,212,231,232,233,234,253,258,259,260,286,287,290,305,322,324,326,328,333,337,339,349,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[16,-62,16,-66,-304,16,-29,-95,-65,-115,-96,16,-63,-67,-60,-93,-68,-52,-116,-94,-97,-64,-98,-304,-117,-304,-81,-10,-85,-9,16,16,-82,16,-61,16,-302,-161,-53,-69,16,-86,-84,-83,16,-70,16,-30,16,-140,-137,-141,16,16,16,-162,16,16,-78,16,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-138,-303,16,16,16,16,-35,-36,16,16,16,16,-209,-213,16,-196,-212,-210,-197,-139,-31,-34,16,16,16,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'_BOOL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,68,69,71,72,73,76,85,86,88,89,90,91,95,96,98,99,100,102,103,104,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,139,142,160,189,191,193,194,197,198,200,202,203,205,209,212,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[18,-62,-110,18,-66,-109,-304,18,18,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,18,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,18,18,18,-82,-88,18,-90,-89,-87,-61,18,-130,-131,-302,-161,-53,-147,-148,-69,18,-86,-84,-83,18,-70,18,-30,18,18,-140,-137,-141,18,-128,18,18,-162,18,18,18,-78,18,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-129,-126,-127,-132,-138,-303,18,18,-149,18,18,-35,-36,18,18,18,18,18,-209,-213,18,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,18,18,18,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'CONST':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,31,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,66,68,69,71,72,73,76,85,86,88,89,90,91,92,95,96,98,99,100,101,102,108,109,110,116,117,118,119,120,121,122,123,124,125,126,127,128,135,136,139,160,189,191,193,194,197,198,200,202,203,205,209,212,216,217,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,371,372,416,421,422,428,429,438,439,447,448,470,490,493,494,514,517,520,521,],[19,-62,-110,-66,-109,19,19,19,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,19,-99,-63,-113,-67,-111,19,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,19,-117,19,-81,-92,19,19,-82,-88,19,-90,-89,-87,-61,19,-130,-131,-302,19,-161,-53,-147,-148,-69,19,19,-83,19,-70,19,19,-30,19,19,-140,-137,-141,19,-128,19,19,-162,19,19,19,19,-78,19,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,19,19,-129,-126,-127,-132,-138,-303,19,19,-149,19,19,-35,-36,19,19,19,19,19,-209,-213,19,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,19,19,19,19,-200,-198,-211,-208,-33,-32,19,19,-199,-201,-203,-204,-202,-205,-207,-206,]),'INT_CONST_HEX':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,151,152,154,157,158,160,165,170,172,175,176,181,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,295,297,299,300,305,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,407,410,413,421,422,424,426,428,429,441,447,448,449,454,455,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,504,505,506,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,166,166,166,-304,-162,-28,-304,166,166,166,-260,-304,-262,166,-261,-265,166,-264,-263,166,-78,166,-77,-73,166,-74,-75,-72,166,-193,-195,-194,166,-76,-304,-28,166,166,-303,166,166,166,-261,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,-12,166,166,-11,166,-228,-219,166,-227,-229,-221,-226,-223,-225,-220,-222,-224,166,-209,166,-213,166,166,-196,166,166,-212,166,-210,-197,166,166,-261,166,166,-261,-304,-177,-304,166,-200,-198,166,166,-211,-208,-261,-28,-304,166,166,166,166,166,-11,-304,166,166,166,-199,166,166,166,166,-261,-201,166,-203,-204,166,-304,166,166,-202,166,-205,166,-207,-206,]),'EXTERN':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,66,68,69,71,72,73,76,85,86,89,90,91,96,98,99,100,102,108,109,110,117,118,139,189,191,193,194,197,198,200,202,203,205,209,212,230,232,235,253,258,259,260,322,324,326,328,333,337,339,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[20,-62,-110,-66,-109,20,20,20,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,20,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,20,-117,20,-81,-92,20,20,-82,-88,20,-90,-89,-87,-61,-130,-131,-302,-53,-147,-148,-69,20,-83,20,-70,20,-30,20,-78,20,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-132,-303,-149,20,20,-35,-36,-209,-213,20,-196,-212,-210,-197,-133,-134,-150,-151,-31,-34,20,20,20,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'CONTINUE':([38,55,91,100,109,189,191,193,194,197,198,200,202,203,205,208,209,232,322,323,324,325,328,333,337,339,421,422,426,428,429,466,469,470,471,490,493,494,505,514,516,517,519,520,521,],[-68,-81,-302,-69,207,-78,207,-77,-73,-74,-75,-72,-193,-195,-194,207,-76,-303,-209,207,-213,207,-196,-212,-210,-197,-200,-198,207,-211,-208,207,207,-199,207,-201,-203,-204,207,-202,207,-205,207,-207,-206,]),'XOREQUAL':([140,148,153,155,156,159,162,163,164,166,168,169,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,417,452,453,464,465,501,503,513,],[-289,-254,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-295,-280,317,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,-282,-267,-268,-253,-259,-283,-276,-277,]),'LPAREN':([0,2,3,4,5,6,7,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,71,73,76,78,79,80,82,85,86,89,90,91,92,93,94,95,96,98,99,100,101,103,104,105,106,109,110,112,114,115,116,118,120,125,128,129,135,136,137,139,140,148,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,168,169,170,172,173,174,175,176,178,180,181,182,184,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,205,208,209,212,214,216,217,218,221,224,228,229,230,232,235,237,240,241,244,246,250,251,252,253,255,259,260,261,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,292,295,297,299,300,303,305,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,344,345,347,348,350,351,354,355,358,359,360,362,363,365,369,371,376,377,379,382,383,407,410,413,415,416,417,421,422,424,426,428,429,431,434,435,438,439,441,443,444,445,446,447,448,449,452,453,454,455,457,460,461,463,466,467,469,470,471,472,473,474,475,476,477,478,479,481,482,483,490,492,493,494,498,499,500,501,503,504,505,506,509,510,513,514,516,517,519,520,521,],[27,-62,-110,27,-66,-109,-304,79,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,27,-99,-63,-113,27,-67,-111,-304,27,-102,-101,-60,-93,-68,102,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,27,79,-88,-90,-89,-37,79,79,117,-87,-61,-130,-131,-302,-28,-27,-159,-161,102,-147,-148,-69,-304,-86,-84,160,79,160,-70,79,117,160,-304,-30,79,-128,-162,-160,-28,-304,160,253,-289,265,286,287,290,-296,-260,-281,-291,-304,-262,-279,160,-278,-294,-290,-261,-292,-293,-297,-265,305,-295,-280,-264,-263,-266,-298,290,-300,321,-289,-78,326,160,329,-77,-73,287,-74,-75,332,-72,160,-193,-195,-194,160,-76,-71,-38,-304,-28,160,-129,287,-126,-127,-132,-303,-149,287,160,160,-261,361,253,160,-45,253,372,-35,-36,-274,-275,160,160,287,287,287,287,287,287,287,160,287,287,287,287,287,287,287,287,287,287,287,160,160,-301,-12,160,287,-11,416,160,-299,-228,-219,160,-227,-229,-221,-226,-223,-225,-220,-222,-224,160,-209,160,-213,160,160,-196,160,160,-212,160,-210,-197,160,160,-261,-43,-44,79,287,-133,-134,-150,-151,-31,-34,160,361,372,-261,253,-304,-273,-272,-269,-271,-270,-177,-304,287,416,416,-282,-200,-198,160,160,-211,-208,472,-39,-42,-33,-32,-261,-188,-190,-186,-192,-28,-304,160,-267,-268,160,287,287,160,-11,-304,160,160,160,-199,160,160,-40,-41,-187,-189,-191,160,160,-261,-50,-51,-201,160,-203,-204,-46,-49,160,-283,-276,-304,160,160,-48,-47,-277,-202,160,-205,160,-207,-206,]),'DIVEQUAL':([140,148,153,155,156,159,162,163,164,166,168,169,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,417,452,453,464,465,501,503,513,],[-289,-254,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-295,-280,318,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,-282,-267,-268,-253,-259,-283,-276,-277,]),'__INT128':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,68,69,71,72,73,76,85,86,88,89,90,91,95,96,98,99,100,102,103,104,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,139,142,160,189,191,193,194,197,198,200,202,203,205,209,212,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[3,-62,-110,3,-66,-109,-304,3,3,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,3,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,3,3,3,-82,-88,3,-90,-89,-87,-61,3,-130,-131,-302,-161,-53,-147,-148,-69,3,-86,-84,-83,3,-70,3,-30,3,3,-140,-137,-141,3,-128,3,3,-162,3,3,3,-78,3,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-129,-126,-127,-132,-138,-303,3,3,-149,3,3,-35,-36,3,3,3,3,3,-209,-213,3,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,3,3,3,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'INLINE':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,66,68,69,71,72,73,76,85,86,89,90,91,96,98,99,100,102,108,109,110,117,118,139,189,191,193,194,197,198,200,202,203,205,209,212,230,232,235,253,258,259,260,322,324,326,328,333,337,339,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[48,-62,-110,-66,-109,48,48,48,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,48,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,48,-117,48,-81,-92,48,48,-82,-88,48,-90,-89,-87,-61,-130,-131,-302,-53,-147,-148,-69,48,-83,48,-70,48,-30,48,-78,48,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-132,-303,-149,48,48,-35,-36,-209,-213,48,-196,-212,-210,-197,-133,-134,-150,-151,-31,-34,48,48,48,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'XOR':([140,148,149,153,155,156,159,162,163,164,166,168,169,171,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,417,452,453,464,465,501,503,513,],[-289,-254,268,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-233,-295,-280,-252,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,268,-249,-237,-234,-242,268,-246,-247,-245,-239,-238,-241,-240,-243,-235,268,-244,-236,-282,-267,-268,-253,-259,-283,-276,-277,]),'REGISTER':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,66,68,69,71,72,73,76,85,86,89,90,91,96,98,99,100,102,108,109,110,117,118,139,189,191,193,194,197,198,200,202,203,205,209,212,230,232,235,253,258,259,260,322,324,326,328,333,337,339,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[41,-62,-110,-66,-109,41,41,41,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,41,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,41,-117,41,-81,-92,41,41,-82,-88,41,-90,-89,-87,-61,-130,-131,-302,-53,-147,-148,-69,41,-83,41,-70,41,-30,41,-78,41,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-132,-303,-149,41,41,-35,-36,-209,-213,41,-196,-212,-210,-197,-133,-134,-150,-151,-31,-34,41,41,41,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'DO':([38,55,91,100,109,189,191,193,194,197,198,200,202,203,205,208,209,232,322,323,324,325,328,333,337,339,421,422,426,428,429,466,469,470,471,490,493,494,505,514,516,517,519,520,521,],[-68,-81,-302,-69,208,-78,208,-77,-73,-74,-75,-72,-193,-195,-194,208,-76,-303,-209,208,-213,208,-196,-212,-210,-197,-200,-198,208,-211,-208,208,208,-199,208,-201,-203,-204,208,-202,208,-205,208,-207,-206,]),'SHORT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,68,69,71,72,73,76,85,86,88,89,90,91,95,96,98,99,100,102,103,104,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,139,142,160,189,191,193,194,197,198,200,202,203,205,209,212,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[33,-62,-110,33,-66,-109,-304,33,33,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,33,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,33,33,33,-82,-88,33,-90,-89,-87,-61,33,-130,-131,-302,-161,-53,-147,-148,-69,33,-86,-84,-83,33,-70,33,-30,33,33,-140,-137,-141,33,-128,33,33,-162,33,33,33,-78,33,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-129,-126,-127,-132,-138,-303,33,33,-149,33,33,-35,-36,33,33,33,33,33,-209,-213,33,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,33,33,33,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'SIZEOF':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,151,152,154,157,158,160,165,170,172,175,176,181,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,295,297,299,300,305,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,407,410,413,421,422,424,426,428,429,441,447,448,449,454,455,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,504,505,506,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,172,172,172,-304,-162,-28,-304,172,172,172,-260,-304,-262,172,-261,-265,172,-264,-263,172,-78,172,-77,-73,172,-74,-75,-72,172,-193,-195,-194,172,-76,-304,-28,172,172,-303,172,172,172,-261,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-12,172,172,-11,172,-228,-219,172,-227,-229,-221,-226,-223,-225,-220,-222,-224,172,-209,172,-213,172,172,-196,172,172,-212,172,-210,-197,172,172,-261,172,172,-261,-304,-177,-304,172,-200,-198,172,172,-211,-208,-261,-28,-304,172,172,172,172,172,-11,-304,172,172,172,-199,172,172,172,172,-261,-201,172,-203,-204,172,-304,172,172,-202,172,-205,172,-207,-206,]),'CONDOP':([140,148,149,153,155,156,159,162,163,164,166,168,169,171,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,417,452,453,464,465,501,503,513,],[-289,-254,274,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-233,-295,-280,-252,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,-250,-249,-237,-234,-242,-251,-246,-247,-245,-239,-238,-241,-240,-243,-235,-248,-244,-236,-282,-267,-268,-253,-259,-283,-276,-277,]),'PPPRAGMA':([0,2,5,15,22,25,29,36,38,47,55,86,88,91,100,109,110,121,122,123,124,126,127,189,191,193,194,197,198,200,202,203,205,208,209,212,231,232,233,234,322,323,324,325,328,333,337,339,349,421,422,426,428,429,466,469,470,471,490,493,494,505,514,516,517,519,520,521,],[38,-62,-66,-65,38,-63,-67,-60,-68,-64,-81,-61,38,-302,-69,38,-70,-140,-137,-141,38,38,38,-78,38,-77,-73,-74,-75,-72,-193,-195,-194,38,-76,-71,-138,-303,38,38,-209,38,-213,38,-196,-212,-210,-197,-139,-200,-198,38,-211,-208,38,38,-199,38,-201,-203,-204,38,-202,38,-205,38,-207,-206,]),'NOT':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,151,152,154,157,158,160,165,170,172,175,176,181,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,295,297,299,300,305,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,407,410,413,421,422,424,426,428,429,441,447,448,449,454,455,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,504,505,506,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,175,175,175,-304,-162,-28,-304,175,175,175,-260,-304,-262,175,-261,-265,175,-264,-263,175,-78,175,-77,-73,175,-74,-75,-72,175,-193,-195,-194,175,-76,-304,-28,175,175,-303,175,175,175,-261,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,-12,175,175,-11,175,-228,-219,175,-227,-229,-221,-226,-223,-225,-220,-222,-224,175,-209,175,-213,175,175,-196,175,175,-212,175,-210,-197,175,175,-261,175,175,-261,-304,-177,-304,175,-200,-198,175,175,-211,-208,-261,-28,-304,175,175,175,175,175,-11,-304,175,175,175,-199,175,175,175,175,-261,-201,175,-203,-204,175,-304,175,175,-202,175,-205,175,-207,-206,]),'RESTRICT':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,31,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,66,68,69,71,72,73,76,85,86,88,89,90,91,92,95,96,98,99,100,101,102,108,109,110,116,117,118,119,120,121,122,123,124,125,126,127,128,135,136,139,160,189,191,193,194,197,198,200,202,203,205,209,212,216,217,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,371,372,416,421,422,428,429,438,439,447,448,470,490,493,494,514,517,520,521,],[40,-62,-110,-66,-109,40,40,40,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,40,-99,-63,-113,-67,-111,40,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,40,-117,40,-81,-92,40,40,-82,-88,40,-90,-89,-87,-61,40,-130,-131,-302,40,-161,-53,-147,-148,-69,40,40,-83,40,-70,40,40,-30,40,40,-140,-137,-141,40,-128,40,40,-162,40,40,40,40,-78,40,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,40,40,-129,-126,-127,-132,-138,-303,40,40,-149,40,40,-35,-36,40,40,40,40,40,-209,-213,40,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,40,40,40,40,-200,-198,-211,-208,-33,-32,40,40,-199,-201,-203,-204,-202,-205,-207,-206,]),'PPHASH':([0,2,5,15,22,25,29,36,38,47,55,86,100,110,212,232,339,],[29,-62,-66,-65,29,-63,-67,-60,-68,-64,-81,-61,-69,-70,-71,-303,-197,]),'LONG':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,24,25,26,29,30,33,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,59,62,63,64,65,66,68,69,71,72,73,76,85,86,88,89,90,91,95,96,98,99,100,102,103,104,108,109,110,117,118,119,120,121,122,123,124,125,126,127,128,139,142,160,189,191,193,194,197,198,200,202,203,205,209,212,221,228,229,230,231,232,233,234,235,253,258,259,260,286,287,290,303,305,322,324,326,328,333,337,339,349,350,351,354,355,358,359,361,372,416,421,422,428,429,438,439,470,490,493,494,514,517,520,521,],[43,-62,-110,43,-66,-109,-304,43,43,-108,-114,-29,-112,-95,-65,-106,-100,-115,-96,-91,43,-99,-63,-113,-67,-111,-102,-101,-60,-93,-68,-52,-116,-94,-97,-104,-103,-64,-98,-105,-107,-216,-304,-117,-304,-81,-92,-10,-85,-9,43,43,43,-82,-88,43,-90,-89,-87,-61,43,-130,-131,-302,-161,-53,-147,-148,-69,43,-86,-84,-83,43,-70,43,-30,43,43,-140,-137,-141,43,-128,43,43,-162,43,43,43,-78,43,-77,-73,-74,-75,-72,-193,-195,-194,-76,-71,-129,-126,-127,-132,-138,-303,43,43,-149,43,43,-35,-36,43,43,43,43,43,-209,-213,43,-196,-212,-210,-197,-139,-133,-134,-150,-151,-31,-34,43,43,43,-200,-198,-211,-208,-33,-32,-199,-201,-203,-204,-202,-205,-207,-206,]),'EQ':([140,148,149,153,155,156,159,162,163,164,166,168,169,171,173,174,177,178,180,182,188,232,261,263,288,289,291,292,306,307,320,376,377,379,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,417,452,453,464,465,501,503,513,],[-289,-254,276,-296,-281,-291,-279,-278,-294,-290,-292,-293,-297,-233,-295,-280,-252,-266,-298,-300,-289,-303,-274,-275,-257,-252,-255,-301,-258,-299,-256,-273,-272,-269,-271,-270,276,276,-237,-234,-242,276,-246,276,-245,-239,-238,-241,-240,-243,-235,276,-244,-236,-282,-267,-268,-253,-259,-283,-276,-277,]),'LNOT':([19,38,40,53,55,91,92,93,95,100,101,105,109,115,116,128,135,136,137,151,152,154,157,158,160,165,170,172,175,176,181,189,191,193,194,195,197,198,200,201,202,203,205,208,209,216,217,218,224,232,237,240,241,244,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,295,297,299,300,305,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328,329,332,333,336,337,339,340,341,343,348,360,365,371,407,410,413,421,422,424,426,428,429,441,447,448,449,454,455,457,460,461,463,466,467,469,470,471,472,478,479,481,490,492,493,494,500,504,505,506,514,516,517,519,520,521,],[-115,-68,-116,-117,-81,-302,-28,-27,-161,-69,-304,170,170,170,-304,-162,-28,-304,170,170,170,-260,-304,-262,170,-261,-265,170,-264,-263,170,-78,170,-77,-73,170,-74,-75,-72,170,-193,-195,-194,170,-76,-304,-28,170,170,-303,170,170,170,-261,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,-12,170,170,-11,170,-228,-219,170,-227,-229,-221,-226,-223,-225,-220,-222,-224,170,-209,170,-213,170,170,-196,170,170,-212,170,-210,-197,170,170,-261,170,170,-261,-304,-177,-304,170,-200,-198,170,170,-211,-208,-261,-28,-304,170,170,170,170,170,-11,-304,170,170,170,-199,170,170,170,170,-261,-201,170,-203,-204,170,-304,170,170,-202,170,-205,170,-207,-206,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl_body':([0,8,22,68,72,109,191,326,],[1,1,1,1,1,1,1,1,]),'function_definition':([0,22,],[2,2,]),'id_init_declarator_list_opt':([4,65,],[56,56,]),'enumerator_list':([97,133,134,],[130,238,239,]),'assignment_operator':([177,],[310,]),'declaration_specifiers':([0,8,22,68,72,102,109,117,191,253,258,326,361,372,416,],[9,66,9,66,66,139,66,139,66,139,139,66,139,139,139,]),'init_declarator':([9,66,106,112,],[84,84,183,213,]),'empty':([0,4,7,8,9,31,52,54,65,66,72,101,102,109,116,117,120,136,137,139,157,191,208,216,218,251,253,303,323,325,326,360,361,371,372,410,416,424,426,448,449,463,466,467,469,471,492,504,505,506,516,519,],[45,58,64,67,74,93,64,64,58,74,67,93,138,196,93,138,222,93,242,248,300,327,327,93,242,242,366,248,327,327,327,242,366,93,138,461,366,327,327,93,242,461,327,327,327,327,327,461,327,327,327,327,]),'parameter_declaration':([102,117,253,258,361,372,416,],[141,141,141,375,141,141,141,]),'enum_specifier':([0,4,8,22,65,68,72,88,102,109,117,119,124,126,127,142,160,191,233,234,253,258,286,287,290,305,326,361,372,416,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'init_declarator_list_opt':([9,66,],[75,75,]),'struct_declarator_list':([120,],[225,]),'pppragma_directive':([0,22,88,109,124,126,127,191,208,233,234,323,325,426,466,469,471,505,516,519,],[15,15,123,189,123,123,123,189,189,123,123,189,189,189,189,189,189,189,189,189,]),'unary_operator':([105,109,115,137,151,152,160,172,181,191,195,201,208,218,224,237,240,241,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,297,299,305,310,321,323,325,326,329,332,336,340,341,348,360,413,424,426,449,454,455,457,460,466,467,469,471,472,478,479,492,500,505,506,516,519,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'abstract_declarator':([139,253,303,416,],[249,367,249,367,]),'parameter_type_list_opt':([253,361,416,],[368,442,368,]),'declaration_specifiers_no_type_opt':([7,52,54,],[63,103,104,]),'assignment_expression_opt':([137,218,251,360,449,],[243,342,364,440,480,]),'identifier_list':([102,117,372,],[143,143,143,]),'type_name':([160,286,287,290,305,],[302,403,404,405,418,]),'block_item_list':([109,],[191,]),'brace_open':([28,34,70,89,90,98,99,105,109,111,115,191,208,297,323,325,413,426,457,458,460,465,466,469,471,505,516,519,],[88,97,109,126,127,133,134,157,109,109,157,109,109,157,109,109,463,109,463,463,157,463,109,109,109,109,109,109,]),'type_specifier':([0,4,8,22,65,68,72,88,102,109,117,119,124,126,127,142,160,191,233,234,253,258,286,287,290,305,326,361,372,416,],[21,59,21,21,59,21,21,125,21,21,21,221,125,125,125,59,125,21,125,125,21,21,125,125,125,125,21,21,21,21,]),'translation_unit_or_empty':([0,],[23,]),'typeid_noparen_declarator':([139,],[256,]),'constant':([105,109,115,137,151,152,160,172,181,191,195,201,208,218,224,237,240,241,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,297,299,305,310,321,323,325,326,329,332,336,340,341,348,360,413,424,426,449,454,455,457,460,466,467,469,471,472,478,479,492,500,505,506,516,519,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'struct_or_union':([0,4,8,22,65,68,72,88,102,109,117,119,124,126,127,142,160,191,233,234,253,258,286,287,290,305,326,361,372,416,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'brace_close':([124,130,211,233,234,238,239,296,410,489,504,],[230,235,339,350,351,354,355,408,459,503,513,]),'abstract_declarator_opt':([139,303,],[254,414,]),'struct_declaration':([88,124,126,127,233,234,],[122,231,122,122,231,231,]),'parameter_list':([102,117,253,361,372,416,],[144,144,144,144,144,144,]),'conditional_expression':([105,109,115,137,160,191,195,201,208,218,224,237,240,241,251,264,265,274,287,290,297,299,305,310,321,323,325,326,329,332,336,340,341,348,360,424,426,449,454,455,460,466,467,469,471,472,478,479,492,500,505,506,516,519,],[167,167,167,167,167,167,331,167,167,167,331,331,167,167,167,167,167,167,167,167,167,331,167,167,167,167,167,167,167,167,167,167,167,331,167,167,167,167,167,485,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'block_item_list_opt':([109,],[211,]),'typeid_declarator':([9,66,79,106,112,120,347,],[83,83,113,83,83,83,83,]),'declarator':([9,66,106,112,120,347,],[81,81,81,81,226,226,]),'struct_declarator_list_opt':([120,],[227,]),'expression_statement':([109,191,208,323,325,426,466,469,471,505,516,519,],[194,194,194,194,194,194,194,194,194,194,194,194,]),'argument_expression_list':([265,],[380,]),'direct_typeid_declarator':([9,66,79,80,106,112,120,347,],[82,82,82,114,82,82,82,82,]),'parameter_type_list':([102,117,253,361,372,416,],[146,219,370,370,450,370,]),'storage_class_specifier':([0,7,8,9,22,52,54,66,68,72,102,109,117,139,191,253,258,326,361,372,416,],[7,7,7,71,7,7,7,71,7,7,7,7,7,71,7,7,7,7,7,7,7,]),'unary_expression':([105,109,115,137,151,152,160,172,181,191,195,201,208,218,224,237,240,241,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,297,299,305,310,321,323,325,326,329,332,336,340,341,348,360,413,424,426,449,454,455,457,460,466,467,469,471,472,478,479,492,500,505,506,516,519,],[177,177,177,177,289,291,177,306,320,177,289,177,177,177,289,289,177,177,177,177,177,289,289,289,289,289,289,289,177,289,289,289,289,289,289,289,289,289,289,289,177,177,177,289,177,177,177,177,177,177,177,177,177,177,177,289,177,289,177,177,177,177,289,289,177,177,177,177,177,177,177,177,177,177,177,177,177,177,]),'constant_expression':([195,224,237,299,348,],[330,346,353,411,437,]),'compound_statement':([70,109,111,191,208,323,325,426,466,469,471,505,516,519,],[110,197,212,197,197,197,197,197,197,197,197,197,197,197,]),'initializer_list':([157,463,],[298,489,]),'selection_statement':([109,191,208,323,325,426,466,469,471,505,516,519,],[198,198,198,198,198,198,198,198,198,198,198,198,]),'designator_list':([157,410,463,504,],[294,294,294,294,]),'expression_opt':([109,191,208,323,325,326,424,426,466,467,469,471,492,505,506,516,519,],[187,187,187,187,187,423,468,187,187,491,187,187,507,187,515,187,187,]),'primary_expression':([105,109,115,137,151,152,160,172,181,191,195,201,208,218,224,237,240,241,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,297,299,305,310,321,323,325,326,329,332,336,340,341,348,360,413,424,426,449,454,455,457,460,466,467,469,471,472,478,479,492,500,505,506,516,519,],[178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,]),'binary_expression':([105,109,115,137,160,191,195,201,208,218,224,237,240,241,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,297,299,305,310,321,323,325,326,329,332,336,340,341,348,360,424,426,449,454,455,460,466,467,469,471,472,478,479,492,500,505,506,516,519,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,384,385,386,387,388,389,390,149,392,393,394,395,396,397,398,399,400,401,402,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'postfix_expression':([105,109,115,137,151,152,160,172,181,191,195,201,208,218,224,237,240,241,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,297,299,305,310,321,323,325,326,329,332,336,340,341,348,360,413,424,426,449,454,455,457,460,466,467,469,471,472,478,479,492,500,505,506,516,519,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'declaration_specifiers_no_type':([0,7,8,22,52,54,68,72,102,109,117,191,253,258,326,361,372,416,],[4,62,65,4,62,62,65,65,142,65,142,65,142,142,65,142,142,142,]),'specifier_qualifier_list':([88,124,126,127,160,233,234,286,287,290,305,],[120,120,120,120,303,120,120,303,303,303,303,]),'offsetof_member_designator':([456,],[487,]),'unified_wstring_literal':([105,109,115,137,151,152,160,172,181,191,195,201,208,218,224,237,240,241,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,297,299,305,310,321,323,325,326,329,332,336,340,341,348,360,413,424,426,449,454,455,457,460,466,467,469,471,472,478,479,492,500,505,506,516,519,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'struct_declarator':([120,347,],[223,436,]),'id_declarator':([0,4,9,22,27,65,66,79,106,112,120,139,253,347,],[8,57,72,8,87,57,107,87,107,107,107,247,87,107,]),'id_init_declarator_list':([4,65,],[61,61,]),'declaration_list':([8,72,],[68,68,]),'labeled_statement':([109,191,208,323,325,426,466,469,471,505,516,519,],[200,200,200,200,200,200,200,200,200,200,200,200,]),'enumerator':([97,133,134,236,],[131,131,131,352,]),'initializer_list_opt':([157,],[296,]),'declaration':([0,8,22,68,72,109,191,326,],[25,69,25,108,69,202,202,424,]),'block_item':([109,191,],[203,328,]),'direct_typeid_noparen_declarator':([139,250,],[255,363,]),'designator':([157,294,410,463,504,],[293,406,293,293,293,]),'designation':([157,410,463,504,],[295,295,295,295,]),'designation_opt':([157,410,463,504,],[297,460,297,460,]),'statement':([109,191,208,323,325,426,466,469,471,505,516,519,],[205,205,338,421,422,470,490,493,494,514,520,521,]),'direct_abstract_declarator':([139,250,253,303,369,415,416,],[246,362,246,246,362,362,246,]),'translation_unit':([0,],[22,]),'type_qualifier_list_opt':([31,101,116,136,216,371,448,],[94,137,218,241,340,449,479,]),'struct_or_union_specifier':([0,4,8,22,65,68,72,88,102,109,117,119,124,126,127,142,160,191,233,234,253,258,286,287,290,305,326,361,372,416,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'pp_directive':([0,22,],[47,47,]),'initializer':([105,115,297,460,],[161,215,409,488,]),'declaration_list_opt':([8,72,],[70,111,]),'identifier':([102,105,109,115,117,137,151,152,160,172,181,191,195,201,208,218,224,237,240,241,251,257,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,297,299,301,305,310,321,323,325,326,329,332,336,340,341,348,360,372,413,424,426,449,454,455,456,457,460,466,467,469,471,472,478,479,492,500,502,505,506,516,519,],[145,162,162,162,145,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,373,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,412,162,162,162,162,162,162,162,162,162,162,162,162,162,145,162,162,162,162,162,162,486,162,162,162,162,162,162,162,162,162,162,162,512,162,162,162,162,]),'type_qualifier_list':([31,88,101,116,124,126,127,136,160,216,233,234,286,287,290,305,371,448,],[92,119,135,217,119,119,119,92,119,92,119,119,119,119,119,119,447,92,]),'init_declarator_list':([9,66,],[77,77,]),'typedef_name':([0,4,8,22,65,68,72,88,102,109,117,119,124,126,127,142,160,191,233,234,253,258,286,287,290,305,326,361,372,416,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'cast_expression':([105,109,115,137,151,160,191,195,201,208,218,224,237,240,241,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,297,299,305,310,321,323,325,326,329,332,336,340,341,348,360,413,424,426,449,454,455,457,460,466,467,469,471,472,478,479,492,500,505,506,516,519,],[171,171,171,171,288,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,464,171,171,171,171,171,464,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'id_init_declarator':([4,65,],[60,60,]),'pointer':([0,4,9,22,27,65,66,79,94,106,112,120,139,253,303,347,416,],[32,32,80,32,32,32,80,80,129,80,80,80,250,369,415,80,415,]),'iteration_statement':([109,191,208,323,325,426,466,469,471,505,516,519,],[209,209,209,209,209,209,209,209,209,209,209,209,]),'unified_string_literal':([105,109,115,137,151,152,160,172,181,191,195,201,208,218,224,237,240,241,251,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,290,297,299,305,310,321,323,325,326,329,332,336,340,341,348,360,413,424,426,449,454,455,457,460,466,467,469,471,472,478,479,492,500,505,506,516,519,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'direct_id_declarator':([0,4,9,22,27,32,65,66,79,80,106,112,120,139,250,253,347,369,],[39,39,39,39,39,96,39,39,39,96,39,39,39,39,96,39,39,96,]),'identifier_list_opt':([102,117,372,],[147,220,451,]),'function_specifier':([0,7,8,9,22,52,54,66,68,72,102,109,117,139,191,253,258,326,361,372,416,],[52,52,52,76,52,52,52,76,52,52,52,52,52,76,52,52,52,52,52,52,52,]),'assignment_expression':([105,109,115,137,160,191,201,208,218,240,241,251,264,265,274,287,290,297,305,310,321,323,325,326,329,332,336,340,341,360,424,426,449,454,460,466,467,469,471,472,478,479,492,500,505,506,516,519,],[179,210,179,245,210,210,210,210,245,356,357,245,210,381,210,210,210,179,210,419,210,210,210,210,210,210,430,432,433,245,210,210,245,484,179,210,210,210,210,210,496,497,210,210,210,210,210,210,]),'struct_declaration_list':([88,126,127,],[124,233,234,]),'expression':([109,160,191,201,208,264,274,287,290,305,321,323,325,326,329,332,424,426,466,467,469,471,472,492,500,505,506,516,519,],[206,304,206,334,206,378,391,304,304,304,420,206,206,206,425,427,206,206,206,206,206,206,495,206,511,206,206,206,206,]),'external_declaration':([0,22,],[36,86,]),'type_qualifier':([0,7,8,9,22,31,52,54,66,68,72,88,92,101,102,109,116,117,119,120,124,126,127,135,136,139,160,191,216,217,233,234,253,258,286,287,290,303,305,326,361,371,372,416,447,448,],[54,54,54,85,54,95,54,54,85,54,54,95,128,95,54,54,95,54,128,229,95,95,95,128,95,85,95,54,95,128,95,95,54,54,95,95,95,229,95,54,54,95,54,54,128,95,]),'type_specifier_no_typeid':([0,4,8,9,22,65,66,68,72,88,102,109,117,119,120,124,126,127,139,142,160,191,233,234,253,258,286,287,290,303,305,326,361,372,416,],[11,11,11,73,11,11,73,11,11,11,11,11,11,11,228,11,11,11,73,11,11,11,11,11,11,11,11,11,11,228,11,11,11,11,11,]),'jump_statement':([109,191,208,323,325,426,466,469,471,505,516,519,],[193,193,193,193,193,193,193,193,193,193,193,193,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
