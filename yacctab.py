
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'INT':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,59,60,61,65,68,69,71,72,74,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,113,120,125,126,127,129,130,131,132,133,134,135,136,137,141,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,261,265,267,268,271,280,305,331,335,342,343,346,351,352,355,356,357,362,364,365,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[51,-304,-106,-102,-67,-66,-117,-96,-105,51,-108,-116,-63,-304,-29,-113,-216,-111,-52,-104,-109,-101,-304,-94,51,51,-110,-114,-107,-97,-64,-65,-98,-99,-68,51,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-10,-9,-85,-92,-84,51,-53,-86,51,51,-82,51,-61,-69,-81,-130,51,-131,-88,-87,-89,51,-90,-161,51,51,-70,51,-83,51,-137,-140,-141,51,51,-128,51,51,51,-30,-162,-149,-303,51,-36,-35,51,51,-78,-194,-72,-74,-195,-75,51,-193,-76,-77,-73,51,-138,-132,-129,-127,-126,51,-71,-150,51,-151,51,51,51,51,51,51,-31,-34,-197,-209,-210,-213,-196,51,-212,-133,-139,-134,51,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'ENUM':([0,3,6,7,9,10,12,15,16,17,18,22,27,28,29,30,34,35,37,38,40,44,47,48,52,54,58,59,60,61,68,69,71,72,74,75,77,79,80,81,83,94,102,113,125,126,127,129,130,131,132,133,134,137,141,145,147,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,251,253,265,268,271,280,331,335,342,343,346,351,352,355,356,357,362,365,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[1,-304,-67,-66,-117,-96,1,-116,-63,-304,-29,-52,-304,-94,1,1,-97,-64,-65,-98,-68,-95,-60,-93,-62,-115,-302,-10,-9,-85,-84,1,-53,-86,1,1,-82,-61,-69,-81,1,1,-161,1,-70,1,-83,1,-137,-140,-141,1,1,1,1,-30,-162,-303,1,-36,-35,1,1,-78,-194,-72,-74,-195,-75,1,-193,-76,-77,-73,1,-138,1,-71,1,1,1,1,1,1,-31,-34,-197,-209,-210,-213,-196,1,-212,-139,1,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'RESTRICT':([0,3,4,5,6,7,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,53,54,55,57,58,65,69,70,71,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,103,120,123,124,125,126,127,129,130,131,132,133,134,135,136,137,141,142,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,257,258,261,265,267,268,271,280,305,331,332,335,342,343,346,351,352,355,356,357,362,364,365,369,398,425,426,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[15,15,-106,-102,-67,-66,-117,-96,-105,-108,-116,-63,15,-29,-113,-216,-111,-52,-104,-109,-101,15,-94,15,15,-110,-114,-107,-97,-64,-65,-98,-99,-68,15,-95,-100,-60,-93,-112,-91,-103,-62,15,-115,-147,-148,-302,-92,15,15,-53,15,-82,15,-61,-69,-81,-130,15,-131,-88,-87,-89,15,-90,-161,15,15,15,15,-70,15,-83,15,-137,-140,-141,15,15,-128,15,15,15,15,-30,-162,-149,-303,15,-36,-35,15,15,-78,-194,-72,-74,-195,-75,15,-193,-76,-77,-73,15,-138,-132,-129,-127,-126,15,-71,15,15,-150,15,-151,15,15,15,15,15,15,15,-31,-34,-197,-209,-210,-213,-196,15,-212,-133,-139,-134,15,15,15,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'DOUBLE':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,59,60,61,65,68,69,71,72,74,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,113,120,125,126,127,129,130,131,132,133,134,135,136,137,141,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,261,265,267,268,271,280,305,331,335,342,343,346,351,352,355,356,357,362,364,365,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[4,-304,-106,-102,-67,-66,-117,-96,-105,4,-108,-116,-63,-304,-29,-113,-216,-111,-52,-104,-109,-101,-304,-94,4,4,-110,-114,-107,-97,-64,-65,-98,-99,-68,4,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-10,-9,-85,-92,-84,4,-53,-86,4,4,-82,4,-61,-69,-81,-130,4,-131,-88,-87,-89,4,-90,-161,4,4,-70,4,-83,4,-137,-140,-141,4,4,-128,4,4,4,-30,-162,-149,-303,4,-36,-35,4,4,-78,-194,-72,-74,-195,-75,4,-193,-76,-77,-73,4,-138,-132,-129,-127,-126,4,-71,-150,4,-151,4,4,4,4,4,4,-31,-34,-197,-209,-210,-213,-196,4,-212,-133,-139,-134,4,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'OFFSETOF':([9,15,40,54,58,70,80,81,102,103,104,111,122,123,124,126,142,144,147,149,152,160,161,162,163,164,166,167,170,171,173,181,188,195,208,209,210,213,214,217,219,221,222,223,225,228,232,234,235,237,238,247,256,257,258,265,271,273,278,280,285,287,288,290,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,157,157,-28,-304,157,-304,157,-162,157,-303,-263,-265,-260,157,157,-264,157,157,-304,-262,157,-261,157,-261,157,157,157,157,-78,-194,-72,-74,-195,-75,157,-193,-76,-77,157,-73,157,157,-28,-304,157,157,157,157,157,157,157,-12,-11,-226,-220,157,-221,-225,-219,-223,-222,-224,-229,-228,-227,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,-261,-304,157,-197,-209,-210,157,157,-213,-196,157,157,157,157,157,-212,157,-261,157,157,-177,-304,157,157,-28,-304,-261,-208,157,-198,157,-200,-211,157,157,157,-11,-304,157,-261,157,157,-199,157,157,157,157,157,-204,157,-203,-201,157,-304,157,157,-205,157,-202,-207,157,-206,]),'RPAREN':([4,5,9,10,11,14,15,18,19,20,21,22,23,24,25,28,31,32,33,34,38,39,44,45,48,49,50,51,53,54,55,57,65,69,71,82,84,86,89,90,93,96,97,100,101,102,103,104,112,114,115,116,117,118,119,120,121,135,138,141,143,145,146,147,150,152,155,156,158,159,165,168,169,172,174,175,176,177,179,180,182,183,185,186,187,189,191,192,194,196,197,198,199,200,201,202,203,204,216,233,241,242,246,248,254,255,259,261,264,267,269,270,272,273,276,277,279,281,291,304,305,306,326,327,328,331,333,334,335,337,338,339,340,341,342,343,350,364,369,370,371,376,378,379,380,381,382,383,384,385,387,395,397,398,399,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,427,430,431,432,433,437,441,442,443,448,449,454,456,457,464,466,467,472,473,474,482,483,484,485,486,489,490,491,494,496,502,503,505,506,508,509,511,513,516,518,],[-106,-102,-117,-96,-105,-108,-116,-29,-113,-216,-111,-52,-104,-109,-101,-94,-110,-114,-107,-97,-98,-99,-95,-100,-93,-112,-91,-103,-304,-115,-147,-148,-92,-304,-53,-130,-131,-88,-87,-37,-89,-90,-54,145,-159,-161,-28,-27,-170,-17,-18,-289,191,192,-163,-304,-165,-128,-55,-304,259,-30,-160,-162,-149,-303,-291,-279,-278,-281,-254,-217,-297,-280,-290,-292,-294,-300,-298,-252,-233,-231,-266,-293,-296,-295,-36,-35,-169,-1,-45,-56,-2,-183,-167,-185,-168,-304,-214,-14,-132,-129,-127,-126,370,371,-38,-150,-252,-151,-301,-258,-257,379,-275,-274,-256,-255,-299,396,-304,400,-171,-166,-164,-304,-57,-184,-304,-23,430,-183,-24,431,-31,-34,-13,-133,-134,-44,-43,452,454,-269,456,-287,-272,-273,-270,-271,458,-218,-182,-304,-183,-282,-237,-243,-244,-235,-238,-248,-247,-240,-251,-239,-236,-246,-241,-249,-250,-242,-245,-234,-188,-190,466,467,472,-186,-192,-33,-32,477,480,481,-215,-39,-42,-259,-268,-267,-253,-51,-50,-191,-187,-189,-41,-40,502,-284,-288,-232,-46,-49,507,-304,-283,-276,-48,-47,515,-304,-285,-277,520,-286,]),'ELLIPSIS':([193,],[328,]),'SEMI':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,32,33,34,35,37,38,39,40,41,43,44,45,47,48,49,50,51,52,54,55,57,58,59,60,61,62,63,64,65,66,67,68,71,72,74,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,99,116,125,126,128,129,130,131,132,133,135,136,137,138,145,150,152,154,155,156,158,159,165,168,169,172,174,175,176,177,178,179,180,182,183,184,185,186,187,189,191,192,214,215,216,217,218,219,221,222,223,224,225,226,227,228,232,233,234,235,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,259,260,261,262,264,267,269,270,272,276,277,279,281,291,342,343,346,347,350,351,352,354,355,356,357,361,362,363,364,365,366,369,370,371,379,382,383,384,385,393,395,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,432,433,434,435,438,439,440,443,444,445,446,447,448,449,454,456,457,459,464,475,477,478,479,480,481,482,483,489,495,497,498,499,502,503,507,510,513,514,515,517,519,520,521,],[7,-304,-106,-102,-67,-66,-117,-96,-105,-304,-108,-116,-63,-304,-29,-113,-216,-111,-52,-104,-109,-101,-304,-94,7,-110,-114,-107,-97,-64,-65,-98,-99,-68,81,-304,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-10,-9,-85,-122,-15,-16,-92,-124,-80,-84,-53,-86,-304,-304,-61,-69,-81,-130,131,-131,-79,-88,-19,-118,-87,-37,-20,-89,-157,-158,-90,-54,-120,-289,-70,-304,-157,131,-137,-140,-141,131,-128,-304,131,-55,-30,-149,-303,-123,-291,-279,-278,-281,-254,-217,-297,-280,-290,-292,-294,-300,-172,-298,-252,-233,-231,-125,-266,-293,-296,-295,-36,-35,-304,351,-214,-78,352,-194,-72,-74,-195,-13,-75,-289,355,-304,-193,-14,-76,-77,362,-73,131,-138,-132,-129,-142,-25,365,-127,-126,-26,-144,131,-119,-71,-38,-121,-150,-230,-252,-151,-301,-258,-257,-275,-274,-256,-255,-299,-31,-34,-197,434,-13,-209,-210,-304,-213,-196,-304,-304,-212,445,-133,-139,-146,-134,-44,-43,-269,-272,-273,-270,-271,-173,-218,-282,-237,-243,-244,-235,-238,-248,-247,-240,-251,-239,-236,-246,-241,-249,-250,-242,-245,-234,-33,-32,-208,-304,-198,-304,479,-215,-200,-211,-143,-145,-39,-42,-259,-268,-267,-174,-253,-199,-304,496,-304,-304,-304,-41,-40,-232,-204,509,-203,-201,-283,-276,514,-304,-277,-205,-304,-202,-207,-304,-206,]),'CONST':([0,3,4,5,6,7,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,53,54,55,57,58,65,69,70,71,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,103,120,123,124,125,126,127,129,130,131,132,133,134,135,136,137,141,142,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,257,258,261,265,267,268,271,280,305,331,332,335,342,343,346,351,352,355,356,357,362,364,365,369,398,425,426,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[54,54,-106,-102,-67,-66,-117,-96,-105,-108,-116,-63,54,-29,-113,-216,-111,-52,-104,-109,-101,54,-94,54,54,-110,-114,-107,-97,-64,-65,-98,-99,-68,54,-95,-100,-60,-93,-112,-91,-103,-62,54,-115,-147,-148,-302,-92,54,54,-53,54,-82,54,-61,-69,-81,-130,54,-131,-88,-87,-89,54,-90,-161,54,54,54,54,-70,54,-83,54,-137,-140,-141,54,54,-128,54,54,54,54,-30,-162,-149,-303,54,-36,-35,54,54,-78,-194,-72,-74,-195,-75,54,-193,-76,-77,-73,54,-138,-132,-129,-127,-126,54,-71,54,54,-150,54,-151,54,54,54,54,54,54,54,-31,-34,-197,-209,-210,-213,-196,54,-212,-133,-139,-134,54,54,54,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'PPHASH':([0,6,7,16,30,35,37,40,47,52,79,80,81,125,152,253,346,],[6,-67,-66,-63,6,-64,-65,-68,-60,-62,-61,-69,-81,-70,-303,-71,-197,]),'DIVIDE':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,310,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,310,310,310,-235,310,310,310,310,310,310,-236,310,310,310,310,310,310,-234,-259,-268,-267,-253,-283,-276,-277,]),'LNOT':([9,15,40,54,58,70,80,81,102,103,104,111,122,123,124,126,142,144,147,149,152,160,161,162,163,164,166,167,170,171,173,181,188,195,208,209,210,213,214,217,219,221,222,223,225,228,232,234,235,237,238,247,256,257,258,265,271,273,278,280,285,287,288,290,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,161,161,-28,-304,161,-304,161,-162,161,-303,-263,-265,-260,161,161,-264,161,161,-304,-262,161,-261,161,-261,161,161,161,161,-78,-194,-72,-74,-195,-75,161,-193,-76,-77,161,-73,161,161,-28,-304,161,161,161,161,161,161,161,-12,-11,-226,-220,161,-221,-225,-219,-223,-222,-224,-229,-228,-227,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,-261,-304,161,-197,-209,-210,161,161,-213,-196,161,161,161,161,161,-212,161,-261,161,161,-177,-304,161,161,-28,-304,-261,-208,161,-198,161,-200,-211,161,161,161,-11,-304,161,-261,161,161,-199,161,161,161,161,161,-204,161,-203,-201,161,-304,161,161,-205,161,-202,-207,161,-206,]),'SIZEOF':([9,15,40,54,58,70,80,81,102,103,104,111,122,123,124,126,142,144,147,149,152,160,161,162,163,164,166,167,170,171,173,181,188,195,208,209,210,213,214,217,219,221,222,223,225,228,232,234,235,237,238,247,256,257,258,265,271,273,278,280,285,287,288,290,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,163,163,-28,-304,163,-304,163,-162,163,-303,-263,-265,-260,163,163,-264,163,163,-304,-262,163,-261,163,-261,163,163,163,163,-78,-194,-72,-74,-195,-75,163,-193,-76,-77,163,-73,163,163,-28,-304,163,163,163,163,163,163,163,-12,-11,-226,-220,163,-221,-225,-219,-223,-222,-224,-229,-228,-227,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,-261,-304,163,-197,-209,-210,163,163,-213,-196,163,163,163,163,163,-212,163,-261,163,163,-177,-304,163,163,-28,-304,-261,-208,163,-198,163,-200,-211,163,163,163,-11,-304,163,-261,163,163,-199,163,163,163,163,163,-204,163,-203,-201,163,-304,163,163,-205,163,-202,-207,163,-206,]),'LOR':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,316,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-237,-243,-244,-235,-238,-248,-247,-240,-251,-239,-236,-246,-241,-249,-250,-242,-245,-234,-259,-268,-267,-253,-283,-276,-277,]),'GOTO':([40,58,80,81,126,152,214,217,219,221,222,223,225,228,232,234,235,238,346,351,352,354,355,356,361,362,434,435,438,444,445,475,477,480,481,495,498,499,510,514,515,517,519,520,521,],[-68,-302,-69,-81,212,-303,212,-78,-194,-72,-74,-195,-75,212,-193,-76,-77,-73,-197,-209,-210,212,-213,-196,212,-212,-208,212,-198,-200,-211,-199,212,212,212,-204,-203,-201,212,-205,212,-202,-207,212,-206,]),'GE':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,308,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-237,-243,-244,-235,-238,308,308,-240,308,-239,-236,308,-241,308,308,-242,308,-234,-259,-268,-267,-253,-283,-276,-277,]),'NOT':([9,15,40,54,58,70,80,81,102,103,104,111,122,123,124,126,142,144,147,149,152,160,161,162,163,164,166,167,170,171,173,181,188,195,208,209,210,213,214,217,219,221,222,223,225,228,232,234,235,237,238,247,256,257,258,265,271,273,278,280,285,287,288,290,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,166,166,-28,-304,166,-304,166,-162,166,-303,-263,-265,-260,166,166,-264,166,166,-304,-262,166,-261,166,-261,166,166,166,166,-78,-194,-72,-74,-195,-75,166,-193,-76,-77,166,-73,166,166,-28,-304,166,166,166,166,166,166,166,-12,-11,-226,-220,166,-221,-225,-219,-223,-222,-224,-229,-228,-227,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,-261,-304,166,-197,-209,-210,166,166,-213,-196,166,166,166,166,166,-212,166,-261,166,166,-177,-304,166,166,-28,-304,-261,-208,166,-198,166,-200,-211,166,166,166,-11,-304,166,-261,166,166,-199,166,166,166,166,166,-204,166,-203,-201,166,-304,166,166,-205,166,-202,-207,166,-206,]),'AUTO':([0,3,4,5,6,7,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,65,69,71,75,77,78,79,80,81,82,84,86,89,93,94,96,120,125,126,127,141,145,150,152,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,241,253,261,267,331,335,342,343,346,351,352,355,356,357,362,364,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[48,48,-106,-102,-67,-66,-117,-96,-105,-108,-116,-63,48,-29,-113,-216,-111,-52,-104,-109,-101,48,-94,48,48,-110,-114,-107,-97,-64,-65,-98,-99,-68,48,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-92,48,-53,48,-82,48,-61,-69,-81,-130,-131,-88,-87,-89,48,-90,48,-70,48,-83,48,-30,-149,-303,-36,-35,48,48,-78,-194,-72,-74,-195,-75,48,-193,-76,-77,-73,-132,-71,-150,-151,48,48,-31,-34,-197,-209,-210,-213,-196,48,-212,-133,-134,48,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'CONDOP':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,313,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-237,-243,-244,-235,-238,-248,-247,-240,-251,-239,-236,-246,-241,-249,-250,-242,-245,-234,-259,-268,-267,-253,-283,-276,-277,]),'COLON':([4,5,9,11,14,15,18,19,20,21,22,23,24,25,31,32,33,39,45,49,51,54,55,57,71,82,84,90,95,97,116,128,135,136,138,145,150,152,155,156,158,159,165,168,169,172,174,175,176,177,179,180,182,183,185,186,187,189,191,192,216,226,236,241,242,246,248,250,259,261,262,264,267,269,270,272,276,277,279,281,291,342,343,348,364,367,369,370,371,379,382,383,384,385,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,432,433,443,448,449,454,456,457,464,482,483,489,502,503,513,],[-106,-102,-117,-105,-108,-116,-29,-113,-216,-111,-52,-104,-109,-101,-110,-114,-107,-99,-100,-112,-103,-115,-147,-148,-53,-130,-131,-37,-158,-54,-289,-157,-128,247,-55,-30,-149,-303,-291,-279,-278,-281,-254,-217,-297,-280,-290,-292,-294,-300,-298,-252,-233,-231,-266,-293,-296,-295,-36,-35,-214,354,361,-132,-129,-127,-126,368,-38,-150,-230,-252,-151,-301,-258,-257,-275,-274,-256,-255,-299,-31,-34,435,-133,247,-134,-44,-43,-269,-272,-273,-270,-271,-218,-282,-237,-243,-244,-235,-238,-248,465,-247,-240,-251,-239,-236,-246,-241,-249,-250,-242,-245,-234,-33,-32,-215,-39,-42,-259,-268,-267,-253,-41,-40,-232,-283,-276,-277,]),'RBRACE':([40,58,80,81,106,107,108,116,126,130,131,132,133,148,151,152,153,155,156,158,159,165,168,169,171,172,174,175,176,177,178,179,180,182,183,185,186,187,189,211,217,219,221,222,223,224,225,228,232,234,235,238,239,240,251,262,263,264,266,269,270,272,276,277,279,281,284,286,290,291,346,351,352,355,356,362,365,379,382,383,384,385,391,392,393,395,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,434,438,444,445,454,456,457,459,464,475,487,488,489,495,498,499,502,503,504,513,514,517,519,521,],[-68,-302,-69,-81,-155,152,-152,-289,-304,-137,-140,-141,152,152,-153,-303,152,-291,-279,-278,-281,-254,-217,-297,-304,-280,-290,-292,-294,-300,-172,-298,-252,-233,-231,-266,-293,-296,-295,152,-78,-194,-72,-74,-195,-5,-75,-6,-193,-76,-77,-73,152,-138,152,-230,-156,-252,-154,-301,-258,-257,-275,-274,-256,-255,-22,152,-21,-299,-197,-209,-210,-213,-196,-212,-139,-269,-272,-273,-270,-271,152,-175,-173,-218,-282,-237,-243,-244,-235,-238,-248,-247,-240,-251,-239,-236,-246,-241,-249,-250,-242,-245,-234,-208,-198,-200,-211,-259,-268,-267,-174,-253,-199,-176,152,-232,-204,-203,-201,-283,-276,152,-277,-205,-202,-207,-206,]),'EQUALS':([18,22,66,71,90,94,95,97,99,106,116,128,138,145,152,155,156,158,159,165,169,172,174,175,176,177,179,180,185,186,187,189,191,192,226,259,264,269,270,272,276,277,279,281,283,289,291,342,343,370,371,379,382,383,384,385,388,389,400,432,433,448,449,454,456,457,462,464,482,483,502,503,513,],[-29,-52,111,-53,-37,-157,-158,-54,144,149,-289,-157,-55,-30,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,297,-266,-293,-296,-295,-36,-35,-289,-38,-252,-301,-258,-257,-275,-274,-256,-255,390,-178,-299,-31,-34,-44,-43,-269,-272,-273,-270,-271,-181,-179,-282,-33,-32,-39,-42,-259,-268,-267,-180,-253,-41,-40,-283,-276,-277,]),'DIVEQUAL':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,299,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-259,-268,-267,-253,-283,-276,-277,]),'XOR':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,321,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-237,-243,-244,-235,-238,321,-247,-240,321,-239,-236,-246,-241,-249,321,-242,-245,-234,-259,-268,-267,-253,-283,-276,-277,]),'PPPRAGMASTR':([40,],[80,]),'LE':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,323,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-237,-243,-244,-235,-238,323,323,-240,323,-239,-236,323,-241,323,323,-242,323,-234,-259,-268,-267,-253,-283,-276,-277,]),'UNSIGNED':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,59,60,61,65,68,69,71,72,74,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,113,120,125,126,127,129,130,131,132,133,134,135,136,137,141,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,261,265,267,268,271,280,305,331,335,342,343,346,351,352,355,356,357,362,364,365,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[24,-304,-106,-102,-67,-66,-117,-96,-105,24,-108,-116,-63,-304,-29,-113,-216,-111,-52,-104,-109,-101,-304,-94,24,24,-110,-114,-107,-97,-64,-65,-98,-99,-68,24,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-10,-9,-85,-92,-84,24,-53,-86,24,24,-82,24,-61,-69,-81,-130,24,-131,-88,-87,-89,24,-90,-161,24,24,-70,24,-83,24,-137,-140,-141,24,24,-128,24,24,24,-30,-162,-149,-303,24,-36,-35,24,24,-78,-194,-72,-74,-195,-75,24,-193,-76,-77,-73,24,-138,-132,-129,-127,-126,24,-71,-150,24,-151,24,24,24,24,24,24,-31,-34,-197,-209,-210,-213,-196,24,-212,-133,-139,-134,24,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'CHAR':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,59,60,61,65,68,69,71,72,74,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,113,120,125,126,127,129,130,131,132,133,134,135,136,137,141,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,261,265,267,268,271,280,305,331,335,342,343,346,351,352,355,356,357,362,364,365,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[25,-304,-106,-102,-67,-66,-117,-96,-105,25,-108,-116,-63,-304,-29,-113,-216,-111,-52,-104,-109,-101,-304,-94,25,25,-110,-114,-107,-97,-64,-65,-98,-99,-68,25,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-10,-9,-85,-92,-84,25,-53,-86,25,25,-82,25,-61,-69,-81,-130,25,-131,-88,-87,-89,25,-90,-161,25,25,-70,25,-83,25,-137,-140,-141,25,25,-128,25,25,25,-30,-162,-149,-303,25,-36,-35,25,25,-78,-194,-72,-74,-195,-75,25,-193,-76,-77,-73,25,-138,-132,-129,-127,-126,25,-71,-150,25,-151,25,25,25,25,25,25,-31,-34,-197,-209,-210,-213,-196,25,-212,-133,-139,-134,25,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'MINUSEQUAL':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,296,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-259,-268,-267,-253,-283,-276,-277,]),'INT_CONST_DEC':([9,15,40,54,58,70,80,81,102,103,104,111,122,123,124,126,142,144,147,149,152,160,161,162,163,164,166,167,170,171,173,181,188,195,208,209,210,213,214,217,219,221,222,223,225,228,232,234,235,237,238,247,256,257,258,265,271,273,278,280,285,287,288,290,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,174,174,-28,-304,174,-304,174,-162,174,-303,-263,-265,-260,174,174,-264,174,174,-304,-262,174,-261,174,-261,174,174,174,174,-78,-194,-72,-74,-195,-75,174,-193,-76,-77,174,-73,174,174,-28,-304,174,174,174,174,174,174,174,-12,-11,-226,-220,174,-221,-225,-219,-223,-222,-224,-229,-228,-227,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-261,-304,174,-197,-209,-210,174,174,-213,-196,174,174,174,174,174,-212,174,-261,174,174,-177,-304,174,174,-28,-304,-261,-208,174,-198,174,-200,-211,174,174,174,-11,-304,174,-261,174,174,-199,174,174,174,174,174,-204,174,-203,-201,174,-304,174,174,-205,174,-202,-207,174,-206,]),'RBRACKET':([9,15,54,70,102,104,116,122,123,142,147,152,155,156,158,159,165,168,169,172,174,175,176,177,179,180,182,183,185,186,187,189,195,205,206,207,208,216,256,257,262,264,269,270,272,276,277,279,281,291,329,330,332,336,344,345,372,373,379,382,383,384,385,386,394,395,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,424,425,428,429,443,450,451,454,456,457,464,468,469,489,492,493,502,503,512,513,],[-117,-116,-115,-304,-161,-27,-289,-304,-28,-304,-162,-303,-291,-279,-278,-281,-254,-217,-297,-280,-290,-292,-294,-300,-298,-252,-233,-231,-266,-293,-296,-295,-304,342,-3,-4,343,-214,-304,-28,-230,-252,-301,-258,-257,-275,-274,-256,-255,-299,420,421,-304,-304,432,433,448,449,-269,-272,-273,-270,-271,457,462,-218,-282,-237,-243,-244,-235,-238,-248,-247,-240,-251,-239,-236,-246,-241,-249,-250,-242,-245,-234,-304,-28,473,474,-215,482,483,-259,-268,-267,-253,490,491,-232,505,506,-283,-276,518,-277,]),'COMMA':([4,5,9,10,11,14,15,18,19,20,21,22,23,24,25,28,31,32,33,34,38,39,44,45,48,49,50,51,53,54,55,57,62,64,65,66,71,82,84,86,88,89,90,92,93,94,95,96,97,99,101,102,103,104,106,107,108,112,115,116,119,120,121,128,135,138,145,146,147,148,150,151,152,153,154,155,156,158,159,165,168,169,172,174,175,176,177,178,179,180,182,183,184,185,186,187,189,191,192,194,196,197,198,199,200,201,202,203,216,226,233,241,242,243,246,248,249,250,252,259,260,261,262,263,264,266,267,269,270,272,276,277,279,281,284,291,305,306,326,327,333,334,342,343,363,364,366,369,370,371,377,379,380,381,382,383,384,385,386,392,393,395,397,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,430,431,432,433,437,441,442,443,446,447,448,449,454,456,457,459,464,466,467,472,473,474,482,483,486,487,488,489,490,491,494,502,503,505,506,512,513,],[-106,-102,-117,-96,-105,-108,-116,-29,-113,-216,-111,-52,-104,-109,-101,-94,-110,-114,-107,-97,-98,-99,-95,-100,-93,-112,-91,-103,-304,-115,-147,-148,-122,110,-92,-124,-53,-130,-131,-88,-118,-87,-37,139,-89,-157,-158,-90,-54,-120,-159,-161,-28,-27,-155,151,-152,-170,190,-289,193,-304,-165,-157,-128,-55,-30,-160,-162,151,-149,-153,-303,151,-123,-291,-279,-278,-281,-254,-217,-297,-280,-290,-292,-294,-300,-172,-298,-252,-233,-231,-125,-266,-293,-296,-295,-36,-35,-169,-1,-45,-56,-2,-183,-167,-185,-168,-214,-289,360,-132,-129,-142,-127,-126,367,-144,-119,-38,-121,-150,-230,-156,-252,-154,-151,-301,-258,-257,-275,-274,-256,-255,391,-299,-304,360,-171,-166,-57,-184,-31,-34,360,-133,-146,-134,-44,-43,453,-269,455,-287,-272,-273,-270,-271,360,-175,-173,-218,-182,-183,-282,-237,-243,-244,-235,-238,-248,360,-247,-240,-251,-239,-236,-246,-241,-249,-250,-242,-245,-234,-188,-190,-186,-192,-33,-32,360,360,360,-215,-143,-145,-39,-42,-259,-268,-267,-174,-253,-51,-50,-191,-187,-189,-41,-40,-288,-176,504,-232,-46,-49,360,-283,-276,-48,-47,360,-277,]),'TYPEDEF':([0,3,4,5,6,7,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,65,69,71,75,77,78,79,80,81,82,84,86,89,93,94,96,120,125,126,127,141,145,150,152,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,241,253,261,267,331,335,342,343,346,351,352,355,356,357,362,364,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[34,34,-106,-102,-67,-66,-117,-96,-105,-108,-116,-63,34,-29,-113,-216,-111,-52,-104,-109,-101,34,-94,34,34,-110,-114,-107,-97,-64,-65,-98,-99,-68,34,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-92,34,-53,34,-82,34,-61,-69,-81,-130,-131,-88,-87,-89,34,-90,34,-70,34,-83,34,-30,-149,-303,-36,-35,34,34,-78,-194,-72,-74,-195,-75,34,-193,-76,-77,-73,-132,-71,-150,-151,34,34,-31,-34,-197,-209,-210,-213,-196,34,-212,-133,-134,34,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'DO':([40,58,80,81,126,152,214,217,219,221,222,223,225,228,232,234,235,238,346,351,352,354,355,356,361,362,434,435,438,444,445,475,477,480,481,495,498,499,510,514,515,517,519,520,521,],[-68,-302,-69,-81,214,-303,214,-78,-194,-72,-74,-195,-75,214,-193,-76,-77,-73,-197,-209,-210,214,-213,-196,214,-212,-208,214,-198,-200,-211,-199,214,214,214,-204,-203,-201,214,-205,214,-202,-207,214,-206,]),'WSTRING_LITERAL':([9,15,40,54,58,70,80,81,102,103,104,111,122,123,124,126,142,144,147,149,152,159,160,161,162,163,164,166,167,170,171,173,177,181,188,195,208,209,210,213,214,217,219,221,222,223,225,228,232,234,235,237,238,247,256,257,258,265,269,271,273,278,280,285,287,288,290,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,177,177,-28,-304,177,-304,177,-162,177,-303,269,-263,-265,-260,177,177,-264,177,177,-304,-262,-300,177,-261,177,-261,177,177,177,177,-78,-194,-72,-74,-195,-75,177,-193,-76,-77,177,-73,177,177,-28,-304,177,-301,177,177,177,177,177,177,-12,-11,-226,-220,177,-221,-225,-219,-223,-222,-224,-229,-228,-227,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,-261,-304,177,-197,-209,-210,177,177,-213,-196,177,177,177,177,177,-212,177,-261,177,177,-177,-304,177,177,-28,-304,-261,-208,177,-198,177,-200,-211,177,177,177,-11,-304,177,-261,177,177,-199,177,177,177,177,177,-204,177,-203,-201,177,-304,177,177,-205,177,-202,-207,177,-206,]),'BREAK':([40,58,80,81,126,152,214,217,219,221,222,223,225,228,232,234,235,238,346,351,352,354,355,356,361,362,434,435,438,444,445,475,477,480,481,495,498,499,510,514,515,517,519,520,521,],[-68,-302,-69,-81,215,-303,215,-78,-194,-72,-74,-195,-75,215,-193,-76,-77,-73,-197,-209,-210,215,-213,-196,215,-212,-208,215,-198,-200,-211,-199,215,215,215,-204,-203,-201,215,-205,215,-202,-207,215,-206,]),'VOLATILE':([0,3,4,5,6,7,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,53,54,55,57,58,65,69,70,71,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,103,120,123,124,125,126,127,129,130,131,132,133,134,135,136,137,141,142,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,257,258,261,265,267,268,271,280,305,331,332,335,342,343,346,351,352,355,356,357,362,364,365,369,398,425,426,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[9,9,-106,-102,-67,-66,-117,-96,-105,-108,-116,-63,9,-29,-113,-216,-111,-52,-104,-109,-101,9,-94,9,9,-110,-114,-107,-97,-64,-65,-98,-99,-68,9,-95,-100,-60,-93,-112,-91,-103,-62,9,-115,-147,-148,-302,-92,9,9,-53,9,-82,9,-61,-69,-81,-130,9,-131,-88,-87,-89,9,-90,-161,9,9,9,9,-70,9,-83,9,-137,-140,-141,9,9,-128,9,9,9,9,-30,-162,-149,-303,9,-36,-35,9,9,-78,-194,-72,-74,-195,-75,9,-193,-76,-77,-73,9,-138,-132,-129,-127,-126,9,-71,9,9,-150,9,-151,9,9,9,9,9,9,9,-31,-34,-197,-209,-210,-213,-196,9,-212,-133,-139,-134,9,9,9,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'OR':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,312,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-237,-243,-244,-235,-238,-248,-247,-240,312,-239,-236,-246,-241,-249,312,-242,-245,-234,-259,-268,-267,-253,-283,-276,-277,]),'CONTINUE':([40,58,80,81,126,152,214,217,219,221,222,223,225,228,232,234,235,238,346,351,352,354,355,356,361,362,434,435,438,444,445,475,477,480,481,495,498,499,510,514,515,517,519,520,521,],[-68,-302,-69,-81,218,-303,218,-78,-194,-72,-74,-195,-75,218,-193,-76,-77,-73,-197,-209,-210,218,-213,-196,218,-212,-208,218,-198,-200,-211,-199,218,218,218,-204,-203,-201,218,-205,218,-202,-207,218,-206,]),'LSHIFTEQUAL':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,292,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-259,-268,-267,-253,-283,-276,-277,]),'STRING_LITERAL':([9,15,40,54,58,70,80,81,102,103,104,111,122,123,124,126,142,144,147,149,152,160,161,162,163,164,166,167,170,171,172,173,179,181,188,195,208,209,210,213,214,217,219,221,222,223,225,228,232,234,235,237,238,247,256,257,258,265,271,273,278,280,285,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,179,179,-28,-304,179,-304,179,-162,179,-303,-263,-265,-260,179,179,-264,179,179,-304,291,-262,-298,179,-261,179,-261,179,179,179,179,-78,-194,-72,-74,-195,-75,179,-193,-76,-77,179,-73,179,179,-28,-304,179,179,179,179,179,179,179,-12,-11,-299,-226,-220,179,-221,-225,-219,-223,-222,-224,-229,-228,-227,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,-261,-304,179,-197,-209,-210,179,179,-213,-196,179,179,179,179,179,-212,179,-261,179,179,-177,-304,179,179,-28,-304,-261,-208,179,-198,179,-200,-211,179,179,179,-11,-304,179,-261,179,179,-199,179,179,179,179,179,-204,179,-203,-201,179,-304,179,179,-205,179,-202,-207,179,-206,]),'MOD':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,318,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,318,318,318,-235,318,318,318,318,318,318,-236,318,318,318,318,318,318,-234,-259,-268,-267,-253,-283,-276,-277,]),'ARROW':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,185,186,187,189,226,269,276,277,291,379,382,383,384,385,400,456,457,502,503,513,],[-289,-303,-291,-279,-278,-281,274,-297,-280,-290,-292,-294,-300,-298,-266,-293,-296,-295,-289,-301,-275,-274,-299,-269,-272,-273,-270,-271,-282,-268,-267,-283,-276,-277,]),'LPAREN':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,65,68,70,71,72,74,78,79,80,81,82,84,86,89,90,91,93,96,97,98,101,102,103,104,110,111,116,120,122,123,124,125,126,135,136,138,139,142,144,145,146,147,149,150,152,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,179,181,185,186,187,188,189,191,192,195,197,198,200,202,204,208,209,210,213,214,217,219,220,221,222,223,225,226,228,229,230,231,232,234,235,237,238,241,242,246,247,248,253,256,257,258,259,261,265,267,269,271,273,276,277,278,280,285,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,333,334,336,339,342,343,346,351,352,353,354,355,356,357,358,359,360,361,362,364,367,368,369,370,371,373,374,375,379,382,383,384,385,390,391,396,398,399,400,420,421,424,425,426,429,430,431,432,433,434,435,436,438,439,444,445,448,449,452,455,456,457,460,461,463,465,466,467,469,470,471,472,473,474,475,476,477,479,480,481,482,483,490,491,495,496,498,499,501,502,503,504,505,506,509,510,513,514,515,517,519,520,521,],[46,-304,-106,-102,-67,-66,-117,-96,-105,46,-108,-116,-63,-304,-29,-113,-216,-111,69,-104,-109,-101,46,-304,-94,46,-110,-114,-107,-97,-64,-65,-98,-99,-68,98,-95,-100,46,-60,-93,-112,-91,-103,-62,-304,-115,-147,-148,-302,-10,-9,-85,-92,-84,-304,69,-86,46,98,-61,-69,-81,-130,-131,-88,-87,-37,98,-89,-90,141,98,-159,-161,-28,-27,98,181,-289,204,181,-28,-304,-70,181,-128,98,141,98,-304,181,-30,-160,-162,265,-149,-303,-291,-279,268,-278,-281,-263,-265,-260,271,265,273,-264,280,-297,280,-304,-280,-262,-290,-292,-294,-300,-298,181,-266,-293,-296,-261,-295,-36,-35,181,-45,331,204,335,204,-261,181,181,265,181,-78,-194,353,-72,-74,-195,-75,-289,181,357,358,359,-193,-76,-77,181,-73,-132,-129,-127,265,-126,-71,181,-28,-304,-38,-150,181,-151,-301,181,181,-275,-274,181,181,181,265,-12,-11,-299,-226,-220,181,-221,-225,-219,-223,-222,-224,-229,-228,-227,398,265,265,265,265,265,265,181,265,265,265,265,265,265,265,265,265,265,265,265,-261,-304,331,335,181,204,-31,-34,-197,-209,-210,181,181,-213,-196,181,181,181,181,181,-212,-133,98,265,-134,-44,-43,-261,181,181,-269,-272,-273,-270,-271,-177,-304,265,398,398,-282,-188,-190,181,-28,-304,-261,-186,-192,-33,-32,-208,181,476,-198,181,-200,-211,-39,-42,265,181,-268,-267,181,-11,-304,265,-51,-50,-261,181,181,-191,-187,-189,-199,181,181,181,181,181,-41,-40,-46,-49,-204,181,-203,-201,181,-283,-276,-304,-48,-47,181,181,-277,-205,181,-202,-207,181,-206,]),'REGISTER':([0,3,4,5,6,7,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,65,69,71,75,77,78,79,80,81,82,84,86,89,93,94,96,120,125,126,127,141,145,150,152,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,241,253,261,267,331,335,342,343,346,351,352,355,356,357,362,364,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[28,28,-106,-102,-67,-66,-117,-96,-105,-108,-116,-63,28,-29,-113,-216,-111,-52,-104,-109,-101,28,-94,28,28,-110,-114,-107,-97,-64,-65,-98,-99,-68,28,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-92,28,-53,28,-82,28,-61,-69,-81,-130,-131,-88,-87,-89,28,-90,28,-70,28,-83,28,-30,-149,-303,-36,-35,28,28,-78,-194,-72,-74,-195,-75,28,-193,-76,-77,-73,-132,-71,-150,-151,28,28,-31,-34,-197,-209,-210,-213,-196,28,-212,-133,-134,28,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'TIMESEQUAL':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,295,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-259,-268,-267,-253,-283,-276,-277,]),'OREQUAL':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,301,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-259,-268,-267,-253,-283,-276,-277,]),'INT_CONST_BIN':([9,15,40,54,58,70,80,81,102,103,104,111,122,123,124,126,142,144,147,149,152,160,161,162,163,164,166,167,170,171,173,181,188,195,208,209,210,213,214,217,219,221,222,223,225,228,232,234,235,237,238,247,256,257,258,265,271,273,278,280,285,287,288,290,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,186,186,-28,-304,186,-304,186,-162,186,-303,-263,-265,-260,186,186,-264,186,186,-304,-262,186,-261,186,-261,186,186,186,186,-78,-194,-72,-74,-195,-75,186,-193,-76,-77,186,-73,186,186,-28,-304,186,186,186,186,186,186,186,-12,-11,-226,-220,186,-221,-225,-219,-223,-222,-224,-229,-228,-227,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,-261,-304,186,-197,-209,-210,186,186,-213,-196,186,186,186,186,186,-212,186,-261,186,186,-177,-304,186,186,-28,-304,-261,-208,186,-198,186,-200,-211,186,186,186,-11,-304,186,-261,186,186,-199,186,186,186,186,186,-204,186,-203,-201,186,-304,186,186,-205,186,-202,-207,186,-206,]),'WHILE':([40,58,80,81,126,152,214,217,219,221,222,223,225,228,232,234,235,238,346,349,351,352,354,355,356,361,362,434,435,438,444,445,475,477,480,481,495,498,499,510,514,515,517,519,520,521,],[-68,-302,-69,-81,220,-303,220,-78,-194,-72,-74,-195,-75,220,-193,-76,-77,-73,-197,436,-209,-210,220,-213,-196,220,-212,-208,220,-198,-200,-211,-199,220,220,220,-204,-203,-201,220,-205,220,-202,-207,220,-206,]),'CHAR_CONST':([9,15,40,54,58,70,80,81,102,103,104,111,122,123,124,126,142,144,147,149,152,160,161,162,163,164,166,167,170,171,173,181,188,195,208,209,210,213,214,217,219,221,222,223,225,228,232,234,235,237,238,247,256,257,258,265,271,273,278,280,285,287,288,290,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,187,187,-28,-304,187,-304,187,-162,187,-303,-263,-265,-260,187,187,-264,187,187,-304,-262,187,-261,187,-261,187,187,187,187,-78,-194,-72,-74,-195,-75,187,-193,-76,-77,187,-73,187,187,-28,-304,187,187,187,187,187,187,187,-12,-11,-226,-220,187,-221,-225,-219,-223,-222,-224,-229,-228,-227,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,-261,-304,187,-197,-209,-210,187,187,-213,-196,187,187,187,187,187,-212,187,-261,187,187,-177,-304,187,187,-28,-304,-261,-208,187,-198,187,-200,-211,187,187,187,-11,-304,187,-261,187,187,-199,187,187,187,187,187,-204,187,-203,-201,187,-304,187,187,-205,187,-202,-207,187,-206,]),'VOID':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,59,60,61,65,68,69,71,72,74,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,113,120,125,126,127,129,130,131,132,133,134,135,136,137,141,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,261,265,267,268,271,280,305,331,335,342,343,346,351,352,355,356,357,362,364,365,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[39,-304,-106,-102,-67,-66,-117,-96,-105,39,-108,-116,-63,-304,-29,-113,-216,-111,-52,-104,-109,-101,-304,-94,39,39,-110,-114,-107,-97,-64,-65,-98,-99,-68,39,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-10,-9,-85,-92,-84,39,-53,-86,39,39,-82,39,-61,-69,-81,-130,39,-131,-88,-87,-89,39,-90,-161,39,39,-70,39,-83,39,-137,-140,-141,39,39,-128,39,39,39,-30,-162,-149,-303,39,-36,-35,39,39,-78,-194,-72,-74,-195,-75,39,-193,-76,-77,-73,39,-138,-132,-129,-127,-126,39,-71,-150,39,-151,39,39,39,39,39,39,-31,-34,-197,-209,-210,-213,-196,39,-212,-133,-139,-134,39,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'ANDEQUAL':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,302,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-259,-268,-267,-253,-283,-276,-277,]),'MINUS':([9,15,40,54,58,70,80,81,102,103,104,111,116,122,123,124,126,142,144,147,149,152,155,156,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,179,180,181,182,183,185,186,187,188,189,195,208,209,210,213,214,217,219,221,222,223,225,226,228,232,234,235,237,238,247,256,257,258,264,265,269,270,271,272,273,276,277,278,279,280,281,285,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,379,382,383,384,385,390,391,396,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,424,425,426,429,434,435,438,439,444,445,452,454,455,456,457,460,461,463,464,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,502,503,504,509,510,513,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,160,-289,160,-28,-304,160,-304,160,-162,160,-303,-291,-279,-278,-281,-263,-265,-260,160,160,-254,-264,160,-297,160,-304,-280,-262,-290,-292,-294,-300,-298,-252,160,-233,311,-266,-293,-296,-261,-295,160,-261,160,160,160,160,-78,-194,-72,-74,-195,-75,-289,160,-193,-76,-77,160,-73,160,160,-28,-304,-252,160,-301,-258,160,-257,160,-275,-274,160,-256,160,-255,160,160,-12,-11,-299,-226,-220,160,-221,-225,-219,-223,-222,-224,-229,-228,-227,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,-261,-304,160,-197,-209,-210,160,160,-213,-196,160,160,160,160,160,-212,160,-261,160,160,-269,-272,-273,-270,-271,-177,-304,160,-282,-237,311,311,-235,-238,311,311,311,311,311,-236,311,311,311,311,311,311,-234,160,-28,-304,-261,-208,160,-198,160,-200,-211,160,-259,160,-268,-267,160,-11,-304,-253,160,-261,160,160,-199,160,160,160,160,160,-204,160,-203,-201,160,-283,-276,-304,160,160,-277,-205,160,-202,-207,160,-206,]),'UNION':([0,3,6,7,9,10,12,15,16,17,18,22,27,28,29,30,34,35,37,38,40,44,47,48,52,54,58,59,60,61,68,69,71,72,74,75,77,79,80,81,83,94,102,113,125,126,127,129,130,131,132,133,134,137,141,145,147,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,251,253,265,268,271,280,331,335,342,343,346,351,352,355,356,357,362,365,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[36,-304,-67,-66,-117,-96,36,-116,-63,-304,-29,-52,-304,-94,36,36,-97,-64,-65,-98,-68,-95,-60,-93,-62,-115,-302,-10,-9,-85,-84,36,-53,-86,36,36,-82,-61,-69,-81,36,36,-161,36,-70,36,-83,36,-137,-140,-141,36,36,36,36,-30,-162,-303,36,-36,-35,36,36,-78,-194,-72,-74,-195,-75,36,-193,-76,-77,-73,36,-138,36,-71,36,36,36,36,36,36,-31,-34,-197,-209,-210,-213,-196,36,-212,-139,36,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'LONG':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,59,60,61,65,68,69,71,72,74,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,113,120,125,126,127,129,130,131,132,133,134,135,136,137,141,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,261,265,267,268,271,280,305,331,335,342,343,346,351,352,355,356,357,362,364,365,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[23,-304,-106,-102,-67,-66,-117,-96,-105,23,-108,-116,-63,-304,-29,-113,-216,-111,-52,-104,-109,-101,-304,-94,23,23,-110,-114,-107,-97,-64,-65,-98,-99,-68,23,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-10,-9,-85,-92,-84,23,-53,-86,23,23,-82,23,-61,-69,-81,-130,23,-131,-88,-87,-89,23,-90,-161,23,23,-70,23,-83,23,-137,-140,-141,23,23,-128,23,23,23,-30,-162,-149,-303,23,-36,-35,23,23,-78,-194,-72,-74,-195,-75,23,-193,-76,-77,-73,23,-138,-132,-129,-127,-126,23,-71,-150,23,-151,23,23,23,23,23,23,-31,-34,-197,-209,-210,-213,-196,23,-212,-133,-139,-134,23,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'SHORT':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,59,60,61,65,68,69,71,72,74,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,113,120,125,126,127,129,130,131,132,133,134,135,136,137,141,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,261,265,267,268,271,280,305,331,335,342,343,346,351,352,355,356,357,362,364,365,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[5,-304,-106,-102,-67,-66,-117,-96,-105,5,-108,-116,-63,-304,-29,-113,-216,-111,-52,-104,-109,-101,-304,-94,5,5,-110,-114,-107,-97,-64,-65,-98,-99,-68,5,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-10,-9,-85,-92,-84,5,-53,-86,5,5,-82,5,-61,-69,-81,-130,5,-131,-88,-87,-89,5,-90,-161,5,5,-70,5,-83,5,-137,-140,-141,5,5,-128,5,5,5,-30,-162,-149,-303,5,-36,-35,5,5,-78,-194,-72,-74,-195,-75,5,-193,-76,-77,-73,5,-138,-132,-129,-127,-126,5,-71,-150,5,-151,5,5,5,5,5,5,-31,-34,-197,-209,-210,-213,-196,5,-212,-133,-139,-134,5,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'PERIOD':([58,116,152,155,156,158,159,165,169,171,172,174,175,176,177,179,185,186,187,189,226,269,276,277,283,289,291,379,382,383,384,385,388,389,391,400,456,457,462,463,484,485,502,503,504,511,513,518,],[-302,-289,-303,-291,-279,-278,-281,275,-297,282,-280,-290,-292,-294,-300,-298,-266,-293,-296,-295,-289,-301,-275,-274,282,-178,-299,-269,-272,-273,-270,-271,-181,-179,282,-282,-268,-267,-180,282,500,-284,-283,-276,282,-285,-277,-286,]),'PLUSEQUAL':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,300,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-259,-268,-267,-253,-283,-276,-277,]),'FLOAT':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,59,60,61,65,68,69,71,72,74,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,113,120,125,126,127,129,130,131,132,133,134,135,136,137,141,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,261,265,267,268,271,280,305,331,335,342,343,346,351,352,355,356,357,362,364,365,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[11,-304,-106,-102,-67,-66,-117,-96,-105,11,-108,-116,-63,-304,-29,-113,-216,-111,-52,-104,-109,-101,-304,-94,11,11,-110,-114,-107,-97,-64,-65,-98,-99,-68,11,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-10,-9,-85,-92,-84,11,-53,-86,11,11,-82,11,-61,-69,-81,-130,11,-131,-88,-87,-89,11,-90,-161,11,11,-70,11,-83,11,-137,-140,-141,11,11,-128,11,11,11,-30,-162,-149,-303,11,-36,-35,11,11,-78,-194,-72,-74,-195,-75,11,-193,-76,-77,-73,11,-138,-132,-129,-127,-126,11,-71,-150,11,-151,11,11,11,11,11,11,-31,-34,-197,-209,-210,-213,-196,11,-212,-133,-139,-134,11,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'LBRACKET':([4,5,9,10,11,14,15,18,19,20,21,22,23,24,25,28,31,32,33,34,38,39,44,45,48,49,50,51,53,54,55,57,58,65,71,82,84,86,89,90,93,96,97,101,102,103,104,116,120,135,138,145,146,147,150,152,155,156,158,159,165,169,171,172,174,175,176,177,179,185,186,187,189,191,192,197,198,200,202,204,226,241,242,246,248,259,261,267,269,276,277,283,289,291,305,333,334,339,342,343,364,369,370,371,379,382,383,384,385,388,389,391,398,399,400,420,421,430,431,432,433,448,449,456,457,462,463,466,467,472,473,474,482,483,484,485,490,491,502,503,504,505,506,511,513,518,],[-106,-102,-117,-96,-105,-108,-116,-29,-113,-216,-111,70,-104,-109,-101,-94,-110,-114,-107,-97,-98,-99,-95,-100,-93,-112,-91,-103,-304,-115,-147,-148,-302,-92,70,-130,-131,-88,-87,-37,-89,-90,142,-159,-161,-28,-27,-289,195,-128,142,-30,-160,-162,-149,-303,-291,-279,-278,-281,278,-297,287,-280,-290,-292,-294,-300,-298,-266,-293,-296,-295,-36,-35,-45,332,195,336,195,-289,-132,-129,-127,-126,-38,-150,-151,-301,-275,-274,287,-178,-299,195,332,336,195,-31,-34,-133,-134,-44,-43,-269,-272,-273,-270,-271,-181,-179,287,195,195,-282,-188,-190,-186,-192,-33,-32,-39,-42,-268,-267,-180,287,-51,-50,-191,-187,-189,-41,-40,501,-284,-46,-49,-283,-276,287,-48,-47,-285,-277,-286,]),'WCHAR_CONST':([9,15,40,54,58,70,80,81,102,103,104,111,122,123,124,126,142,144,147,149,152,160,161,162,163,164,166,167,170,171,173,181,188,195,208,209,210,213,214,217,219,221,222,223,225,228,232,234,235,237,238,247,256,257,258,265,271,273,278,280,285,287,288,290,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,169,169,-28,-304,169,-304,169,-162,169,-303,-263,-265,-260,169,169,-264,169,169,-304,-262,169,-261,169,-261,169,169,169,169,-78,-194,-72,-74,-195,-75,169,-193,-76,-77,169,-73,169,169,-28,-304,169,169,169,169,169,169,169,-12,-11,-226,-220,169,-221,-225,-219,-223,-222,-224,-229,-228,-227,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,-261,-304,169,-197,-209,-210,169,169,-213,-196,169,169,169,169,169,-212,169,-261,169,169,-177,-304,169,169,-28,-304,-261,-208,169,-198,169,-200,-211,169,169,169,-11,-304,169,-261,169,169,-199,169,169,169,169,169,-204,169,-203,-201,169,-304,169,169,-205,169,-202,-207,169,-206,]),'AND':([9,15,40,54,58,70,80,81,102,103,104,111,116,122,123,124,126,142,144,147,149,152,155,156,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,179,180,181,182,183,185,186,187,188,189,195,208,209,210,213,214,217,219,221,222,223,225,226,228,232,234,235,237,238,247,256,257,258,264,265,269,270,271,272,273,276,277,278,279,280,281,285,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,379,382,383,384,385,390,391,396,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,424,425,426,429,434,435,438,439,444,445,452,454,455,456,457,460,461,463,464,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,502,503,504,509,510,513,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,162,-289,162,-28,-304,162,-304,162,-162,162,-303,-291,-279,-278,-281,-263,-265,-260,162,162,-254,-264,162,-297,162,-304,-280,-262,-290,-292,-294,-300,-298,-252,162,-233,314,-266,-293,-296,-261,-295,162,-261,162,162,162,162,-78,-194,-72,-74,-195,-75,-289,162,-193,-76,-77,162,-73,162,162,-28,-304,-252,162,-301,-258,162,-257,162,-275,-274,162,-256,162,-255,162,162,-12,-11,-299,-226,-220,162,-221,-225,-219,-223,-222,-224,-229,-228,-227,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,-261,-304,162,-197,-209,-210,162,162,-213,-196,162,162,162,162,162,-212,162,-261,162,162,-269,-272,-273,-270,-271,-177,-304,162,-282,-237,-243,-244,-235,-238,314,-247,-240,314,-239,-236,-246,-241,314,314,-242,-245,-234,162,-28,-304,-261,-208,162,-198,162,-200,-211,162,-259,162,-268,-267,162,-11,-304,-253,162,-261,162,162,-199,162,162,162,162,162,-204,162,-203,-201,162,-283,-276,-304,162,162,-277,-205,162,-202,-207,162,-206,]),'SIGNED':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,59,60,61,65,68,69,71,72,74,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,113,120,125,126,127,129,130,131,132,133,134,135,136,137,141,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,261,265,267,268,271,280,305,331,335,342,343,346,351,352,355,356,357,362,364,365,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[14,-304,-106,-102,-67,-66,-117,-96,-105,14,-108,-116,-63,-304,-29,-113,-216,-111,-52,-104,-109,-101,-304,-94,14,14,-110,-114,-107,-97,-64,-65,-98,-99,-68,14,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-10,-9,-85,-92,-84,14,-53,-86,14,14,-82,14,-61,-69,-81,-130,14,-131,-88,-87,-89,14,-90,-161,14,14,-70,14,-83,14,-137,-140,-141,14,14,-128,14,14,14,-30,-162,-149,-303,14,-36,-35,14,14,-78,-194,-72,-74,-195,-75,14,-193,-76,-77,-73,14,-138,-132,-129,-127,-126,14,-71,-150,14,-151,14,14,14,14,14,14,-31,-34,-197,-209,-210,-213,-196,14,-212,-133,-139,-134,14,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'__INT128':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,59,60,61,65,68,69,71,72,74,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,113,120,125,126,127,129,130,131,132,133,134,135,136,137,141,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,261,265,267,268,271,280,305,331,335,342,343,346,351,352,355,356,357,362,364,365,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[31,-304,-106,-102,-67,-66,-117,-96,-105,31,-108,-116,-63,-304,-29,-113,-216,-111,-52,-104,-109,-101,-304,-94,31,31,-110,-114,-107,-97,-64,-65,-98,-99,-68,31,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-10,-9,-85,-92,-84,31,-53,-86,31,31,-82,31,-61,-69,-81,-130,31,-131,-88,-87,-89,31,-90,-161,31,31,-70,31,-83,31,-137,-140,-141,31,31,-128,31,31,31,-30,-162,-149,-303,31,-36,-35,31,31,-78,-194,-72,-74,-195,-75,31,-193,-76,-77,-73,31,-138,-132,-129,-127,-126,31,-71,-150,31,-151,31,31,31,31,31,31,-31,-34,-197,-209,-210,-213,-196,31,-212,-133,-139,-134,31,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'INT_CONST_HEX':([9,15,40,54,58,70,80,81,102,103,104,111,122,123,124,126,142,144,147,149,152,160,161,162,163,164,166,167,170,171,173,181,188,195,208,209,210,213,214,217,219,221,222,223,225,228,232,234,235,237,238,247,256,257,258,265,271,273,278,280,285,287,288,290,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,175,175,-28,-304,175,-304,175,-162,175,-303,-263,-265,-260,175,175,-264,175,175,-304,-262,175,-261,175,-261,175,175,175,175,-78,-194,-72,-74,-195,-75,175,-193,-76,-77,175,-73,175,175,-28,-304,175,175,175,175,175,175,175,-12,-11,-226,-220,175,-221,-225,-219,-223,-222,-224,-229,-228,-227,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,-261,-304,175,-197,-209,-210,175,175,-213,-196,175,175,175,175,175,-212,175,-261,175,175,-177,-304,175,175,-28,-304,-261,-208,175,-198,175,-200,-211,175,175,175,-11,-304,175,-261,175,175,-199,175,175,175,175,175,-204,175,-203,-201,175,-304,175,175,-205,175,-202,-207,175,-206,]),'ID':([0,1,2,3,4,5,6,7,9,10,11,12,14,15,16,17,19,20,21,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,65,68,69,70,72,74,78,79,80,81,82,84,86,89,91,93,96,98,101,102,103,104,105,109,110,111,120,122,123,124,125,126,135,136,139,141,142,144,146,147,149,150,151,152,160,161,162,163,164,166,167,170,171,173,181,188,190,195,200,204,208,209,210,212,213,214,217,219,221,222,223,225,228,232,234,235,237,238,241,242,246,247,248,253,256,257,258,261,265,267,271,273,274,275,278,280,282,285,287,288,290,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,331,332,336,339,346,351,352,353,354,355,356,357,358,359,360,361,362,364,367,368,369,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,453,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,500,501,504,509,510,514,515,517,519,520,521,],[18,55,-135,-304,-106,-102,-67,-66,-117,-96,-105,18,-108,-116,-63,-304,-113,-216,-111,-104,-109,-101,18,-304,-94,18,-110,-114,-107,-97,-64,-136,-65,-98,-99,-68,82,18,-95,-100,18,-60,-93,-112,-91,-103,-62,-304,-115,-147,106,-148,-302,-10,-9,-85,-92,-84,116,-304,-86,18,18,-61,-69,-81,-130,-131,-88,-87,18,-89,-90,18,-159,-161,-28,-27,106,106,18,116,18,116,-28,-304,-70,226,-128,18,18,116,-304,116,-160,-162,116,-149,106,-303,-263,-265,-260,116,116,-264,116,116,-304,-262,116,-261,116,116,18,18,-261,116,116,347,116,226,-78,-194,-72,-74,-195,-75,226,-193,-76,-77,116,-73,-132,-129,-127,116,-126,-71,116,-28,-304,-150,116,-151,116,116,382,384,116,116,116,116,116,-12,-11,-226,-220,116,-221,-225,-219,-223,-222,-224,-229,-228,-227,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-261,116,-304,116,18,-197,-209,-210,116,226,-213,-196,116,116,116,116,226,-212,-133,18,116,-134,-261,116,116,-177,-304,116,116,-28,-304,-261,-208,226,-198,116,-200,-211,116,116,116,116,-11,-304,116,-261,116,116,-199,116,226,116,226,226,-204,116,-203,-201,116,116,-304,116,226,-205,226,-202,-207,226,-206,]),'ELSE':([40,80,152,217,221,222,225,234,235,238,346,351,352,355,362,434,438,444,445,475,495,498,499,514,517,519,521,],[-68,-69,-303,-78,-72,-74,-75,-76,-77,-73,-197,-209,-210,-213,-212,-208,-198,-200,-211,-199,-204,-203,510,-205,-202,-207,-206,]),'TYPEID':([0,1,2,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,47,48,49,50,51,52,53,54,55,57,58,59,60,61,65,68,69,71,72,74,75,77,78,79,80,81,82,83,84,86,89,91,93,94,96,98,101,102,103,104,110,113,120,125,126,127,129,130,131,132,133,134,135,136,137,139,141,145,146,147,150,152,181,191,192,193,200,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,261,265,267,268,271,274,275,280,331,335,342,343,346,351,352,355,356,357,362,364,365,367,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[20,57,-135,-304,-106,-102,-67,-66,-117,-96,-105,20,-108,-116,-63,-304,-29,-113,-216,-111,-52,-104,-109,-101,-304,-94,20,20,-110,-114,-107,-97,-64,-136,-65,-98,-99,-68,84,90,-95,-100,-60,-93,-112,-91,-103,-62,-304,-115,-147,-148,-302,-10,-9,-85,-92,-84,20,-53,-86,20,20,-82,90,-61,-69,-81,-130,20,-131,-88,-87,90,-89,20,-90,90,-159,-161,-28,-27,90,20,197,-70,20,-83,20,-137,-140,-141,20,20,-128,90,20,90,20,-30,-160,-162,-149,-303,20,-36,-35,20,197,20,-78,-194,-72,-74,-195,-75,20,-193,-76,-77,-73,20,-138,-132,-129,-127,-126,20,-71,-150,20,-151,20,20,383,385,20,20,20,-31,-34,-197,-209,-210,-213,-196,20,-212,-133,-139,90,-134,20,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'RETURN':([40,58,80,81,126,152,214,217,219,221,222,223,225,228,232,234,235,238,346,351,352,354,355,356,361,362,434,435,438,444,445,475,477,480,481,495,498,499,510,514,515,517,519,520,521,],[-68,-302,-69,-81,237,-303,237,-78,-194,-72,-74,-195,-75,237,-193,-76,-77,-73,-197,-209,-210,237,-213,-196,237,-212,-208,237,-198,-200,-211,-199,237,237,237,-204,-203,-201,237,-205,237,-202,-207,237,-206,]),'FOR':([40,58,80,81,126,152,214,217,219,221,222,223,225,228,232,234,235,238,346,351,352,354,355,356,361,362,434,435,438,444,445,475,477,480,481,495,498,499,510,514,515,517,519,520,521,],[-68,-302,-69,-81,229,-303,229,-78,-194,-72,-74,-195,-75,229,-193,-76,-77,-73,-197,-209,-210,229,-213,-196,229,-212,-208,229,-198,-200,-211,-199,229,229,229,-204,-203,-201,229,-205,229,-202,-207,229,-206,]),'SWITCH':([40,58,80,81,126,152,214,217,219,221,222,223,225,228,232,234,235,238,346,351,352,354,355,356,361,362,434,435,438,444,445,475,477,480,481,495,498,499,510,514,515,517,519,520,521,],[-68,-302,-69,-81,230,-303,230,-78,-194,-72,-74,-195,-75,230,-193,-76,-77,-73,-197,-209,-210,230,-213,-196,230,-212,-208,230,-198,-200,-211,-199,230,230,230,-204,-203,-201,230,-205,230,-202,-207,230,-206,]),'LAND':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,322,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-237,-243,-244,-235,-238,-248,-247,-240,322,-239,-236,-246,-241,-249,-250,-242,-245,-234,-259,-268,-267,-253,-283,-276,-277,]),'PLUSPLUS':([9,15,40,54,58,70,80,81,102,103,104,111,116,122,123,124,126,142,144,147,149,152,155,156,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,179,181,185,186,187,188,189,195,208,209,210,213,214,217,219,221,222,223,225,226,228,232,234,235,237,238,247,256,257,258,265,269,271,273,276,277,278,280,285,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,379,382,383,384,385,390,391,396,400,424,425,426,429,434,435,438,439,444,445,452,455,456,457,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,502,503,504,509,510,513,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,170,-289,170,-28,-304,170,-304,170,-162,170,-303,-291,-279,-278,-281,-263,-265,-260,170,170,277,-264,170,-297,170,-304,-280,-262,-290,-292,-294,-300,-298,170,-266,-293,-296,-261,-295,170,-261,170,170,170,170,-78,-194,-72,-74,-195,-75,-289,170,-193,-76,-77,170,-73,170,170,-28,-304,170,-301,170,170,-275,-274,170,170,170,170,-12,-11,-299,-226,-220,170,-221,-225,-219,-223,-222,-224,-229,-228,-227,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,-261,-304,170,-197,-209,-210,170,170,-213,-196,170,170,170,170,170,-212,170,-261,170,170,-269,-272,-273,-270,-271,-177,-304,170,-282,170,-28,-304,-261,-208,170,-198,170,-200,-211,170,170,-268,-267,170,-11,-304,170,-261,170,170,-199,170,170,170,170,170,-204,170,-203,-201,170,-283,-276,-304,170,170,-277,-205,170,-202,-207,170,-206,]),'IF':([40,58,80,81,126,152,214,217,219,221,222,223,225,228,232,234,235,238,346,351,352,354,355,356,361,362,434,435,438,444,445,475,477,480,481,495,498,499,510,514,515,517,519,520,521,],[-68,-302,-69,-81,231,-303,231,-78,-194,-72,-74,-195,-75,231,-193,-76,-77,-73,-197,-209,-210,231,-213,-196,231,-212,-208,231,-198,-200,-211,-199,231,231,231,-204,-203,-201,231,-205,231,-202,-207,231,-206,]),'_COMPLEX':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,59,60,61,65,68,69,71,72,74,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,113,120,125,126,127,129,130,131,132,133,134,135,136,137,141,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,261,265,267,268,271,280,305,331,335,342,343,346,351,352,355,356,357,362,364,365,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[33,-304,-106,-102,-67,-66,-117,-96,-105,33,-108,-116,-63,-304,-29,-113,-216,-111,-52,-104,-109,-101,-304,-94,33,33,-110,-114,-107,-97,-64,-65,-98,-99,-68,33,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-10,-9,-85,-92,-84,33,-53,-86,33,33,-82,33,-61,-69,-81,-130,33,-131,-88,-87,-89,33,-90,-161,33,33,-70,33,-83,33,-137,-140,-141,33,33,-128,33,33,33,-30,-162,-149,-303,33,-36,-35,33,33,-78,-194,-72,-74,-195,-75,33,-193,-76,-77,-73,33,-138,-132,-129,-127,-126,33,-71,-150,33,-151,33,33,33,33,33,33,-31,-34,-197,-209,-210,-213,-196,33,-212,-133,-139,-134,33,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'PLUS':([9,15,40,54,58,70,80,81,102,103,104,111,116,122,123,124,126,142,144,147,149,152,155,156,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,179,180,181,182,183,185,186,187,188,189,195,208,209,210,213,214,217,219,221,222,223,225,226,228,232,234,235,237,238,247,256,257,258,264,265,269,270,271,272,273,276,277,278,279,280,281,285,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,379,382,383,384,385,390,391,396,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,424,425,426,429,434,435,438,439,444,445,452,454,455,456,457,460,461,463,464,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,502,503,504,509,510,513,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,173,-289,173,-28,-304,173,-304,173,-162,173,-303,-291,-279,-278,-281,-263,-265,-260,173,173,-254,-264,173,-297,173,-304,-280,-262,-290,-292,-294,-300,-298,-252,173,-233,307,-266,-293,-296,-261,-295,173,-261,173,173,173,173,-78,-194,-72,-74,-195,-75,-289,173,-193,-76,-77,173,-73,173,173,-28,-304,-252,173,-301,-258,173,-257,173,-275,-274,173,-256,173,-255,173,173,-12,-11,-299,-226,-220,173,-221,-225,-219,-223,-222,-224,-229,-228,-227,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-261,-304,173,-197,-209,-210,173,173,-213,-196,173,173,173,173,173,-212,173,-261,173,173,-269,-272,-273,-270,-271,-177,-304,173,-282,-237,307,307,-235,-238,307,307,307,307,307,-236,307,307,307,307,307,307,-234,173,-28,-304,-261,-208,173,-198,173,-200,-211,173,-259,173,-268,-267,173,-11,-304,-253,173,-261,173,173,-199,173,173,173,173,173,-204,173,-203,-201,173,-283,-276,-304,173,173,-277,-205,173,-202,-207,173,-206,]),'INLINE':([0,3,4,5,6,7,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,65,69,71,75,77,78,79,80,81,82,84,86,89,93,94,96,120,125,126,127,141,145,150,152,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,241,253,261,267,331,335,342,343,346,351,352,355,356,357,362,364,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[38,38,-106,-102,-67,-66,-117,-96,-105,-108,-116,-63,38,-29,-113,-216,-111,-52,-104,-109,-101,38,-94,38,38,-110,-114,-107,-97,-64,-65,-98,-99,-68,38,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-92,38,-53,38,-82,38,-61,-69,-81,-130,-131,-88,-87,-89,38,-90,38,-70,38,-83,38,-30,-149,-303,-36,-35,38,38,-78,-194,-72,-74,-195,-75,38,-193,-76,-77,-73,-132,-71,-150,-151,38,38,-31,-34,-197,-209,-210,-213,-196,38,-212,-133,-134,38,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'FLOAT_CONST':([9,15,40,54,58,70,80,81,102,103,104,111,122,123,124,126,142,144,147,149,152,160,161,162,163,164,166,167,170,171,173,181,188,195,208,209,210,213,214,217,219,221,222,223,225,228,232,234,235,237,238,247,256,257,258,265,271,273,278,280,285,287,288,290,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,176,176,-28,-304,176,-304,176,-162,176,-303,-263,-265,-260,176,176,-264,176,176,-304,-262,176,-261,176,-261,176,176,176,176,-78,-194,-72,-74,-195,-75,176,-193,-76,-77,176,-73,176,176,-28,-304,176,176,176,176,176,176,176,-12,-11,-226,-220,176,-221,-225,-219,-223,-222,-224,-229,-228,-227,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,-261,-304,176,-197,-209,-210,176,176,-213,-196,176,176,176,176,176,-212,176,-261,176,176,-177,-304,176,176,-28,-304,-261,-208,176,-198,176,-200,-211,176,176,176,-11,-304,176,-261,176,176,-199,176,176,176,176,176,-204,176,-203,-201,176,-304,176,176,-205,176,-202,-207,176,-206,]),'CASE':([40,58,80,81,126,152,214,217,219,221,222,223,225,228,232,234,235,238,346,351,352,354,355,356,361,362,434,435,438,444,445,475,477,480,481,495,498,499,510,514,515,517,519,520,521,],[-68,-302,-69,-81,213,-303,213,-78,-194,-72,-74,-195,-75,213,-193,-76,-77,-73,-197,-209,-210,213,-213,-196,213,-212,-208,213,-198,-200,-211,-199,213,213,213,-204,-203,-201,213,-205,213,-202,-207,213,-206,]),'GT':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,309,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-237,-243,-244,-235,-238,309,309,-240,309,-239,-236,309,-241,309,309,-242,309,-234,-259,-268,-267,-253,-283,-276,-277,]),'MINUSMINUS':([9,15,40,54,58,70,80,81,102,103,104,111,116,122,123,124,126,142,144,147,149,152,155,156,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,179,181,185,186,187,188,189,195,208,209,210,213,214,217,219,221,222,223,225,226,228,232,234,235,237,238,247,256,257,258,265,269,271,273,276,277,278,280,285,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,379,382,383,384,385,390,391,396,400,424,425,426,429,434,435,438,439,444,445,452,455,456,457,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,502,503,504,509,510,513,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,167,-289,167,-28,-304,167,-304,167,-162,167,-303,-291,-279,-278,-281,-263,-265,-260,167,167,276,-264,167,-297,167,-304,-280,-262,-290,-292,-294,-300,-298,167,-266,-293,-296,-261,-295,167,-261,167,167,167,167,-78,-194,-72,-74,-195,-75,-289,167,-193,-76,-77,167,-73,167,167,-28,-304,167,-301,167,167,-275,-274,167,167,167,167,-12,-11,-299,-226,-220,167,-221,-225,-219,-223,-222,-224,-229,-228,-227,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,-261,-304,167,-197,-209,-210,167,167,-213,-196,167,167,167,167,167,-212,167,-261,167,167,-269,-272,-273,-270,-271,-177,-304,167,-282,167,-28,-304,-261,-208,167,-198,167,-200,-211,167,167,-268,-267,167,-11,-304,167,-261,167,167,-199,167,167,167,167,167,-204,167,-203,-201,167,-283,-276,-304,167,167,-277,-205,167,-202,-207,167,-206,]),'PPPRAGMA':([0,6,7,16,30,35,37,40,47,52,58,79,80,81,83,125,126,129,130,131,132,133,137,152,214,217,219,221,222,223,225,228,232,234,235,238,239,240,251,253,346,351,352,354,355,356,361,362,365,434,435,438,444,445,475,477,480,481,495,498,499,510,514,515,517,519,520,521,],[40,-67,-66,-63,40,-64,-65,-68,-60,-62,-302,-61,-69,-81,40,-70,40,40,-137,-140,-141,40,40,-303,40,-78,-194,-72,-74,-195,-75,40,-193,-76,-77,-73,40,-138,40,-71,-197,-209,-210,40,-213,-196,40,-212,-139,-208,40,-198,-200,-211,-199,40,40,40,-204,-203,-201,40,-205,40,-202,-207,40,-206,]),'LBRACE':([1,2,18,22,29,36,40,42,55,57,58,71,73,75,76,77,80,81,82,84,94,111,126,127,140,144,145,152,171,191,192,214,217,219,221,222,223,225,228,232,234,235,238,285,288,290,342,343,346,351,352,354,355,356,361,362,390,391,396,432,433,434,435,438,444,445,452,454,458,460,461,463,475,477,480,481,495,498,499,504,510,514,515,517,519,520,521,],[58,-135,-29,-52,-304,-136,-68,58,58,58,-302,-53,58,-8,-7,-82,-69,-81,58,58,-304,58,58,-83,58,58,-30,-303,-304,-36,-35,58,-78,-194,-72,-74,-195,-75,58,-193,-76,-77,-73,58,-12,-11,-31,-34,-197,-209,-210,58,-213,-196,58,-212,-177,-304,58,-33,-32,-208,58,-198,-200,-211,58,58,58,58,-11,-304,-199,58,58,58,-204,-203,-201,-304,58,-205,58,-202,-207,58,-206,]),'LSHIFT':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,315,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-237,315,315,-235,-238,315,315,-240,315,-239,-236,315,315,315,315,315,315,-234,-259,-268,-267,-253,-283,-276,-277,]),'STRUCT':([0,3,6,7,9,10,12,15,16,17,18,22,27,28,29,30,34,35,37,38,40,44,47,48,52,54,58,59,60,61,68,69,71,72,74,75,77,79,80,81,83,94,102,113,125,126,127,129,130,131,132,133,134,137,141,145,147,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,251,253,265,268,271,280,331,335,342,343,346,351,352,355,356,357,362,365,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[2,-304,-67,-66,-117,-96,2,-116,-63,-304,-29,-52,-304,-94,2,2,-97,-64,-65,-98,-68,-95,-60,-93,-62,-115,-302,-10,-9,-85,-84,2,-53,-86,2,2,-82,-61,-69,-81,2,2,-161,2,-70,2,-83,2,-137,-140,-141,2,2,2,2,-30,-162,-303,2,-36,-35,2,2,-78,-194,-72,-74,-195,-75,2,-193,-76,-77,-73,2,-138,2,-71,2,2,2,2,2,2,-31,-34,-197,-209,-210,-213,-196,2,-212,-139,2,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'STATIC':([0,3,4,5,6,7,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,65,69,70,71,75,77,78,79,80,81,82,84,86,89,93,94,96,102,120,123,125,126,127,141,142,145,147,150,152,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,241,253,257,261,267,331,332,335,342,343,346,351,352,355,356,357,362,364,369,398,425,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[44,44,-106,-102,-67,-66,-117,-96,-105,-108,-116,-63,44,-29,-113,-216,-111,-52,-104,-109,-101,44,-94,44,44,-110,-114,-107,-97,-64,-65,-98,-99,-68,44,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-92,44,124,-53,44,-82,44,-61,-69,-81,-130,-131,-88,-87,-89,44,-90,-161,44,209,-70,44,-83,44,258,-30,-162,-149,-303,-36,-35,44,44,-78,-194,-72,-74,-195,-75,44,-193,-76,-77,-73,-132,-71,374,-150,-151,44,426,44,-31,-34,-197,-209,-210,-213,-196,44,-212,-133,-134,44,470,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'EXTERN':([0,3,4,5,6,7,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,65,69,71,75,77,78,79,80,81,82,84,86,89,93,94,96,120,125,126,127,141,145,150,152,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,241,253,261,267,331,335,342,343,346,351,352,355,356,357,362,364,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[10,10,-106,-102,-67,-66,-117,-96,-105,-108,-116,-63,10,-29,-113,-216,-111,-52,-104,-109,-101,10,-94,10,10,-110,-114,-107,-97,-64,-65,-98,-99,-68,10,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-92,10,-53,10,-82,10,-61,-69,-81,-130,-131,-88,-87,-89,10,-90,10,-70,10,-83,10,-30,-149,-303,-36,-35,10,10,-78,-194,-72,-74,-195,-75,10,-193,-76,-77,-73,-132,-71,-150,-151,10,10,-31,-34,-197,-209,-210,-213,-196,10,-212,-133,-134,10,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'RSHIFT':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,317,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-237,317,317,-235,-238,317,317,-240,317,-239,-236,317,317,317,317,317,317,-234,-259,-268,-267,-253,-283,-276,-277,]),'$end':([0,6,7,8,13,16,30,35,37,40,47,52,79,80,81,125,152,253,346,],[-304,-67,-66,0,-59,-63,-58,-64,-65,-68,-60,-62,-61,-69,-81,-70,-303,-71,-197,]),'XOREQUAL':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,293,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-259,-268,-267,-253,-283,-276,-277,]),'MODEQUAL':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,298,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-259,-268,-267,-253,-283,-276,-277,]),'LT':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,320,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-237,-243,-244,-235,-238,320,320,-240,320,-239,-236,320,-241,320,320,-242,320,-234,-259,-268,-267,-253,-283,-276,-277,]),'INT_CONST_OCT':([9,15,40,54,58,70,80,81,102,103,104,111,122,123,124,126,142,144,147,149,152,160,161,162,163,164,166,167,170,171,173,181,188,195,208,209,210,213,214,217,219,221,222,223,225,228,232,234,235,237,238,247,256,257,258,265,271,273,278,280,285,287,288,290,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,155,155,-28,-304,155,-304,155,-162,155,-303,-263,-265,-260,155,155,-264,155,155,-304,-262,155,-261,155,-261,155,155,155,155,-78,-194,-72,-74,-195,-75,155,-193,-76,-77,155,-73,155,155,-28,-304,155,155,155,155,155,155,155,-12,-11,-226,-220,155,-221,-225,-219,-223,-222,-224,-229,-228,-227,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,-261,-304,155,-197,-209,-210,155,155,-213,-196,155,155,155,155,155,-212,155,-261,155,155,-177,-304,155,155,-28,-304,-261,-208,155,-198,155,-200,-211,155,155,155,-11,-304,155,-261,155,155,-199,155,155,155,155,155,-204,155,-203,-201,155,-304,155,155,-205,155,-202,-207,155,-206,]),'NE':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,319,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-237,-243,-244,-235,-238,319,319,-240,319,-239,-236,-246,-241,319,319,-242,-245,-234,-259,-268,-267,-253,-283,-276,-277,]),'DEFAULT':([40,58,80,81,126,152,214,217,219,221,222,223,225,228,232,234,235,238,346,351,352,354,355,356,361,362,434,435,438,444,445,475,477,480,481,495,498,499,510,514,515,517,519,520,521,],[-68,-302,-69,-81,236,-303,236,-78,-194,-72,-74,-195,-75,236,-193,-76,-77,-73,-197,-209,-210,236,-213,-196,236,-212,-208,236,-198,-200,-211,-199,236,236,236,-204,-203,-201,236,-205,236,-202,-207,236,-206,]),'_BOOL':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,47,48,49,50,51,52,54,55,57,58,59,60,61,65,68,69,71,72,74,75,77,78,79,80,81,82,83,84,86,89,93,94,96,102,113,120,125,126,127,129,130,131,132,133,134,135,136,137,141,145,147,150,152,181,191,192,193,204,217,219,221,222,223,225,228,232,234,235,238,239,240,241,242,246,248,251,253,261,265,267,268,271,280,305,331,335,342,343,346,351,352,355,356,357,362,364,365,369,398,432,433,434,438,444,445,475,495,498,499,514,517,519,521,],[45,-304,-106,-102,-67,-66,-117,-96,-105,45,-108,-116,-63,-304,-29,-113,-216,-111,-52,-104,-109,-101,-304,-94,45,45,-110,-114,-107,-97,-64,-65,-98,-99,-68,45,-95,-100,-60,-93,-112,-91,-103,-62,-115,-147,-148,-302,-10,-9,-85,-92,-84,45,-53,-86,45,45,-82,45,-61,-69,-81,-130,45,-131,-88,-87,-89,45,-90,-161,45,45,-70,45,-83,45,-137,-140,-141,45,45,-128,45,45,45,-30,-162,-149,-303,45,-36,-35,45,45,-78,-194,-72,-74,-195,-75,45,-193,-76,-77,-73,45,-138,-132,-129,-127,-126,45,-71,-150,45,-151,45,45,45,45,45,45,-31,-34,-197,-209,-210,-213,-196,45,-212,-133,-139,-134,45,-33,-32,-208,-198,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'EQ':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,182,183,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,-252,-233,324,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-237,-243,-244,-235,-238,324,324,-240,324,-239,-236,-246,-241,324,324,-242,-245,-234,-259,-268,-267,-253,-283,-276,-277,]),'TIMES':([0,3,4,5,6,7,9,10,11,12,14,15,16,17,19,20,21,23,24,25,27,28,30,31,32,33,34,35,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,65,68,70,72,74,78,79,80,81,82,84,86,89,93,96,98,101,102,103,104,110,111,116,120,122,123,124,125,126,135,136,139,142,144,147,149,150,152,155,156,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,179,180,181,182,183,185,186,187,188,189,195,204,208,209,210,213,214,217,219,221,222,223,225,226,228,232,234,235,237,238,241,242,246,247,248,253,256,257,258,261,264,265,267,269,270,271,272,273,276,277,278,279,280,281,285,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,364,367,368,369,373,374,375,379,382,383,384,385,390,391,396,398,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,424,425,426,429,434,435,438,439,444,445,452,454,455,456,457,460,461,463,464,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,502,503,504,509,510,513,514,515,517,519,520,521,],[53,-304,-106,-102,-67,-66,-117,-96,-105,53,-108,-116,-63,-304,-113,-216,-111,-104,-109,-101,-304,-94,53,-110,-114,-107,-97,-64,-65,-98,-99,-68,53,-95,-100,53,-60,-93,-112,-91,-103,-62,-304,-115,-147,-148,-302,-10,-9,-85,-92,-84,-304,-86,53,53,-61,-69,-81,-130,-131,-88,-87,-89,-90,53,53,-161,-28,-27,53,188,-289,53,208,-28,-304,-70,188,-128,53,53,-304,188,-162,188,-149,-303,-291,-279,-278,-281,-263,-265,-260,188,188,-254,-264,188,-297,188,-304,-280,-262,-290,-292,-294,-300,-298,-252,188,-233,325,-266,-293,-296,-261,-295,330,53,-261,188,188,188,188,-78,-194,-72,-74,-195,-75,-289,188,-193,-76,-77,188,-73,-132,-129,-127,188,-126,-71,373,-28,-304,-150,-252,188,-151,-301,-258,188,-257,188,-275,-274,188,-256,188,-255,188,188,-12,-11,-299,-226,-220,188,-221,-225,-219,-223,-222,-224,-229,-228,-227,53,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,-261,-304,429,-197,-209,-210,188,188,-213,-196,188,188,188,188,188,-212,-133,53,188,-134,-261,188,188,-269,-272,-273,-270,-271,-177,-304,188,53,-282,325,325,325,-235,325,325,325,325,325,325,-236,325,325,325,325,325,325,-234,469,-28,-304,-261,-208,188,-198,188,-200,-211,188,-259,188,-268,-267,188,-11,-304,-253,188,-261,188,188,-199,188,188,188,188,188,-204,188,-203,-201,188,-283,-276,-304,188,188,-277,-205,188,-202,-207,188,-206,]),'HEX_FLOAT_CONST':([9,15,40,54,58,70,80,81,102,103,104,111,122,123,124,126,142,144,147,149,152,160,161,162,163,164,166,167,170,171,173,181,188,195,208,209,210,213,214,217,219,221,222,223,225,228,232,234,235,237,238,247,256,257,258,265,271,273,278,280,285,287,288,290,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,332,336,346,351,352,353,354,355,356,357,358,359,360,361,362,368,373,374,375,390,391,396,424,425,426,429,434,435,438,439,444,445,452,455,460,461,463,465,469,470,471,475,476,477,479,480,481,495,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-117,-116,-68,-115,-302,-304,-69,-81,-161,-28,-27,189,189,-28,-304,189,-304,189,-162,189,-303,-263,-265,-260,189,189,-264,189,189,-304,-262,189,-261,189,-261,189,189,189,189,-78,-194,-72,-74,-195,-75,189,-193,-76,-77,189,-73,189,189,-28,-304,189,189,189,189,189,189,189,-12,-11,-226,-220,189,-221,-225,-219,-223,-222,-224,-229,-228,-227,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,-261,-304,189,-197,-209,-210,189,189,-213,-196,189,189,189,189,189,-212,189,-261,189,189,-177,-304,189,189,-28,-304,-261,-208,189,-198,189,-200,-211,189,189,189,-11,-304,189,-261,189,189,-199,189,189,189,189,189,-204,189,-203,-201,189,-304,189,189,-205,189,-202,-207,189,-206,]),'RSHIFTEQUAL':([116,152,155,156,158,159,165,169,172,174,175,176,177,179,180,185,186,187,189,226,264,269,270,272,276,277,279,281,291,379,382,383,384,385,400,454,456,457,464,502,503,513,],[-289,-303,-291,-279,-278,-281,-254,-297,-280,-290,-292,-294,-300,-298,303,-266,-293,-296,-295,-289,-252,-301,-258,-257,-275,-274,-256,-255,-299,-269,-272,-273,-270,-271,-282,-259,-268,-267,-253,-283,-276,-277,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'id_init_declarator':([12,74,],[62,62,]),'decl_body':([0,29,30,75,94,126,228,357,],[41,41,41,41,41,41,41,41,]),'brace_close':([107,133,148,153,211,239,251,286,391,488,504,],[150,241,261,267,346,364,369,393,459,503,513,]),'function_definition':([0,30,],[52,52,]),'declaration_list_opt':([29,94,],[73,140,]),'identifier':([69,111,122,126,141,144,149,163,164,167,170,181,190,195,209,210,213,214,228,237,247,256,265,271,273,278,280,282,285,287,294,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,331,336,353,354,357,358,359,360,361,368,374,375,396,424,435,439,452,453,455,460,465,470,471,476,477,479,480,481,496,500,501,509,510,515,520,],[112,158,158,158,112,158,158,158,158,158,158,158,326,158,158,158,158,158,158,158,158,158,158,158,158,158,158,388,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,112,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,485,158,158,158,158,158,158,158,158,158,158,158,511,158,158,158,158,158,]),'block_item_list_opt':([126,],[211,]),'declaration_specifiers_no_type':([0,3,17,27,29,30,69,75,94,126,141,193,204,228,331,335,357,398,],[12,59,59,59,74,12,113,74,74,74,113,113,113,74,113,113,74,113,]),'declaration_list':([29,94,],[75,75,]),'init_declarator':([43,78,110,139,],[88,88,154,252,]),'struct_declarator_list_opt':([136,],[245,]),'type_qualifier':([0,3,17,27,29,30,43,53,69,70,75,78,83,94,103,120,123,124,126,129,133,134,136,137,141,142,181,193,204,228,239,251,257,258,265,268,271,280,305,331,332,335,357,398,425,426,],[17,17,17,17,17,17,89,102,17,102,17,89,102,17,147,89,147,102,17,102,102,147,246,102,17,102,102,17,17,17,102,102,147,102,102,102,102,102,246,17,102,17,17,17,147,102,]),'conditional_expression':([111,122,126,144,149,181,195,209,210,213,214,228,237,247,256,265,271,273,278,280,285,287,294,313,336,353,354,357,358,359,360,361,368,374,375,424,435,439,455,460,465,470,471,476,477,479,480,481,496,501,509,510,515,520,],[168,168,168,168,262,168,168,168,168,262,168,168,168,262,168,168,168,168,168,168,168,262,168,168,168,168,168,168,168,168,168,168,262,168,168,168,168,168,168,168,489,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'direct_typeid_noparen_declarator':([120,200,],[198,333,]),'pointer':([0,12,30,43,46,74,78,98,101,110,120,136,139,204,305,367,398,],[26,26,26,91,26,26,91,91,146,91,200,91,91,339,399,91,399,]),'designation_opt':([171,391,463,504,],[285,460,285,460,]),'argument_expression_list':([273,],[380,]),'init_declarator_list':([43,78,],[92,92,]),'identifier_list_opt':([69,141,331,],[117,254,422,]),'enumerator_list':([56,105,109,],[107,148,153,]),'function_specifier':([0,3,17,27,29,30,43,69,75,78,94,120,126,141,193,204,228,331,335,357,398,],[27,27,27,27,27,27,93,27,27,93,27,93,27,27,27,27,27,27,27,27,27,]),'declarator':([43,78,110,136,139,367,],[99,99,99,250,99,250,]),'typeid_declarator':([43,78,98,110,136,139,367,],[95,95,143,95,95,95,95,]),'type_specifier_no_typeid':([0,12,29,30,43,69,74,75,78,83,94,113,120,126,129,133,134,136,137,141,181,193,204,228,239,251,265,268,271,280,305,331,335,357,398,],[32,32,32,32,96,32,32,32,96,32,32,32,96,32,32,32,32,248,32,32,32,32,32,32,32,32,32,32,32,32,248,32,32,32,32,]),'type_name':([181,265,268,271,280,],[304,376,377,378,387,]),'assignment_expression':([111,122,126,144,181,195,209,210,214,228,237,256,265,271,273,278,280,285,294,313,336,353,354,357,358,359,360,361,374,375,424,435,439,455,460,470,471,476,477,479,480,481,496,501,509,510,515,520,],[178,207,216,178,216,207,344,345,216,216,216,207,216,216,381,216,216,178,395,216,207,216,216,216,216,216,443,216,450,451,207,216,216,486,178,492,493,216,216,216,216,216,216,216,216,216,216,216,]),'pppragma_directive':([0,30,83,126,129,133,137,214,228,239,251,354,361,435,477,480,481,510,515,520,],[37,37,132,217,132,132,132,217,217,132,132,217,217,217,217,217,217,217,217,217,]),'direct_abstract_declarator':([120,200,204,305,339,398,399,],[202,334,202,202,334,202,334,]),'typeid_noparen_declarator':([120,],[203,]),'statement':([126,214,228,354,361,435,477,480,481,510,515,520,],[219,349,219,438,444,475,495,498,499,517,519,521,]),'unified_string_literal':([111,122,126,144,149,163,164,167,170,181,195,209,210,213,214,228,237,247,256,265,271,273,278,280,285,287,294,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,336,353,354,357,358,359,360,361,368,374,375,396,424,435,439,452,455,460,465,470,471,476,477,479,480,481,496,501,509,510,515,520,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'unary_expression':([111,122,126,144,149,163,164,167,170,181,195,209,210,213,214,228,237,247,256,265,271,273,278,280,285,287,294,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,336,353,354,357,358,359,360,361,368,374,375,396,424,435,439,452,455,460,465,470,471,476,477,479,480,481,496,501,509,510,515,520,],[180,180,180,180,264,270,264,279,281,180,180,180,180,264,180,180,180,264,180,180,180,180,180,180,180,264,180,264,264,264,264,264,264,180,264,264,264,264,264,264,264,264,264,264,264,264,180,180,180,180,180,180,180,180,264,180,180,264,180,180,180,264,180,180,264,180,180,180,180,180,180,180,180,180,180,180,180,180,]),'unified_wstring_literal':([111,122,126,144,149,163,164,167,170,181,195,209,210,213,214,228,237,247,256,265,271,273,278,280,285,287,294,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,336,353,354,357,358,359,360,361,368,374,375,396,424,435,439,452,455,460,465,470,471,476,477,479,480,481,496,501,509,510,515,520,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'assignment_operator':([180,],[294,]),'cast_expression':([111,122,126,144,149,164,181,195,209,210,213,214,228,237,247,256,265,271,273,278,280,285,287,294,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,336,353,354,357,358,359,360,361,368,374,375,396,424,435,439,452,455,460,465,470,471,476,477,479,480,481,496,501,509,510,515,520,],[182,182,182,182,182,272,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,464,182,182,182,464,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,]),'binary_expression':([111,122,126,144,149,181,195,209,210,213,214,228,237,247,256,265,271,273,278,280,285,287,294,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,336,353,354,357,358,359,360,361,368,374,375,424,435,439,455,460,465,470,471,476,477,479,480,481,496,501,509,510,515,520,],[183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,401,402,403,404,405,406,183,408,409,410,411,412,413,414,415,416,417,418,419,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,]),'typedef_name':([0,12,29,30,69,74,75,83,94,113,126,129,133,134,137,141,181,193,204,228,239,251,265,268,271,280,331,335,357,398,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'designator_list':([171,391,463,504,],[283,283,283,283,]),'initializer':([111,144,285,460,],[184,260,392,487,]),'id_init_declarator_list_opt':([12,74,],[67,67,]),'parameter_declaration':([69,141,193,204,331,335,398,],[121,121,327,121,121,121,121,]),'designator':([171,283,391,463,504,],[289,389,289,289,289,]),'type_qualifier_list_opt':([53,70,124,142,258,332,426,],[101,122,210,256,375,424,471,]),'labeled_statement':([126,214,228,354,361,435,477,480,481,510,515,520,],[221,221,221,221,221,221,221,221,221,221,221,221,]),'constant':([111,122,126,144,149,163,164,167,170,181,195,209,210,213,214,228,237,247,256,265,271,273,278,280,285,287,294,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,336,353,354,357,358,359,360,361,368,374,375,396,424,435,439,452,455,460,465,470,471,476,477,479,480,481,496,501,509,510,515,520,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'init_declarator_list_opt':([43,78,],[85,85,]),'translation_unit_or_empty':([0,],[8,]),'abstract_declarator_opt':([120,305,],[194,397,]),'initializer_list_opt':([171,],[286,]),'compound_statement':([73,126,140,214,228,354,361,435,477,480,481,510,515,520,],[125,222,253,222,222,222,222,222,222,222,222,222,222,222,]),'block_item':([126,228,],[223,356,]),'storage_class_specifier':([0,3,17,27,29,30,43,69,75,78,94,120,126,141,193,204,228,331,335,357,398,],[3,3,3,3,3,3,86,3,3,86,3,86,3,3,3,3,3,3,3,3,3,]),'empty':([0,3,12,17,27,29,43,53,69,70,74,78,94,120,122,124,126,136,141,142,171,195,204,214,228,256,258,305,331,332,335,336,354,357,361,391,398,424,426,435,439,463,477,479,480,481,496,504,509,510,515,520,],[13,60,63,60,60,76,87,104,114,104,63,87,76,196,206,104,224,244,114,104,290,206,337,350,350,206,104,196,114,104,337,206,350,350,350,461,337,206,104,350,350,461,350,350,350,350,350,461,350,350,350,350,]),'assignment_expression_opt':([122,195,256,336,424,],[205,329,372,428,468,]),'identifier_list':([69,141,331,],[115,115,115,]),'unary_operator':([111,122,126,144,149,163,164,167,170,181,195,209,210,213,214,228,237,247,256,265,271,273,278,280,285,287,294,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,336,353,354,357,358,359,360,361,368,374,375,396,424,435,439,452,455,460,465,470,471,476,477,479,480,481,496,501,509,510,515,520,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'postfix_expression':([111,122,126,144,149,163,164,167,170,181,195,209,210,213,214,228,237,247,256,265,271,273,278,280,285,287,294,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,336,353,354,357,358,359,360,361,368,374,375,396,424,435,439,452,455,460,465,470,471,476,477,479,480,481,496,501,509,510,515,520,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'declaration':([0,29,30,75,94,126,228,357,],[16,77,16,127,77,232,232,439,]),'iteration_statement':([126,214,228,354,361,435,477,480,481,510,515,520,],[234,234,234,234,234,234,234,234,234,234,234,234,]),'struct_or_union_specifier':([0,12,29,30,69,74,75,83,94,113,126,129,133,134,137,141,181,193,204,228,239,251,265,268,271,280,331,335,357,398,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'type_qualifier_list':([53,70,83,124,129,133,137,142,181,239,251,258,265,268,271,280,332,426,],[103,123,134,103,134,134,134,257,134,134,134,103,134,134,134,134,425,103,]),'expression_opt':([126,214,228,354,357,361,435,439,477,479,480,481,496,509,510,515,520,],[227,227,227,227,440,227,227,478,227,497,227,227,508,516,227,227,227,]),'block_item_list':([126,],[228,]),'parameter_list':([69,141,204,331,335,398,],[119,119,119,119,119,119,]),'abstract_declarator':([120,204,305,398,],[199,338,199,338,]),'id_init_declarator_list':([12,74,],[64,64,]),'specifier_qualifier_list':([83,129,133,137,181,239,251,265,268,271,280,],[136,136,136,136,305,136,136,305,305,305,305,]),'brace_open':([1,42,55,57,73,82,84,111,126,140,144,214,228,285,354,361,396,435,452,454,458,460,477,480,481,510,515,520,],[56,83,105,109,126,129,137,171,126,126,171,126,126,171,126,126,463,126,463,463,463,171,126,126,126,126,126,126,]),'type_specifier':([0,12,29,30,69,74,75,83,94,113,126,129,133,134,137,141,181,193,204,228,239,251,265,268,271,280,331,335,357,398,],[50,65,50,50,50,65,50,135,50,65,50,135,135,242,135,50,135,50,50,50,135,135,135,135,135,135,50,50,50,50,]),'id_declarator':([0,12,30,43,46,74,78,98,110,120,136,139,204,367,],[29,66,29,94,100,66,128,100,128,201,128,128,100,128,]),'translation_unit':([0,],[30,]),'struct_or_union':([0,12,29,30,69,74,75,83,94,113,126,129,133,134,137,141,181,193,204,228,239,251,265,268,271,280,331,335,357,398,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'constant_expression':([149,213,247,287,368,],[263,348,366,394,447,]),'selection_statement':([126,214,228,354,361,435,477,480,481,510,515,520,],[225,225,225,225,225,225,225,225,225,225,225,225,]),'declaration_specifiers':([0,29,30,69,75,94,126,141,193,204,228,331,335,357,398,],[43,78,43,120,78,78,78,120,120,120,78,120,120,78,120,]),'struct_declaration':([83,129,133,137,239,251,],[130,130,240,130,240,240,]),'pp_directive':([0,30,],[35,35,]),'direct_typeid_declarator':([43,78,91,98,110,136,139,367,],[97,97,138,97,97,97,97,97,]),'struct_declarator_list':([136,],[249,]),'expression':([126,181,214,228,237,265,271,278,280,313,353,354,357,358,359,361,435,439,476,477,479,480,481,496,501,509,510,515,520,],[233,306,233,233,363,306,306,386,306,407,437,233,233,441,442,233,233,233,494,233,233,233,233,233,512,233,233,233,233,]),'direct_id_declarator':([0,12,26,30,43,46,74,78,91,98,110,120,136,139,200,204,339,367,],[22,22,71,22,22,22,22,22,71,22,22,22,22,22,71,22,71,22,]),'parameter_type_list_opt':([204,335,398,],[341,427,341,]),'parameter_type_list':([69,141,204,331,335,398,],[118,255,340,423,340,340,]),'struct_declaration_list':([83,129,137,],[133,239,251,]),'offsetof_member_designator':([453,],[484,]),'struct_declarator':([136,367,],[243,446,]),'initializer_list':([171,463,],[284,488,]),'external_declaration':([0,30,],[47,79,]),'jump_statement':([126,214,228,354,361,435,477,480,481,510,515,520,],[235,235,235,235,235,235,235,235,235,235,235,235,]),'enumerator':([56,105,109,151,],[108,108,108,266,]),'enum_specifier':([0,12,29,30,69,74,75,83,94,113,126,129,133,134,137,141,181,193,204,228,239,251,265,268,271,280,331,335,357,398,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'primary_expression':([111,122,126,144,149,163,164,167,170,181,195,209,210,213,214,228,237,247,256,265,271,273,278,280,285,287,294,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,336,353,354,357,358,359,360,361,368,374,375,396,424,435,439,452,455,460,465,470,471,476,477,479,480,481,496,501,509,510,515,520,],[185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,]),'designation':([171,391,463,504,],[288,288,288,288,]),'expression_statement':([126,214,228,354,361,435,477,480,481,510,515,520,],[238,238,238,238,238,238,238,238,238,238,238,238,]),'declaration_specifiers_no_type_opt':([3,17,27,],[61,68,72,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
