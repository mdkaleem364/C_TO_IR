
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'PLUS':([9,14,24,43,70,88,93,94,96,100,102,105,107,117,120,123,133,134,135,136,148,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,174,175,177,178,179,180,181,182,184,186,188,189,190,191,194,196,197,198,202,203,204,205,211,213,215,223,224,225,234,242,245,247,249,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,303,304,305,307,311,312,314,315,320,321,323,324,325,328,329,332,333,334,335,336,338,339,346,348,349,352,355,364,373,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,399,401,402,403,404,407,410,415,416,420,421,426,428,430,431,437,445,446,447,452,454,455,456,457,458,459,461,464,465,466,467,468,469,470,472,480,482,483,490,492,493,494,500,502,503,504,506,508,513,514,515,516,519,520,521,],[-117,-116,-115,-68,-302,-304,-28,-27,-161,-69,-81,148,148,148,-304,-289,-28,148,-304,-162,-262,148,148,-252,-298,-260,-233,-290,-278,-293,278,-264,-263,-281,-295,-254,-265,148,-266,-261,-304,148,-296,-294,-291,148,-280,-279,-300,-292,-297,148,-289,148,-76,-74,-73,-72,-193,148,-78,-75,-195,-77,-194,148,-303,148,-28,148,-304,148,148,-261,148,148,-252,-257,148,-255,148,-219,-220,-228,-223,-225,-227,-222,-226,-221,148,-224,-229,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,-301,148,-275,-274,148,-258,148,-12,148,-11,148,-256,-299,-212,-197,148,148,148,148,148,148,-213,-210,148,-209,-196,148,-261,148,148,-261,-304,148,-237,278,-235,278,278,278,278,-236,278,278,278,278,278,278,278,278,-238,-234,-269,-272,-273,-270,-271,-304,-177,148,-282,-211,-198,148,148,-200,-208,-261,-28,148,-304,148,148,148,-268,-267,-259,148,-11,-253,-304,148,148,148,-199,148,148,148,-261,148,-204,-203,-201,148,148,-283,-304,-276,148,148,-277,-205,-202,148,-207,148,-206,]),'RBRACE':([43,70,100,102,107,111,112,113,123,138,139,143,144,149,152,153,155,156,157,158,159,163,164,165,168,170,172,174,175,176,178,179,180,181,182,185,189,190,191,193,194,196,198,202,203,204,205,211,212,213,216,217,258,259,260,261,262,264,297,300,301,304,306,308,312,315,320,321,323,330,334,335,338,339,340,341,372,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,399,401,402,403,404,407,408,412,416,420,421,430,431,456,457,458,460,464,469,484,486,489,490,492,493,502,503,504,513,514,515,519,521,],[-68,-302,-69,-81,-304,213,-155,-152,-289,-141,-140,-137,213,-217,-252,-298,-233,-290,-278,-293,-231,-281,-295,-254,-266,-304,-296,-294,-291,-172,-280,-279,-300,-292,-297,213,-76,-74,-73,-5,-72,-193,-78,-75,-195,-77,-194,-6,-153,-303,213,213,-138,213,213,-252,-257,-255,-301,-275,-274,-258,-22,213,-21,-256,-299,-212,-197,-230,-213,-210,-209,-196,-154,-156,-139,-218,-237,-251,-235,-246,-244,-240,-250,-236,-247,-243,-242,-249,-239,-248,-245,-241,-238,-234,-269,-272,-273,-270,-271,213,-173,-175,-282,-211,-198,-200,-208,-268,-267,-259,-174,-253,-199,-232,-176,213,-204,-203,-201,-283,213,-276,-277,-205,-202,-207,-206,]),'ENUM':([0,1,3,5,9,11,12,13,14,19,20,23,24,25,26,28,31,32,33,34,36,40,43,50,52,54,55,62,66,67,70,72,87,89,90,91,92,96,97,100,102,103,104,107,108,110,119,126,136,138,139,140,143,144,145,146,147,177,189,190,191,194,196,198,202,203,204,205,211,213,218,227,228,237,241,258,259,260,263,265,305,316,321,323,333,334,335,338,339,353,363,367,368,372,417,420,421,430,431,448,449,469,490,492,493,514,515,519,521,],[15,-96,15,-95,-117,15,15,-66,-116,-93,-29,-52,-115,-304,-64,-60,-67,-63,-304,-98,-65,-94,-68,-62,-304,-97,-61,15,-82,15,-302,15,15,-86,-9,-10,-85,-161,15,-69,-81,-53,-84,15,-70,-83,15,15,-162,-141,-140,15,-137,15,15,15,-30,15,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,15,-303,-71,15,-35,15,-36,-138,15,15,15,15,15,15,-212,-197,15,-213,-210,-209,-196,15,15,-31,-34,-139,15,-211,-198,-200,-208,-33,-32,-199,-204,-203,-201,-205,-202,-207,-206,]),'OFFSETOF':([9,14,24,43,70,88,93,94,96,100,102,105,107,117,120,133,134,135,136,148,150,151,154,160,161,166,167,169,170,171,177,184,188,189,190,191,194,196,197,198,202,203,204,205,211,213,215,223,224,225,234,242,245,247,249,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,307,311,312,314,321,323,324,325,328,329,332,333,334,335,336,338,339,346,348,349,352,355,364,373,407,410,415,420,421,426,428,430,431,437,445,446,447,452,454,455,459,461,465,466,467,468,469,470,472,480,482,483,490,492,493,494,500,503,506,508,514,515,516,519,520,521,],[-117,-116,-115,-68,-302,-304,-28,-27,-161,-69,-81,173,173,173,-304,-28,173,-304,-162,-262,173,173,-260,-264,-263,-265,173,-261,-304,173,173,173,173,-76,-74,-73,-72,-193,173,-78,-75,-195,-77,-194,173,-303,173,-28,173,-304,173,173,-261,173,173,173,173,-219,-220,-228,-223,-225,-227,-222,-226,-221,173,-224,-229,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-12,173,-11,173,-212,-197,173,173,173,173,173,173,-213,-210,173,-209,-196,173,-261,173,173,-261,-304,173,-304,-177,173,-211,-198,173,173,-200,-208,-261,-28,173,-304,173,173,173,173,-11,-304,173,173,173,-199,173,173,173,-261,173,-204,-203,-201,173,173,-304,173,173,-205,-202,173,-207,173,-206,]),'AUTO':([0,1,3,4,5,6,7,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,26,28,29,31,32,33,34,36,37,39,40,41,42,43,44,48,49,50,51,52,53,54,55,59,64,66,67,69,70,71,72,75,76,82,86,87,98,99,100,102,103,107,108,110,119,128,147,189,190,191,194,196,198,202,203,204,205,211,213,214,218,227,228,237,241,257,321,323,333,334,335,338,339,342,343,353,363,367,368,374,375,417,420,421,430,431,448,449,469,490,492,493,514,515,519,521,],[19,-96,19,-104,-95,-107,-109,-110,-117,-113,19,-66,-116,-114,-100,-108,-93,-29,19,-52,-115,19,-64,-60,-102,-67,-63,19,-98,-65,-105,-216,-94,-106,-111,-68,-91,-112,-101,-62,-103,19,-99,-97,-61,-92,19,-82,19,-147,-302,-148,19,-89,-90,-88,-87,19,-130,-131,-69,-81,-53,19,-70,-83,19,19,-30,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,19,-303,-149,-71,19,-35,19,-36,-132,-212,-197,19,-213,-210,-209,-196,-150,-151,19,19,-31,-34,-133,-134,19,-211,-198,-200,-208,-33,-32,-199,-204,-203,-201,-205,-202,-207,-206,]),'ID':([0,1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,59,62,64,68,69,70,71,75,76,82,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,102,104,105,106,107,108,114,115,117,118,119,120,128,133,134,135,136,137,141,142,148,150,151,154,160,161,166,167,169,170,171,177,184,188,189,190,191,194,196,197,198,202,203,204,205,209,211,212,213,214,215,218,223,224,225,234,237,238,240,242,245,247,248,249,251,256,257,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,302,303,305,307,309,311,312,314,321,323,324,325,328,329,332,333,334,335,336,338,339,342,343,346,348,349,352,355,360,363,364,371,373,374,375,407,410,415,420,421,426,428,430,431,437,445,446,447,452,454,455,459,461,463,465,466,467,468,469,470,472,480,482,483,490,492,493,494,500,501,503,506,508,514,515,516,519,520,521,],[20,-96,20,-104,-95,-107,-109,-110,-117,-113,20,-66,-116,69,-114,-100,-108,-93,20,-115,-304,-64,-136,-60,-102,-135,-67,-63,-304,-98,-304,-65,-105,98,-216,-94,-106,-111,-68,-91,20,20,-112,-101,-62,-103,-304,-99,-97,-61,-92,20,20,112,-147,-302,-148,-89,-90,-88,20,20,-87,123,-304,-86,-9,-10,-85,-28,-27,-159,-161,-130,-131,-69,-81,-84,123,20,186,-70,112,112,123,20,123,-304,20,-28,123,-304,-162,-160,-128,20,-262,123,123,-260,-264,-263,-265,123,-261,-304,123,123,123,186,-76,-74,-73,-72,-193,123,-78,-75,-195,-77,-194,337,186,112,-303,-149,123,-71,-28,123,-304,123,20,20,123,123,-261,123,-129,123,-126,-127,-132,123,123,-219,-220,-228,-223,-225,-227,-222,-226,-221,123,-224,-229,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,401,403,123,123,-12,123,123,-11,123,-212,-197,186,123,123,123,123,123,-213,-210,186,-209,-196,-150,-151,123,-261,123,123,-261,20,123,-304,20,123,-133,-134,-304,-177,123,-211,-198,186,123,-200,-208,-261,-28,123,-304,123,123,123,123,-11,123,-304,186,123,186,-199,186,123,123,-261,123,-204,-203,-201,123,123,123,-304,186,123,-205,-202,186,-207,186,-206,]),'PLUSPLUS':([9,14,24,43,70,88,93,94,96,100,102,105,107,117,120,123,133,134,135,136,148,150,151,153,154,156,157,158,160,161,163,164,165,166,167,168,169,170,171,172,174,175,177,178,179,180,181,182,184,186,188,189,190,191,194,196,197,198,202,203,204,205,211,213,215,223,224,225,234,242,245,247,249,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,303,305,307,311,312,314,320,321,323,324,325,328,329,332,333,334,335,336,338,339,346,348,349,352,355,364,373,399,401,402,403,404,407,410,415,416,420,421,426,428,430,431,437,445,446,447,452,454,455,456,457,459,461,465,466,467,468,469,470,472,480,482,483,490,492,493,494,500,502,503,504,506,508,513,514,515,516,519,520,521,],[-117,-116,-115,-68,-302,-304,-28,-27,-161,-69,-81,151,151,151,-304,-289,-28,151,-304,-162,-262,151,151,-298,-260,-290,-278,-293,-264,-263,-281,-295,301,-265,151,-266,-261,-304,151,-296,-294,-291,151,-280,-279,-300,-292,-297,151,-289,151,-76,-74,-73,-72,-193,151,-78,-75,-195,-77,-194,151,-303,151,-28,151,-304,151,151,-261,151,151,151,151,-219,-220,-228,-223,-225,-227,-222,-226,-221,151,-224,-229,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,-301,151,-275,-274,151,151,-12,151,-11,151,-299,-212,-197,151,151,151,151,151,151,-213,-210,151,-209,-196,151,-261,151,151,-261,-304,151,-269,-272,-273,-270,-271,-304,-177,151,-282,-211,-198,151,151,-200,-208,-261,-28,151,-304,151,151,151,-268,-267,151,-11,-304,151,151,151,-199,151,151,151,-261,151,-204,-203,-201,151,151,-283,-304,-276,151,151,-277,-205,-202,151,-207,151,-206,]),'RSHIFTEQUAL':([123,152,153,156,157,158,163,164,165,168,172,174,175,178,179,180,181,182,186,213,261,262,264,297,300,301,304,315,320,399,401,402,403,404,416,456,457,458,464,502,504,513,],[-289,271,-298,-290,-278,-293,-281,-295,-254,-266,-296,-294,-291,-280,-279,-300,-292,-297,-289,-303,-252,-257,-255,-301,-275,-274,-258,-256,-299,-269,-272,-273,-270,-271,-282,-268,-267,-259,-253,-283,-276,-277,]),'STATIC':([0,1,3,4,5,6,7,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,26,28,29,31,32,33,34,36,37,39,40,41,42,43,44,48,49,50,51,52,53,54,55,59,64,66,67,69,70,71,72,75,76,82,86,87,88,96,98,99,100,102,103,107,108,110,119,120,128,133,136,147,189,190,191,194,196,198,202,203,204,205,211,213,214,218,223,227,228,237,241,257,321,323,333,334,335,338,339,342,343,353,363,364,367,368,374,375,417,420,421,430,431,445,448,449,469,490,492,493,514,515,519,521,],[5,-96,5,-104,-95,-107,-109,-110,-117,-113,5,-66,-116,-114,-100,-108,-93,-29,5,-52,-115,5,-64,-60,-102,-67,-63,5,-98,-65,-105,-216,-94,-106,-111,-68,-91,-112,-101,-62,-103,5,-99,-97,-61,-92,5,-82,5,-147,-302,-148,5,-89,-90,-88,-87,5,135,-161,-130,-131,-69,-81,-53,5,-70,-83,5,225,5,242,-162,-30,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,5,-303,-149,-71,346,5,-35,5,-36,-132,-212,-197,5,-213,-210,-209,-196,-150,-151,5,5,447,-31,-34,-133,-134,5,-211,-198,-200,-208,480,-33,-32,-199,-204,-203,-201,-205,-202,-207,-206,]),'__INT128':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,23,24,25,26,28,29,31,32,33,34,36,37,39,40,41,42,43,44,48,49,50,51,52,53,54,55,59,62,64,66,67,69,70,71,72,75,76,82,86,87,89,90,91,92,96,97,98,99,100,102,103,104,107,108,110,119,126,128,136,138,139,140,141,142,143,144,145,146,147,177,189,190,191,194,196,198,202,203,204,205,211,213,214,218,227,228,237,241,248,251,256,257,258,259,260,263,265,305,316,319,321,323,333,334,335,338,339,342,343,353,363,367,368,372,374,375,417,420,421,430,431,448,449,469,490,492,493,514,515,519,521,],[8,-96,8,-104,-95,-107,-109,-110,-117,-113,8,8,-66,-116,-114,-100,-108,-93,-29,8,-52,-115,-304,-64,-60,-102,-67,-63,-304,-98,-65,-105,-216,-94,-106,-111,-68,-91,-112,-101,-62,-103,-304,-99,-97,-61,-92,8,8,-82,8,-147,-302,-148,8,-89,-90,-88,-87,8,-86,-9,-10,-85,-161,8,-130,-131,-69,-81,-53,-84,8,-70,-83,8,8,8,-162,-141,-140,8,-128,8,-137,8,8,8,-30,8,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,8,-303,-149,-71,8,-35,8,-36,-129,-126,-127,-132,-138,8,8,8,8,8,8,8,-212,-197,8,-213,-210,-209,-196,-150,-151,8,8,-31,-34,-139,-133,-134,8,-211,-198,-200,-208,-33,-32,-199,-204,-203,-201,-205,-202,-207,-206,]),'STRING_LITERAL':([9,14,24,43,70,88,93,94,96,100,102,105,107,117,120,133,134,135,136,148,150,151,153,154,160,161,166,167,169,170,171,177,178,184,188,189,190,191,194,196,197,198,202,203,204,205,211,213,215,223,224,225,234,242,245,247,249,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,307,311,312,314,320,321,323,324,325,328,329,332,333,334,335,336,338,339,346,348,349,352,355,364,373,407,410,415,420,421,426,428,430,431,437,445,446,447,452,454,455,459,461,465,466,467,468,469,470,472,480,482,483,490,492,493,494,500,503,506,508,514,515,516,519,520,521,],[-117,-116,-115,-68,-302,-304,-28,-27,-161,-69,-81,153,153,153,-304,-28,153,-304,-162,-262,153,153,-298,-260,-264,-263,-265,153,-261,-304,153,153,320,153,153,-76,-74,-73,-72,-193,153,-78,-75,-195,-77,-194,153,-303,153,-28,153,-304,153,153,-261,153,153,153,153,-219,-220,-228,-223,-225,-227,-222,-226,-221,153,-224,-229,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,-12,153,-11,153,-299,-212,-197,153,153,153,153,153,153,-213,-210,153,-209,-196,153,-261,153,153,-261,-304,153,-304,-177,153,-211,-198,153,153,-200,-208,-261,-28,153,-304,153,153,153,153,-11,-304,153,153,153,-199,153,153,153,-261,153,-204,-203,-201,153,153,-304,153,153,-205,-202,153,-207,153,-206,]),'MOD':([123,152,153,155,156,157,158,159,163,164,165,168,172,174,175,178,179,180,181,182,186,213,261,262,264,297,300,301,304,315,320,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,399,401,402,403,404,416,456,457,458,464,502,504,513,],[-289,-252,-298,-233,-290,-278,-293,285,-281,-295,-254,-266,-296,-294,-291,-280,-279,-300,-292,-297,-289,-303,-252,-257,-255,-301,-275,-274,-258,-256,-299,285,285,-235,285,285,285,285,-236,285,285,285,285,285,285,285,285,285,-234,-269,-272,-273,-270,-271,-282,-268,-267,-259,-253,-283,-276,-277,]),'AND':([9,14,24,43,70,88,93,94,96,100,102,105,107,117,120,123,133,134,135,136,148,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,174,175,177,178,179,180,181,182,184,186,188,189,190,191,194,196,197,198,202,203,204,205,211,213,215,223,224,225,234,242,245,247,249,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,303,304,305,307,311,312,314,315,320,321,323,324,325,328,329,332,333,334,335,336,338,339,346,348,349,352,355,364,373,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,399,401,402,403,404,407,410,415,416,420,421,426,428,430,431,437,445,446,447,452,454,455,456,457,458,459,461,464,465,466,467,468,469,470,472,480,482,483,490,492,493,494,500,502,503,504,506,508,513,514,515,516,519,520,521,],[-117,-116,-115,-68,-302,-304,-28,-27,-161,-69,-81,154,154,154,-304,-289,-28,154,-304,-162,-262,154,154,-252,-298,-260,-233,-290,-278,-293,286,-264,-263,-281,-295,-254,-265,154,-266,-261,-304,154,-296,-294,-291,154,-280,-279,-300,-292,-297,154,-289,154,-76,-74,-73,-72,-193,154,-78,-75,-195,-77,-194,154,-303,154,-28,154,-304,154,154,-261,154,154,-252,-257,154,-255,154,-219,-220,-228,-223,-225,-227,-222,-226,-221,154,-224,-229,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-301,154,-275,-274,154,-258,154,-12,154,-11,154,-256,-299,-212,-197,154,154,154,154,154,154,-213,-210,154,-209,-196,154,-261,154,154,-261,-304,154,-237,286,-235,-246,-244,-240,286,-236,-247,-243,-242,286,-239,286,-245,-241,-238,-234,-269,-272,-273,-270,-271,-304,-177,154,-282,-211,-198,154,154,-200,-208,-261,-28,154,-304,154,154,154,-268,-267,-259,154,-11,-253,-304,154,154,154,-199,154,154,154,-261,154,-204,-203,-201,154,154,-283,-304,-276,154,154,-277,-205,-202,154,-207,154,-206,]),'RETURN':([43,70,100,102,107,188,189,190,191,194,196,198,202,203,204,205,211,213,321,323,324,334,335,336,338,339,420,421,426,430,431,466,468,469,470,490,492,493,506,514,515,516,519,520,521,],[-68,-302,-69,-81,184,184,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,184,-303,-212,-197,184,-213,-210,184,-209,-196,-211,-198,184,-200,-208,184,184,-199,184,-204,-203,-201,184,-205,-202,184,-207,184,-206,]),'DO':([43,70,100,102,107,188,189,190,191,194,196,198,202,203,204,205,211,213,321,323,324,334,335,336,338,339,420,421,426,430,431,466,468,469,470,490,492,493,506,514,515,516,519,520,521,],[-68,-302,-69,-81,188,188,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,188,-303,-212,-197,188,-213,-210,188,-209,-196,-211,-198,188,-200,-208,188,188,-199,188,-204,-203,-201,188,-205,-202,188,-207,188,-206,]),'CONST':([0,1,3,4,5,6,7,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,26,28,29,31,32,33,34,35,36,37,39,40,41,42,43,44,48,49,50,51,52,53,54,55,59,64,66,67,69,70,71,72,75,76,82,86,87,88,93,96,97,98,99,100,102,103,107,108,110,119,120,128,133,135,136,138,139,140,141,142,143,144,145,146,147,177,189,190,191,194,196,198,202,203,204,205,211,213,214,218,223,225,227,228,237,241,248,251,256,257,258,259,260,263,265,305,316,319,321,323,333,334,335,338,339,342,343,353,363,364,367,368,372,374,375,417,420,421,430,431,445,447,448,449,469,490,492,493,514,515,519,521,],[24,-96,24,-104,-95,-107,-109,-110,-117,-113,24,-66,-116,-114,-100,-108,-93,-29,24,-52,-115,24,-64,-60,-102,-67,-63,24,-98,24,-65,-105,-216,-94,-106,-111,-68,-91,-112,-101,-62,-103,24,-99,-97,-61,-92,24,-82,24,-147,-302,-148,24,-89,-90,-88,-87,24,24,24,-161,24,-130,-131,-69,-81,-53,24,-70,-83,24,24,24,24,24,-162,-141,-140,24,-128,24,-137,24,24,24,-30,24,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,24,-303,-149,-71,24,24,24,-35,24,-36,-129,-126,-127,-132,-138,24,24,24,24,24,24,24,-212,-197,24,-213,-210,-209,-196,-150,-151,24,24,24,-31,-34,-139,-133,-134,24,-211,-198,-200,-208,24,24,-33,-32,-199,-204,-203,-201,-205,-202,-207,-206,]),'ELLIPSIS':([227,],[350,]),'INT_CONST_BIN':([9,14,24,43,70,88,93,94,96,100,102,105,107,117,120,133,134,135,136,148,150,151,154,160,161,166,167,169,170,171,177,184,188,189,190,191,194,196,197,198,202,203,204,205,211,213,215,223,224,225,234,242,245,247,249,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,307,311,312,314,321,323,324,325,328,329,332,333,334,335,336,338,339,346,348,349,352,355,364,373,407,410,415,420,421,426,428,430,431,437,445,446,447,452,454,455,459,461,465,466,467,468,469,470,472,480,482,483,490,492,493,494,500,503,506,508,514,515,516,519,520,521,],[-117,-116,-115,-68,-302,-304,-28,-27,-161,-69,-81,158,158,158,-304,-28,158,-304,-162,-262,158,158,-260,-264,-263,-265,158,-261,-304,158,158,158,158,-76,-74,-73,-72,-193,158,-78,-75,-195,-77,-194,158,-303,158,-28,158,-304,158,158,-261,158,158,158,158,-219,-220,-228,-223,-225,-227,-222,-226,-221,158,-224,-229,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,-12,158,-11,158,-212,-197,158,158,158,158,158,158,-213,-210,158,-209,-196,158,-261,158,158,-261,-304,158,-304,-177,158,-211,-198,158,158,-200,-208,-261,-28,158,-304,158,158,158,158,-11,-304,158,158,158,-199,158,158,158,-261,158,-204,-203,-201,158,158,-304,158,158,-205,-202,158,-207,158,-206,]),'MINUSEQUAL':([123,152,153,156,157,158,163,164,165,168,172,174,175,178,179,180,181,182,186,213,261,262,264,297,300,301,304,315,320,399,401,402,403,404,416,456,457,458,464,502,504,513,],[-289,270,-298,-290,-278,-293,-281,-295,-254,-266,-296,-294,-291,-280,-279,-300,-292,-297,-289,-303,-252,-257,-255,-301,-275,-274,-258,-256,-299,-269,-272,-273,-270,-271,-282,-268,-267,-259,-253,-283,-276,-277,]),'FLOAT':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,23,24,25,26,28,29,31,32,33,34,36,37,39,40,41,42,43,44,48,49,50,51,52,53,54,55,59,62,64,66,67,69,70,71,72,75,76,82,86,87,89,90,91,92,96,97,98,99,100,102,103,104,107,108,110,119,126,128,136,138,139,140,141,142,143,144,145,146,147,177,189,190,191,194,196,198,202,203,204,205,211,213,214,218,227,228,237,241,248,251,256,257,258,259,260,263,265,305,316,319,321,323,333,334,335,338,339,342,343,353,363,367,368,372,374,375,417,420,421,430,431,448,449,469,490,492,493,514,515,519,521,],[37,-96,37,-104,-95,-107,-109,-110,-117,-113,37,37,-66,-116,-114,-100,-108,-93,-29,37,-52,-115,-304,-64,-60,-102,-67,-63,-304,-98,-65,-105,-216,-94,-106,-111,-68,-91,-112,-101,-62,-103,-304,-99,-97,-61,-92,37,37,-82,37,-147,-302,-148,37,-89,-90,-88,-87,37,-86,-9,-10,-85,-161,37,-130,-131,-69,-81,-53,-84,37,-70,-83,37,37,37,-162,-141,-140,37,-128,37,-137,37,37,37,-30,37,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,37,-303,-149,-71,37,-35,37,-36,-129,-126,-127,-132,-138,37,37,37,37,37,37,37,-212,-197,37,-213,-210,-209,-196,-150,-151,37,37,-31,-34,-139,-133,-134,37,-211,-198,-200,-208,-33,-32,-199,-204,-203,-201,-205,-202,-207,-206,]),'EQ':([123,152,153,155,156,157,158,159,163,164,165,168,172,174,175,178,179,180,181,182,186,213,261,262,264,297,300,301,304,315,320,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,399,401,402,403,404,416,456,457,458,464,502,504,513,],[-289,-252,-298,-233,-290,-278,-293,293,-281,-295,-254,-266,-296,-294,-291,-280,-279,-300,-292,-297,-289,-303,-252,-257,-255,-301,-275,-274,-258,-256,-299,-237,293,-235,-246,-244,-240,293,-236,293,-243,-242,293,-239,293,-245,-241,-238,-234,-269,-272,-273,-270,-271,-282,-268,-267,-259,-253,-283,-276,-277,]),'LSHIFTEQUAL':([123,152,153,156,157,158,163,164,165,168,172,174,175,178,179,180,181,182,186,213,261,262,264,297,300,301,304,315,320,399,401,402,403,404,416,456,457,458,464,502,504,513,],[-289,273,-298,-290,-278,-293,-281,-295,-254,-266,-296,-294,-291,-280,-279,-300,-292,-297,-289,-303,-252,-257,-255,-301,-275,-274,-258,-256,-299,-269,-272,-273,-270,-271,-282,-268,-267,-259,-253,-283,-276,-277,]),'MINUS':([9,14,24,43,70,88,93,94,96,100,102,105,107,117,120,123,133,134,135,136,148,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,174,175,177,178,179,180,181,182,184,186,188,189,190,191,194,196,197,198,202,203,204,205,211,213,215,223,224,225,234,242,245,247,249,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,303,304,305,307,311,312,314,315,320,321,323,324,325,328,329,332,333,334,335,336,338,339,346,348,349,352,355,364,373,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,399,401,402,403,404,407,410,415,416,420,421,426,428,430,431,437,445,446,447,452,454,455,456,457,458,459,461,464,465,466,467,468,469,470,472,480,482,483,490,492,493,494,500,502,503,504,506,508,513,514,515,516,519,520,521,],[-117,-116,-115,-68,-302,-304,-28,-27,-161,-69,-81,161,161,161,-304,-289,-28,161,-304,-162,-262,161,161,-252,-298,-260,-233,-290,-278,-293,295,-264,-263,-281,-295,-254,-265,161,-266,-261,-304,161,-296,-294,-291,161,-280,-279,-300,-292,-297,161,-289,161,-76,-74,-73,-72,-193,161,-78,-75,-195,-77,-194,161,-303,161,-28,161,-304,161,161,-261,161,161,-252,-257,161,-255,161,-219,-220,-228,-223,-225,-227,-222,-226,-221,161,-224,-229,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,-301,161,-275,-274,161,-258,161,-12,161,-11,161,-256,-299,-212,-197,161,161,161,161,161,161,-213,-210,161,-209,-196,161,-261,161,161,-261,-304,161,-237,295,-235,295,295,295,295,-236,295,295,295,295,295,295,295,295,-238,-234,-269,-272,-273,-270,-271,-304,-177,161,-282,-211,-198,161,161,-200,-208,-261,-28,161,-304,161,161,161,-268,-267,-259,161,-11,-253,-304,161,161,161,-199,161,161,161,-261,161,-204,-203,-201,161,161,-283,-304,-276,161,161,-277,-205,-202,161,-207,161,-206,]),'HEX_FLOAT_CONST':([9,14,24,43,70,88,93,94,96,100,102,105,107,117,120,133,134,135,136,148,150,151,154,160,161,166,167,169,170,171,177,184,188,189,190,191,194,196,197,198,202,203,204,205,211,213,215,223,224,225,234,242,245,247,249,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,307,311,312,314,321,323,324,325,328,329,332,333,334,335,336,338,339,346,348,349,352,355,364,373,407,410,415,420,421,426,428,430,431,437,445,446,447,452,454,455,459,461,465,466,467,468,469,470,472,480,482,483,490,492,493,494,500,503,506,508,514,515,516,519,520,521,],[-117,-116,-115,-68,-302,-304,-28,-27,-161,-69,-81,164,164,164,-304,-28,164,-304,-162,-262,164,164,-260,-264,-263,-265,164,-261,-304,164,164,164,164,-76,-74,-73,-72,-193,164,-78,-75,-195,-77,-194,164,-303,164,-28,164,-304,164,164,-261,164,164,164,164,-219,-220,-228,-223,-225,-227,-222,-226,-221,164,-224,-229,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-12,164,-11,164,-212,-197,164,164,164,164,164,164,-213,-210,164,-209,-196,164,-261,164,164,-261,-304,164,-304,-177,164,-211,-198,164,164,-200,-208,-261,-28,164,-304,164,164,164,164,-11,-304,164,164,164,-199,164,164,164,-261,164,-204,-203,-201,164,164,-304,164,164,-205,-202,164,-207,164,-206,]),'REGISTER':([0,1,3,4,5,6,7,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,26,28,29,31,32,33,34,36,37,39,40,41,42,43,44,48,49,50,51,52,53,54,55,59,64,66,67,69,70,71,72,75,76,82,86,87,98,99,100,102,103,107,108,110,119,128,147,189,190,191,194,196,198,202,203,204,205,211,213,214,218,227,228,237,241,257,321,323,333,334,335,338,339,342,343,353,363,367,368,374,375,417,420,421,430,431,448,449,469,490,492,493,514,515,519,521,],[40,-96,40,-104,-95,-107,-109,-110,-117,-113,40,-66,-116,-114,-100,-108,-93,-29,40,-52,-115,40,-64,-60,-102,-67,-63,40,-98,-65,-105,-216,-94,-106,-111,-68,-91,-112,-101,-62,-103,40,-99,-97,-61,-92,40,-82,40,-147,-302,-148,40,-89,-90,-88,-87,40,-130,-131,-69,-81,-53,40,-70,-83,40,40,-30,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,40,-303,-149,-71,40,-35,40,-36,-132,-212,-197,40,-213,-210,-209,-196,-150,-151,40,40,-31,-34,-133,-134,40,-211,-198,-200,-208,-33,-32,-199,-204,-203,-201,-205,-202,-207,-206,]),'COMMA':([1,4,5,6,7,8,9,10,14,16,17,18,19,20,23,24,29,34,35,37,39,40,41,42,44,48,49,51,53,54,56,59,60,61,69,71,72,74,75,76,77,79,80,81,82,83,86,93,94,95,96,98,99,103,109,111,112,113,122,123,124,127,128,130,132,136,137,141,147,149,152,153,155,156,157,158,159,162,163,164,165,168,172,174,175,176,178,179,180,181,182,183,186,195,208,212,213,214,216,217,219,220,226,228,229,230,231,232,233,235,236,238,239,241,248,250,251,253,255,256,257,261,262,264,297,300,301,304,306,315,318,319,320,322,330,340,341,342,343,344,345,351,361,362,365,367,368,370,374,375,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,408,412,414,416,418,419,422,424,425,427,433,434,439,440,441,442,448,449,450,451,456,457,458,460,464,473,474,475,476,477,478,479,484,485,486,489,491,497,498,502,504,509,510,511,513,],[-96,-104,-95,-107,-109,-110,-117,-113,-116,-114,-100,-108,-93,-29,-52,-115,-102,-98,-304,-105,-216,-94,-106,-111,-91,-112,-101,-103,-99,-97,-124,-92,-122,106,-147,-148,-157,-158,-89,-90,-120,118,-54,-118,-88,-37,-87,-28,-27,-159,-161,-130,-131,-53,-157,212,-155,-152,-55,-289,227,-170,-304,240,-165,-162,-160,-128,-30,-217,-252,-298,-233,-290,-278,-293,-231,-125,-281,-295,-254,-266,-296,-294,-291,-172,-280,-279,-300,-292,-297,-123,-289,329,-214,-153,-303,-149,212,212,-121,-119,-38,-35,-167,-168,-2,-1,-185,-45,-169,-183,-56,-36,-129,371,-126,-144,-142,-127,-132,-252,-257,-255,-301,-275,-274,-258,407,-256,329,-304,-299,329,-230,-154,-156,-150,-151,-43,-44,-166,-57,-184,-171,-31,-34,-146,-133,-134,-218,-237,-251,-235,-246,-244,-240,-250,-236,-247,-243,329,-242,-249,-239,-248,-245,-241,-238,-234,-287,-269,455,-272,-273,-270,-271,329,-173,-175,463,-282,-182,-183,329,329,-215,329,-39,-42,-188,-190,-186,-192,-33,-32,-143,-145,-268,-267,-259,-174,-253,-41,-40,-187,-189,-191,-50,-51,-232,-288,-176,503,329,-46,-49,-283,-276,-48,-47,329,-277,]),'SHORT':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,23,24,25,26,28,29,31,32,33,34,36,37,39,40,41,42,43,44,48,49,50,51,52,53,54,55,59,62,64,66,67,69,70,71,72,75,76,82,86,87,89,90,91,92,96,97,98,99,100,102,103,104,107,108,110,119,126,128,136,138,139,140,141,142,143,144,145,146,147,177,189,190,191,194,196,198,202,203,204,205,211,213,214,218,227,228,237,241,248,251,256,257,258,259,260,263,265,305,316,319,321,323,333,334,335,338,339,342,343,353,363,367,368,372,374,375,417,420,421,430,431,448,449,469,490,492,493,514,515,519,521,],[29,-96,29,-104,-95,-107,-109,-110,-117,-113,29,29,-66,-116,-114,-100,-108,-93,-29,29,-52,-115,-304,-64,-60,-102,-67,-63,-304,-98,-65,-105,-216,-94,-106,-111,-68,-91,-112,-101,-62,-103,-304,-99,-97,-61,-92,29,29,-82,29,-147,-302,-148,29,-89,-90,-88,-87,29,-86,-9,-10,-85,-161,29,-130,-131,-69,-81,-53,-84,29,-70,-83,29,29,29,-162,-141,-140,29,-128,29,-137,29,29,29,-30,29,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,29,-303,-149,-71,29,-35,29,-36,-129,-126,-127,-132,-138,29,29,29,29,29,29,29,-212,-197,29,-213,-210,-209,-196,-150,-151,29,29,-31,-34,-139,-133,-134,29,-211,-198,-200,-208,-33,-32,-199,-204,-203,-201,-205,-202,-207,-206,]),'GT':([123,152,153,155,156,157,158,159,163,164,165,168,172,174,175,178,179,180,181,182,186,213,261,262,264,297,300,301,304,315,320,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,399,401,402,403,404,416,456,457,458,464,502,504,513,],[-289,-252,-298,-233,-290,-278,-293,282,-281,-295,-254,-266,-296,-294,-291,-280,-279,-300,-292,-297,-289,-303,-252,-257,-255,-301,-275,-274,-258,-256,-299,-237,282,-235,282,-244,-240,282,-236,282,-243,-242,282,-239,282,282,-241,-238,-234,-269,-272,-273,-270,-271,-282,-268,-267,-259,-253,-283,-276,-277,]),'_BOOL':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,23,24,25,26,28,29,31,32,33,34,36,37,39,40,41,42,43,44,48,49,50,51,52,53,54,55,59,62,64,66,67,69,70,71,72,75,76,82,86,87,89,90,91,92,96,97,98,99,100,102,103,104,107,108,110,119,126,128,136,138,139,140,141,142,143,144,145,146,147,177,189,190,191,194,196,198,202,203,204,205,211,213,214,218,227,228,237,241,248,251,256,257,258,259,260,263,265,305,316,319,321,323,333,334,335,338,339,342,343,353,363,367,368,372,374,375,417,420,421,430,431,448,449,469,490,492,493,514,515,519,521,],[17,-96,17,-104,-95,-107,-109,-110,-117,-113,17,17,-66,-116,-114,-100,-108,-93,-29,17,-52,-115,-304,-64,-60,-102,-67,-63,-304,-98,-65,-105,-216,-94,-106,-111,-68,-91,-112,-101,-62,-103,-304,-99,-97,-61,-92,17,17,-82,17,-147,-302,-148,17,-89,-90,-88,-87,17,-86,-9,-10,-85,-161,17,-130,-131,-69,-81,-53,-84,17,-70,-83,17,17,17,-162,-141,-140,17,-128,17,-137,17,17,17,-30,17,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,17,-303,-149,-71,17,-35,17,-36,-129,-126,-127,-132,-138,17,17,17,17,17,17,17,-212,-197,17,-213,-210,-209,-196,-150,-151,17,17,-31,-34,-139,-133,-134,17,-211,-198,-200,-208,-33,-32,-199,-204,-203,-201,-205,-202,-207,-206,]),'CASE':([43,70,100,102,107,188,189,190,191,194,196,198,202,203,204,205,211,213,321,323,324,334,335,336,338,339,420,421,426,430,431,466,468,469,470,490,492,493,506,514,515,516,519,520,521,],[-68,-302,-69,-81,197,197,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,197,-303,-212,-197,197,-213,-210,197,-209,-196,-211,-198,197,-200,-208,197,197,-199,197,-204,-203,-201,197,-205,-202,197,-207,197,-206,]),'MODEQUAL':([123,152,153,156,157,158,163,164,165,168,172,174,175,178,179,180,181,182,186,213,261,262,264,297,300,301,304,315,320,399,401,402,403,404,416,456,457,458,464,502,504,513,],[-289,269,-298,-290,-278,-293,-281,-295,-254,-266,-296,-294,-291,-280,-279,-300,-292,-297,-289,-303,-252,-257,-255,-301,-275,-274,-258,-256,-299,-269,-272,-273,-270,-271,-282,-268,-267,-259,-253,-283,-276,-277,]),'LONG':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,23,24,25,26,28,29,31,32,33,34,36,37,39,40,41,42,43,44,48,49,50,51,52,53,54,55,59,62,64,66,67,69,70,71,72,75,76,82,86,87,89,90,91,92,96,97,98,99,100,102,103,104,107,108,110,119,126,128,136,138,139,140,141,142,143,144,145,146,147,177,189,190,191,194,196,198,202,203,204,205,211,213,214,218,227,228,237,241,248,251,256,257,258,259,260,263,265,305,316,319,321,323,333,334,335,338,339,342,343,353,363,367,368,372,374,375,417,420,421,430,431,448,449,469,490,492,493,514,515,519,521,],[4,-96,4,-104,-95,-107,-109,-110,-117,-113,4,4,-66,-116,-114,-100,-108,-93,-29,4,-52,-115,-304,-64,-60,-102,-67,-63,-304,-98,-65,-105,-216,-94,-106,-111,-68,-91,-112,-101,-62,-103,-304,-99,-97,-61,-92,4,4,-82,4,-147,-302,-148,4,-89,-90,-88,-87,4,-86,-9,-10,-85,-161,4,-130,-131,-69,-81,-53,-84,4,-70,-83,4,4,4,-162,-141,-140,4,-128,4,-137,4,4,4,-30,4,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,4,-303,-149,-71,4,-35,4,-36,-129,-126,-127,-132,-138,4,4,4,4,4,4,4,-212,-197,4,-213,-210,-209,-196,-150,-151,4,4,-31,-34,-139,-133,-134,4,-211,-198,-200,-208,-33,-32,-199,-204,-203,-201,-205,-202,-207,-206,]),'NE':([123,152,153,155,156,157,158,159,163,164,165,168,172,174,175,178,179,180,181,182,186,213,261,262,264,297,300,301,304,315,320,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,399,401,402,403,404,416,456,457,458,464,502,504,513,],[-289,-252,-298,-233,-290,-278,-293,281,-281,-295,-254,-266,-296,-294,-291,-280,-279,-300,-292,-297,-289,-303,-252,-257,-255,-301,-275,-274,-258,-256,-299,-237,281,-235,-246,-244,-240,281,-236,281,-243,-242,281,-239,281,-245,-241,-238,-234,-269,-272,-273,-270,-271,-282,-268,-267,-259,-253,-283,-276,-277,]),'LSHIFT':([123,152,153,155,156,157,158,159,163,164,165,168,172,174,175,178,179,180,181,182,186,213,261,262,264,297,300,301,304,315,320,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,399,401,402,403,404,416,456,457,458,464,502,504,513,],[-289,-252,-298,-233,-290,-278,-293,283,-281,-295,-254,-266,-296,-294,-291,-280,-279,-300,-292,-297,-289,-303,-252,-257,-255,-301,-275,-274,-258,-256,-299,-237,283,-235,283,283,-240,283,-236,283,283,283,283,-239,283,283,283,-238,-234,-269,-272,-273,-270,-271,-282,-268,-267,-259,-253,-283,-276,-277,]),'SWITCH':([43,70,100,102,107,188,189,190,191,194,196,198,202,203,204,205,211,213,321,323,324,334,335,336,338,339,420,421,426,430,431,466,468,469,470,490,492,493,506,514,515,516,519,520,521,],[-68,-302,-69,-81,192,192,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,192,-303,-212,-197,192,-213,-210,192,-209,-196,-211,-198,192,-200,-208,192,192,-199,192,-204,-203,-201,192,-205,-202,192,-207,192,-206,]),'LBRACKET':([1,4,5,6,7,8,9,10,14,16,17,18,19,20,23,24,29,34,35,37,39,40,41,42,44,48,49,51,53,54,59,69,70,71,75,76,80,82,83,86,93,94,95,96,98,99,103,122,123,128,136,137,141,147,153,156,157,158,163,164,165,168,170,172,174,175,178,179,180,181,182,186,213,214,226,228,233,235,237,238,239,241,248,251,256,257,297,300,301,310,313,319,320,342,343,344,345,360,361,362,367,368,374,375,399,401,402,403,404,407,409,411,416,417,419,433,434,439,440,441,442,448,449,456,457,462,465,473,474,475,476,477,478,479,487,488,497,498,502,503,504,509,510,512,513,518,],[-96,-104,-95,-107,-109,-110,-117,-113,-116,-114,-100,-108,-93,-29,88,-115,-102,-98,-304,-105,-216,-94,-106,-111,-91,-112,-101,-103,-99,-97,-92,-147,-302,-148,-89,-90,120,-88,-37,-87,-28,-27,-159,-161,-130,-131,88,120,-289,234,-162,-160,-128,-30,-298,-290,-278,-293,-281,-295,303,-266,314,-296,-294,-291,-280,-279,-300,-292,-297,-289,-303,-149,-38,-35,352,-45,234,234,364,-36,-129,-126,-127,-132,-301,-275,-274,314,-178,234,-299,-150,-151,-43,-44,234,364,352,-31,-34,-133,-134,-269,-272,-273,-270,-271,314,-181,-179,-282,234,234,-39,-42,-188,-190,-186,-192,-33,-32,-268,-267,-180,314,-41,-40,-187,-189,-191,-50,-51,500,-284,-46,-49,-283,314,-276,-48,-47,-285,-277,-286,]),'TYPEID':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,48,49,50,51,52,53,54,55,59,62,64,66,67,69,70,71,72,75,76,82,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,106,107,108,110,118,119,126,128,136,137,138,139,140,141,142,143,144,145,146,147,177,189,190,191,194,196,198,202,203,204,205,211,213,214,218,227,228,237,238,241,248,251,256,257,258,259,260,263,265,299,302,305,316,321,323,333,334,335,338,339,342,343,353,363,367,368,371,372,374,375,417,420,421,430,431,448,449,469,490,492,493,514,515,519,521,],[39,-96,39,-104,-95,-107,-109,-110,-117,-113,39,39,-66,-116,71,-114,-100,-108,-93,-29,83,-52,-115,-304,-64,-136,-60,-102,-135,-67,-63,-304,-98,-304,-65,-105,99,-216,-94,-106,-111,-68,-91,-112,-101,-62,-103,-304,-99,-97,-61,-92,39,83,-82,39,-147,-302,-148,39,-89,-90,-88,83,83,-87,39,-86,-9,-10,-85,-28,-27,-159,-161,39,-130,-131,-69,-81,-53,-84,83,39,-70,-83,83,39,39,235,-162,-160,-141,-140,39,-128,83,-137,39,39,39,-30,39,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,39,-303,-149,-71,39,-35,39,235,-36,-129,-126,-127,-132,-138,39,39,39,39,402,404,39,39,-212,-197,39,-213,-210,-209,-196,-150,-151,39,39,-31,-34,83,-139,-133,-134,39,-211,-198,-200,-208,-33,-32,-199,-204,-203,-201,-205,-202,-207,-206,]),'INT_CONST_OCT':([9,14,24,43,70,88,93,94,96,100,102,105,107,117,120,133,134,135,136,148,150,151,154,160,161,166,167,169,170,171,177,184,188,189,190,191,194,196,197,198,202,203,204,205,211,213,215,223,224,225,234,242,245,247,249,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,307,311,312,314,321,323,324,325,328,329,332,333,334,335,336,338,339,346,348,349,352,355,364,373,407,410,415,420,421,426,428,430,431,437,445,446,447,452,454,455,459,461,465,466,467,468,469,470,472,480,482,483,490,492,493,494,500,503,506,508,514,515,516,519,520,521,],[-117,-116,-115,-68,-302,-304,-28,-27,-161,-69,-81,175,175,175,-304,-28,175,-304,-162,-262,175,175,-260,-264,-263,-265,175,-261,-304,175,175,175,175,-76,-74,-73,-72,-193,175,-78,-75,-195,-77,-194,175,-303,175,-28,175,-304,175,175,-261,175,175,175,175,-219,-220,-228,-223,-225,-227,-222,-226,-221,175,-224,-229,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,-12,175,-11,175,-212,-197,175,175,175,175,175,175,-213,-210,175,-209,-196,175,-261,175,175,-261,-304,175,-304,-177,175,-211,-198,175,175,-200,-208,-261,-28,175,-304,175,175,175,175,-11,-304,175,175,175,-199,175,175,175,-261,175,-204,-203,-201,175,175,-304,175,175,-205,-202,175,-207,175,-206,]),'DOUBLE':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,23,24,25,26,28,29,31,32,33,34,36,37,39,40,41,42,43,44,48,49,50,51,52,53,54,55,59,62,64,66,67,69,70,71,72,75,76,82,86,87,89,90,91,92,96,97,98,99,100,102,103,104,107,108,110,119,126,128,136,138,139,140,141,142,143,144,145,146,147,177,189,190,191,194,196,198,202,203,204,205,211,213,214,218,227,228,237,241,248,251,256,257,258,259,260,263,265,305,316,319,321,323,333,334,335,338,339,342,343,353,363,367,368,372,374,375,417,420,421,430,431,448,449,469,490,492,493,514,515,519,521,],[41,-96,41,-104,-95,-107,-109,-110,-117,-113,41,41,-66,-116,-114,-100,-108,-93,-29,41,-52,-115,-304,-64,-60,-102,-67,-63,-304,-98,-65,-105,-216,-94,-106,-111,-68,-91,-112,-101,-62,-103,-304,-99,-97,-61,-92,41,41,-82,41,-147,-302,-148,41,-89,-90,-88,-87,41,-86,-9,-10,-85,-161,41,-130,-131,-69,-81,-53,-84,41,-70,-83,41,41,41,-162,-141,-140,41,-128,41,-137,41,41,41,-30,41,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,41,-303,-149,-71,41,-35,41,-36,-129,-126,-127,-132,-138,41,41,41,41,41,41,41,-212,-197,41,-213,-210,-209,-196,-150,-151,41,41,-31,-34,-139,-133,-134,41,-211,-198,-200,-208,-33,-32,-199,-204,-203,-201,-205,-202,-207,-206,]),'INT_CONST_HEX':([9,14,24,43,70,88,93,94,96,100,102,105,107,117,120,133,134,135,136,148,150,151,154,160,161,166,167,169,170,171,177,184,188,189,190,191,194,196,197,198,202,203,204,205,211,213,215,223,224,225,234,242,245,247,249,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,307,311,312,314,321,323,324,325,328,329,332,333,334,335,336,338,339,346,348,349,352,355,364,373,407,410,415,420,421,426,428,430,431,437,445,446,447,452,454,455,459,461,465,466,467,468,469,470,472,480,482,483,490,492,493,494,500,503,506,508,514,515,516,519,520,521,],[-117,-116,-115,-68,-302,-304,-28,-27,-161,-69,-81,181,181,181,-304,-28,181,-304,-162,-262,181,181,-260,-264,-263,-265,181,-261,-304,181,181,181,181,-76,-74,-73,-72,-193,181,-78,-75,-195,-77,-194,181,-303,181,-28,181,-304,181,181,-261,181,181,181,181,-219,-220,-228,-223,-225,-227,-222,-226,-221,181,-224,-229,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,-12,181,-11,181,-212,-197,181,181,181,181,181,181,-213,-210,181,-209,-196,181,-261,181,181,-261,-304,181,-304,-177,181,-211,-198,181,181,-200,-208,-261,-28,181,-304,181,181,181,181,-11,-304,181,181,181,-199,181,181,181,-261,181,-204,-203,-201,181,181,-304,181,181,-205,-202,181,-207,181,-206,]),'PPPRAGMA':([0,3,13,26,28,31,32,36,43,50,55,70,97,100,102,107,108,138,139,143,144,145,146,188,189,190,191,194,196,198,202,203,204,205,211,213,218,258,259,260,321,323,324,334,335,336,338,339,372,420,421,426,430,431,466,468,469,470,490,492,493,506,514,515,516,519,520,521,],[43,43,-66,-64,-60,-67,-63,-65,-68,-62,-61,-302,43,-69,-81,43,-70,-141,-140,-137,43,43,43,43,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,43,-303,-71,-138,43,43,-212,-197,43,-213,-210,43,-209,-196,-139,-211,-198,43,-200,-208,43,43,-199,43,-204,-203,-201,43,-205,-202,43,-207,43,-206,]),'LBRACE':([12,15,20,23,27,30,38,43,63,65,66,67,69,70,71,72,98,99,100,102,103,105,107,110,116,117,147,170,188,189,190,191,194,196,198,202,203,204,205,211,213,228,241,307,311,312,321,323,324,334,335,336,338,339,367,368,407,410,415,420,421,426,430,431,448,449,452,453,458,459,461,465,466,468,469,470,490,492,493,503,506,514,515,516,519,520,521,],[-304,70,-29,-52,-136,-135,70,-68,70,-7,-82,-8,70,-302,70,-304,70,70,-69,-81,-53,70,70,-83,70,70,-30,-304,70,-76,-74,-73,-72,-193,-78,-75,-195,-77,-194,70,-303,-35,-36,-12,70,-11,-212,-197,70,-213,-210,70,-209,-196,-31,-34,-304,-177,70,-211,-198,70,-200,-208,-33,-32,70,70,70,70,-11,-304,70,70,-199,70,-204,-203,-201,-304,70,-205,-202,70,-207,70,-206,]),'LPAREN':([0,1,3,4,5,6,7,8,9,10,11,13,14,16,17,18,19,20,21,23,24,25,26,28,29,31,32,33,34,35,36,37,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,59,62,64,69,70,71,75,76,80,82,83,84,85,86,88,89,90,91,92,93,94,95,96,98,99,100,102,103,104,105,106,107,108,117,118,120,122,123,128,133,134,135,136,137,141,142,147,148,150,151,153,154,156,157,158,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,184,186,187,188,189,190,191,192,194,196,197,198,199,200,202,203,204,205,211,213,214,215,218,223,224,225,226,228,233,234,235,237,238,239,241,242,245,247,248,249,251,256,257,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,303,305,307,311,312,314,319,320,321,323,324,325,328,329,332,333,334,335,336,338,339,342,343,344,345,346,348,349,352,355,360,361,362,364,367,368,371,373,374,375,399,401,402,403,404,407,410,415,416,417,419,420,421,423,426,428,430,431,433,434,437,439,440,441,442,445,446,447,448,449,452,454,455,456,457,459,461,465,466,467,468,469,470,472,473,474,475,476,477,478,479,480,482,483,490,492,493,494,497,498,500,502,503,504,506,508,509,510,513,514,515,516,519,520,521,],[45,-96,45,-104,-95,-107,-109,-110,-117,-113,45,-66,-116,-114,-100,-108,-93,-29,84,87,-115,-304,-64,-60,-102,-67,-63,-304,-98,-304,-65,-105,-216,-94,-106,-111,-68,-91,45,45,-112,-101,-62,-103,-304,-99,-97,-61,-92,45,84,-147,-302,-148,-89,-90,119,-88,-37,84,84,-87,-304,-86,-9,-10,-85,-28,-27,-159,-161,-130,-131,-69,-81,87,-84,177,84,177,-70,177,84,-304,119,-289,237,-28,177,-304,-162,-160,-128,84,-30,-262,263,265,-298,-260,-290,-278,-293,-264,-263,-281,-295,298,-265,305,-266,-261,-304,265,-296,316,-294,-291,177,-280,-279,-300,-292,-297,177,-289,325,177,-76,-74,-73,328,-72,-193,263,-78,332,333,-75,-195,-77,-194,177,-303,-149,263,-71,-28,177,-304,-38,-35,353,177,-45,237,237,363,-36,177,-261,177,-129,263,-126,-127,-132,177,177,-219,-220,-228,-223,-225,-227,-222,-226,-221,177,-224,-229,263,263,263,263,263,263,263,263,263,263,177,263,263,263,263,263,263,263,263,-301,177,-275,-274,177,177,-12,177,-11,263,417,-299,-212,-197,177,177,177,177,177,177,-213,-210,177,-209,-196,-150,-151,-43,-44,177,-261,177,177,-261,237,363,353,-304,-31,-34,84,263,-133,-134,-269,-272,-273,-270,-271,-304,-177,263,-282,417,417,-211,-198,467,177,177,-200,-208,-39,-42,-261,-188,-190,-186,-192,-28,177,-304,-33,-32,263,263,177,-268,-267,177,-11,-304,177,177,177,-199,177,177,-41,-40,-187,-189,-191,-50,-51,177,-261,177,-204,-203,-201,177,-46,-49,177,-283,-304,-276,177,177,-48,-47,-277,-205,-202,177,-207,177,-206,]),'CHAR_CONST':([9,14,24,43,70,88,93,94,96,100,102,105,107,117,120,133,134,135,136,148,150,151,154,160,161,166,167,169,170,171,177,184,188,189,190,191,194,196,197,198,202,203,204,205,211,213,215,223,224,225,234,242,245,247,249,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,307,311,312,314,321,323,324,325,328,329,332,333,334,335,336,338,339,346,348,349,352,355,364,373,407,410,415,420,421,426,428,430,431,437,445,446,447,452,454,455,459,461,465,466,467,468,469,470,472,480,482,483,490,492,493,494,500,503,506,508,514,515,516,519,520,521,],[-117,-116,-115,-68,-302,-304,-28,-27,-161,-69,-81,172,172,172,-304,-28,172,-304,-162,-262,172,172,-260,-264,-263,-265,172,-261,-304,172,172,172,172,-76,-74,-73,-72,-193,172,-78,-75,-195,-77,-194,172,-303,172,-28,172,-304,172,172,-261,172,172,172,172,-219,-220,-228,-223,-225,-227,-222,-226,-221,172,-224,-229,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-12,172,-11,172,-212,-197,172,172,172,172,172,172,-213,-210,172,-209,-196,172,-261,172,172,-261,-304,172,-304,-177,172,-211,-198,172,172,-200,-208,-261,-28,172,-304,172,172,172,172,-11,-304,172,172,172,-199,172,172,172,-261,172,-204,-203,-201,172,172,-304,172,172,-205,-202,172,-207,172,-206,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'conditional_expression':([105,107,117,134,177,184,188,197,211,215,224,234,242,247,249,263,265,275,288,298,303,305,311,314,324,325,328,329,332,333,336,346,349,352,373,426,428,446,454,455,459,466,467,468,470,472,480,483,494,500,506,508,516,520,],[149,149,149,149,149,149,149,330,149,330,149,149,149,149,330,149,149,149,149,149,149,149,149,330,149,149,149,149,149,149,149,149,149,149,330,149,149,149,484,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'translation_unit_or_empty':([0,],[2,]),'block_item_list_opt':([107,],[185,]),'enumerator_list':([68,114,115,],[111,216,217,]),'constant_expression':([197,215,249,314,373,],[331,341,370,413,451,]),'enumerator':([68,114,115,212,],[113,113,113,340,]),'type_name':([177,263,265,305,316,],[317,376,377,406,414,]),'abstract_declarator':([128,237,319,417,],[231,357,231,357,]),'designator_list':([170,407,465,503,],[310,310,310,310,]),'iteration_statement':([107,188,211,324,336,426,466,468,470,506,516,520,],[189,189,189,189,189,189,189,189,189,189,189,189,]),'enum_specifier':([0,3,11,12,62,67,72,87,97,107,119,126,140,144,145,146,177,211,227,237,259,260,263,265,305,316,333,353,363,417,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'expression_statement':([107,188,211,324,336,426,466,468,470,506,516,520,],[191,191,191,191,191,191,191,191,191,191,191,191,]),'empty':([0,11,12,21,25,33,35,52,62,64,72,87,88,107,119,120,128,134,135,142,170,188,211,224,225,234,237,319,324,333,336,352,353,363,364,407,417,426,428,446,447,465,466,468,470,472,494,503,506,508,516,520,],[22,57,65,78,90,90,94,90,57,78,65,129,94,193,129,94,232,243,94,254,312,326,326,243,94,243,358,232,326,326,326,243,358,129,94,461,358,326,326,243,94,461,326,326,326,326,326,461,326,326,326,326,]),'declarator':([21,64,106,118,142,371,],[77,77,77,77,253,253,]),'direct_id_declarator':([0,3,11,21,45,47,62,64,84,85,106,118,128,142,237,238,360,371,],[23,23,23,23,23,103,23,23,23,103,23,23,23,23,23,103,103,23,]),'init_declarator_list':([21,64,],[79,79,]),'initializer':([105,117,311,459,],[162,219,412,486,]),'pp_directive':([0,3,],[26,26,]),'binary_expression':([105,107,117,134,177,184,188,197,211,215,224,234,242,247,249,263,265,275,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,311,314,324,325,328,329,332,333,336,346,349,352,373,426,428,446,454,455,459,466,467,468,470,472,480,483,494,500,506,508,516,520,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,379,380,381,382,383,384,385,386,387,388,159,390,391,392,393,394,395,396,397,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'expression':([107,177,184,188,211,263,265,288,303,305,324,325,328,332,333,336,426,428,466,467,468,470,472,494,500,506,508,516,520,],[195,318,322,195,195,318,318,389,405,318,195,422,424,427,195,195,195,195,195,491,195,195,195,195,511,195,195,195,195,]),'init_declarator':([21,64,106,118,],[81,81,183,220,]),'designation_opt':([170,407,465,503,],[311,459,311,459,]),'declaration':([0,3,12,67,72,107,211,333,],[32,32,66,110,66,196,196,428,]),'storage_class_specifier':([0,3,12,21,25,33,52,64,67,72,87,107,119,128,211,227,237,333,353,363,417,],[33,33,33,82,33,33,33,82,33,33,33,33,33,82,33,33,33,33,33,33,33,]),'assignment_expression_opt':([134,224,234,352,446,],[244,347,354,436,481,]),'labeled_statement':([107,188,211,324,336,426,466,468,470,506,516,520,],[194,194,194,194,194,194,194,194,194,194,194,194,]),'pppragma_directive':([0,3,97,107,144,145,146,188,211,259,260,324,336,426,466,468,470,506,516,520,],[36,36,138,198,138,138,138,198,198,138,138,198,198,198,198,198,198,198,198,198,]),'parameter_type_list_opt':([237,353,417,],[359,438,359,]),'initializer_list':([170,465,],[306,489,]),'expression_opt':([107,188,211,324,333,336,426,428,466,468,470,472,494,506,508,516,520,],[201,201,201,201,429,201,201,471,201,201,201,495,507,201,517,201,201,]),'type_specifier':([0,3,11,12,62,67,72,87,97,107,119,126,140,144,145,146,177,211,227,237,259,260,263,265,305,316,333,353,363,417,],[44,44,59,44,59,44,44,44,141,44,44,59,248,141,141,141,141,44,44,44,141,141,141,141,141,141,44,44,44,44,]),'struct_declaration':([97,144,145,146,259,260,],[143,258,143,143,258,258,]),'identifier_list_opt':([87,119,363,],[131,222,444,]),'function_definition':([0,3,],[50,50,]),'direct_typeid_noparen_declarator':([128,238,],[239,361,]),'type_qualifier_list_opt':([35,88,120,135,225,364,447,],[95,134,224,247,349,446,483,]),'declaration_list':([12,72,],[67,67,]),'designation':([170,407,465,503,],[307,307,307,307,]),'specifier_qualifier_list':([97,144,145,146,177,259,260,263,265,305,316,],[142,142,142,142,319,142,142,319,319,319,319,]),'unified_string_literal':([105,107,117,134,150,151,167,171,177,184,188,197,211,215,224,234,242,247,249,263,265,275,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,311,314,324,325,328,329,332,333,336,346,349,352,373,415,426,428,446,452,454,455,459,466,467,468,470,472,480,483,494,500,506,508,516,520,],[178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,]),'type_qualifier':([0,3,12,21,25,33,35,52,64,67,72,87,88,93,97,107,119,120,128,133,135,140,142,144,145,146,177,211,223,225,227,237,259,260,263,265,305,316,319,333,353,363,364,417,445,447,],[52,52,52,86,52,52,96,52,86,52,52,52,96,136,96,52,52,96,86,136,96,136,256,96,96,96,96,52,136,96,52,52,96,96,96,96,96,96,256,52,52,52,96,52,136,96,]),'argument_expression_list':([298,],[400,]),'direct_typeid_declarator':([21,64,84,85,106,118,142,371,],[80,80,80,122,80,80,80,80,]),'unary_operator':([105,107,117,134,150,151,167,171,177,184,188,197,211,215,224,234,242,247,249,263,265,275,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,311,314,324,325,328,329,332,333,336,346,349,352,373,415,426,428,446,452,454,455,459,466,467,468,470,472,480,483,494,500,506,508,516,520,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'id_declarator':([0,3,11,21,45,62,64,84,106,118,128,142,237,371,],[12,12,56,72,101,56,109,101,109,109,229,109,101,109,]),'initializer_list_opt':([170,],[308,]),'external_declaration':([0,3,],[28,55,]),'translation_unit':([0,],[3,]),'typeid_noparen_declarator':([128,],[230,]),'designator':([170,310,407,465,503,],[313,411,313,313,313,]),'unary_expression':([105,107,117,134,150,151,167,171,177,184,188,197,211,215,224,234,242,247,249,263,265,275,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,311,314,324,325,328,329,332,333,336,346,349,352,373,415,426,428,446,452,454,455,459,466,467,468,470,472,480,483,494,500,506,508,516,520,],[152,152,152,152,261,264,304,315,152,152,152,261,152,261,152,152,152,152,261,152,152,152,261,261,261,261,261,261,261,261,261,261,152,261,261,261,261,261,261,261,261,152,152,152,152,261,152,152,152,152,152,152,152,152,152,152,261,261,152,152,152,261,261,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'parameter_type_list':([87,119,237,353,363,417,],[125,221,356,356,443,356,]),'selection_statement':([107,188,211,324,336,426,466,468,470,506,516,520,],[202,202,202,202,202,202,202,202,202,202,202,202,]),'init_declarator_list_opt':([21,64,],[73,73,]),'typeid_declarator':([21,64,84,106,118,142,371,],[74,74,121,74,74,74,74,]),'block_item':([107,211,],[203,339,]),'struct_or_union_specifier':([0,3,11,12,62,67,72,87,97,107,119,126,140,144,145,146,177,211,227,237,259,260,263,265,305,316,333,353,363,417,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'struct_declarator_list':([142,],[250,]),'cast_expression':([105,107,117,134,150,177,184,188,197,211,215,224,234,242,247,249,263,265,275,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,311,314,324,325,328,329,332,333,336,346,349,352,373,415,426,428,446,452,454,455,459,466,467,468,470,472,480,483,494,500,506,508,516,520,],[155,155,155,155,262,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,464,155,155,155,464,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'primary_expression':([105,107,117,134,150,151,167,171,177,184,188,197,211,215,224,234,242,247,249,263,265,275,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,311,314,324,325,328,329,332,333,336,346,349,352,373,415,426,428,446,452,454,455,459,466,467,468,470,472,480,483,494,500,506,508,516,520,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'struct_or_union':([0,3,11,12,62,67,72,87,97,107,119,126,140,144,145,146,177,211,227,237,259,260,263,265,305,316,333,353,363,417,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'identifier':([87,105,107,117,119,134,150,151,167,171,177,184,188,197,211,215,224,234,240,242,247,249,263,265,275,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,309,311,314,324,325,328,329,332,333,336,346,349,352,363,373,415,426,428,446,452,454,455,459,463,466,467,468,470,472,480,483,494,500,501,506,508,516,520,],[127,157,157,157,127,157,157,157,157,157,157,157,157,157,157,157,157,157,365,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,409,157,157,157,157,157,157,157,157,157,157,157,157,127,157,157,157,157,157,157,157,157,157,488,157,157,157,157,157,157,157,157,157,512,157,157,157,157,]),'offsetof_member_designator':([463,],[487,]),'type_specifier_no_typeid':([0,3,11,12,21,62,64,67,72,87,97,107,119,126,128,140,142,144,145,146,177,211,227,237,259,260,263,265,305,316,319,333,353,363,417,],[16,16,16,16,76,16,76,16,16,16,16,16,16,16,76,16,251,16,16,16,16,16,16,16,16,16,16,16,16,16,251,16,16,16,16,]),'declaration_list_opt':([12,72,],[63,116,]),'struct_declarator_list_opt':([142,],[252,]),'declaration_specifiers_no_type_opt':([25,33,52,],[89,92,104,]),'declaration_specifiers':([0,3,12,67,72,87,107,119,211,227,237,333,353,363,417,],[21,21,64,64,64,128,64,128,64,128,128,64,128,128,128,]),'declaration_specifiers_no_type':([0,3,12,25,33,52,67,72,87,107,119,211,227,237,333,353,363,417,],[11,11,62,91,91,91,62,62,126,62,126,62,126,126,62,126,126,126,]),'constant':([105,107,117,134,150,151,167,171,177,184,188,197,211,215,224,234,242,247,249,263,265,275,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,311,314,324,325,328,329,332,333,336,346,349,352,373,415,426,428,446,452,454,455,459,466,467,468,470,472,480,483,494,500,506,508,516,520,],[179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,]),'function_specifier':([0,3,12,21,25,33,52,64,67,72,87,107,119,128,211,227,237,333,353,363,417,],[25,25,25,75,25,25,25,75,25,25,25,25,25,75,25,25,25,25,25,25,25,]),'struct_declaration_list':([97,145,146,],[144,259,260,]),'type_qualifier_list':([35,88,97,120,135,144,145,146,177,225,259,260,263,265,305,316,364,447,],[93,133,140,223,93,140,140,140,140,93,140,140,140,140,140,140,445,93,]),'statement':([107,188,211,324,336,426,466,468,470,506,516,520,],[205,327,205,421,430,469,490,492,493,515,519,521,]),'jump_statement':([107,188,211,324,336,426,466,468,470,506,516,520,],[204,204,204,204,204,204,204,204,204,204,204,204,]),'unified_wstring_literal':([105,107,117,134,150,151,167,171,177,184,188,197,211,215,224,234,242,247,249,263,265,275,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,311,314,324,325,328,329,332,333,336,346,349,352,373,415,426,428,446,452,454,455,459,466,467,468,470,472,480,483,494,500,506,508,516,520,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'id_init_declarator_list_opt':([11,62,],[58,58,]),'postfix_expression':([105,107,117,134,150,151,167,171,177,184,188,197,211,215,224,234,242,247,249,263,265,275,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,303,305,311,314,324,325,328,329,332,333,336,346,349,352,373,415,426,428,446,452,454,455,459,466,467,468,470,472,480,483,494,500,506,508,516,520,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'identifier_list':([87,119,363,],[130,130,130,]),'brace_close':([111,144,185,216,217,259,260,308,407,489,503,],[214,257,323,342,343,374,375,408,460,504,513,]),'direct_abstract_declarator':([128,237,238,319,360,417,419,],[233,233,362,233,362,233,362,]),'abstract_declarator_opt':([128,319,],[236,418,]),'brace_open':([15,38,63,69,71,98,99,105,107,116,117,188,211,311,324,336,415,426,452,453,458,459,466,468,470,506,516,520,],[68,97,107,114,115,145,146,170,107,107,170,107,107,170,107,107,465,107,465,465,465,170,107,107,107,107,107,107,]),'assignment_expression':([105,107,117,134,177,184,188,211,224,234,242,247,263,265,275,288,298,303,305,311,324,325,328,329,332,333,336,346,349,352,426,428,446,455,459,466,467,468,470,472,480,483,494,500,506,508,516,520,],[176,208,176,246,208,208,208,208,246,246,366,369,208,208,378,208,398,208,208,176,208,208,208,425,208,208,208,432,435,246,208,208,246,485,176,208,208,208,208,208,496,499,208,208,208,208,208,208,]),'typedef_name':([0,3,11,12,62,67,72,87,97,107,119,126,140,144,145,146,177,211,227,237,259,260,263,265,305,316,333,353,363,417,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'parameter_list':([87,119,237,353,363,417,],[124,124,124,124,124,124,]),'decl_body':([0,3,12,67,72,107,211,333,],[46,46,46,46,46,46,46,46,]),'id_init_declarator_list':([11,62,],[61,61,]),'pointer':([0,3,11,21,45,62,64,84,95,106,118,128,142,237,319,371,417,],[47,47,47,85,47,47,85,85,137,85,85,238,85,360,419,85,419,]),'compound_statement':([63,107,116,188,211,324,336,426,466,468,470,506,516,520,],[108,190,218,190,190,190,190,190,190,190,190,190,190,190,]),'parameter_declaration':([87,119,227,237,353,363,417,],[132,132,351,132,132,132,132,]),'id_init_declarator':([11,62,],[60,60,]),'struct_declarator':([142,371,],[255,450,]),'assignment_operator':([152,],[275,]),'block_item_list':([107,],[211,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
