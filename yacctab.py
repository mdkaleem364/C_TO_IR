
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'INT_CONST_BIN':([11,13,14,17,55,73,80,81,83,84,85,110,112,123,124,125,127,131,147,152,154,156,158,161,163,166,168,173,174,177,180,188,189,190,196,207,210,211,212,213,214,215,216,218,219,220,221,227,229,231,235,237,242,250,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,287,288,289,293,296,299,302,304,309,310,311,312,313,314,315,316,317,318,319,320,324,325,326,336,340,342,349,352,354,356,357,358,359,360,361,362,363,364,365,369,376,400,405,430,431,432,435,438,440,442,443,447,449,452,454,456,457,460,463,471,472,473,477,478,480,481,482,483,495,497,498,499,500,502,507,510,515,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,151,-304,151,-304,-28,151,-162,151,151,-260,-261,-263,-304,-265,-264,-262,151,151,151,151,151,-304,-28,151,-261,151,151,-74,-194,-78,151,-193,-75,151,151,-73,-195,151,-72,-77,-76,151,-303,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,-12,151,-11,151,151,151,151,151,151,-219,-221,-225,-223,-228,-229,-220,-227,-226,151,-222,-224,-261,151,151,-261,-304,151,151,-212,-213,151,151,-197,151,-196,151,151,-210,-209,151,151,151,-304,-177,151,-304,-28,-261,151,151,-211,-208,-200,-198,-304,151,151,-11,151,151,-261,151,151,-199,151,151,151,151,151,151,-201,-203,-204,-304,151,151,151,151,-205,-202,151,-207,-206,]),'DIVIDE':([116,151,155,157,159,164,165,167,170,171,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,264,-297,-295,-292,-291,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-235,264,264,264,264,264,264,264,-234,264,264,264,264,264,264,264,264,-236,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'LPAREN':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,21,22,23,24,26,27,28,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,57,59,62,65,67,68,70,71,73,75,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,98,104,105,107,108,110,112,115,116,123,124,125,126,127,130,131,137,139,146,147,148,150,151,152,154,155,156,158,159,161,162,163,164,165,166,167,168,170,172,173,174,175,176,177,178,179,180,181,182,184,185,188,189,190,194,196,197,200,201,202,204,205,207,210,211,212,213,214,215,216,217,218,219,220,221,224,225,227,228,229,231,235,237,239,241,242,246,248,250,252,256,257,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,287,288,289,293,295,296,298,299,302,304,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,333,336,337,338,340,342,343,344,349,352,354,356,357,358,359,360,361,362,363,364,365,366,369,370,371,372,375,376,378,379,380,400,405,409,411,412,414,415,420,421,424,425,426,427,430,431,432,435,436,437,438,440,441,442,443,447,449,452,454,456,457,460,461,462,463,466,467,468,469,471,472,473,474,475,476,477,478,480,481,482,483,490,491,495,497,498,499,500,501,502,504,505,506,507,510,511,515,516,517,519,520,521,],[12,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,12,-117,-115,57,72,-116,-114,-95,-94,-304,-97,-104,12,-216,-101,-63,-60,-62,-304,-103,-107,-105,-98,12,-304,-112,-304,-111,-96,-29,-113,-99,12,-91,-110,-108,-69,57,57,-88,-89,-90,111,-87,-37,-304,57,12,-81,-27,-159,-161,-28,-302,-131,-130,-61,-148,-147,-9,-85,-10,72,-86,-84,-92,-30,57,111,152,-304,194,-289,152,-304,-28,-70,152,-160,-162,57,-128,57,152,-38,-71,-293,152,-260,-279,-261,-263,-297,-304,292,-265,-295,-292,-264,-291,-262,293,-300,299,302,-296,-266,304,-298,-278,304,-281,-280,-290,-294,152,-304,-28,194,152,194,339,-45,341,-35,-36,-261,152,152,-74,-194,-78,299,-193,349,-75,152,152,-73,356,357,-195,359,152,-72,-77,-76,-289,-129,299,-126,-127,-303,-132,-149,299,378,299,299,299,299,299,299,299,299,152,299,299,299,299,299,299,299,299,299,299,-12,152,-11,299,152,-274,152,-275,152,152,152,-301,-299,-219,-221,-225,-223,-228,-229,-220,-227,-226,152,-222,-224,-43,-44,-261,152,152,194,-261,339,341,-304,152,-31,-34,152,-212,-213,152,152,-197,152,-196,152,152,-210,-209,152,-134,299,57,-133,-151,-150,299,378,378,-282,-304,-177,-269,-271,-270,-273,-272,-39,-42,-192,-186,-188,-190,152,-304,-28,-261,-32,-33,152,152,480,-211,-208,-200,-198,-304,299,152,-11,152,-268,-267,299,-40,-41,-50,-51,-261,152,152,-191,-187,-189,-199,152,152,152,152,152,-46,-49,152,-201,-203,-204,-304,-276,152,-283,-47,-48,152,152,-277,152,-205,-202,152,-207,-206,]),'OFFSETOF':([11,13,14,17,55,73,80,81,83,84,85,110,112,123,124,125,127,131,147,152,154,156,158,161,163,166,168,173,174,177,180,188,189,190,196,207,210,211,212,213,214,215,216,218,219,220,221,227,229,231,235,237,242,250,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,287,288,289,293,296,299,302,304,309,310,311,312,313,314,315,316,317,318,319,320,324,325,326,336,340,342,349,352,354,356,357,358,359,360,361,362,363,364,365,369,376,400,405,430,431,432,435,438,440,442,443,447,449,452,454,456,457,460,463,471,472,473,477,478,480,481,482,483,495,497,498,499,500,502,507,510,515,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,162,-304,162,-304,-28,162,-162,162,162,-260,-261,-263,-304,-265,-264,-262,162,162,162,162,162,-304,-28,162,-261,162,162,-74,-194,-78,162,-193,-75,162,162,-73,-195,162,-72,-77,-76,162,-303,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,-12,162,-11,162,162,162,162,162,162,-219,-221,-225,-223,-228,-229,-220,-227,-226,162,-222,-224,-261,162,162,-261,-304,162,162,-212,-213,162,162,-197,162,-196,162,162,-210,-209,162,162,162,-304,-177,162,-304,-28,-261,162,162,-211,-208,-200,-198,-304,162,162,-11,162,162,-261,162,162,-199,162,162,162,162,162,162,-201,-203,-204,-304,162,162,162,162,-205,-202,162,-207,-206,]),'GE':([116,151,155,157,159,164,165,167,170,171,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,266,-297,-295,-292,-291,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-235,266,-243,-241,266,266,266,-242,-234,-238,-239,266,266,-244,-237,-240,266,-236,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'WSTRING_LITERAL':([11,13,14,17,55,73,80,81,83,84,85,110,112,123,124,125,127,131,147,152,154,156,158,161,163,166,168,172,173,174,177,180,181,188,189,190,196,207,210,211,212,213,214,215,216,218,219,220,221,227,229,231,235,237,242,250,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,287,288,289,293,296,299,302,304,307,309,310,311,312,313,314,315,316,317,318,319,320,324,325,326,336,340,342,349,352,354,356,357,358,359,360,361,362,363,364,365,369,376,400,405,430,431,432,435,438,440,442,443,447,449,452,454,456,457,460,463,471,472,473,477,478,480,481,482,483,495,497,498,499,500,502,507,510,515,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,172,-304,172,-304,-28,172,-162,172,172,-260,-261,-263,-304,-265,-264,-262,-300,172,172,172,172,307,172,-304,-28,172,-261,172,172,-74,-194,-78,172,-193,-75,172,172,-73,-195,172,-72,-77,-76,172,-303,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-12,172,-11,172,172,172,172,172,172,-301,-219,-221,-225,-223,-228,-229,-220,-227,-226,172,-222,-224,-261,172,172,-261,-304,172,172,-212,-213,172,172,-197,172,-196,172,172,-210,-209,172,172,172,-304,-177,172,-304,-28,-261,172,172,-211,-208,-200,-198,-304,172,172,-11,172,172,-261,172,172,-199,172,172,172,172,172,172,-201,-203,-204,-304,172,172,172,172,-205,-202,172,-207,-206,]),'CHAR_CONST':([11,13,14,17,55,73,80,81,83,84,85,110,112,123,124,125,127,131,147,152,154,156,158,161,163,166,168,173,174,177,180,188,189,190,196,207,210,211,212,213,214,215,216,218,219,220,221,227,229,231,235,237,242,250,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,287,288,289,293,296,299,302,304,309,310,311,312,313,314,315,316,317,318,319,320,324,325,326,336,340,342,349,352,354,356,357,358,359,360,361,362,363,364,365,369,376,400,405,430,431,432,435,438,440,442,443,447,449,452,454,456,457,460,463,471,472,473,477,478,480,481,482,483,495,497,498,499,500,502,507,510,515,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,175,-304,175,-304,-28,175,-162,175,175,-260,-261,-263,-304,-265,-264,-262,175,175,175,175,175,-304,-28,175,-261,175,175,-74,-194,-78,175,-193,-75,175,175,-73,-195,175,-72,-77,-76,175,-303,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,-12,175,-11,175,175,175,175,175,175,-219,-221,-225,-223,-228,-229,-220,-227,-226,175,-222,-224,-261,175,175,-261,-304,175,175,-212,-213,175,175,-197,175,-196,175,175,-210,-209,175,175,175,-304,-177,175,-304,-28,-261,175,175,-211,-208,-200,-198,-304,175,175,-11,175,175,-261,175,175,-199,175,175,175,175,175,175,-201,-203,-204,-304,175,175,175,175,-205,-202,175,-207,-206,]),'SHORT':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,19,21,22,24,26,27,28,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,50,51,53,54,55,60,62,65,67,70,72,75,76,77,79,80,83,85,86,87,88,89,90,92,93,94,95,96,97,98,104,105,111,115,122,126,127,129,131,132,133,134,135,136,137,138,139,140,150,152,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,240,241,246,248,250,251,252,253,256,262,292,299,302,304,339,341,343,344,349,352,354,358,360,363,364,366,368,371,372,375,378,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[5,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,-117,-115,5,-52,-116,-114,5,-95,-94,-97,-104,5,-216,-101,-63,-60,-62,-304,-103,-107,-105,-98,-304,-112,-304,-111,-96,-29,-113,-99,5,-91,-110,-108,-69,5,-88,-89,-90,-87,5,5,5,-82,5,-81,-161,-302,-131,5,-130,-61,-148,-147,-9,-85,-10,-53,-86,-84,-92,-30,5,5,5,-70,5,-83,-162,5,-140,-137,5,-141,5,5,-128,5,-71,5,5,5,-35,-36,-74,-194,-78,-193,-75,-73,-195,5,-72,-77,-76,5,-129,-126,-127,-303,-138,-132,5,-149,5,5,5,5,5,5,5,-31,-34,5,-212,-213,-197,-196,-210,-209,-134,-139,-133,-151,-150,5,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'_BOOL':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,19,21,22,24,26,27,28,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,50,51,53,54,55,60,62,65,67,70,72,75,76,77,79,80,83,85,86,87,88,89,90,92,93,94,95,96,97,98,104,105,111,115,122,126,127,129,131,132,133,134,135,136,137,138,139,140,150,152,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,240,241,246,248,250,251,252,253,256,262,292,299,302,304,339,341,343,344,349,352,354,358,360,363,364,366,368,371,372,375,378,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[6,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,-117,-115,6,-52,-116,-114,6,-95,-94,-97,-104,6,-216,-101,-63,-60,-62,-304,-103,-107,-105,-98,-304,-112,-304,-111,-96,-29,-113,-99,6,-91,-110,-108,-69,6,-88,-89,-90,-87,6,6,6,-82,6,-81,-161,-302,-131,6,-130,-61,-148,-147,-9,-85,-10,-53,-86,-84,-92,-30,6,6,6,-70,6,-83,-162,6,-140,-137,6,-141,6,6,-128,6,-71,6,6,6,-35,-36,-74,-194,-78,-193,-75,-73,-195,6,-72,-77,-76,6,-129,-126,-127,-303,-138,-132,6,-149,6,6,6,6,6,6,6,-31,-34,6,-212,-213,-197,-196,-210,-209,-134,-139,-133,-151,-150,6,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'PPHASH':([0,1,2,4,7,11,27,31,32,33,55,80,89,126,150,250,358,],[7,-66,-65,-64,-67,-68,7,-63,-60,-62,-69,-81,-61,-70,-71,-303,-197,]),'LT':([116,151,155,157,159,164,165,167,170,171,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,267,-297,-295,-292,-291,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-235,267,-243,-241,267,267,267,-242,-234,-238,-239,267,267,-244,-237,-240,267,-236,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'ANDEQUAL':([116,151,155,159,164,165,167,170,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,-297,-295,-292,-291,-254,-300,-296,-266,-298,-278,-281,-280,313,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'LE':([116,151,155,157,159,164,165,167,170,171,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,271,-297,-295,-292,-291,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-235,271,-243,-241,271,271,271,-242,-234,-238,-239,271,271,-244,-237,-240,271,-236,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'HEX_FLOAT_CONST':([11,13,14,17,55,73,80,81,83,84,85,110,112,123,124,125,127,131,147,152,154,156,158,161,163,166,168,173,174,177,180,188,189,190,196,207,210,211,212,213,214,215,216,218,219,220,221,227,229,231,235,237,242,250,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,287,288,289,293,296,299,302,304,309,310,311,312,313,314,315,316,317,318,319,320,324,325,326,336,340,342,349,352,354,356,357,358,359,360,361,362,363,364,365,369,376,400,405,430,431,432,435,438,440,442,443,447,449,452,454,456,457,460,463,471,472,473,477,478,480,481,482,483,495,497,498,499,500,502,507,510,515,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,164,-304,164,-304,-28,164,-162,164,164,-260,-261,-263,-304,-265,-264,-262,164,164,164,164,164,-304,-28,164,-261,164,164,-74,-194,-78,164,-193,-75,164,164,-73,-195,164,-72,-77,-76,164,-303,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-12,164,-11,164,164,164,164,164,164,-219,-221,-225,-223,-228,-229,-220,-227,-226,164,-222,-224,-261,164,164,-261,-304,164,164,-212,-213,164,164,-197,164,-196,164,164,-210,-209,164,164,164,-304,-177,164,-304,-28,-261,164,164,-211,-208,-200,-198,-304,164,164,-11,164,164,-261,164,164,-199,164,164,164,164,164,164,-201,-203,-204,-304,164,164,164,164,-205,-202,164,-207,-206,]),'TYPEDEF':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,19,21,22,24,26,27,28,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,51,53,54,55,60,62,65,67,70,72,75,76,77,80,85,86,88,89,90,92,96,104,105,111,115,126,127,129,150,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,250,252,256,339,341,343,344,349,352,354,358,360,363,364,366,371,372,375,378,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[24,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,-117,-115,24,-52,-116,-114,24,-95,-94,-97,-104,24,-216,-101,-63,-60,-62,24,-103,-107,-105,-98,24,-112,24,-111,-96,-29,-113,-99,-91,-110,-108,-69,24,-88,-89,-90,-87,24,24,24,-82,-81,-302,-131,-130,-61,-148,-147,-53,-92,-30,24,24,-70,24,-83,-71,24,24,-35,-36,-74,-194,-78,-193,-75,-73,-195,24,-72,-77,-76,-303,-132,-149,24,24,-31,-34,24,-212,-213,-197,-196,-210,-209,-134,-133,-151,-150,24,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'COMMA':([3,5,6,8,10,13,14,16,17,18,21,22,23,24,26,28,30,35,38,39,40,43,45,46,47,48,49,51,53,54,58,60,61,62,64,65,66,67,68,70,71,81,82,83,84,86,88,90,92,96,99,100,102,104,105,108,113,114,115,116,117,119,128,130,131,139,142,143,144,148,149,151,153,155,157,159,160,164,165,167,169,170,171,172,175,176,178,179,181,182,183,184,185,193,195,197,198,199,200,201,202,203,204,205,230,233,239,241,244,245,246,248,249,250,252,254,255,256,258,259,260,262,263,283,295,298,300,301,303,305,306,307,308,321,322,327,329,337,338,343,344,348,353,366,367,371,372,373,374,375,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,402,403,407,408,409,410,411,412,413,414,415,419,420,421,424,425,426,427,436,437,444,445,446,448,450,451,453,455,461,462,464,466,467,468,469,474,475,476,484,485,486,489,490,491,496,501,504,505,506,511,512,],[-93,-102,-100,-106,-109,-117,-115,-52,-116,-114,-95,-94,-304,-97,-104,-216,-101,-103,-107,-105,-98,-112,-111,-96,-29,-113,-99,-91,-110,-108,107,-157,-158,-88,-120,-89,-118,-90,-54,-87,-37,-27,-159,-161,-28,-131,-130,-148,-147,-53,146,-122,-124,-92,-30,-55,191,192,-304,-289,-170,-165,-157,-160,-162,-128,255,-152,-155,-38,-119,-293,-217,-279,-231,-297,-121,-295,-292,-291,-172,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-168,-169,-183,-167,-1,-56,-45,-185,-2,-35,-36,-214,362,-289,-129,-144,370,-126,-127,-142,-303,-132,255,-153,-149,255,-123,-125,-304,362,400,-274,-275,-257,-252,-258,-255,-256,-301,-299,-43,-44,-171,-166,-57,-184,-31,-34,-230,362,-134,-146,-133,-151,-154,-156,-150,-182,-183,-282,-235,-248,-243,-241,-247,-245,-246,-242,362,-234,-238,-239,-249,-251,-244,-237,-240,-250,-236,-173,-175,459,460,-269,-287,-271,-270,362,-273,-272,-218,-39,-42,-192,-186,-188,-190,-32,-33,362,362,362,-215,-145,-143,-253,-174,-268,-267,-259,-40,-41,-50,-51,-191,-187,-189,500,-232,-176,-288,-46,-49,362,-276,-283,-47,-48,-277,362,]),'RESTRICT':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,19,21,22,23,24,26,27,28,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,51,53,54,55,60,62,65,67,70,72,73,75,76,77,80,83,84,85,86,87,88,89,90,92,96,104,105,111,112,115,124,125,126,127,129,131,132,133,134,135,136,137,138,139,140,150,152,189,190,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,240,241,246,248,250,251,252,253,256,262,292,299,302,304,339,340,341,343,344,349,352,354,358,360,363,364,366,368,371,372,375,378,431,432,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[17,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,-117,-115,17,-52,-116,-114,17,-95,-94,17,-97,-104,17,-216,-101,-63,-60,-62,17,-103,-107,-105,-98,17,-112,17,-111,-96,-29,-113,-99,-91,-110,-108,-69,17,-88,-89,-90,-87,17,17,17,17,-82,-81,-161,17,-302,-131,17,-130,-61,-148,-147,-53,-92,-30,17,17,17,17,17,-70,17,-83,-162,17,-140,-137,17,-141,17,17,-128,17,-71,17,17,17,17,17,-35,-36,-74,-194,-78,-193,-75,-73,-195,17,-72,-77,-76,17,-129,-126,-127,-303,-138,-132,17,-149,17,17,17,17,17,17,17,17,-31,-34,17,-212,-213,-197,-196,-210,-209,-134,-139,-133,-151,-150,17,17,17,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'PPPRAGMASTR':([11,],[55,]),'RSHIFT':([116,151,155,157,159,164,165,167,170,171,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,275,-297,-295,-292,-291,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-235,275,275,275,275,275,275,275,-234,-238,-239,275,275,275,-237,-240,275,-236,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'MODEQUAL':([116,151,155,159,164,165,167,170,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,-297,-295,-292,-291,-254,-300,-296,-266,-298,-278,-281,-280,312,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'LNOT':([11,13,14,17,55,73,80,81,83,84,85,110,112,123,124,125,127,131,147,152,154,156,158,161,163,166,168,173,174,177,180,188,189,190,196,207,210,211,212,213,214,215,216,218,219,220,221,227,229,231,235,237,242,250,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,287,288,289,293,296,299,302,304,309,310,311,312,313,314,315,316,317,318,319,320,324,325,326,336,340,342,349,352,354,356,357,358,359,360,361,362,363,364,365,369,376,400,405,430,431,432,435,438,440,442,443,447,449,452,454,456,457,460,463,471,472,473,477,478,480,481,482,483,495,497,498,499,500,502,507,510,515,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,163,-304,163,-304,-28,163,-162,163,163,-260,-261,-263,-304,-265,-264,-262,163,163,163,163,163,-304,-28,163,-261,163,163,-74,-194,-78,163,-193,-75,163,163,-73,-195,163,-72,-77,-76,163,-303,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,-12,163,-11,163,163,163,163,163,163,-219,-221,-225,-223,-228,-229,-220,-227,-226,163,-222,-224,-261,163,163,-261,-304,163,163,-212,-213,163,163,-197,163,-196,163,163,-210,-209,163,163,163,-304,-177,163,-304,-28,-261,163,163,-211,-208,-200,-198,-304,163,163,-11,163,163,-261,163,163,-199,163,163,163,163,163,163,-201,-203,-204,-304,163,163,163,163,-205,-202,163,-207,-206,]),'OREQUAL':([116,151,155,159,164,165,167,170,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,-297,-295,-292,-291,-254,-300,-296,-266,-298,-278,-281,-280,314,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'WHILE':([11,55,80,85,127,212,213,214,216,218,219,221,227,229,231,235,237,250,350,352,354,358,360,361,363,364,365,438,442,443,447,449,477,481,482,483,497,498,499,510,515,516,517,519,520,521,],[-68,-69,-81,-302,228,-74,-194,-78,-193,-75,228,-73,-195,228,-72,-77,-76,-303,441,-212,-213,-197,-196,228,-210,-209,228,228,-211,-208,-200,-198,-199,228,228,228,-201,-203,-204,228,228,-205,-202,228,-207,-206,]),'PLUS':([11,13,14,17,55,73,80,81,83,84,85,110,112,116,123,124,125,127,131,147,151,152,154,155,156,157,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,189,190,196,207,210,211,212,213,214,215,216,218,219,220,221,227,229,231,235,237,239,242,250,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,287,288,289,293,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,324,325,326,336,340,342,349,352,354,356,357,358,359,360,361,362,363,364,365,369,376,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,405,409,411,412,414,415,430,431,432,435,438,440,442,443,447,449,452,453,454,456,457,460,461,462,463,464,471,472,473,477,478,480,481,482,483,495,497,498,499,500,501,502,504,507,510,511,515,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,168,-304,-289,168,-304,-28,168,-162,168,-293,168,-260,-279,-261,279,-263,-297,-304,-265,-295,-292,-264,-291,-262,-254,-233,-300,168,168,-296,-266,168,-298,-278,168,-281,-280,-252,-290,-294,168,-304,-28,168,-261,168,168,-74,-194,-78,168,-193,-75,168,168,-73,-195,168,-72,-77,-76,-289,168,-303,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,-12,168,-11,168,168,-274,168,-275,168,-257,-252,168,-258,168,-255,-256,-301,-299,-219,-221,-225,-223,-228,-229,-220,-227,-226,168,-222,-224,-261,168,168,-261,-304,168,168,-212,-213,168,168,-197,168,-196,168,168,-210,-209,168,168,168,-282,-235,279,279,279,279,279,279,279,-234,-238,279,279,279,279,-237,279,279,-236,-304,-177,-269,-271,-270,-273,-272,168,-304,-28,-261,168,168,-211,-208,-200,-198,-304,-253,168,168,-11,168,-268,-267,168,-259,-261,168,168,-199,168,168,168,168,168,168,-201,-203,-204,-304,-276,168,-283,168,168,-277,168,-205,-202,168,-207,-206,]),'RBRACKET':([13,14,17,73,81,83,112,116,123,125,131,151,153,155,157,159,164,165,167,170,171,172,175,176,178,179,181,182,183,184,185,188,190,196,206,207,208,209,230,250,295,298,300,301,303,305,306,307,308,323,324,335,336,340,342,345,346,348,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,404,409,411,412,413,414,415,419,422,423,430,432,434,435,448,453,461,462,464,470,471,485,492,493,501,504,511,512,],[-117,-115,-116,-304,-27,-161,-304,-289,-304,-28,-162,-293,-217,-279,-231,-297,-295,-292,-291,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-304,-28,-304,343,344,-4,-3,-214,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,420,421,426,427,-304,-304,436,437,-230,-282,-235,-248,-243,-241,-247,-245,-246,-242,-234,-238,-239,-249,-251,-244,-237,-240,-250,-236,458,-269,-271,-270,462,-273,-272,-218,466,467,-304,-28,475,476,-215,-253,-268,-267,-259,490,491,-232,505,506,-276,-283,-277,518,]),'LOR':([116,151,155,157,159,164,165,167,170,171,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,277,-297,-295,-292,-291,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-235,-248,-243,-241,-247,-245,-246,-242,-234,-238,-239,-249,-251,-244,-237,-240,-250,-236,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'ENUM':([0,1,2,3,4,7,11,13,14,16,17,19,21,22,24,27,31,32,33,34,40,42,44,46,47,50,55,60,72,76,77,79,80,83,85,87,89,93,94,95,96,97,98,105,111,122,126,127,129,131,132,133,134,135,136,138,140,150,152,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,240,250,251,253,292,299,302,304,339,341,343,344,349,352,354,358,360,363,364,368,378,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[29,-66,-65,-93,-64,-67,-68,-117,-115,-52,-116,29,-95,-94,-97,29,-63,-60,-62,-304,-98,-304,-304,-96,-29,29,-69,29,29,29,-82,29,-81,-161,-302,29,-61,-9,-85,-10,-53,-86,-84,-30,29,29,-70,29,-83,-162,29,-140,-137,29,-141,29,29,-71,29,29,29,-35,-36,-74,-194,-78,-193,-75,-73,-195,29,-72,-77,-76,29,-303,-138,29,29,29,29,29,29,29,-31,-34,29,-212,-213,-197,-196,-210,-209,-139,29,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'TIMESEQUAL':([116,151,155,159,164,165,167,170,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,-297,-295,-292,-291,-254,-300,-296,-266,-298,-278,-281,-280,310,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'LBRACKET':([3,5,6,8,10,13,14,16,17,18,21,22,23,24,26,28,30,35,38,39,40,43,45,46,47,48,49,51,53,54,62,65,67,68,70,71,81,82,83,84,85,86,88,90,92,96,104,105,108,115,116,130,131,139,148,151,155,159,161,164,165,167,170,172,175,176,178,179,181,182,184,185,194,197,200,201,202,204,205,239,241,246,248,250,252,256,262,290,291,295,298,307,308,321,322,333,337,338,343,344,366,371,372,375,378,379,380,400,401,406,409,411,412,414,415,420,421,424,425,426,427,436,437,452,458,461,462,466,467,468,469,474,475,476,487,488,490,491,500,501,504,505,506,511,513,518,],[-93,-102,-100,-106,-109,-117,-115,73,-116,-114,-95,-94,-304,-97,-104,-216,-101,-103,-107,-105,-98,-112,-111,-96,-29,-113,-99,-91,-110,-108,-88,-89,-90,112,-87,-37,-27,-159,-161,-28,-302,-131,-130,-148,-147,73,-92,-30,112,196,-289,-160,-162,-128,-38,-293,-279,-297,289,-295,-292,-291,296,-300,-296,-266,-298,-278,-281,-280,-290,-294,196,196,340,-45,342,-35,-36,-289,-129,-126,-127,-303,-132,-149,196,289,-178,-274,-275,-301,-299,-43,-44,196,340,342,-31,-34,-134,-133,-151,-150,196,196,-282,289,-181,-179,-269,-271,-270,-273,-272,-39,-42,-192,-186,-188,-190,-32,-33,289,-180,-268,-267,-40,-41,-50,-51,-191,-187,-189,-284,502,-46,-49,289,-276,-283,-47,-48,-277,-285,-286,]),'SIZEOF':([11,13,14,17,55,73,80,81,83,84,85,110,112,123,124,125,127,131,147,152,154,156,158,161,163,166,168,173,174,177,180,188,189,190,196,207,210,211,212,213,214,215,216,218,219,220,221,227,229,231,235,237,242,250,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,287,288,289,293,296,299,302,304,309,310,311,312,313,314,315,316,317,318,319,320,324,325,326,336,340,342,349,352,354,356,357,358,359,360,361,362,363,364,365,369,376,400,405,430,431,432,435,438,440,442,443,447,449,452,454,456,457,460,463,471,472,473,477,478,480,481,482,483,495,497,498,499,500,502,507,510,515,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,174,-304,174,-304,-28,174,-162,174,174,-260,-261,-263,-304,-265,-264,-262,174,174,174,174,174,-304,-28,174,-261,174,174,-74,-194,-78,174,-193,-75,174,174,-73,-195,174,-72,-77,-76,174,-303,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-12,174,-11,174,174,174,174,174,174,-219,-221,-225,-223,-228,-229,-220,-227,-226,174,-222,-224,-261,174,174,-261,-304,174,174,-212,-213,174,174,-197,174,-196,174,174,-210,-209,174,174,174,-304,-177,174,-304,-28,-261,174,174,-211,-208,-200,-198,-304,174,174,-11,174,174,-261,174,174,-199,174,174,174,174,174,174,-201,-203,-204,-304,174,174,174,174,-205,-202,174,-207,-206,]),'FOR':([11,55,80,85,127,212,213,214,216,218,219,221,227,229,231,235,237,250,352,354,358,360,361,363,364,365,438,442,443,447,449,477,481,482,483,497,498,499,510,515,516,517,519,520,521,],[-68,-69,-81,-302,217,-74,-194,-78,-193,-75,217,-73,-195,217,-72,-77,-76,-303,-212,-213,-197,-196,217,-210,-209,217,217,-211,-208,-200,-198,-199,217,217,217,-201,-203,-204,217,217,-205,-202,217,-207,-206,]),'_COMPLEX':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,19,21,22,24,26,27,28,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,50,51,53,54,55,60,62,65,67,70,72,75,76,77,79,80,83,85,86,87,88,89,90,92,93,94,95,96,97,98,104,105,111,115,122,126,127,129,131,132,133,134,135,136,137,138,139,140,150,152,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,240,241,246,248,250,251,252,253,256,262,292,299,302,304,339,341,343,344,349,352,354,358,360,363,364,366,368,371,372,375,378,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[38,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,-117,-115,38,-52,-116,-114,38,-95,-94,-97,-104,38,-216,-101,-63,-60,-62,-304,-103,-107,-105,-98,-304,-112,-304,-111,-96,-29,-113,-99,38,-91,-110,-108,-69,38,-88,-89,-90,-87,38,38,38,-82,38,-81,-161,-302,-131,38,-130,-61,-148,-147,-9,-85,-10,-53,-86,-84,-92,-30,38,38,38,-70,38,-83,-162,38,-140,-137,38,-141,38,38,-128,38,-71,38,38,38,-35,-36,-74,-194,-78,-193,-75,-73,-195,38,-72,-77,-76,38,-129,-126,-127,-303,-138,-132,38,-149,38,38,38,38,38,38,38,-31,-34,38,-212,-213,-197,-196,-210,-209,-134,-139,-133,-151,-150,38,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'LSHIFT':([116,151,155,157,159,164,165,167,170,171,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,280,-297,-295,-292,-291,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-235,280,280,280,280,280,280,280,-234,-238,-239,280,280,280,-237,-240,280,-236,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'LSHIFTEQUAL':([116,151,155,159,164,165,167,170,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,-297,-295,-292,-291,-254,-300,-296,-266,-298,-278,-281,-280,317,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'ELSE':([11,55,212,214,218,221,231,235,237,250,352,354,358,363,364,442,443,447,449,477,497,498,499,516,517,520,521,],[-68,-69,-74,-78,-75,-73,-72,-77,-76,-303,-212,-213,-197,-210,-209,-211,-208,-200,-198,-199,510,-203,-204,-205,-202,-207,-206,]),'CASE':([11,55,80,85,127,212,213,214,216,218,219,221,227,229,231,235,237,250,352,354,358,360,361,363,364,365,438,442,443,447,449,477,481,482,483,497,498,499,510,515,516,517,519,520,521,],[-68,-69,-81,-302,215,-74,-194,-78,-193,-75,215,-73,-195,215,-72,-77,-76,-303,-212,-213,-197,-196,215,-210,-209,215,215,-211,-208,-200,-198,-199,215,215,215,-201,-203,-204,215,215,-205,-202,215,-207,-206,]),'WCHAR_CONST':([11,13,14,17,55,73,80,81,83,84,85,110,112,123,124,125,127,131,147,152,154,156,158,161,163,166,168,173,174,177,180,188,189,190,196,207,210,211,212,213,214,215,216,218,219,220,221,227,229,231,235,237,242,250,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,287,288,289,293,296,299,302,304,309,310,311,312,313,314,315,316,317,318,319,320,324,325,326,336,340,342,349,352,354,356,357,358,359,360,361,362,363,364,365,369,376,400,405,430,431,432,435,438,440,442,443,447,449,452,454,456,457,460,463,471,472,473,477,478,480,481,482,483,495,497,498,499,500,502,507,510,515,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,159,-304,159,-304,-28,159,-162,159,159,-260,-261,-263,-304,-265,-264,-262,159,159,159,159,159,-304,-28,159,-261,159,159,-74,-194,-78,159,-193,-75,159,159,-73,-195,159,-72,-77,-76,159,-303,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,-12,159,-11,159,159,159,159,159,159,-219,-221,-225,-223,-228,-229,-220,-227,-226,159,-222,-224,-261,159,159,-261,-304,159,159,-212,-213,159,159,-197,159,-196,159,159,-210,-209,159,159,159,-304,-177,159,-304,-28,-261,159,159,-211,-208,-200,-198,-304,159,159,-11,159,159,-261,159,159,-199,159,159,159,159,159,159,-201,-203,-204,-304,159,159,159,159,-205,-202,159,-207,-206,]),'TYPEID':([0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,59,60,62,65,67,70,72,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,104,105,107,111,115,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,146,150,152,192,194,197,204,205,212,213,214,216,218,221,227,229,231,235,237,240,241,246,248,250,251,252,253,256,292,294,297,299,302,304,339,341,343,344,349,352,354,358,360,363,364,366,368,370,371,372,375,378,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[28,-66,-65,-93,-64,-102,-100,-67,-106,-136,-109,-68,-117,-115,71,-52,-116,-114,28,-95,-94,-304,-97,86,-104,28,-216,90,-101,-63,-60,-62,-304,-103,-107,-105,-98,-304,-112,-304,-111,-96,-29,-113,-99,28,-91,-135,-110,-108,-69,71,71,28,-88,-89,-90,-87,28,71,28,-82,28,-81,-27,-159,-161,-28,-302,-131,28,-130,-61,-148,-147,-9,-85,-10,-53,-86,-84,-92,-30,71,28,201,28,-70,28,-83,-160,-162,28,-140,-137,28,-141,71,28,-128,28,71,-71,28,28,28,201,-35,-36,-74,-194,-78,-193,-75,-73,-195,28,-72,-77,-76,28,-129,-126,-127,-303,-138,-132,28,-149,28,411,414,28,28,28,28,28,-31,-34,28,-212,-213,-197,-196,-210,-209,-134,-139,71,-133,-151,-150,28,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'GOTO':([11,55,80,85,127,212,213,214,216,218,219,221,227,229,231,235,237,250,352,354,358,360,361,363,364,365,438,442,443,447,449,477,481,482,483,497,498,499,510,515,516,517,519,520,521,],[-68,-69,-81,-302,223,-74,-194,-78,-193,-75,223,-73,-195,223,-72,-77,-76,-303,-212,-213,-197,-196,223,-210,-209,223,223,-211,-208,-200,-198,-199,223,223,223,-201,-203,-204,223,223,-205,-202,223,-207,-206,]),'RETURN':([11,55,80,85,127,212,213,214,216,218,219,221,227,229,231,235,237,250,352,354,358,360,361,363,364,365,438,442,443,447,449,477,481,482,483,497,498,499,510,515,516,517,519,520,521,],[-68,-69,-81,-302,220,-74,-194,-78,-193,-75,220,-73,-195,220,-72,-77,-76,-303,-212,-213,-197,-196,220,-210,-209,220,220,-211,-208,-200,-198,-199,220,220,220,-201,-203,-204,220,220,-205,-202,220,-207,-206,]),'AND':([11,13,14,17,55,73,80,81,83,84,85,110,112,116,123,124,125,127,131,147,151,152,154,155,156,157,158,159,161,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,189,190,196,207,210,211,212,213,214,215,216,218,219,220,221,227,229,231,235,237,239,242,250,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,287,288,289,293,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,324,325,326,336,340,342,349,352,354,356,357,358,359,360,361,362,363,364,365,369,376,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,405,409,411,412,414,415,430,431,432,435,438,440,442,443,447,449,452,453,454,456,457,460,461,462,463,464,471,472,473,477,478,480,481,482,483,495,497,498,499,500,501,502,504,507,510,511,515,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,154,-304,-289,154,-304,-28,154,-162,154,-293,154,-260,-279,-261,268,-263,-297,-304,-265,-295,-292,-264,-291,-262,-254,-233,-300,154,154,-296,-266,154,-298,-278,154,-281,-280,-252,-290,-294,154,-304,-28,154,-261,154,154,-74,-194,-78,154,-193,-75,154,154,-73,-195,154,-72,-77,-76,-289,154,-303,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-12,154,-11,154,154,-274,154,-275,154,-257,-252,154,-258,154,-255,-256,-301,-299,-219,-221,-225,-223,-228,-229,-220,-227,-226,154,-222,-224,-261,154,154,-261,-304,154,154,-212,-213,154,154,-197,154,-196,154,154,-210,-209,154,154,154,-282,-235,268,-243,-241,-247,-245,-246,-242,-234,-238,-239,268,268,-244,-237,-240,268,-236,-304,-177,-269,-271,-270,-273,-272,154,-304,-28,-261,154,154,-211,-208,-200,-198,-304,-253,154,154,-11,154,-268,-267,154,-259,-261,154,154,-199,154,154,154,154,154,154,-201,-203,-204,-304,-276,154,-283,154,154,-277,154,-205,-202,154,-207,-206,]),'INLINE':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,19,21,22,24,26,27,28,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,51,53,54,55,60,62,65,67,70,72,75,76,77,80,85,86,88,89,90,92,96,104,105,111,115,126,127,129,150,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,250,252,256,339,341,343,344,349,352,354,358,360,363,364,366,371,372,375,378,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[40,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,-117,-115,40,-52,-116,-114,40,-95,-94,-97,-104,40,-216,-101,-63,-60,-62,40,-103,-107,-105,-98,40,-112,40,-111,-96,-29,-113,-99,-91,-110,-108,-69,40,-88,-89,-90,-87,40,40,40,-82,-81,-302,-131,-130,-61,-148,-147,-53,-92,-30,40,40,-70,40,-83,-71,40,40,-35,-36,-74,-194,-78,-193,-75,-73,-195,40,-72,-77,-76,-303,-132,-149,40,40,-31,-34,40,-212,-213,-197,-196,-210,-209,-134,-133,-151,-150,40,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'PERIOD':([85,116,151,155,159,161,164,165,167,170,172,175,176,178,179,181,182,184,185,239,250,290,291,295,298,307,308,380,400,401,406,409,411,412,414,415,452,458,461,462,487,488,500,501,504,511,513,518,],[-302,-289,-293,-279,-297,285,-295,-292,-291,294,-300,-296,-266,-298,-278,-281,-280,-290,-294,-289,-303,285,-178,-274,-275,-301,-299,-282,285,-181,-179,-269,-271,-270,-273,-272,285,-180,-268,-267,-284,503,285,-276,-283,-277,-285,-286,]),'STRING_LITERAL':([11,13,14,17,55,73,80,81,83,84,85,110,112,123,124,125,127,131,147,152,154,156,158,161,163,166,168,173,174,177,178,180,182,188,189,190,196,207,210,211,212,213,214,215,216,218,219,220,221,227,229,231,235,237,242,250,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,287,288,289,293,296,299,302,304,308,309,310,311,312,313,314,315,316,317,318,319,320,324,325,326,336,340,342,349,352,354,356,357,358,359,360,361,362,363,364,365,369,376,400,405,430,431,432,435,438,440,442,443,447,449,452,454,456,457,460,463,471,472,473,477,478,480,481,482,483,495,497,498,499,500,502,507,510,515,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,178,-304,178,-304,-28,178,-162,178,178,-260,-261,-263,-304,-265,-264,-262,178,178,178,-298,178,308,178,-304,-28,178,-261,178,178,-74,-194,-78,178,-193,-75,178,178,-73,-195,178,-72,-77,-76,178,-303,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,-12,178,-11,178,178,178,178,178,178,-299,-219,-221,-225,-223,-228,-229,-220,-227,-226,178,-222,-224,-261,178,178,-261,-304,178,178,-212,-213,178,178,-197,178,-196,178,178,-210,-209,178,178,178,-304,-177,178,-304,-28,-261,178,178,-211,-208,-200,-198,-304,178,178,-11,178,178,-261,178,178,-199,178,178,178,178,178,178,-201,-203,-204,-304,178,178,178,178,-205,-202,178,-207,-206,]),'__INT128':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,19,21,22,24,26,27,28,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,50,51,53,54,55,60,62,65,67,70,72,75,76,77,79,80,83,85,86,87,88,89,90,92,93,94,95,96,97,98,104,105,111,115,122,126,127,129,131,132,133,134,135,136,137,138,139,140,150,152,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,240,241,246,248,250,251,252,253,256,262,292,299,302,304,339,341,343,344,349,352,354,358,360,363,364,366,368,371,372,375,378,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[53,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,-117,-115,53,-52,-116,-114,53,-95,-94,-97,-104,53,-216,-101,-63,-60,-62,-304,-103,-107,-105,-98,-304,-112,-304,-111,-96,-29,-113,-99,53,-91,-110,-108,-69,53,-88,-89,-90,-87,53,53,53,-82,53,-81,-161,-302,-131,53,-130,-61,-148,-147,-9,-85,-10,-53,-86,-84,-92,-30,53,53,53,-70,53,-83,-162,53,-140,-137,53,-141,53,53,-128,53,-71,53,53,53,-35,-36,-74,-194,-78,-193,-75,-73,-195,53,-72,-77,-76,53,-129,-126,-127,-303,-138,-132,53,-149,53,53,53,53,53,53,53,-31,-34,53,-212,-213,-197,-196,-210,-209,-134,-139,-133,-151,-150,53,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'MINUSEQUAL':([116,151,155,159,164,165,167,170,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,-297,-295,-292,-291,-254,-300,-296,-266,-298,-278,-281,-280,311,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'SEMI':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,20,21,22,24,26,27,28,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,50,51,53,54,55,58,60,61,62,63,64,65,66,67,68,69,70,71,75,79,80,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,116,126,127,128,132,133,134,136,137,138,139,140,148,149,150,151,153,155,157,159,160,164,165,167,169,170,171,172,175,176,178,179,181,182,183,184,185,204,205,212,213,214,216,218,219,220,221,222,227,229,230,231,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,256,259,260,295,298,300,301,303,305,306,307,308,321,322,343,344,348,349,351,352,353,354,355,358,360,361,363,364,365,366,367,368,371,372,375,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,402,409,411,412,414,415,419,420,421,436,437,438,439,440,442,443,447,448,449,450,451,453,455,461,462,464,466,467,477,478,479,481,482,483,485,494,497,498,499,501,504,509,510,511,515,516,517,519,520,521,],[1,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,-117,-115,-304,-52,-116,-114,80,-95,-94,-97,-104,1,-216,-101,-63,-60,-62,-304,-103,-107,-105,-98,-304,-112,-304,-111,-96,-29,-113,-99,-304,-91,-110,-108,-69,-20,-157,-158,-88,-79,-120,-89,-118,-90,-54,-19,-87,-37,-304,-304,-81,-302,-131,133,-130,-61,-148,-147,-9,-85,-10,-53,-86,-84,-16,-122,-80,-124,-15,-92,-30,-55,-289,-70,-304,-157,133,-140,-137,-141,-304,133,-128,133,-38,-119,-71,-293,-217,-279,-231,-297,-121,-295,-292,-291,-172,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-35,-36,-74,-194,-78,-193,-75,-304,352,-73,354,-195,-304,-214,-72,-14,-13,-77,363,-76,364,-289,133,-129,368,-144,-26,-126,-25,-127,-142,-303,-138,-132,133,-149,-123,-125,-274,-275,-257,-252,-258,-255,-256,-301,-299,-43,-44,-31,-34,-230,-304,-13,-212,442,-213,443,-197,-196,-304,-210,-209,-304,-134,-146,-139,-133,-151,-150,-282,-235,-248,-243,-241,-247,-245,-246,-242,-234,-238,-239,-249,-251,-244,-237,-240,-250,-236,-173,-269,-271,-270,-273,-272,-218,-39,-42,-32,-33,-304,478,-304,-211,-208,-200,-215,-198,-145,-143,-253,-174,-268,-267,-259,-40,-41,-199,-304,495,-304,-304,-304,-232,507,-201,-203,-204,-276,-283,516,-304,-277,-304,-205,-202,-304,-207,-206,]),'LBRACE':([9,11,16,19,25,29,47,52,55,60,74,76,77,78,80,85,86,88,90,92,96,105,109,110,127,129,147,161,204,205,212,213,214,216,218,219,221,227,229,231,235,237,250,284,287,288,343,344,352,354,358,360,361,363,364,365,376,400,405,436,437,438,442,443,447,449,452,456,457,463,464,465,477,481,482,483,497,498,499,500,510,515,516,517,519,520,521,],[-136,-68,-52,-304,85,85,-29,-135,-69,-304,85,-8,-82,-7,-81,-302,85,85,85,85,-53,-30,85,85,85,-83,85,-304,-35,-36,-74,-194,-78,-193,-75,85,-73,-195,85,-72,-77,-76,-303,-12,85,-11,-31,-34,-212,-213,-197,-196,85,-210,-209,85,85,-304,-177,-32,-33,85,-211,-208,-200,-198,-304,85,-11,85,85,85,-199,85,85,85,-201,-203,-204,-304,85,85,-205,-202,85,-207,-206,]),'AUTO':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,19,21,22,24,26,27,28,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,51,53,54,55,60,62,65,67,70,72,75,76,77,80,85,86,88,89,90,92,96,104,105,111,115,126,127,129,150,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,250,252,256,339,341,343,344,349,352,354,358,360,363,364,366,371,372,375,378,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[3,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,-117,-115,3,-52,-116,-114,3,-95,-94,-97,-104,3,-216,-101,-63,-60,-62,3,-103,-107,-105,-98,3,-112,3,-111,-96,-29,-113,-99,-91,-110,-108,-69,3,-88,-89,-90,-87,3,3,3,-82,-81,-302,-131,-130,-61,-148,-147,-53,-92,-30,3,3,-70,3,-83,-71,3,3,-35,-36,-74,-194,-78,-193,-75,-73,-195,3,-72,-77,-76,-303,-132,-149,3,3,-31,-34,3,-212,-213,-197,-196,-210,-209,-134,-133,-151,-150,3,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'RBRACE':([11,55,80,85,116,127,133,134,136,138,142,143,144,151,153,155,157,159,161,164,165,167,169,170,171,172,175,176,178,179,181,182,183,184,185,212,213,214,216,218,221,226,227,229,231,234,235,237,240,250,251,253,254,255,258,283,286,288,295,298,300,301,303,305,306,307,308,348,352,354,358,360,363,364,368,373,374,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,402,403,409,411,412,414,415,419,442,443,447,449,453,455,461,462,464,477,484,485,486,497,498,499,500,501,504,511,516,517,520,521,],[-68,-69,-81,-302,-289,-304,-140,-137,-141,250,250,-152,-155,-293,-217,-279,-231,-297,-304,-295,-292,-291,-172,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-74,-194,-78,-193,-75,-73,250,-195,-6,-72,-5,-77,-76,250,-303,-138,250,250,-153,250,-22,250,-21,-274,-275,-257,-252,-258,-255,-256,-301,-299,-230,-212,-213,-197,-196,-210,-209,-139,-154,-156,-282,-235,-248,-243,-241,-247,-245,-246,-242,-234,-238,-239,-249,-251,-244,-237,-240,-250,-236,250,-173,-175,-269,-271,-270,-273,-272,-218,-211,-208,-200,-198,-253,-174,-268,-267,-259,-199,250,-232,-176,-201,-203,-204,250,-276,-283,-277,-205,-202,-207,-206,]),'OR':([116,151,155,157,159,164,165,167,170,171,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,265,-297,-295,-292,-291,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-235,-248,-243,-241,-247,-245,-246,-242,-234,-238,-239,-249,265,-244,-237,-240,265,-236,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'NE':([116,151,155,157,159,164,165,167,170,171,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,270,-297,-295,-292,-291,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-235,270,-243,-241,270,-245,-246,-242,-234,-238,-239,270,270,-244,-237,-240,270,-236,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'DO':([11,55,80,85,127,212,213,214,216,218,219,221,227,229,231,235,237,250,352,354,358,360,361,363,364,365,438,442,443,447,449,477,481,482,483,497,498,499,510,515,516,517,519,520,521,],[-68,-69,-81,-302,219,-74,-194,-78,-193,-75,219,-73,-195,219,-72,-77,-76,-303,-212,-213,-197,-196,219,-210,-209,219,219,-211,-208,-200,-198,-199,219,219,219,-201,-203,-204,219,219,-205,-202,219,-207,-206,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,19,21,22,24,26,27,28,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,50,51,53,54,55,60,62,65,67,70,72,75,76,77,79,80,83,85,86,87,88,89,90,92,93,94,95,96,97,98,104,105,111,115,122,126,127,129,131,132,133,134,135,136,137,138,139,140,150,152,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,240,241,246,248,250,251,252,253,256,262,292,299,302,304,339,341,343,344,349,352,354,358,360,363,364,366,368,371,372,375,378,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[8,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,-117,-115,8,-52,-116,-114,8,-95,-94,-97,-104,8,-216,-101,-63,-60,-62,-304,-103,-107,-105,-98,-304,-112,-304,-111,-96,-29,-113,-99,8,-91,-110,-108,-69,8,-88,-89,-90,-87,8,8,8,-82,8,-81,-161,-302,-131,8,-130,-61,-148,-147,-9,-85,-10,-53,-86,-84,-92,-30,8,8,8,-70,8,-83,-162,8,-140,-137,8,-141,8,8,-128,8,-71,8,8,8,-35,-36,-74,-194,-78,-193,-75,-73,-195,8,-72,-77,-76,8,-129,-126,-127,-303,-138,-132,8,-149,8,8,8,8,8,8,8,-31,-34,8,-212,-213,-197,-196,-210,-209,-134,-139,-133,-151,-150,8,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'UNION':([0,1,2,3,4,7,11,13,14,16,17,19,21,22,24,27,31,32,33,34,40,42,44,46,47,50,55,60,72,76,77,79,80,83,85,87,89,93,94,95,96,97,98,105,111,122,126,127,129,131,132,133,134,135,136,138,140,150,152,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,240,250,251,253,292,299,302,304,339,341,343,344,349,352,354,358,360,363,364,368,378,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[9,-66,-65,-93,-64,-67,-68,-117,-115,-52,-116,9,-95,-94,-97,9,-63,-60,-62,-304,-98,-304,-304,-96,-29,9,-69,9,9,9,-82,9,-81,-161,-302,9,-61,-9,-85,-10,-53,-86,-84,-30,9,9,-70,9,-83,-162,9,-140,-137,9,-141,9,9,-71,9,9,9,-35,-36,-74,-194,-78,-193,-75,-73,-195,9,-72,-77,-76,9,-303,-138,9,9,9,9,9,9,9,-31,-34,9,-212,-213,-197,-196,-210,-209,-139,9,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'XOREQUAL':([116,151,155,159,164,165,167,170,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,-297,-295,-292,-291,-254,-300,-296,-266,-298,-278,-281,-280,315,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'FLOAT_CONST':([11,13,14,17,55,73,80,81,83,84,85,110,112,123,124,125,127,131,147,152,154,156,158,161,163,166,168,173,174,177,180,188,189,190,196,207,210,211,212,213,214,215,216,218,219,220,221,227,229,231,235,237,242,250,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,287,288,289,293,296,299,302,304,309,310,311,312,313,314,315,316,317,318,319,320,324,325,326,336,340,342,349,352,354,356,357,358,359,360,361,362,363,364,365,369,376,400,405,430,431,432,435,438,440,442,443,447,449,452,454,456,457,460,463,471,472,473,477,478,480,481,482,483,495,497,498,499,500,502,507,510,515,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-81,-27,-161,-28,-302,185,-304,185,-304,-28,185,-162,185,185,-260,-261,-263,-304,-265,-264,-262,185,185,185,185,185,-304,-28,185,-261,185,185,-74,-194,-78,185,-193,-75,185,185,-73,-195,185,-72,-77,-76,185,-303,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,-12,185,-11,185,185,185,185,185,185,-219,-221,-225,-223,-228,-229,-220,-227,-226,185,-222,-224,-261,185,185,-261,-304,185,185,-212,-213,185,185,-197,185,-196,185,185,-210,-209,185,185,185,-304,-177,185,-304,-28,-261,185,185,-211,-208,-200,-198,-304,185,185,-11,185,185,-261,185,185,-199,185,185,185,185,185,185,-201,-203,-204,-304,185,185,185,185,-205,-202,185,-207,-206,]),'UNSIGNED':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,19,21,22,24,26,27,28,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,50,51,53,54,55,60,62,65,67,70,72,75,76,77,79,80,83,85,86,87,88,89,90,92,93,94,95,96,97,98,104,105,111,115,122,126,127,129,131,132,133,134,135,136,137,138,139,140,150,152,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,240,241,246,248,250,251,252,253,256,262,292,299,302,304,339,341,343,344,349,352,354,358,360,363,364,366,368,371,372,375,378,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[10,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,-117,-115,10,-52,-116,-114,10,-95,-94,-97,-104,10,-216,-101,-63,-60,-62,-304,-103,-107,-105,-98,-304,-112,-304,-111,-96,-29,-113,-99,10,-91,-110,-108,-69,10,-88,-89,-90,-87,10,10,10,-82,10,-81,-161,-302,-131,10,-130,-61,-148,-147,-9,-85,-10,-53,-86,-84,-92,-30,10,10,10,-70,10,-83,-162,10,-140,-137,10,-141,10,10,-128,10,-71,10,10,10,-35,-36,-74,-194,-78,-193,-75,-73,-195,10,-72,-77,-76,10,-129,-126,-127,-303,-138,-132,10,-149,10,10,10,10,10,10,10,-31,-34,10,-212,-213,-197,-196,-210,-209,-134,-139,-133,-151,-150,10,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'PPPRAGMA':([0,1,2,4,7,11,27,31,32,33,55,80,85,87,89,126,127,132,133,134,136,138,140,150,212,213,214,216,218,219,221,227,229,231,235,237,240,250,251,253,352,354,358,360,361,363,364,365,368,438,442,443,447,449,477,481,482,483,497,498,499,510,515,516,517,519,520,521,],[11,-66,-65,-64,-67,-68,11,-63,-60,-62,-69,-81,-302,11,-61,-70,11,11,-140,-137,-141,11,11,-71,-74,-194,-78,-193,-75,11,-73,-195,11,-72,-77,-76,11,-303,-138,11,-212,-213,-197,-196,11,-210,-209,11,-139,11,-211,-208,-200,-198,-199,11,11,11,-201,-203,-204,11,11,-205,-202,11,-207,-206,]),'STRUCT':([0,1,2,3,4,7,11,13,14,16,17,19,21,22,24,27,31,32,33,34,40,42,44,46,47,50,55,60,72,76,77,79,80,83,85,87,89,93,94,95,96,97,98,105,111,122,126,127,129,131,132,133,134,135,136,138,140,150,152,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,240,250,251,253,292,299,302,304,339,341,343,344,349,352,354,358,360,363,364,368,378,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[52,-66,-65,-93,-64,-67,-68,-117,-115,-52,-116,52,-95,-94,-97,52,-63,-60,-62,-304,-98,-304,-304,-96,-29,52,-69,52,52,52,-82,52,-81,-161,-302,52,-61,-9,-85,-10,-53,-86,-84,-30,52,52,-70,52,-83,-162,52,-140,-137,52,-141,52,52,-71,52,52,52,-35,-36,-74,-194,-78,-193,-75,-73,-195,52,-72,-77,-76,52,-303,-138,52,52,52,52,52,52,52,-31,-34,52,-212,-213,-197,-196,-210,-209,-139,52,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'VOLATILE':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,19,21,22,23,24,26,27,28,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,51,53,54,55,60,62,65,67,70,72,73,75,76,77,80,83,84,85,86,87,88,89,90,92,96,104,105,111,112,115,124,125,126,127,129,131,132,133,134,135,136,137,138,139,140,150,152,189,190,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,240,241,246,248,250,251,252,253,256,262,292,299,302,304,339,340,341,343,344,349,352,354,358,360,363,364,366,368,371,372,375,378,431,432,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[13,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,-117,-115,13,-52,-116,-114,13,-95,-94,13,-97,-104,13,-216,-101,-63,-60,-62,13,-103,-107,-105,-98,13,-112,13,-111,-96,-29,-113,-99,-91,-110,-108,-69,13,-88,-89,-90,-87,13,13,13,13,-82,-81,-161,13,-302,-131,13,-130,-61,-148,-147,-53,-92,-30,13,13,13,13,13,-70,13,-83,-162,13,-140,-137,13,-141,13,13,-128,13,-71,13,13,13,13,13,-35,-36,-74,-194,-78,-193,-75,-73,-195,13,-72,-77,-76,13,-129,-126,-127,-303,-138,-132,13,-149,13,13,13,13,13,13,13,13,-31,-34,13,-212,-213,-197,-196,-210,-209,-134,-139,-133,-151,-150,13,13,13,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'CONST':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,19,21,22,23,24,26,27,28,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,51,53,54,55,60,62,65,67,70,72,73,75,76,77,80,83,84,85,86,87,88,89,90,92,96,104,105,111,112,115,124,125,126,127,129,131,132,133,134,135,136,137,138,139,140,150,152,189,190,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,240,241,246,248,250,251,252,253,256,262,292,299,302,304,339,340,341,343,344,349,352,354,358,360,363,364,366,368,371,372,375,378,431,432,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[14,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,-117,-115,14,-52,-116,-114,14,-95,-94,14,-97,-104,14,-216,-101,-63,-60,-62,14,-103,-107,-105,-98,14,-112,14,-111,-96,-29,-113,-99,-91,-110,-108,-69,14,-88,-89,-90,-87,14,14,14,14,-82,-81,-161,14,-302,-131,14,-130,-61,-148,-147,-53,-92,-30,14,14,14,14,14,-70,14,-83,-162,14,-140,-137,14,-141,14,14,-128,14,-71,14,14,14,14,14,-35,-36,-74,-194,-78,-193,-75,-73,-195,14,-72,-77,-76,14,-129,-126,-127,-303,-138,-132,14,-149,14,14,14,14,14,14,14,14,-31,-34,14,-212,-213,-197,-196,-210,-209,-134,-139,-133,-151,-150,14,14,14,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'CONDOP':([116,151,155,157,159,164,165,167,170,171,172,175,176,178,179,181,182,183,184,185,239,250,295,298,300,301,303,305,306,307,308,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,409,411,412,414,415,453,461,462,464,501,504,511,],[-289,-293,-279,272,-297,-295,-292,-291,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-289,-303,-274,-275,-257,-252,-258,-255,-256,-301,-299,-282,-235,-248,-243,-241,-247,-245,-246,-242,-234,-238,-239,-249,-251,-244,-237,-240,-250,-236,-269,-271,-270,-273,-272,-253,-268,-267,-259,-276,-283,-277,]),'INT':([0,1,2,3,4,5,6,7,8,10,11,13,14,15,16,17,18,19,21,22,24,26,27,28,30,31,32,33,34,35,38,39,40,42,43,44,45,46,47,48,49,50,51,53,54,55,60,62,65,67,70,72,75,76,77,79,80,83,85,86,87,88,89,90,92,93,94,95,96,97,98,104,105,111,115,122,126,127,129,131,132,133,134,135,136,137,138,139,140,150,152,192,194,204,205,212,213,214,216,218,221,227,229,231,235,237,240,241,246,248,250,251,252,253,256,262,292,299,302,304,339,341,343,344,349,352,354,358,360,363,364,366,368,371,372,375,378,436,437,442,443,447,449,477,497,498,499,516,517,520,521,],[35,-66,-65,-93,-64,-102,-100,-67,-106,-109,-68,-117,-115,35,-52,-116,-114,35,-95,-94,-97,-104,35,-216,-101,-63,-60,-62,-304,-103,-107,-105,-98,-304,-112,-304,-111,-96,-29,-113,-99,35,-91,-110,-108,-69,35,-88,-89,-90,-87,35,35,35,-82,35,-81,-161,-302,-131,35,-130,-61,-148,-147,-9,-85,-10,-53,-86,-84,-92,-30,35,35,35,-70,35,-83,-162,35,-140,-137,35,-141,35,35,-128,35,-71,35,35,35,-35,-36,-74,-194,-78,-193,-75,-73,-195,35,-72,-77,-76,35,-129,-126,-127,-303,-138,-132,35,-149,35,35,35,35,35,35,35,-31,-34,35,-212,-213,-197,-196,-210,-209,-134,-139,-133,-151,-150,35,-32,-33,-211,-208,-200,-198,-199,-201,-203,-204,-205,-202,-207,-206,]),'IF':([11,55,80,85,127,212,213,214,216,218,219,221,227,229,231,235,237,250,352,354,358,360,361,363,364,365,438,442,443,447,449,477,481,482,483,497,498,499,510,515,516,517,519,520,521,],[-68,-69,-81,-302,224,-74,-194,-78,-193,-75,224,-73,-195,224,-72,-77,-76,-303,-212,-213,-197,-196,224,-210,-209,224,224,-211,-208,-200,-198,-199,224,224,224,-201,-203,-204,224,224,-205,-202,224,-207,-206,]),'SWITCH':([11,55,80,85,127,212,213,214,216,218,219,221,227,229,231,235,237,250,352,354,358,360,361,363,364,365,438,442,443,447,449,477,481,482,483,497,498,499,510,515,516,517,519,520,521,],[-68,-69,-81,-302,225,-74,-194,-78,-193,-75,225,-73,-195,225,-72,-77,-76,-303,-212,-213,-197,-196,225,-210,-209,225,225,-211,-208,-200,-198,-199,225,225,225,-201,-203,-204,225,225,-205,-202,225,-207,-206,]),'EQUALS':([16,47,60,61,64,68,71,96,102,105,108,116,128,144,148,151,155,159,164,165,167,170,172,175,176,178,179,181,182,183,184,185,204,205,239,250,290,291,295,298,300,301,303,305,306,307,308,321,322,343,344,380,401,406,409,411,412,414,415,420,421,436,437,453,458,461,462,464,466,467,501,504,511,],[-52,-29,-157,-158,110,-54,-37,-53,147,-30,-55,-289,-157,257,-38,-293,-279,-297,-295,-292,-291,-254,-300,-296,-266,-298,-278,-281,-280,309,-290,-294,-35,-36,-289,-303,405,-178,-274,-275,-257,-252,-258,-255,-256,-301,-299,-43,-44,-31,-34,-282,-181,-179,-269,-271,-270,-273,-272,-39,-42,-32,-33,-253,-180,-268,-267,-259,-40,-41,-276,-283,-277,]),'COLON':([5,6,8,10,13,14,16,17,18,26,28,30,35,38,39,43,45,47,48,49,53,54,61,68,71,86,88,90,92,96,105,108,116,128,137,139,148,151,153,155,157,159,164,165,167,170,171,172,175,176,178,179,181,182,183,184,185,204,205,230,232,239,241,244,246,248,250,252,256,295,298,300,301,303,305,306,307,308,321,322,343,344,347,348,366,370,371,372,375,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,409,411,412,414,415,419,420,421,436,437,448,453,461,462,464,466,467,485,501,504,511,],[-102,-100,-106,-109,-117,-115,-52,-116,-114,-104,-216,-101,-103,-107,-105,-112,-111,-29,-113,-99,-110,-108,-158,-54,-37,-131,-130,-148,-147,-53,-30,-55,-289,-157,242,-128,-38,-293,-217,-279,-231,-297,-295,-292,-291,-254,-233,-300,-296,-266,-298,-278,-281,-280,-252,-290,-294,-35,-36,-214,361,365,-129,369,-126,-127,-303,-132,-149,-274,-275,-257,-252,-258,-255,-256,-301,-299,-43,-44,-31,-34,438,-230,-134,242,-133,-151,-150,-282,-235,-248,-243,-241,-247,-245,-246,-242,454,-234,-238,-239,-249,-251,-244,-237,-240,-250,-236,-269,-271,-270,-273,-272,-218,-39,-42,-32,-33,-215,-253,-268,-267,-259,-40,-41,-232,-276,-283,-277,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'compound_statement':([74,109,127,219,229,361,365,438,481,482,483,510,515,519,],[126,150,212,212,212,212,212,212,212,212,212,212,212,212,]),'statement':([127,219,229,361,365,438,481,482,483,510,515,519,],[213,350,213,447,449,477,497,498,499,517,520,521,]),'id_init_declarator_list':([50,79,],[99,99,]),'conditional_expression':([110,123,127,147,152,188,196,210,211,215,219,220,229,242,257,272,287,289,293,296,299,302,304,318,325,326,342,349,356,357,359,361,362,365,369,430,438,440,454,456,460,472,473,478,480,481,482,483,495,502,507,510,515,519,],[153,153,153,153,153,153,153,153,153,348,153,153,153,348,348,153,153,348,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,348,153,153,153,485,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'abstract_declarator_opt':([115,262,],[195,377,]),'id_init_declarator_list_opt':([50,79,],[101,101,]),'pppragma_directive':([0,27,87,127,132,138,140,219,229,240,253,361,365,438,481,482,483,510,515,519,],[2,2,136,214,136,136,136,214,214,136,136,214,214,214,214,214,214,214,214,214,]),'type_qualifier_list':([23,73,87,112,124,132,138,140,152,189,240,253,292,299,302,304,340,431,],[84,125,135,190,84,135,135,135,135,84,135,135,135,135,135,135,432,84,]),'struct_declarator':([137,370,],[249,451,]),'declaration_specifiers':([0,19,27,60,72,76,111,127,192,194,229,339,341,349,378,],[15,75,15,75,115,75,115,75,115,115,75,115,115,75,115,]),'binary_expression':([110,123,127,147,152,188,196,210,211,215,219,220,229,242,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,287,289,293,296,299,302,304,318,325,326,342,349,356,357,359,361,362,365,369,430,438,440,454,456,460,472,473,478,480,481,482,483,495,502,507,510,515,519,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,381,382,383,384,385,386,387,388,157,390,391,392,393,394,395,396,397,398,399,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'init_declarator':([15,75,107,146,],[66,66,149,259,]),'designation':([161,400,452,500,],[284,284,284,284,]),'id_declarator':([0,12,15,27,50,57,75,79,107,115,137,146,194,370,],[19,56,60,19,102,56,128,102,128,198,128,128,56,128,]),'decl_body':([0,19,27,60,76,127,229,349,],[20,20,20,20,20,20,20,20,]),'type_qualifier_list_opt':([23,73,112,124,189,340,431,],[82,123,188,210,325,430,472,]),'identifier_list':([72,111,339,],[113,113,113,]),'parameter_type_list_opt':([194,341,378,],[330,433,330,]),'struct_or_union':([0,19,27,50,60,72,76,79,87,111,122,127,132,135,138,140,152,192,194,229,240,253,292,299,302,304,339,341,349,378,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'declaration_list_opt':([19,60,],[74,109,]),'unified_string_literal':([110,123,127,147,152,173,174,177,180,188,196,210,211,215,219,220,229,242,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,287,289,293,296,299,302,304,318,325,326,342,349,356,357,359,361,362,365,369,376,430,438,440,454,456,460,463,472,473,478,480,481,482,483,495,502,507,510,515,519,],[182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,]),'postfix_expression':([110,123,127,147,152,173,174,177,180,188,196,210,211,215,219,220,229,242,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,287,289,293,296,299,302,304,318,325,326,342,349,356,357,359,361,362,365,369,376,430,438,440,454,456,460,463,472,473,478,480,481,482,483,495,502,507,510,515,519,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'declaration_list':([19,60,],[76,76,]),'declaration':([0,19,27,60,76,127,229,349,],[31,77,31,77,129,216,216,440,]),'type_specifier_no_typeid':([0,15,19,27,50,60,72,75,76,79,87,111,115,122,127,132,135,137,138,140,152,192,194,229,240,253,262,292,299,302,304,339,341,349,378,],[18,67,18,18,18,18,18,67,18,18,18,18,67,18,18,18,18,246,18,18,18,18,18,18,18,18,246,18,18,18,18,18,18,18,18,]),'external_declaration':([0,27,],[32,89,]),'typeid_declarator':([15,57,75,107,137,146,370,],[61,106,61,61,61,61,61,]),'storage_class_specifier':([0,15,19,27,34,42,44,60,72,75,76,111,115,127,192,194,229,339,341,349,378,],[34,62,34,34,34,34,34,34,34,62,34,34,62,34,34,34,34,34,34,34,34,]),'primary_expression':([110,123,127,147,152,173,174,177,180,188,196,210,211,215,219,220,229,242,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,287,289,293,296,299,302,304,318,325,326,342,349,356,357,359,361,362,365,369,376,430,438,440,454,456,460,463,472,473,478,480,481,482,483,495,502,507,510,515,519,],[176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'type_name':([152,292,299,302,304,],[261,407,416,417,418,]),'declarator':([15,75,107,137,146,370,],[64,64,64,244,64,244,]),'struct_declarator_list':([137,],[245,]),'parameter_type_list':([72,111,194,339,341,378,],[118,186,332,428,332,332,]),'constant_expression':([215,242,257,289,369,],[347,367,374,404,450,]),'selection_statement':([127,219,229,361,365,438,481,482,483,510,515,519,],[218,218,218,218,218,218,218,218,218,218,218,218,]),'specifier_qualifier_list':([87,132,138,140,152,240,253,292,299,302,304,],[137,137,137,137,262,137,137,262,262,262,262,]),'direct_typeid_declarator':([15,57,59,75,107,137,146,370,],[68,68,108,68,68,68,68,68,]),'designator':([161,290,400,452,500,],[291,406,291,291,291,]),'parameter_declaration':([72,111,192,194,339,341,378,],[119,119,329,119,119,119,119,]),'unified_wstring_literal':([110,123,127,147,152,173,174,177,180,188,196,210,211,215,219,220,229,242,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,287,289,293,296,299,302,304,318,325,326,342,349,356,357,359,361,362,365,369,376,430,438,440,454,456,460,463,472,473,478,480,481,482,483,495,502,507,510,515,519,],[181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,]),'enum_specifier':([0,19,27,50,60,72,76,79,87,111,122,127,132,135,138,140,152,192,194,229,240,253,292,299,302,304,339,341,349,378,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'enumerator_list':([91,141,145,],[142,254,258,]),'type_qualifier':([0,15,19,23,27,34,42,44,60,72,73,75,76,84,87,111,112,115,124,125,127,132,135,137,138,140,152,189,190,192,194,229,240,253,262,292,299,302,304,339,340,341,349,378,431,432,],[44,70,44,83,44,44,44,44,44,44,83,70,44,131,83,44,83,70,83,131,44,83,131,248,83,83,83,83,131,44,44,44,83,83,248,83,83,83,83,44,83,44,44,44,83,131,]),'brace_close':([138,142,226,240,253,254,258,286,400,484,500,],[252,256,358,366,371,372,375,402,455,501,511,]),'typedef_name':([0,19,27,50,60,72,76,79,87,111,122,127,132,135,138,140,152,192,194,229,240,253,292,299,302,304,339,341,349,378,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'initializer_list_opt':([161,],[286,]),'designation_opt':([161,400,452,500,],[287,456,287,456,]),'pointer':([0,12,15,27,50,57,75,79,82,107,115,137,146,194,262,370,378,],[41,41,59,41,41,59,59,41,130,59,197,59,59,333,379,59,379,]),'direct_abstract_declarator':([115,194,197,262,333,378,379,],[202,202,338,202,338,202,338,]),'type_specifier':([0,19,27,50,60,72,76,79,87,111,122,127,132,135,138,140,152,192,194,229,240,253,292,299,302,304,339,341,349,378,],[51,51,51,104,51,51,51,104,139,51,104,51,139,241,139,139,139,51,51,51,139,139,139,139,139,139,51,51,51,51,]),'expression_statement':([127,219,229,361,365,438,481,482,483,510,515,519,],[221,221,221,221,221,221,221,221,221,221,221,221,]),'constant':([110,123,127,147,152,173,174,177,180,188,196,210,211,215,219,220,229,242,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,287,289,293,296,299,302,304,318,325,326,342,349,356,357,359,361,362,365,369,376,430,438,440,454,456,460,463,472,473,478,480,481,482,483,495,502,507,510,515,519,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'typeid_noparen_declarator':([115,],[193,]),'parameter_list':([72,111,194,339,341,378,],[114,114,114,114,114,114,]),'expression_opt':([127,219,229,349,361,365,438,440,478,481,482,483,495,507,510,515,519,],[222,222,222,439,222,222,222,479,494,222,222,222,508,514,222,222,222,]),'argument_expression_list':([293,],[408,]),'struct_declaration':([87,132,138,140,240,253,],[134,134,251,134,251,251,]),'initializer_list':([161,452,],[283,484,]),'id_init_declarator':([50,79,],[100,100,]),'init_declarator_list':([15,75,],[58,58,]),'direct_id_declarator':([0,12,15,27,41,50,57,59,75,79,107,115,137,146,194,197,333,370,],[16,16,16,16,96,16,16,96,16,16,16,16,16,16,16,96,96,16,]),'assignment_expression_opt':([123,188,196,342,430,],[206,323,335,434,470,]),'block_item_list_opt':([127,],[226,]),'struct_declarator_list_opt':([137,],[243,]),'function_definition':([0,27,],[33,33,]),'initializer':([110,147,287,456,],[160,260,403,486,]),'offsetof_member_designator':([459,],[488,]),'identifier':([72,110,111,123,127,147,152,173,174,177,180,188,191,196,210,211,215,219,220,229,242,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,285,287,289,293,296,299,302,304,318,325,326,339,342,349,356,357,359,361,362,365,369,376,430,438,440,454,456,459,460,463,472,473,478,480,481,482,483,495,502,503,507,510,515,519,],[117,179,117,179,179,179,179,179,179,179,179,179,327,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,401,179,179,179,179,179,179,179,179,179,179,117,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,487,179,179,179,179,179,179,179,179,179,179,179,513,179,179,179,179,]),'block_item':([127,229,],[227,360,]),'declaration_specifiers_no_type_opt':([34,42,44,],[94,97,98,]),'block_item_list':([127,],[229,]),'assignment_expression':([110,123,127,147,152,188,196,210,211,219,220,229,272,287,293,296,299,302,304,318,325,326,342,349,356,357,359,361,362,365,430,438,440,456,460,472,473,478,480,481,482,483,495,502,507,510,515,519,],[169,208,230,169,230,208,208,345,346,230,230,230,230,169,410,230,230,230,230,419,422,423,208,230,230,230,230,230,448,230,208,230,230,169,489,492,493,230,230,230,230,230,230,230,230,230,230,230,]),'labeled_statement':([127,219,229,361,365,438,481,482,483,510,515,519,],[231,231,231,231,231,231,231,231,231,231,231,231,]),'cast_expression':([110,123,127,147,152,173,188,196,210,211,215,219,220,229,242,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,287,289,293,296,299,302,304,318,325,326,342,349,356,357,359,361,362,365,369,376,430,438,440,454,456,460,463,472,473,478,480,481,482,483,495,502,507,510,515,519,],[171,171,171,171,171,300,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,453,171,171,171,171,171,171,453,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'assignment_operator':([183,],[318,]),'translation_unit':([0,],[27,]),'designator_list':([161,400,452,500,],[290,290,290,290,]),'pp_directive':([0,27,],[4,4,]),'unary_operator':([110,123,127,147,152,173,174,177,180,188,196,210,211,215,219,220,229,242,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,287,289,293,296,299,302,304,318,325,326,342,349,356,357,359,361,362,365,369,376,430,438,440,454,456,460,463,472,473,478,480,481,482,483,495,502,507,510,515,519,],[173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,]),'expression':([127,152,219,220,229,272,296,299,302,304,349,356,357,359,361,365,438,440,478,480,481,482,483,495,502,507,510,515,519,],[233,263,233,353,233,389,413,263,263,263,233,444,445,446,233,233,233,233,233,496,233,233,233,233,512,233,233,233,233,]),'init_declarator_list_opt':([15,75,],[63,63,]),'translation_unit_or_empty':([0,],[36,]),'empty':([0,15,19,23,34,42,44,50,60,72,73,75,79,111,112,115,123,124,127,137,161,188,189,194,196,219,229,262,339,340,341,342,349,361,365,378,400,430,431,438,440,452,478,481,482,483,495,500,507,510,515,519,],[37,69,78,81,93,93,93,103,78,120,81,69,103,120,81,199,209,81,234,247,288,209,81,331,209,351,351,199,120,81,331,209,351,351,351,331,457,209,81,351,351,457,351,351,351,351,351,457,351,351,351,351,]),'jump_statement':([127,219,229,361,365,438,481,482,483,510,515,519,],[235,235,235,235,235,235,235,235,235,235,235,235,]),'enumerator':([91,141,145,255,],[143,143,143,373,]),'iteration_statement':([127,219,229,361,365,438,481,482,483,510,515,519,],[237,237,237,237,237,237,237,237,237,237,237,237,]),'function_specifier':([0,15,19,27,34,42,44,60,72,75,76,111,115,127,192,194,229,339,341,349,378,],[42,65,42,42,42,42,42,42,42,65,42,42,65,42,42,42,42,42,42,42,42,]),'direct_typeid_noparen_declarator':([115,197,],[200,337,]),'unary_expression':([110,123,127,147,152,173,174,177,180,188,196,210,211,215,219,220,229,242,257,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,287,289,293,296,299,302,304,318,325,326,342,349,356,357,359,361,362,365,369,376,430,438,440,454,456,460,463,472,473,478,480,481,482,483,495,502,507,510,515,519,],[183,183,183,183,183,301,303,305,306,183,183,183,183,301,183,183,183,301,301,301,301,301,301,301,301,301,301,183,301,301,301,301,301,301,301,301,301,301,183,301,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,301,301,183,183,183,301,183,183,301,183,183,183,183,183,183,183,183,183,183,183,183,183,]),'identifier_list_opt':([72,111,339,],[121,187,429,]),'struct_or_union_specifier':([0,19,27,50,60,72,76,79,87,111,122,127,132,135,138,140,152,192,194,229,240,253,292,299,302,304,339,341,349,378,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'struct_declaration_list':([87,132,140,],[138,240,253,]),'declaration_specifiers_no_type':([0,19,27,34,42,44,60,72,76,111,127,192,194,229,339,341,349,378,],[50,79,50,95,95,95,79,122,79,122,79,122,122,79,122,122,79,122,]),'abstract_declarator':([115,194,262,378,],[203,334,203,334,]),'brace_open':([25,29,74,86,88,90,92,109,110,127,147,219,229,287,361,365,376,438,456,463,464,465,481,482,483,510,515,519,],[87,91,127,132,140,141,145,127,161,127,161,127,127,161,127,127,452,127,161,452,452,452,127,127,127,127,127,127,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
