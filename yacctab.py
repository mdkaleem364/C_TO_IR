
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'STRUCT':([0,2,5,7,10,12,16,17,19,22,23,25,26,27,28,29,30,32,35,39,40,44,45,49,52,54,56,57,58,61,63,65,66,67,68,69,70,71,72,74,84,88,90,105,106,107,109,110,113,114,115,116,117,122,139,140,146,155,156,157,162,163,165,168,174,191,193,199,202,208,209,220,221,222,223,224,234,252,268,270,271,275,276,278,299,301,322,325,327,334,340,344,353,354,392,395,400,421,423,439,440,468,485,488,493,516,517,520,521,],[1,1,-115,-60,-96,-304,-98,-29,-304,-304,-63,-65,-62,-52,-116,-64,1,1,-68,-97,-67,-117,-93,-66,-94,-95,-82,1,1,-81,-302,1,-10,-85,-9,-86,-84,-53,1,-61,-69,-161,1,1,-70,-83,1,1,-140,-137,-141,1,1,1,-162,-30,1,-75,-72,1,-78,-73,-195,-76,1,-77,-193,-194,-74,1,1,-303,-138,-36,1,-35,1,-71,1,-213,-196,1,1,1,1,-212,-197,-209,-210,-139,1,1,-31,-34,-198,1,-211,-208,-200,-33,-32,-199,-204,-203,-201,-202,-205,-207,-206,]),'SIZEOF':([5,28,35,44,61,63,73,84,86,87,88,105,128,129,130,136,139,143,147,149,155,156,157,159,162,163,165,166,167,168,174,175,176,177,182,185,189,191,193,194,197,199,202,207,216,220,236,238,241,242,244,248,258,259,260,261,263,268,269,270,271,273,275,277,278,280,282,283,284,285,286,287,288,289,290,291,292,293,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,325,326,327,333,341,345,352,361,364,365,366,373,374,375,391,392,398,400,421,423,424,429,432,433,434,444,445,453,456,459,460,462,464,465,466,467,468,475,476,477,480,481,485,488,490,493,502,503,506,507,514,516,517,519,520,521,],[-115,-116,-68,-117,-81,-302,-304,-69,-27,-28,-161,149,149,-28,-304,149,-162,149,-304,149,-75,-72,149,149,-78,-73,-195,149,-261,-76,149,-260,149,-265,149,-263,-264,-77,-193,149,-262,-194,-74,149,149,-303,149,-261,149,149,149,-304,149,-28,-304,149,149,149,149,-213,-196,149,149,149,149,149,-222,-219,-225,-224,-223,-229,149,-221,-228,-227,-220,-226,149,-212,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,-197,-209,149,-210,149,149,-304,-261,149,-12,149,-11,-261,149,149,149,-198,149,-211,-208,-200,149,-261,149,-28,-304,-304,-177,149,149,149,149,-304,149,149,149,149,-199,-261,149,149,149,-11,-204,-203,149,-201,149,149,-304,149,149,-202,-205,149,-207,-206,]),'FLOAT':([0,2,3,5,6,7,8,10,11,12,13,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,32,33,34,35,36,38,39,40,41,42,43,44,45,47,48,49,51,52,54,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,77,79,84,88,90,91,94,95,98,105,106,107,109,110,111,112,113,114,115,116,117,122,125,139,140,146,155,156,157,162,163,165,168,174,191,193,199,202,208,209,211,213,218,219,220,221,222,223,224,234,245,252,268,270,271,275,276,278,295,299,301,322,325,327,331,332,334,340,344,353,354,357,360,392,395,400,421,423,439,440,468,485,488,493,516,517,520,521,],[6,6,-111,-115,-105,-60,-110,-96,-102,-304,-99,-91,-98,-29,-108,-304,-109,-106,-304,-63,-65,-62,-52,-116,-64,6,6,-101,-113,-68,-114,-107,-97,-67,-103,-100,-216,-117,-93,6,-112,-66,-104,-94,-95,-82,6,6,6,-81,-130,-302,-131,6,-10,-85,-9,-86,-84,-53,6,-61,-147,-148,-92,-69,-161,6,-88,-89,-87,-90,6,-70,-83,6,6,6,-128,-140,-137,-141,6,6,6,6,-162,-30,6,-75,-72,6,-78,-73,-195,-76,6,-77,-193,-194,-74,6,6,-127,-126,-129,-132,-303,-138,-36,6,-35,6,-149,-71,6,-213,-196,6,6,6,6,6,-212,-197,-209,-210,-133,-134,-139,6,6,-31,-34,-150,-151,-198,6,-211,-208,-200,-33,-32,-199,-204,-203,-201,-202,-205,-207,-206,]),'INT_CONST_HEX':([5,28,35,44,61,63,73,84,86,87,88,105,128,129,130,136,139,143,147,149,155,156,157,159,162,163,165,166,167,168,174,175,176,177,182,185,189,191,193,194,197,199,202,207,216,220,236,238,241,242,244,248,258,259,260,261,263,268,269,270,271,273,275,277,278,280,282,283,284,285,286,287,288,289,290,291,292,293,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,325,326,327,333,341,345,352,361,364,365,366,373,374,375,391,392,398,400,421,423,424,429,432,433,434,444,445,453,456,459,460,462,464,465,466,467,468,475,476,477,480,481,485,488,490,493,502,503,506,507,514,516,517,519,520,521,],[-115,-116,-68,-117,-81,-302,-304,-69,-27,-28,-161,151,151,-28,-304,151,-162,151,-304,151,-75,-72,151,151,-78,-73,-195,151,-261,-76,151,-260,151,-265,151,-263,-264,-77,-193,151,-262,-194,-74,151,151,-303,151,-261,151,151,151,-304,151,-28,-304,151,151,151,151,-213,-196,151,151,151,151,151,-222,-219,-225,-224,-223,-229,151,-221,-228,-227,-220,-226,151,-212,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,-197,-209,151,-210,151,151,-304,-261,151,-12,151,-11,-261,151,151,151,-198,151,-211,-208,-200,151,-261,151,-28,-304,-304,-177,151,151,151,151,-304,151,151,151,151,-199,-261,151,151,151,-11,-204,-203,151,-201,151,151,-304,151,151,-202,-205,151,-207,-206,]),'WCHAR_CONST':([5,28,35,44,61,63,73,84,86,87,88,105,128,129,130,136,139,143,147,149,155,156,157,159,162,163,165,166,167,168,174,175,176,177,182,185,189,191,193,194,197,199,202,207,216,220,236,238,241,242,244,248,258,259,260,261,263,268,269,270,271,273,275,277,278,280,282,283,284,285,286,287,288,289,290,291,292,293,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,325,326,327,333,341,345,352,361,364,365,366,373,374,375,391,392,398,400,421,423,424,429,432,433,434,444,445,453,456,459,460,462,464,465,466,467,468,475,476,477,480,481,485,488,490,493,502,503,506,507,514,516,517,519,520,521,],[-115,-116,-68,-117,-81,-302,-304,-69,-27,-28,-161,152,152,-28,-304,152,-162,152,-304,152,-75,-72,152,152,-78,-73,-195,152,-261,-76,152,-260,152,-265,152,-263,-264,-77,-193,152,-262,-194,-74,152,152,-303,152,-261,152,152,152,-304,152,-28,-304,152,152,152,152,-213,-196,152,152,152,152,152,-222,-219,-225,-224,-223,-229,152,-221,-228,-227,-220,-226,152,-212,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,-197,-209,152,-210,152,152,-304,-261,152,-12,152,-11,-261,152,152,152,-198,152,-211,-208,-200,152,-261,152,-28,-304,-304,-177,152,152,152,152,-304,152,152,152,152,-199,-261,152,152,152,-11,-204,-203,152,-201,152,152,-304,152,152,-202,-205,152,-207,-206,]),'PPPRAGMASTR':([35,],[84,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'postfix_expression':([105,128,136,143,149,157,159,166,174,176,182,194,207,216,236,241,242,244,258,261,263,268,269,273,275,277,278,280,288,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,326,333,341,361,365,374,375,391,398,424,432,453,456,459,460,464,465,466,467,476,477,480,490,502,503,507,514,519,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'expression':([105,157,174,182,194,263,268,273,275,277,278,280,299,319,321,326,391,424,456,459,460,466,467,490,502,503,507,514,519,],[150,150,294,300,150,379,294,386,294,389,150,150,294,418,420,150,150,150,150,150,150,150,494,150,512,150,150,150,150,]),'external_declaration':([0,30,],[7,74,]),'unified_wstring_literal':([105,128,136,143,149,157,159,166,174,176,182,194,207,216,236,241,242,244,258,261,263,268,269,273,275,277,278,280,288,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,326,333,341,361,365,374,375,391,398,424,432,453,456,459,460,464,465,466,467,476,477,480,490,502,503,507,514,519,],[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,]),'type_specifier':([0,2,30,32,57,58,65,72,90,105,109,110,116,117,122,146,157,174,208,209,223,234,268,275,276,278,299,340,344,395,],[15,15,15,79,15,79,112,15,15,15,112,112,218,112,79,15,15,112,112,112,15,15,112,112,112,15,112,15,15,15,]),'init_declarator_list':([47,60,],[92,92,]),'init_declarator':([47,60,137,142,],[96,96,251,253,]),'expression_opt':([105,157,194,278,280,326,391,424,456,459,460,466,490,503,507,514,519,],[154,154,154,390,154,154,461,154,154,154,489,154,504,513,154,154,154,]),'selection_statement':([105,157,194,280,326,424,456,459,466,507,514,519,],[155,155,155,155,155,155,155,155,155,155,155,155,]),'labeled_statement':([105,157,194,280,326,424,456,459,466,507,514,519,],[156,156,156,156,156,156,156,156,156,156,156,156,]),'block_item_list':([105,],[157,]),'declaration_list':([2,90,],[57,57,]),'type_qualifier':([0,2,12,19,22,30,37,47,57,60,65,72,73,87,90,105,109,110,111,116,117,125,129,130,146,147,157,174,208,209,223,234,259,260,268,275,276,278,295,299,340,344,345,395,433,434,],[22,22,22,22,22,22,88,95,22,95,88,22,88,139,22,22,88,88,211,139,88,95,139,88,22,88,22,88,88,88,22,22,139,88,88,88,88,22,211,88,22,22,88,22,139,88,]),'pppragma_directive':([0,30,65,105,109,110,117,157,194,208,209,280,326,424,456,459,466,507,514,519,],[25,25,115,162,115,115,115,162,162,115,115,162,162,162,162,162,162,162,162,162,]),'declaration_specifiers_no_type_opt':([12,19,22,],[67,69,70,]),'direct_id_declarator':([0,24,30,32,46,47,58,60,97,99,111,125,137,142,229,234,335,347,],[27,71,27,27,27,27,27,27,71,27,27,27,27,27,71,27,27,71,]),'pp_directive':([0,30,],[29,29,]),'parameter_type_list':([72,146,234,340,344,395,],[121,257,348,348,431,348,]),'id_init_declarator':([32,58,],[80,80,]),'initializer':([136,143,365,480,],[249,254,443,499,]),'translation_unit':([0,],[30,]),'struct_declarator_list_opt':([111,],[212,]),'id_init_declarator_list_opt':([32,58,],[81,81,]),'type_qualifier_list_opt':([37,73,130,147,260,345,434,],[85,128,242,258,375,432,477,]),'brace_close':([117,133,188,208,209,243,247,369,444,491,506,],[219,245,322,331,332,357,360,447,479,505,515,]),'struct_or_union_specifier':([0,2,30,32,57,58,65,72,90,105,109,110,116,117,122,146,157,174,208,209,223,234,268,275,276,278,299,340,344,395,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'specifier_qualifier_list':([65,109,110,117,174,208,209,268,275,276,299,],[111,111,111,111,295,111,111,295,295,295,295,]),'type_specifier_no_typeid':([0,2,30,32,47,57,58,60,65,72,90,105,109,110,111,116,117,122,125,146,157,174,208,209,223,234,268,275,276,278,295,299,340,344,395,],[36,36,36,36,98,36,36,98,36,36,36,36,36,36,213,36,36,36,98,36,36,36,36,36,36,36,36,36,36,36,213,36,36,36,36,]),'iteration_statement':([105,157,194,280,326,424,456,459,466,507,514,519,],[168,168,168,168,168,168,168,168,168,168,168,168,]),'designation_opt':([248,444,462,506,],[365,480,365,480,]),'abstract_declarator':([125,234,295,395,],[232,349,232,349,]),'typeid_declarator':([47,60,99,111,137,142,335,],[102,102,145,102,102,102,102,]),'expression_statement':([105,157,194,280,326,424,456,459,466,507,514,519,],[163,163,163,163,163,163,163,163,163,163,163,163,]),'unified_string_literal':([105,128,136,143,149,157,159,166,174,176,182,194,207,216,236,241,242,244,258,261,263,268,269,273,275,277,278,280,288,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,326,333,341,361,365,374,375,391,398,424,432,453,456,459,460,464,465,466,467,476,477,480,490,502,503,507,514,519,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'unary_expression':([105,128,136,143,149,157,159,166,174,176,182,194,207,216,236,241,242,244,258,261,263,268,269,273,275,277,278,280,288,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,326,333,341,361,365,374,375,391,398,424,432,453,456,459,460,464,465,466,467,476,477,480,490,502,503,507,514,519,],[173,173,173,173,267,173,274,279,173,298,173,173,298,298,173,173,173,298,173,173,173,173,173,173,173,173,173,173,173,173,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,173,298,173,173,298,173,298,173,173,173,173,298,173,173,173,173,173,173,298,298,173,173,173,173,173,173,173,173,173,173,173,]),'enum_specifier':([0,2,30,32,57,58,65,72,90,105,109,110,116,117,122,146,157,174,208,209,223,234,268,275,276,278,299,340,344,395,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'struct_declaration':([65,109,110,117,208,209,],[114,114,114,221,221,221,]),'translation_unit_or_empty':([0,],[50,]),'direct_typeid_declarator':([47,60,97,99,111,137,142,335,],[101,101,144,101,101,101,101,101,]),'unary_operator':([105,128,136,143,149,157,159,166,174,176,182,194,207,216,236,241,242,244,258,261,263,268,269,273,275,277,278,280,288,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,326,333,341,361,365,374,375,391,398,424,432,453,456,459,460,464,465,466,467,476,477,480,490,502,503,507,514,519,],[176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'identifier':([72,105,128,136,143,146,149,157,159,166,174,176,182,194,207,216,225,236,241,242,244,258,261,263,268,269,273,275,277,278,280,288,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,326,333,341,344,361,363,365,374,375,391,398,424,432,453,456,458,459,460,464,465,466,467,476,477,480,490,500,502,503,507,514,519,],[124,205,205,205,205,124,205,205,205,205,205,205,205,205,205,205,339,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,124,205,442,205,205,205,205,205,205,205,205,205,487,205,205,205,205,205,205,205,205,205,205,511,205,205,205,205,205,]),'id_init_declarator_list':([32,58,],[82,82,]),'empty':([0,2,12,19,22,32,37,47,58,60,72,73,90,105,111,125,128,130,146,147,157,194,234,236,248,258,260,278,280,295,326,340,341,344,345,391,395,424,432,434,444,456,459,460,462,466,490,503,506,507,514,519,],[53,59,68,68,68,83,86,104,83,104,127,86,59,178,217,233,239,86,127,86,272,272,350,239,366,239,86,272,272,233,272,350,239,127,86,272,350,272,239,86,481,272,272,272,481,272,272,272,481,272,272,272,]),'parameter_type_list_opt':([234,340,395,],[346,427,346,]),'identifier_list_opt':([72,146,344,],[118,256,430,]),'id_declarator':([0,30,32,46,47,58,60,99,111,125,137,142,234,335,],[2,2,78,89,90,78,108,89,108,226,108,108,89,108,]),'typedef_name':([0,2,30,32,57,58,65,72,90,105,109,110,116,117,122,146,157,174,208,209,223,234,268,275,276,278,299,340,344,395,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'decl_body':([0,2,30,57,90,105,157,278,],[4,4,4,4,4,4,4,4,]),'cast_expression':([105,128,136,143,157,174,176,182,194,207,216,236,241,242,244,258,261,263,268,269,273,275,277,278,280,288,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,326,333,341,361,365,374,375,391,398,424,432,453,456,459,460,464,465,466,467,476,477,480,490,502,503,507,514,519,],[184,184,184,184,184,184,297,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,463,184,184,184,184,184,184,463,184,184,184,184,184,184,184,184,184,184,184,184,]),'declaration_list_opt':([2,90,],[55,141,]),'enumerator':([76,131,135,246,],[134,134,134,359,]),'struct_or_union':([0,2,30,32,57,58,65,72,90,105,109,110,116,117,122,146,157,174,208,209,223,234,268,275,276,278,299,340,344,395,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'assignment_expression_opt':([128,236,258,341,432,],[237,351,372,428,474,]),'storage_class_specifier':([0,2,12,19,22,30,47,57,60,72,90,105,125,146,157,223,234,278,340,344,395,],[12,12,12,12,12,12,91,12,91,12,12,12,91,12,12,12,12,12,12,12,12,]),'block_item_list_opt':([105,],[188,]),'designator':([248,368,444,462,506,],[362,446,362,362,362,]),'declarator':([47,60,111,137,142,335,],[93,93,210,93,93,210,]),'brace_open':([9,31,55,62,64,75,77,105,136,141,143,157,194,280,326,365,398,424,455,456,457,459,464,466,480,507,514,519,],[65,76,105,109,110,131,135,105,248,105,248,105,105,105,105,248,462,105,462,105,462,105,462,105,248,105,105,105,]),'function_specifier':([0,2,12,19,22,30,47,57,60,72,90,105,125,146,157,223,234,278,340,344,395,],[19,19,19,19,19,19,94,19,94,19,19,19,94,19,19,19,19,19,19,19,19,]),'direct_abstract_declarator':([125,229,234,295,347,395,396,],[227,342,227,227,342,227,342,]),'type_qualifier_list':([37,65,73,109,110,117,130,147,174,208,209,260,268,275,276,299,345,434,],[87,116,129,116,116,116,87,259,116,116,116,87,116,116,116,116,433,87,]),'declaration':([0,2,30,57,90,105,157,278,],[23,56,23,107,56,193,193,391,]),'typeid_noparen_declarator':([125,],[228,]),'pointer':([0,30,32,46,47,58,60,85,99,111,125,137,142,234,295,335,395,],[24,24,24,24,97,24,97,138,97,97,229,97,97,347,396,97,396,]),'function_definition':([0,30,],[26,26,]),'abstract_declarator_opt':([125,295,],[230,397,]),'enumerator_list':([76,131,135,],[133,243,247,]),'initializer_list_opt':([248,],[369,]),'argument_expression_list':([261,],[377,]),'block_item':([105,157,],[165,271,]),'direct_typeid_noparen_declarator':([125,229,],[231,343,]),'declaration_specifiers_no_type':([0,2,12,19,22,30,57,72,90,105,146,157,223,234,278,340,344,395,],[32,58,66,66,66,32,58,122,58,58,122,58,122,122,58,122,122,122,]),'identifier_list':([72,146,344,],[123,123,123,]),'constant_expression':([207,216,244,333,361,],[329,336,358,425,441,]),'jump_statement':([105,157,194,280,326,424,456,459,466,507,514,519,],[191,191,191,191,191,191,191,191,191,191,191,191,]),'designation':([248,444,462,506,],[364,364,364,364,]),'type_name':([174,268,275,276,299,],[296,384,387,388,399,]),'statement':([105,157,194,280,326,424,456,459,466,507,514,519,],[199,199,324,392,423,468,485,488,493,516,520,521,]),'parameter_list':([72,146,234,340,344,395,],[120,120,120,120,120,120,]),'primary_expression':([105,128,136,143,149,157,159,166,174,176,182,194,207,216,236,241,242,244,258,261,263,268,269,273,275,277,278,280,288,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,326,333,341,361,365,374,375,391,398,424,432,453,456,459,460,464,465,466,467,476,477,480,490,502,503,507,514,519,],[201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,]),'compound_statement':([55,105,141,157,194,280,326,424,456,459,466,507,514,519,],[106,202,252,202,202,202,202,202,202,202,202,202,202,202,]),'declaration_specifiers':([0,2,30,57,72,90,105,146,157,223,234,278,340,344,395,],[47,60,47,60,125,60,60,125,60,125,125,60,125,125,125,]),'parameter_declaration':([72,146,223,234,340,344,395,],[126,126,337,126,126,126,126,]),'struct_declarator_list':([111,],[214,]),'offsetof_member_designator':([458,],[486,]),'assignment_expression':([105,128,136,143,157,174,182,194,236,241,242,258,261,263,268,269,273,275,277,278,280,288,299,319,321,326,341,365,374,375,391,424,432,453,456,459,460,466,467,476,477,480,490,502,503,507,514,519,],[204,240,250,250,204,204,204,204,240,355,356,240,378,204,204,385,204,204,204,204,204,393,204,204,204,204,240,250,450,451,204,204,240,484,204,204,204,204,204,497,498,250,204,204,204,204,204,204,]),'binary_expression':([105,128,136,143,157,174,182,194,207,216,236,241,242,244,258,261,263,268,269,273,275,277,278,280,288,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,326,333,341,361,365,374,375,391,424,432,453,456,459,460,465,466,467,476,477,480,490,502,503,507,514,519,],[183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,183,419,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,]),'assignment_operator':([173,],[288,]),'struct_declarator':([111,335,],[215,426,]),'designator_list':([248,444,462,506,],[368,368,368,368,]),'constant':([105,128,136,143,149,157,159,166,174,176,182,194,207,216,236,241,242,244,258,261,263,268,269,273,275,277,278,280,288,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,326,333,341,361,365,374,375,391,398,424,432,453,456,459,460,464,465,466,467,476,477,480,490,502,503,507,514,519,],[206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,]),'conditional_expression':([105,128,136,143,157,174,182,194,207,216,236,241,242,244,258,261,263,268,269,273,275,277,278,280,288,299,319,321,326,333,341,361,365,374,375,391,424,432,453,456,459,460,465,466,467,476,477,480,490,502,503,507,514,519,],[170,170,170,170,170,170,170,170,330,330,170,170,170,330,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,330,170,330,170,170,170,170,170,170,170,170,170,170,492,170,170,170,170,170,170,170,170,170,170,170,]),'struct_declaration_list':([65,109,110,],[117,208,209,]),'init_declarator_list_opt':([47,60,],[103,103,]),'initializer_list':([248,462,],[367,491,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
