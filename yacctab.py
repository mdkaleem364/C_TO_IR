
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {end':([0,1,2,11,12,19,23,30,31,33,35,50,55,77,95,141,155,215,370,],[-304,-63,-68,-66,0,-58,-64,-60,-67,-59,-62,-65,-69,-61,-81,-70,-71,-303,-197,]),'DOUBLE':([0,1,2,4,5,6,7,8,9,10,11,13,14,16,17,18,19,20,23,24,26,27,28,30,31,32,34,35,36,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,58,59,62,63,69,71,72,73,74,76,77,78,79,83,89,91,92,93,94,95,96,97,99,101,103,104,107,117,121,125,127,130,131,132,133,134,135,136,137,138,140,141,142,155,172,197,203,209,211,214,215,216,218,223,225,226,227,228,234,237,239,240,243,244,245,249,252,254,256,275,288,291,293,316,328,329,332,343,349,352,353,355,356,360,364,367,370,371,374,375,392,424,425,440,441,449,450,478,494,497,499,516,517,519,521,],[41,-63,-68,41,-304,-304,-52,-113,-29,-117,-66,-102,-101,-98,-104,-94,41,-304,-64,-109,-107,41,-216,-60,-67,-111,-95,-62,-115,-91,-108,-100,-106,-110,-112,41,-93,-99,-103,-114,-65,-105,-96,-97,-116,-69,-89,-87,-88,-90,41,-10,-86,-9,-84,41,-61,-85,-161,-53,-92,41,-130,-131,-302,-81,-82,41,41,41,-147,-148,41,41,41,-162,-30,-141,-137,-140,-128,41,41,41,41,41,41,-70,-83,-71,41,-35,41,-36,41,-138,-303,-132,-127,-126,-129,41,41,-193,-72,-73,-76,-77,-195,41,-74,-78,-75,-194,-149,41,41,41,41,41,-34,-31,41,41,-139,-133,-134,-209,-210,41,-196,-212,-197,-213,-150,-151,41,-33,-32,-198,-208,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'MINUSMINUS':([2,10,36,54,55,75,79,80,81,94,95,106,111,112,113,114,115,125,129,140,148,149,150,156,158,159,161,162,163,164,165,166,167,168,169,170,172,174,176,178,179,180,181,182,183,184,186,187,188,189,190,191,193,196,202,215,224,228,229,234,235,237,239,240,242,243,244,245,249,250,252,254,258,261,262,264,267,268,269,271,272,275,276,277,278,279,280,281,282,283,284,285,286,287,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,318,319,320,323,326,331,335,342,348,354,355,356,358,360,361,364,365,366,367,369,370,371,381,382,384,386,387,393,394,417,421,426,427,428,435,440,441,443,444,449,450,454,455,456,458,462,463,465,466,468,469,471,477,478,480,481,482,483,494,495,497,499,500,501,502,503,508,510,511,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-161,-27,-28,-302,-81,-304,184,-28,184,-304,-289,-162,184,184,-28,184,-304,-291,-262,-281,-294,-266,-260,-296,268,-300,-295,184,-261,-297,184,-264,-279,-265,-292,-293,-263,-278,-290,184,184,184,-304,-298,-280,184,-261,184,184,-303,184,-193,-289,-72,184,-73,-76,-77,184,-195,184,-74,-78,184,-75,-194,184,184,-261,184,-301,-275,184,-274,184,184,-221,-226,-222,-219,-223,-227,184,-228,-225,-224,-229,-220,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,-12,184,184,-11,-299,-304,-261,184,184,184,-209,-210,184,184,184,-196,184,184,-212,184,-197,-213,-272,-273,-269,-271,-270,184,-282,-304,-177,-28,184,-304,-261,-198,-208,184,184,-200,-211,-267,-268,184,-304,184,184,184,-11,184,-261,184,184,-199,184,184,184,184,-204,184,-203,-201,-276,-304,-283,184,184,184,-277,184,-205,-202,-207,184,-206,]),'__INT128':([0,1,2,4,5,6,7,8,9,10,11,13,14,16,17,18,19,20,23,24,26,27,28,30,31,32,34,35,36,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,58,59,62,63,69,71,72,73,74,76,77,78,79,83,89,91,92,93,94,95,96,97,99,101,103,104,107,117,121,125,127,130,131,132,133,134,135,136,137,138,140,141,142,155,172,197,203,209,211,214,215,216,218,223,225,226,227,228,234,237,239,240,243,244,245,249,252,254,256,275,288,291,293,316,328,329,332,343,349,352,353,355,356,360,364,367,370,371,374,375,392,424,425,440,441,449,450,478,494,497,499,516,517,519,521,],[42,-63,-68,42,-304,-304,-52,-113,-29,-117,-66,-102,-101,-98,-104,-94,42,-304,-64,-109,-107,42,-216,-60,-67,-111,-95,-62,-115,-91,-108,-100,-106,-110,-112,42,-93,-99,-103,-114,-65,-105,-96,-97,-116,-69,-89,-87,-88,-90,42,-10,-86,-9,-84,42,-61,-85,-161,-53,-92,42,-130,-131,-302,-81,-82,42,42,42,-147,-148,42,42,42,-162,-30,-141,-137,-140,-128,42,42,42,42,42,42,-70,-83,-71,42,-35,42,-36,42,-138,-303,-132,-127,-126,-129,42,42,-193,-72,-73,-76,-77,-195,42,-74,-78,-75,-194,-149,42,42,42,42,42,-34,-31,42,42,-139,-133,-134,-209,-210,42,-196,-212,-197,-213,-150,-151,42,-33,-32,-198,-208,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'MODEQUAL':([115,156,159,161,162,164,165,166,167,170,171,176,179,180,182,183,189,190,215,229,267,268,271,274,292,313,314,315,326,381,382,384,386,387,394,454,455,457,459,500,502,511,],[-289,-291,-281,-294,-266,-296,-254,-300,-295,-297,280,-279,-292,-293,-278,-290,-298,-280,-303,-289,-301,-275,-274,-258,-256,-255,-257,-252,-299,-272,-273,-269,-271,-270,-282,-267,-268,-259,-253,-276,-283,-277,]),'FLOAT':([0,1,2,4,5,6,7,8,9,10,11,13,14,16,17,18,19,20,23,24,26,27,28,30,31,32,34,35,36,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,58,59,62,63,69,71,72,73,74,76,77,78,79,83,89,91,92,93,94,95,96,97,99,101,103,104,107,117,121,125,127,130,131,132,133,134,135,136,137,138,140,141,142,155,172,197,203,209,211,214,215,216,218,223,225,226,227,228,234,237,239,240,243,244,245,249,252,254,256,275,288,291,293,316,328,329,332,343,349,352,353,355,356,360,364,367,370,371,374,375,392,424,425,440,441,449,450,478,494,497,499,516,517,519,521,],[51,-63,-68,51,-304,-304,-52,-113,-29,-117,-66,-102,-101,-98,-104,-94,51,-304,-64,-109,-107,51,-216,-60,-67,-111,-95,-62,-115,-91,-108,-100,-106,-110,-112,51,-93,-99,-103,-114,-65,-105,-96,-97,-116,-69,-89,-87,-88,-90,51,-10,-86,-9,-84,51,-61,-85,-161,-53,-92,51,-130,-131,-302,-81,-82,51,51,51,-147,-148,51,51,51,-162,-30,-141,-137,-140,-128,51,51,51,51,51,51,-70,-83,-71,51,-35,51,-36,51,-138,-303,-132,-127,-126,-129,51,51,-193,-72,-73,-76,-77,-195,51,-74,-78,-75,-194,-149,51,51,51,51,51,-34,-31,51,51,-139,-133,-134,-209,-210,51,-196,-212,-197,-213,-150,-151,51,-33,-32,-198,-208,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),'WSTRING_LITERAL':([2,10,36,54,55,75,79,80,81,94,95,106,111,112,113,114,125,129,140,148,149,150,158,159,163,166,168,169,172,174,178,181,184,186,187,188,191,193,196,202,215,224,228,234,235,237,239,240,242,243,244,245,249,250,252,254,258,261,262,264,267,269,272,275,276,277,278,279,280,281,282,283,284,285,286,287,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,318,319,320,323,331,335,342,348,354,355,356,358,360,361,364,365,366,367,369,370,371,393,417,421,426,427,428,435,440,441,443,444,449,450,456,458,462,463,465,466,468,469,471,477,478,480,481,482,483,494,495,497,499,501,503,508,510,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-161,-27,-28,-302,-81,-304,166,-28,166,-304,-162,166,166,-28,166,-304,-262,267,-260,-300,166,-261,166,-264,-265,-263,166,166,166,-304,166,-261,166,166,-303,166,-193,-72,166,-73,-76,-77,166,-195,166,-74,-78,166,-75,-194,166,166,-261,166,-301,166,166,166,-221,-226,-222,-219,-223,-227,166,-228,-225,-224,-229,-220,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,-12,166,166,-11,-304,-261,166,166,166,-209,-210,166,166,166,-196,166,166,-212,166,-197,-213,166,-304,-177,-28,166,-304,-261,-198,-208,166,166,-200,-211,166,-304,166,166,166,-11,166,-261,166,166,-199,166,166,166,166,-204,166,-203,-201,-304,166,166,166,166,-205,-202,-207,166,-206,]),'OR':([115,156,159,160,161,162,164,165,166,167,170,171,176,179,180,182,183,185,189,190,215,229,267,268,271,274,292,313,314,315,326,381,382,384,386,387,394,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,454,455,457,459,500,502,511,],[-289,-291,-281,-233,-294,-266,-296,-254,-300,-295,-297,-252,-279,-292,-293,-278,-290,307,-298,-280,-303,-289,-301,-275,-274,-258,-256,-255,-257,-252,-299,-272,-273,-269,-271,-270,-282,307,-237,-235,-245,-236,-246,-238,-249,-244,-242,-247,-241,-248,-240,-234,307,-243,-239,-267,-268,-259,-253,-276,-283,-277,]),'PLUSPLUS':([2,10,36,54,55,75,79,80,81,94,95,106,111,112,113,114,115,125,129,140,148,149,150,156,158,159,161,162,163,164,165,166,167,168,169,170,172,174,176,178,179,180,181,182,183,184,186,187,188,189,190,191,193,196,202,215,224,228,229,234,235,237,239,240,242,243,244,245,249,250,252,254,258,261,262,264,267,268,269,271,272,275,276,277,278,279,280,281,282,283,284,285,286,287,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,318,319,320,323,326,331,335,342,348,354,355,356,358,360,361,364,365,366,367,369,370,371,381,382,384,386,387,393,394,417,421,426,427,428,435,440,441,443,444,449,450,454,455,456,458,462,463,465,466,468,469,471,477,478,480,481,482,483,494,495,497,499,500,501,502,503,508,510,511,514,516,517,519,520,521,],[-68,-117,-115,-116,-69,-304,-161,-27,-28,-302,-81,-304,186,-28,186,-304,-289,-162,186,186,-28,186,-304,-291,-262,-281,-294,-266,-260,-296,271,-300,-295,186,-261,-297,186,-264,-279,-265,-292,-293,-263,-278,-290,186,186,186,-304,-298,-280,186,-261,186,186,-303,186,-193,-289,-72,186,-73,-76,-77,186,-195,186,-74,-78,186,-75,-194,186,186,-261,186,-301,-275,186,-274,186,186,-221,-226,-222,-219,-223,-227,186,-228,-225,-224,-229,-220,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,-12,186,186,-11,-299,-304,-261,186,186,186,-209,-210,186,186,186,-196,186,186,-212,186,-197,-213,-272,-273,-269,-271,-270,186,-282,-304,-177,-28,186,-304,-261,-198,-208,186,186,-200,-211,-267,-268,186,-304,186,186,186,-11,186,-261,186,186,-199,186,186,186,186,-204,186,-203,-201,-276,-304,-283,186,186,186,-277,186,-205,-202,-207,186,-206,]),'LOR':([115,156,159,160,161,162,164,165,166,167,170,171,176,179,180,182,183,185,189,190,215,229,267,268,271,274,292,313,314,315,326,381,382,384,386,387,394,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,454,455,457,459,500,502,511,],[-289,-291,-281,-233,-294,-266,-296,-254,-300,-295,-297,-252,-279,-292,-293,-278,-290,310,-298,-280,-303,-289,-301,-275,-274,-258,-256,-255,-257,-252,-299,-272,-273,-269,-271,-270,-282,-250,-237,-235,-245,-236,-246,-238,-249,-244,-242,-247,-241,-248,-240,-234,-251,-243,-239,-267,-268,-259,-253,-276,-283,-277,]),'CONST':([0,1,2,4,5,6,7,8,9,10,11,13,14,16,17,18,19,20,21,23,24,26,28,30,31,32,34,35,36,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,58,59,62,63,69,75,76,77,79,81,83,89,91,92,93,94,95,96,97,101,103,104,106,107,112,114,117,125,127,130,131,132,133,134,135,136,137,138,140,141,142,148,150,155,172,197,203,209,211,214,215,216,218,223,225,226,227,228,234,237,239,240,243,244,245,249,252,254,256,275,288,291,293,316,328,329,331,332,343,349,352,353,355,356,360,364,367,370,371,374,375,392,424,425,426,428,440,441,449,450,478,494,497,499,516,517,519,521,],[36,-63,-68,36,36,36,-52,-113,-29,-117,-66,-102,-101,-98,-104,-94,36,36,36,-64,-109,-107,-216,-60,-67,-111,-95,-62,-115,-91,-108,-100,-106,-110,-112,36,-93,-99,-103,-114,-65,-105,-96,-97,-116,-69,-89,-87,-88,-90,36,36,36,-61,-161,36,-53,-92,36,-130,-131,-302,-81,-82,36,36,-147,-148,36,36,36,36,36,-162,-30,-141,-137,-140,-128,36,36,36,36,36,36,-70,-83,36,36,-71,36,-35,36,-36,36,-138,-303,-132,-127,-126,-129,36,36,-193,-72,-73,-76,-77,-195,36,-74,-78,-75,-194,-149,36,36,36,36,36,-34,-31,36,36,36,-139,-133,-134,-209,-210,36,-196,-212,-197,-213,-150,-151,36,-33,-32,36,36,-198,-208,-200,-211,-199,-204,-203,-201,-205,-202,-207,-206,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([0,19,44,69,101,140,244,360,],[1,1,96,96,142,228,228,444,]),'brace_open':([29,49,92,93,98,103,104,110,111,129,140,242,244,320,354,366,393,443,457,461,463,465,477,481,483,510,514,520,],[91,102,137,138,140,146,147,140,188,188,140,140,140,188,140,140,458,140,458,458,458,188,140,140,140,140,140,140,]),'struct_declarator_list':([135,],[217,]),'init_declarator':([4,97,108,128,],[56,56,153,212,]),'enumerator':([102,146,147,257,],[145,145,145,372,]),'type_qualifier_list':([21,75,91,106,114,134,137,138,150,172,226,227,275,291,293,316,331,428,],[81,112,136,148,81,136,136,136,81,136,136,136,136,136,136,136,426,81,]),'enumerator_list':([102,146,147,],[143,259,260,]),'function_specifier':([0,4,5,6,19,20,44,69,76,97,101,107,117,140,203,211,244,332,343,360,392,],[5,58,5,5,5,5,5,5,5,58,5,5,58,5,5,5,5,5,5,5,5,]),'type_qualifier':([0,4,5,6,19,20,21,44,69,75,76,81,91,97,101,106,107,112,114,117,134,135,136,137,138,140,148,150,172,203,211,226,227,244,275,288,291,293,316,331,332,343,360,392,426,428,],[6,59,6,6,6,6,79,6,6,79,6,125,79,59,6,79,6,125,79,59,79,218,125,79,79,6,125,79,79,6,6,79,79,6,79,218,79,79,79,79,6,6,6,6,125,79,]),'direct_id_declarator':([0,4,19,22,25,27,57,64,97,99,108,117,128,135,200,203,338,347,],[7,7,7,83,7,7,83,7,7,7,7,7,7,7,83,7,83,7,]),'struct_or_union_specifier':([0,19,27,44,69,76,91,99,101,107,121,134,136,137,138,140,172,203,211,226,227,244,275,291,293,316,332,343,360,392,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'parameter_type_list_opt':([203,343,392,],[340,437,340,]),'identifier_list_opt':([76,107,332,],[119,152,430,]),'brace_close':([134,143,226,227,253,259,260,321,417,485,501,],[216,256,352,353,370,374,375,420,464,500,511,]),'identifier_list':([76,107,332,],[120,120,120,]),'specifier_qualifier_list':([91,134,137,138,172,226,227,275,291,293,316,],[135,135,135,135,288,135,135,288,288,288,288,]),'constant':([111,113,129,140,149,168,172,184,186,187,191,196,202,224,235,242,244,250,258,261,264,269,272,275,282,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,319,320,342,348,354,358,360,361,365,366,369,393,427,443,444,456,462,463,465,468,471,477,480,481,482,483,495,503,508,510,514,520,],[176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'translation_unit':([0,],[19,]),'id_init_declarator_list_opt':([27,99,],[85,85,]),'external_declaration':([0,19,],[30,77,]),'initializer':([111,129,320,465,],[173,213,419,489,]),'typeid_declarator':([4,64,97,108,128,135,347,],[65,109,65,65,65,65,65,]),'unified_wstring_literal':([111,113,129,140,149,168,172,184,186,187,191,196,202,224,235,242,244,250,258,261,264,269,272,275,282,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,319,320,342,348,354,358,360,361,365,366,369,393,427,443,444,456,462,463,465,468,471,477,480,481,482,483,495,503,508,510,514,520,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'initializer_list':([188,458,],[317,485,]),'struct_declaration':([91,134,137,138,226,227,],[131,214,131,131,214,214,]),'declaration_specifiers_no_type_opt':([5,6,20,],[72,74,78,]),'labeled_statement':([140,242,244,354,366,443,477,481,483,510,514,520,],[234,234,234,234,234,234,234,234,234,234,234,234,]),'id_init_declarator':([27,99,],[87,87,]),'cast_expression':([111,113,129,140,149,172,187,191,196,202,224,235,242,244,250,258,261,264,269,272,275,282,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,319,320,342,348,354,358,360,361,365,366,369,393,427,443,444,456,462,463,465,468,471,477,480,481,482,483,495,503,508,510,514,520,],[160,160,160,160,160,160,314,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,459,160,160,160,160,160,459,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'init_declarator_list_opt':([4,97,],[67,67,]),'empty':([0,4,5,6,20,21,27,44,69,75,76,97,99,106,107,113,114,117,135,140,149,150,188,202,203,242,244,288,331,332,342,343,354,360,366,392,417,427,428,443,444,458,477,480,481,483,495,501,508,510,514,520,],[33,68,73,73,73,80,88,100,100,80,122,68,88,80,122,192,80,204,221,236,192,80,323,192,339,362,362,204,80,122,192,339,362,362,362,339,466,192,80,362,362,466,362,362,362,362,362,466,362,362,362,362,]),'parameter_list':([76,107,203,332,343,392,],[123,123,123,123,123,123,]),'function_definition':([0,19,],[35,35,]),'decl_body':([0,19,44,69,101,140,244,360,],[37,37,37,37,37,37,37,37,]),'type_specifier':([0,19,27,44,69,76,91,99,101,107,121,134,136,137,138,140,172,203,211,226,227,244,275,291,293,316,332,343,360,392,],[38,38,89,38,38,38,133,89,38,38,89,133,225,133,133,38,133,38,38,133,133,38,133,133,133,133,38,38,38,38,]),'expression_statement':([140,242,244,354,366,443,477,481,483,510,514,520,],[237,237,237,237,237,237,237,237,237,237,237,237,]),'argument_expression_list':([272,],[383,]),'constant_expression':([224,235,258,319,348,],[351,359,373,418,439,]),'direct_abstract_declarator':([117,200,203,288,338,391,392,],[206,334,206,206,334,334,206,]),'iteration_statement':([140,242,244,354,366,443,477,481,483,510,514,520,],[239,239,239,239,239,239,239,239,239,239,239,239,]),'enum_specifier':([0,19,27,44,69,76,91,99,101,107,121,134,136,137,138,140,172,203,211,226,227,244,275,291,293,316,332,343,360,392,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'struct_declarator_list_opt':([135,],[222,]),'binary_expression':([111,113,129,140,149,172,191,196,202,224,235,242,244,250,258,261,264,269,272,275,282,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,319,320,342,348,354,358,360,361,365,366,369,427,443,444,456,462,465,468,471,477,480,481,482,483,495,503,508,510,514,520,],[185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,397,398,399,400,401,402,403,404,405,406,407,185,409,410,411,412,413,414,415,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,]),'unary_operator':([111,113,129,140,149,168,172,184,186,187,191,196,202,224,235,242,244,250,258,261,264,269,272,275,282,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,319,320,342,348,354,358,360,361,365,366,369,393,427,443,444,456,462,463,465,468,471,477,480,481,482,483,495,503,508,510,514,520,],[187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,]),'pppragma_directive':([0,19,91,134,137,138,140,226,227,242,244,354,366,443,477,481,483,510,514,520,],[50,50,130,130,130,130,249,130,130,249,249,249,249,249,249,249,249,249,249,249,]),'initializer_list_opt':([188,],[321,]),'identifier':([76,107,111,113,129,140,149,168,172,184,186,187,191,196,202,210,224,235,242,244,250,258,261,264,269,272,275,282,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,319,320,325,332,342,348,354,358,360,361,365,366,369,393,427,443,444,456,460,462,463,465,468,471,477,480,481,482,483,495,503,504,508,510,514,520,],[124,124,182,182,182,182,182,182,182,182,182,182,182,182,182,344,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,423,124,182,182,182,182,182,182,182,182,182,182,182,182,182,182,486,182,182,182,182,182,182,182,182,182,182,182,182,513,182,182,182,182,]),'declarator':([4,97,108,128,135,347,],[70,70,70,70,219,219,]),'typeid_noparen_declarator':([117,],[198,]),'jump_statement':([140,242,244,354,366,443,477,481,483,510,514,520,],[240,240,240,240,240,240,240,240,240,240,240,240,]),'direct_typeid_noparen_declarator':([117,200,],[199,333,]),'expression':([140,172,242,244,250,269,275,293,305,316,354,358,360,361,366,369,443,444,477,480,481,482,483,495,503,508,510,514,520,],[246,290,246,246,368,380,290,290,408,290,246,442,246,446,246,451,246,246,246,246,246,498,246,246,512,246,246,246,246,]),'pointer':([0,4,19,25,27,64,82,97,99,108,117,128,135,203,288,347,392,],[22,57,22,22,22,57,126,57,22,57,200,57,57,338,391,57,391,]),'parameter_type_list':([76,107,203,332,343,392,],[116,151,337,429,337,337,]),'declaration_specifiers':([0,19,44,69,76,101,107,140,203,211,244,332,343,360,392,],[4,4,97,97,117,97,117,97,117,117,97,117,117,97,117,]),'conditional_expression':([111,113,129,140,149,172,191,196,202,224,235,242,244,250,258,261,264,269,272,275,282,293,305,316,319,320,342,348,354,358,360,361,365,366,369,427,443,444,456,462,465,468,471,477,480,481,482,483,495,503,508,510,514,520,],[157,157,157,157,157,157,157,157,157,350,350,157,157,157,350,157,157,157,157,157,157,157,157,157,350,157,157,350,157,157,157,157,157,157,157,157,157,157,157,488,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'declaration_list_opt':([44,69,],[98,110,]),'direct_typeid_declarator':([4,57,64,97,108,128,135,347,],[60,105,60,60,60,60,60,60,]),'assignment_operator':([171,],[282,]),'parameter_declaration':([76,107,203,211,332,343,392,],[118,118,118,346,118,118,118,]),'type_name':([172,275,291,293,316,],[289,388,395,396,416,]),'block_item':([140,244,],[243,364,]),'designator':([188,324,417,458,501,],[322,422,322,322,322,]),'primary_expression':([111,113,129,140,149,168,172,184,186,187,191,196,202,224,235,242,244,250,258,261,264,269,272,275,282,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,319,320,342,348,354,358,360,361,365,366,369,393,427,443,444,456,462,463,465,468,471,477,480,481,482,483,495,503,508,510,514,520,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'translation_unit_or_empty':([0,],[12,]),'declaration_list':([44,69,],[101,101,]),'init_declarator_list':([4,97,],[61,61,]),'expression_opt':([140,242,244,354,360,366,443,444,477,480,481,483,495,508,510,514,520,],[255,255,255,255,445,255,255,479,255,496,255,255,507,515,255,255,255,]),'assignment_expression':([111,113,129,140,149,172,191,196,202,242,244,250,261,264,269,272,275,282,293,305,316,320,342,354,358,360,361,365,366,369,427,443,444,456,465,468,471,477,480,481,482,483,495,503,508,510,514,520,],[175,194,175,247,194,247,327,330,194,247,247,247,376,379,247,385,247,389,247,247,247,175,194,247,247,247,247,448,247,247,194,247,247,484,175,490,493,247,247,247,247,247,247,247,247,247,247,247,]),'struct_declarator':([135,347,],[220,438,]),'storage_class_specifier':([0,4,5,6,19,20,44,69,76,97,101,107,117,140,203,211,244,332,343,360,392,],[20,62,20,20,20,20,20,20,20,62,20,20,62,20,20,20,20,20,20,20,20,]),'abstract_declarator_opt':([117,288,],[201,390,]),'block_item_list':([140,],[244,]),'pp_directive':([0,19,],[23,23,]),'unary_expression':([111,113,129,140,149,168,172,184,186,187,191,196,202,224,235,242,244,250,258,261,264,269,272,275,282,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,319,320,342,348,354,358,360,361,365,366,369,393,427,443,444,456,462,463,465,468,471,477,480,481,482,483,495,503,508,510,514,520,],[171,171,171,171,171,274,171,292,313,315,171,171,171,315,315,171,171,171,315,171,171,171,171,171,171,171,315,315,315,315,315,315,315,315,315,315,315,171,315,315,315,315,315,315,315,171,315,171,171,315,171,171,171,171,171,171,171,315,171,171,171,171,315,315,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'compound_statement':([98,110,140,242,244,354,366,443,477,481,483,510,514,520,],[141,155,245,245,245,245,245,245,245,245,245,245,245,245,]),'declaration_specifiers_no_type':([0,5,6,19,20,44,69,76,101,107,140,203,211,244,332,343,360,392,],[27,71,71,27,71,99,99,121,99,121,99,121,121,99,121,121,99,121,]),'struct_or_union':([0,19,27,44,69,76,91,99,101,107,121,134,136,137,138,140,172,203,211,226,227,244,275,291,293,316,332,343,360,392,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'designation':([188,417,458,501,],[318,318,318,318,]),'id_init_declarator_list':([27,99,],[86,86,]),'designation_opt':([188,417,458,501,],[320,465,320,465,]),'type_qualifier_list_opt':([21,75,106,114,150,331,428,],[82,113,149,196,264,427,471,]),'typedef_name':([0,19,27,44,69,76,91,99,101,107,121,134,136,137,138,140,172,203,211,226,227,244,275,291,293,316,332,343,360,392,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'designator_list':([188,417,458,501,],[324,324,324,324,]),'assignment_expression_opt':([113,149,202,342,427,],[195,263,336,436,470,]),'unified_string_literal':([111,113,129,140,149,168,172,184,186,187,191,196,202,224,235,242,244,250,258,261,264,269,272,275,282,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,319,320,342,348,354,358,360,361,365,366,369,393,427,443,444,456,462,463,465,468,471,477,480,481,482,483,495,503,508,510,514,520,],[190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,]),'abstract_declarator':([117,203,288,392,],[205,341,205,341,]),'struct_declaration_list':([91,137,138,],[134,226,227,]),'selection_statement':([140,242,244,354,366,443,477,481,483,510,514,520,],[252,252,252,252,252,252,252,252,252,252,252,252,]),'offsetof_member_designator':([460,],[487,]),'id_declarator':([0,4,19,25,27,64,97,99,108,117,128,135,203,347,],[44,69,44,84,90,84,139,90,139,207,139,139,84,139,]),'type_specifier_no_typeid':([0,4,19,27,44,69,76,91,97,99,101,107,117,121,134,135,136,137,138,140,172,203,211,226,227,244,275,288,291,293,316,332,343,360,392,],[48,63,48,48,48,48,48,48,63,48,48,48,63,48,48,223,48,48,48,48,48,48,48,48,48,48,48,223,48,48,48,48,48,48,48,]),'block_item_list_opt':([140,],[253,]),'statement':([140,242,244,354,366,443,477,481,483,510,514,520,],[254,363,254,440,449,478,494,497,499,517,519,521,]),'postfix_expression':([111,113,129,140,149,168,172,184,186,187,191,196,202,224,235,242,244,250,258,261,264,269,272,275,282,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,316,319,320,342,348,354,358,360,361,365,366,369,393,427,443,444,456,462,463,465,468,471,477,480,481,482,483,495,503,508,510,514,520,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
