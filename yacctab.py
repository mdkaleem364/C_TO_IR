
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'STRUCT':([0,2,3,5,7,8,9,10,18,19,22,24,25,26,29,32,33,36,37,43,44,46,48,49,50,52,55,56,57,58,59,60,62,65,68,69,79,81,85,98,101,103,104,110,111,112,113,114,117,118,121,122,128,141,144,146,147,151,155,165,166,189,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,264,268,286,288,330,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[1,1,-95,-68,-67,-304,-60,-115,-93,-304,-65,1,-66,-97,-116,-29,-96,-52,-64,-98,-62,-94,1,-304,-117,-63,-61,-69,-53,-10,-9,-86,-302,1,-84,-81,-161,1,1,1,1,-82,-85,1,1,-137,-141,-140,1,1,-30,-162,1,1,-83,-70,1,-303,-138,1,1,1,1,1,-35,-36,-71,-72,-76,-195,-77,-73,1,-193,-78,-75,-194,-74,1,-139,1,1,1,1,1,-31,-34,-209,-197,-196,1,-210,-213,-212,1,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'STATIC':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,66,67,69,71,79,81,82,84,85,86,93,95,98,99,103,121,122,126,135,141,142,144,146,147,149,151,156,210,215,216,217,224,229,234,235,237,240,241,245,247,251,254,258,260,266,267,272,273,335,337,338,350,351,360,363,364,365,366,371,372,410,428,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[3,3,-95,-107,-68,-67,3,-60,-115,-104,-113,-91,-102,-93,3,-109,-65,-105,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,3,-94,-216,3,3,-117,-110,-63,-100,-112,-61,-69,-53,-302,-147,-148,-130,-131,-81,-92,-161,3,134,-89,3,-87,-90,-88,3,3,-82,-30,-162,3,219,3,230,-83,-70,3,-149,-303,-132,3,3,-35,-36,-71,354,-72,-76,-195,-77,-73,3,-193,-78,-75,-194,-74,-150,-151,-133,-134,3,3,427,-31,-34,-209,-197,-196,3,-210,-213,-212,3,472,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'RSHIFTEQUAL':([131,151,168,172,174,175,178,179,183,185,186,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-281,-280,-294,-290,-295,-291,293,-279,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'CHAR_CONST':([5,10,29,50,56,62,69,77,79,80,82,120,122,134,135,136,142,143,147,148,151,164,169,173,177,180,182,184,187,189,190,191,192,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,258,260,264,270,277,278,280,282,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,463,471,472,474,477,478,479,481,482,483,494,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,195,-162,-304,-28,195,-304,195,195,195,-303,195,-304,-265,-260,195,-264,195,-262,195,-261,-263,195,195,195,195,195,-261,-28,-304,195,195,-72,-76,-195,-77,-73,195,195,-193,-78,-75,195,-194,-74,195,195,195,-11,195,-12,195,195,-221,-219,-226,-223,-227,-229,-224,195,-228,-222,-225,-220,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,-304,-261,195,195,-261,195,-209,-197,-196,195,-210,195,195,195,-213,-212,195,195,-304,-177,195,-261,-304,-28,195,195,195,-208,-200,-211,-198,195,195,-11,195,-304,195,195,195,-261,-199,195,195,195,195,195,-204,195,-201,-203,-304,195,195,195,-205,195,-202,-207,195,-206,]),'FLOAT_CONST':([5,10,29,50,56,62,69,77,79,80,82,120,122,134,135,136,142,143,147,148,151,164,169,173,177,180,182,184,187,189,190,191,192,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,258,260,264,270,277,278,280,282,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,463,471,472,474,477,478,479,481,482,483,494,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,175,-162,-304,-28,175,-304,175,175,175,-303,175,-304,-265,-260,175,-264,175,-262,175,-261,-263,175,175,175,175,175,-261,-28,-304,175,175,-72,-76,-195,-77,-73,175,175,-193,-78,-75,175,-194,-74,175,175,175,-11,175,-12,175,175,-221,-219,-226,-223,-227,-229,-224,175,-228,-222,-225,-220,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,-304,-261,175,175,-261,175,-209,-197,-196,175,-210,175,175,175,-213,-212,175,175,-304,-177,175,-261,-304,-28,175,175,175,-208,-200,-211,-198,175,175,-11,175,-304,175,175,175,-261,-199,175,175,175,175,175,-204,175,-201,-203,-304,175,175,175,-205,175,-202,-207,175,-206,]),'PPPRAGMASTR':([5,],[56,]),'DIVEQUAL':([131,151,168,172,174,175,178,179,183,185,186,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-281,-280,-294,-290,-295,-291,298,-279,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'INT_CONST_OCT':([5,10,29,50,56,62,69,77,79,80,82,120,122,134,135,136,142,143,147,148,151,164,169,173,177,180,182,184,187,189,190,191,192,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,258,260,264,270,277,278,280,282,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,463,471,472,474,477,478,479,481,482,483,494,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,183,-162,-304,-28,183,-304,183,183,183,-303,183,-304,-265,-260,183,-264,183,-262,183,-261,-263,183,183,183,183,183,-261,-28,-304,183,183,-72,-76,-195,-77,-73,183,183,-193,-78,-75,183,-194,-74,183,183,183,-11,183,-12,183,183,-221,-219,-226,-223,-227,-229,-224,183,-228,-222,-225,-220,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,-304,-261,183,183,-261,183,-209,-197,-196,183,-210,183,183,183,-213,-212,183,183,-304,-177,183,-261,-304,-28,183,183,183,-208,-200,-211,-198,183,183,-11,183,-304,183,183,183,-261,-199,183,183,183,183,183,-204,183,-201,-203,-304,183,183,183,-205,183,-202,-207,183,-206,]),'ENUM':([0,2,3,5,7,8,9,10,18,19,22,24,25,26,29,32,33,36,37,43,44,46,48,49,50,52,55,56,57,58,59,60,62,65,68,69,79,81,85,98,101,103,104,110,111,112,113,114,117,118,121,122,128,141,144,146,147,151,155,165,166,189,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,264,268,286,288,330,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[11,11,-95,-68,-67,-304,-60,-115,-93,-304,-65,11,-66,-97,-116,-29,-96,-52,-64,-98,-62,-94,11,-304,-117,-63,-61,-69,-53,-10,-9,-86,-302,11,-84,-81,-161,11,11,11,11,-82,-85,11,11,-137,-141,-140,11,11,-30,-162,11,11,-83,-70,11,-303,-138,11,11,11,11,11,-35,-36,-71,-72,-76,-195,-77,-73,11,-193,-78,-75,-194,-74,11,-139,11,11,11,11,11,-31,-34,-209,-197,-196,11,-210,-213,-212,11,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'COMMA':([3,4,10,12,13,14,17,18,21,23,26,27,29,31,32,33,35,36,38,39,40,41,42,43,46,47,50,51,53,54,57,63,64,66,67,70,71,74,75,77,78,79,80,84,85,86,87,88,92,93,94,95,96,97,105,106,107,116,121,122,123,124,125,126,127,130,131,137,145,149,150,151,152,153,154,156,157,158,161,162,163,167,168,170,171,172,174,175,176,178,179,181,183,185,186,188,193,194,195,197,198,199,200,201,204,205,206,207,208,209,211,213,214,216,217,225,226,232,238,257,259,261,262,263,265,266,267,271,272,273,274,283,284,285,287,321,322,323,326,328,331,332,333,334,346,350,351,352,353,373,377,378,383,384,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,409,411,412,413,414,415,416,417,418,419,420,421,430,431,432,433,434,435,438,439,441,445,447,451,455,458,461,462,464,466,467,468,469,470,475,476,484,485,486,487,492,493,495,500,502,505,506,511,513,],[-95,-107,-115,-104,-113,-91,-102,-93,-109,-105,-97,-108,-116,-304,-29,-96,-101,-52,-103,-99,-111,-114,-106,-98,-94,-216,-117,-110,-100,-112,-53,-147,-148,-130,-131,-122,-92,119,-124,-28,-159,-161,-27,-89,-157,-87,-118,139,-54,-90,-120,-88,-158,-37,-155,150,-152,-128,-30,-162,-160,-170,203,-304,215,-165,-289,-55,-157,-149,-153,-303,150,150,-129,-132,-127,-142,269,-126,-144,-123,-278,-233,-125,-281,-280,-294,-217,-290,-295,-172,-291,-252,-279,-231,-254,-266,-296,-293,-300,-297,-292,-298,-2,-183,-185,-167,-56,-168,-1,-169,-45,-35,-36,-119,-38,-121,-214,-289,375,-156,-230,-252,-154,-150,-151,-146,-133,-134,379,-301,-299,-255,-258,375,-304,-256,-274,-275,-257,-171,-57,-184,-166,-31,-34,-43,-44,375,-143,-145,-175,-173,-218,-243,-234,-241,-238,-235,-246,-245,-244,375,-249,-248,-250,-247,-251,-239,-240,-236,-242,-237,-282,-183,-182,-269,-287,463,-270,-271,-272,-273,375,465,-186,-192,-188,-190,-32,-33,-39,-42,375,375,375,-215,-174,-259,-253,-268,-267,-191,-187,-189,-50,-51,-41,-40,-176,-232,501,-288,-46,-49,375,-276,-283,-47,-48,-277,375,]),'TYPEDEF':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,66,67,69,71,81,84,85,86,93,95,98,99,103,121,126,141,144,146,147,149,151,156,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,266,267,272,273,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[26,26,-95,-107,-68,-67,26,-60,-115,-104,-113,-91,-102,-93,26,-109,-65,-105,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,26,-94,-216,26,26,-117,-110,-63,-100,-112,-61,-69,-53,-302,-147,-148,-130,-131,-81,-92,26,-89,26,-87,-90,-88,26,26,-82,-30,26,26,-83,-70,26,-149,-303,-132,26,26,-35,-36,-71,-72,-76,-195,-77,-73,26,-193,-78,-75,-194,-74,-150,-151,-133,-134,26,26,-31,-34,-209,-197,-196,26,-210,-213,-212,26,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'RBRACE':([5,56,62,69,105,106,107,111,112,113,114,131,147,150,151,152,153,155,165,166,168,169,170,172,174,175,176,178,179,181,183,185,186,188,193,194,195,197,198,199,200,201,234,235,237,240,241,243,244,245,247,251,254,258,260,261,262,263,265,268,274,278,279,283,284,285,287,323,326,328,331,360,363,364,366,371,372,379,383,384,388,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,446,448,449,450,455,458,461,462,464,477,484,485,486,494,498,499,500,501,502,511,514,517,519,521,],[-68,-69,-302,-81,-155,151,-152,151,-137,-141,-140,-289,-304,-153,-303,151,151,-138,151,151,-278,-304,-233,-281,-280,-294,-217,-290,-295,-172,-291,-252,-279,-231,-254,-266,-296,-293,-300,-297,-292,-298,-72,-76,-195,-77,-73,151,-5,-6,-193,-78,-75,-194,-74,-156,-230,-252,-154,-139,-22,-21,151,-301,-299,-255,-258,-256,-274,-275,-257,-209,-197,-196,-210,-213,-212,151,-175,-173,-218,-243,-234,-241,-238,-235,-246,-245,-244,-249,-248,-250,-247,-251,-239,-240,-236,-242,-237,-282,-269,-270,-271,-272,-273,-208,-200,-211,-198,-174,-259,-253,-268,-267,-199,-176,-232,151,-204,-201,-203,-276,151,-283,-277,-205,-202,-207,-206,]),'ARROW':([131,151,168,172,174,175,178,179,183,186,193,194,195,197,198,199,200,201,257,283,284,326,328,409,413,416,417,418,419,462,464,500,502,511,],[-289,-303,-278,-281,-280,-294,-290,-295,-291,-279,327,-266,-296,-293,-300,-297,-292,-298,-289,-301,-299,-274,-275,-282,-269,-270,-271,-272,-273,-268,-267,-276,-283,-277,]),'SHORT':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,24,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,71,79,81,84,85,86,93,95,98,99,101,103,104,110,111,112,113,114,115,116,117,118,121,122,126,128,141,144,146,147,149,151,154,155,156,157,162,165,166,189,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,264,266,267,268,272,273,286,288,322,330,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[17,17,-95,-107,-68,-67,-304,-60,-115,-104,-113,-91,-102,-93,-304,-109,-65,-105,17,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,17,-94,-216,17,-304,-117,-110,-63,-100,-112,-61,-69,-53,-10,-9,-86,-302,-147,-148,17,-130,-131,-84,-81,-92,-161,17,-89,17,-87,-90,-88,17,17,17,-82,-85,17,17,-137,-141,-140,17,-128,17,17,-30,-162,17,17,17,-83,-70,17,-149,-303,-129,-138,-132,-127,-126,17,17,17,17,17,-35,-36,-71,-72,-76,-195,-77,-73,17,-193,-78,-75,-194,-74,17,-150,-151,-139,-133,-134,17,17,17,17,17,17,-31,-34,-209,-197,-196,17,-210,-213,-212,17,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'RPAREN':([3,4,10,12,13,14,17,18,21,23,26,27,29,31,32,33,35,36,38,39,40,41,42,43,46,47,50,51,53,54,57,63,64,66,67,71,76,77,78,79,80,81,84,86,92,93,95,97,116,121,122,123,124,125,126,127,129,130,131,132,133,137,140,141,149,151,154,156,157,162,168,170,172,174,175,176,178,179,183,185,186,188,193,194,195,197,198,199,200,201,204,205,206,207,208,209,210,211,213,214,216,217,226,227,228,238,259,263,266,267,272,273,283,284,285,287,320,321,322,323,324,326,328,331,332,333,334,335,337,339,340,341,342,343,346,347,350,351,352,353,361,376,386,387,388,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,416,417,418,419,422,425,426,430,431,432,433,434,435,438,439,441,445,447,451,458,461,462,464,466,467,468,469,470,475,476,485,487,488,489,492,493,495,496,500,502,505,506,508,509,511,512,516,518,],[-95,-107,-115,-104,-113,-91,-102,-93,-109,-105,-97,-108,-116,-304,-29,-96,-101,-52,-103,-99,-111,-114,-106,-98,-94,-216,-117,-110,-100,-112,-53,-147,-148,-130,-131,-92,121,-28,-159,-161,-27,-304,-89,-87,-54,-90,-88,-37,-128,-30,-162,-160,-170,-18,-304,-163,216,-165,-289,-17,217,-55,226,-304,-149,-303,-129,-132,-127,-126,-278,-233,-281,-280,-294,-217,-290,-295,-291,-252,-279,-231,-254,-266,-296,-293,-300,-297,-292,-298,-2,-183,-185,-167,-56,-168,-304,-1,-169,-45,-35,-36,-38,352,353,-214,-14,-252,-150,-151,-133,-134,-301,-299,-255,-258,408,409,-304,-256,413,-274,-275,-257,-171,-57,-184,-304,-304,430,-183,431,-24,-23,-166,-164,-31,-34,-43,-44,-13,452,457,458,-218,-243,-234,-241,-238,-235,-246,-245,-244,-249,-248,-250,-247,-251,-239,-240,-236,-242,-237,-282,-304,-183,-182,-269,-287,462,-270,-271,-272,-273,466,469,470,-186,-192,-188,-190,-32,-33,-39,-42,478,482,483,-215,-259,-253,-268,-267,-191,-187,-189,-50,-51,-41,-40,-232,-288,-284,502,-46,-49,507,-304,-276,-283,-47,-48,515,-304,-277,-285,520,-286,]),'WHILE':([5,56,62,69,147,151,234,235,237,240,241,242,245,247,251,254,258,260,360,362,363,364,366,370,371,372,374,440,446,448,449,450,477,478,482,483,494,498,499,510,514,515,517,519,520,521,],[-68,-69,-302,-81,236,-303,-72,-76,-195,-77,-73,236,236,-193,-78,-75,-194,-74,-209,442,-197,-196,-210,236,-213,-212,236,236,-208,-200,-211,-198,-199,236,236,236,-204,-201,-203,236,-205,236,-202,-207,236,-206,]),'MOD':([131,151,168,170,172,174,175,178,179,183,185,186,188,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-233,-281,-280,-294,-290,-295,-291,-252,-279,317,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,317,-234,317,317,-235,317,317,317,317,317,317,317,317,317,317,-236,317,317,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'NOT':([5,10,29,50,56,62,69,77,79,80,82,120,122,134,135,136,142,143,147,148,151,164,169,173,177,180,182,184,187,189,190,191,192,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,258,260,264,270,277,278,280,282,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,463,471,472,474,477,478,479,481,482,483,494,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,182,-162,-304,-28,182,-304,182,182,182,-303,182,-304,-265,-260,182,-264,182,-262,182,-261,-263,182,182,182,182,182,-261,-28,-304,182,182,-72,-76,-195,-77,-73,182,182,-193,-78,-75,182,-194,-74,182,182,182,-11,182,-12,182,182,-221,-219,-226,-223,-227,-229,-224,182,-228,-222,-225,-220,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,-304,-261,182,182,-261,182,-209,-197,-196,182,-210,182,182,182,-213,-212,182,182,-304,-177,182,-261,-304,-28,182,182,182,-208,-200,-211,-198,182,182,-11,182,-304,182,182,182,-261,-199,182,182,182,182,182,-204,182,-201,-203,-304,182,182,182,-205,182,-202,-207,182,-206,]),'UNSIGNED':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,24,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,71,79,81,84,85,86,93,95,98,99,101,103,104,110,111,112,113,114,115,116,117,118,121,122,126,128,141,144,146,147,149,151,154,155,156,157,162,165,166,189,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,264,266,267,268,272,273,286,288,322,330,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[21,21,-95,-107,-68,-67,-304,-60,-115,-104,-113,-91,-102,-93,-304,-109,-65,-105,21,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,21,-94,-216,21,-304,-117,-110,-63,-100,-112,-61,-69,-53,-10,-9,-86,-302,-147,-148,21,-130,-131,-84,-81,-92,-161,21,-89,21,-87,-90,-88,21,21,21,-82,-85,21,21,-137,-141,-140,21,-128,21,21,-30,-162,21,21,21,-83,-70,21,-149,-303,-129,-138,-132,-127,-126,21,21,21,21,21,-35,-36,-71,-72,-76,-195,-77,-73,21,-193,-78,-75,-194,-74,21,-150,-151,-139,-133,-134,21,21,21,21,21,21,-31,-34,-209,-197,-196,21,-210,-213,-212,21,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'FLOAT':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,24,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,71,79,81,84,85,86,93,95,98,99,101,103,104,110,111,112,113,114,115,116,117,118,121,122,126,128,141,144,146,147,149,151,154,155,156,157,162,165,166,189,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,264,266,267,268,272,273,286,288,322,330,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[23,23,-95,-107,-68,-67,-304,-60,-115,-104,-113,-91,-102,-93,-304,-109,-65,-105,23,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,23,-94,-216,23,-304,-117,-110,-63,-100,-112,-61,-69,-53,-10,-9,-86,-302,-147,-148,23,-130,-131,-84,-81,-92,-161,23,-89,23,-87,-90,-88,23,23,23,-82,-85,23,23,-137,-141,-140,23,-128,23,23,-30,-162,23,23,23,-83,-70,23,-149,-303,-129,-138,-132,-127,-126,23,23,23,23,23,-35,-36,-71,-72,-76,-195,-77,-73,23,-193,-78,-75,-194,-74,23,-150,-151,-139,-133,-134,23,23,23,23,23,23,-31,-34,-209,-197,-196,23,-210,-213,-212,23,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'IF':([5,56,62,69,147,151,234,235,237,240,241,242,245,247,251,254,258,260,360,363,364,366,370,371,372,374,440,446,448,449,450,477,478,482,483,494,498,499,510,514,515,517,519,520,521,],[-68,-69,-302,-81,249,-303,-72,-76,-195,-77,-73,249,249,-193,-78,-75,-194,-74,-209,-197,-196,-210,249,-213,-212,249,249,-208,-200,-211,-198,-199,249,249,249,-204,-201,-203,249,-205,249,-202,-207,249,-206,]),'LONG':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,24,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,71,79,81,84,85,86,93,95,98,99,101,103,104,110,111,112,113,114,115,116,117,118,121,122,126,128,141,144,146,147,149,151,154,155,156,157,162,165,166,189,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,264,266,267,268,272,273,286,288,322,330,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[12,12,-95,-107,-68,-67,-304,-60,-115,-104,-113,-91,-102,-93,-304,-109,-65,-105,12,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,12,-94,-216,12,-304,-117,-110,-63,-100,-112,-61,-69,-53,-10,-9,-86,-302,-147,-148,12,-130,-131,-84,-81,-92,-161,12,-89,12,-87,-90,-88,12,12,12,-82,-85,12,12,-137,-141,-140,12,-128,12,12,-30,-162,12,12,12,-83,-70,12,-149,-303,-129,-138,-132,-127,-126,12,12,12,12,12,-35,-36,-71,-72,-76,-195,-77,-73,12,-193,-78,-75,-194,-74,12,-150,-151,-139,-133,-134,12,12,12,12,12,12,-31,-34,-209,-197,-196,12,-210,-213,-212,12,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'SIZEOF':([5,10,29,50,56,62,69,77,79,80,82,120,122,134,135,136,142,143,147,148,151,164,169,173,177,180,182,184,187,189,190,191,192,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,258,260,264,270,277,278,280,282,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,463,471,472,474,477,478,479,481,482,483,494,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,184,-162,-304,-28,184,-304,184,184,184,-303,184,-304,-265,-260,184,-264,184,-262,184,-261,-263,184,184,184,184,184,-261,-28,-304,184,184,-72,-76,-195,-77,-73,184,184,-193,-78,-75,184,-194,-74,184,184,184,-11,184,-12,184,184,-221,-219,-226,-223,-227,-229,-224,184,-228,-222,-225,-220,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,-304,-261,184,184,-261,184,-209,-197,-196,184,-210,184,184,184,-213,-212,184,184,-304,-177,184,-261,-304,-28,184,184,184,-208,-200,-211,-198,184,184,-11,184,-304,184,184,184,-261,-199,184,184,184,184,184,-204,184,-201,-203,-304,184,184,184,-205,184,-202,-207,184,-206,]),'PERIOD':([62,131,151,168,169,172,174,175,178,179,183,186,193,194,195,197,198,199,200,201,257,276,281,283,284,326,328,379,380,382,409,413,416,417,418,419,456,460,462,464,488,489,500,501,502,511,512,518,],[-302,-289,-303,-278,275,-281,-280,-294,-290,-295,-291,-279,325,-266,-296,-293,-300,-297,-292,-298,-289,275,-178,-301,-299,-274,-275,275,-181,-179,-282,-269,-270,-271,-272,-273,-180,275,-268,-267,-284,503,-276,275,-283,-277,-285,-286,]),'BREAK':([5,56,62,69,147,151,234,235,237,240,241,242,245,247,251,254,258,260,360,363,364,366,370,371,372,374,440,446,448,449,450,477,478,482,483,494,498,499,510,514,515,517,519,520,521,],[-68,-69,-302,-81,239,-303,-72,-76,-195,-77,-73,239,239,-193,-78,-75,-194,-74,-209,-197,-196,-210,239,-213,-212,239,239,-208,-200,-211,-198,-199,239,239,239,-204,-201,-203,239,-205,239,-202,-207,239,-206,]),'RESTRICT':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,25,26,27,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,69,71,77,79,81,82,84,85,86,93,95,98,99,103,110,111,112,113,114,115,116,117,118,121,122,126,134,135,141,142,144,146,147,149,151,154,155,156,157,162,165,166,189,210,215,216,217,224,229,230,234,235,237,240,241,245,247,251,254,258,260,264,266,267,268,272,273,286,288,322,330,335,337,338,350,351,360,363,364,365,366,371,372,410,427,428,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[29,29,-95,-107,-68,-67,29,-60,-115,-104,-113,-91,-102,-93,29,-109,-65,-105,-66,-97,-108,-116,29,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,29,-94,-216,29,29,-117,-110,-63,-100,-112,-61,-69,-53,-302,-147,-148,29,-130,-131,-81,-92,29,-161,29,29,-89,29,-87,-90,-88,29,29,-82,29,29,-137,-141,-140,29,-128,29,29,-30,-162,29,29,29,29,29,-83,-70,29,-149,-303,-129,-138,-132,-127,-126,29,29,29,29,29,-35,-36,-71,29,29,-72,-76,-195,-77,-73,29,-193,-78,-75,-194,-74,29,-150,-151,-139,-133,-134,29,29,29,29,29,29,29,-31,-34,-209,-197,-196,29,-210,-213,-212,29,29,29,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,12,13,14,17,18,19,21,22,23,24,25,26,27,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,66,67,68,69,71,77,78,79,80,82,83,84,86,89,92,93,95,97,99,101,104,115,116,119,120,121,122,123,126,131,134,135,136,137,139,142,143,146,147,148,149,151,154,156,157,162,164,168,169,172,173,174,175,177,178,179,180,182,183,184,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,206,208,210,212,214,216,217,218,219,222,224,226,229,230,231,233,234,235,236,237,240,241,242,245,246,247,249,251,252,254,256,257,258,260,264,266,267,269,270,272,273,277,278,280,282,283,284,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,324,326,328,329,333,334,336,338,340,345,350,351,352,353,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,409,410,411,413,416,417,418,419,424,427,428,429,430,431,432,433,434,435,438,439,440,442,443,446,448,449,450,452,453,454,459,460,462,463,464,466,467,468,469,470,471,472,474,475,476,477,478,479,481,482,483,492,493,494,496,498,499,500,501,502,504,505,506,509,510,511,514,515,517,519,520,521,],[30,30,-95,-107,-68,30,-67,-304,-60,-115,-104,-113,-91,-102,-93,-304,-109,-65,-105,30,-66,-97,-108,-116,30,-304,-29,-96,-101,81,-64,-103,-99,-111,-114,-106,-98,-62,89,-94,-216,-304,-117,-110,-63,-100,-112,-61,-69,81,-10,-9,-86,-302,-147,-148,-130,-131,-84,-81,-92,-28,-159,-161,-27,-304,89,-89,-87,89,141,-90,-88,-37,89,30,-85,89,-128,89,189,-30,-162,-160,210,-289,-304,-28,189,141,89,-304,189,-70,189,264,-149,-303,-129,-132,-127,-126,264,-278,-304,-281,-265,-280,-294,-260,-290,-295,286,-264,-291,288,-279,-262,189,-261,-263,286,324,-266,-296,330,-293,-300,-297,-292,-298,264,210,335,337,210,189,-45,-35,-36,189,189,-261,-71,-38,-28,-304,189,264,-72,-76,359,-195,-77,-73,189,189,365,-193,367,-78,369,-75,189,-289,-194,-74,189,-150,-151,89,264,-133,-134,189,-11,264,-12,-301,-299,189,189,-221,-219,-226,-223,-227,-229,-224,189,-228,-222,-225,-220,264,264,264,264,264,264,264,264,189,264,264,264,264,264,264,264,264,264,264,410,189,-274,-275,189,337,335,189,-304,210,-261,-31,-34,-43,-44,189,189,-261,189,-209,-197,-196,189,-210,189,189,189,-213,-212,189,189,-304,-177,264,-282,410,410,-269,-270,-271,-272,-273,-261,-304,-28,189,-186,-192,-188,-190,-32,-33,-39,-42,189,479,189,-208,-200,-211,-198,264,189,-11,264,-304,-268,189,-267,-191,-187,-189,-50,-51,189,189,-261,-41,-40,-199,189,189,189,189,189,-46,-49,-204,189,-201,-203,-276,-304,-283,189,-47,-48,189,189,-277,-205,189,-202,-207,189,-206,]),'TIMES':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,24,25,26,27,29,30,31,33,35,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,58,59,60,62,63,64,66,67,68,69,71,77,78,79,80,82,84,86,89,93,95,99,101,104,115,116,119,120,122,126,131,134,135,136,139,142,143,146,147,148,149,151,154,156,157,162,164,168,169,170,172,173,174,175,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,210,212,218,219,222,224,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,257,258,260,263,264,266,267,269,270,272,273,277,278,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,323,324,326,328,329,331,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,408,409,410,413,416,417,418,419,424,427,428,429,440,443,446,448,449,450,452,453,454,458,459,460,461,462,463,464,471,472,474,477,478,479,481,482,483,494,496,498,499,500,501,502,504,509,510,511,514,515,517,519,520,521,],[31,31,-95,-107,-68,-67,-304,-60,-115,-104,-113,-91,-102,-93,-304,-109,-65,-105,31,-66,-97,-108,-116,31,-304,-96,-101,-64,-103,-99,-111,-114,-106,-98,-62,31,-94,-216,-304,-117,-110,-63,-100,-112,-61,-69,-10,-9,-86,-302,-147,-148,-130,-131,-84,-81,-92,-28,31,-161,-27,-304,-89,-87,31,-90,-88,31,31,-85,31,-128,31,190,-162,31,-289,-304,-28,222,31,-304,190,-70,190,190,-149,-303,-129,-132,-127,-126,190,-278,-304,-233,-281,-265,-280,-294,-260,-290,-295,190,-264,-291,190,-252,-279,-262,302,190,-261,-263,190,-254,-266,-296,-293,-300,-297,-292,-298,190,31,345,190,190,-261,-71,-28,-304,357,190,-72,-76,-195,-77,-73,190,190,-193,-78,-75,190,-289,-194,-74,-252,190,-150,-151,31,190,-133,-134,190,-11,190,-12,-301,-299,-255,190,-258,190,-221,-219,-226,-223,-227,-229,-224,190,-228,-222,-225,-220,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,31,-256,190,-274,-275,190,-257,424,-304,-261,190,190,-261,190,-209,-197,-196,190,-210,190,190,190,-213,-212,190,190,-304,-177,302,-234,302,302,-235,302,302,302,302,302,302,302,302,302,302,-236,302,302,190,-282,31,-269,-270,-271,-272,-273,-261,-304,-28,474,190,190,-208,-200,-211,-198,190,190,-11,-259,190,-304,-253,-268,190,-267,190,190,-261,-199,190,190,190,190,190,-204,190,-201,-203,-276,-304,-283,190,190,190,-277,-205,190,-202,-207,190,-206,]),'XOREQUAL':([131,151,168,172,174,175,178,179,183,185,186,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-281,-280,-294,-290,-295,-291,300,-279,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'DO':([5,56,62,69,147,151,234,235,237,240,241,242,245,247,251,254,258,260,360,363,364,366,370,371,372,374,440,446,448,449,450,477,478,482,483,494,498,499,510,514,515,517,519,520,521,],[-68,-69,-302,-81,242,-303,-72,-76,-195,-77,-73,242,242,-193,-78,-75,-194,-74,-209,-197,-196,-210,242,-213,-212,242,242,-208,-200,-211,-198,-199,242,242,242,-204,-201,-203,242,-205,242,-202,-207,242,-206,]),'MINUS':([5,10,29,50,56,62,69,77,79,80,82,120,122,131,134,135,136,142,143,147,148,151,164,168,169,170,172,173,174,175,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,257,258,260,263,264,270,277,278,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,323,324,326,328,329,331,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,408,409,413,416,417,418,419,424,427,428,429,440,443,446,448,449,450,452,453,454,458,459,460,461,462,463,464,471,472,474,477,478,479,481,482,483,494,496,498,499,500,501,502,504,509,510,511,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,191,-162,-289,-304,-28,191,-304,191,191,191,-303,191,-278,-304,-233,-281,-265,-280,-294,-260,-290,-295,191,-264,-291,191,-252,-279,-262,304,191,-261,-263,191,-254,-266,-296,-293,-300,-297,-292,-298,191,191,191,191,-261,-28,-304,191,191,-72,-76,-195,-77,-73,191,191,-193,-78,-75,191,-289,-194,-74,-252,191,191,191,-11,191,-12,-301,-299,-255,191,-258,191,-221,-219,-226,-223,-227,-229,-224,191,-228,-222,-225,-220,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,-256,191,-274,-275,191,-257,191,-304,-261,191,191,-261,191,-209,-197,-196,191,-210,191,191,191,-213,-212,191,191,-304,-177,304,-234,304,-238,-235,304,304,304,304,304,304,304,304,304,304,-236,304,-237,191,-282,-269,-270,-271,-272,-273,-261,-304,-28,191,191,191,-208,-200,-211,-198,191,191,-11,-259,191,-304,-253,-268,191,-267,191,191,-261,-199,191,191,191,191,191,-204,191,-201,-203,-276,-304,-283,191,191,191,-277,-205,191,-202,-207,191,-206,]),'_COMPLEX':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,24,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,71,79,81,84,85,86,93,95,98,99,101,103,104,110,111,112,113,114,115,116,117,118,121,122,126,128,141,144,146,147,149,151,154,155,156,157,162,165,166,189,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,264,266,267,268,272,273,286,288,322,330,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[4,4,-95,-107,-68,-67,-304,-60,-115,-104,-113,-91,-102,-93,-304,-109,-65,-105,4,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,4,-94,-216,4,-304,-117,-110,-63,-100,-112,-61,-69,-53,-10,-9,-86,-302,-147,-148,4,-130,-131,-84,-81,-92,-161,4,-89,4,-87,-90,-88,4,4,4,-82,-85,4,4,-137,-141,-140,4,-128,4,4,-30,-162,4,4,4,-83,-70,4,-149,-303,-129,-138,-132,-127,-126,4,4,4,4,4,-35,-36,-71,-72,-76,-195,-77,-73,4,-193,-78,-75,-194,-74,4,-150,-151,-139,-133,-134,4,4,4,4,4,4,-31,-34,-209,-197,-196,4,-210,-213,-212,4,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'GT':([131,151,168,170,172,174,175,178,179,183,185,186,188,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-233,-281,-280,-294,-290,-295,-291,-252,-279,308,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-243,-234,-241,-238,-235,308,308,-244,308,308,308,308,308,-239,-240,-236,-242,-237,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'CONDOP':([131,151,168,170,172,174,175,178,179,183,185,186,188,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-233,-281,-280,-294,-290,-295,-291,-252,-279,309,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-243,-234,-241,-238,-235,-246,-245,-244,-249,-248,-250,-247,-251,-239,-240,-236,-242,-237,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'OR':([131,151,168,170,172,174,175,178,179,183,185,186,188,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-233,-281,-280,-294,-290,-295,-291,-252,-279,311,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-243,-234,-241,-238,-235,-246,-245,-244,-249,-248,311,-247,311,-239,-240,-236,-242,-237,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'LAND':([131,151,168,170,172,174,175,178,179,183,185,186,188,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-233,-281,-280,-294,-290,-295,-291,-252,-279,312,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-243,-234,-241,-238,-235,-246,-245,-244,-249,-248,-250,-247,312,-239,-240,-236,-242,-237,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'OFFSETOF':([5,10,29,50,56,62,69,77,79,80,82,120,122,134,135,136,142,143,147,148,151,164,169,173,177,180,182,184,187,189,190,191,192,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,258,260,264,270,277,278,280,282,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,463,471,472,474,477,478,479,481,482,483,494,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,196,-162,-304,-28,196,-304,196,196,196,-303,196,-304,-265,-260,196,-264,196,-262,196,-261,-263,196,196,196,196,196,-261,-28,-304,196,196,-72,-76,-195,-77,-73,196,196,-193,-78,-75,196,-194,-74,196,196,196,-11,196,-12,196,196,-221,-219,-226,-223,-227,-229,-224,196,-228,-222,-225,-220,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,-304,-261,196,196,-261,196,-209,-197,-196,196,-210,196,196,196,-213,-212,196,196,-304,-177,196,-261,-304,-28,196,196,196,-208,-200,-211,-198,196,196,-11,196,-304,196,196,196,-261,-199,196,196,196,196,196,-204,196,-201,-203,-304,196,196,196,-205,196,-202,-207,196,-206,]),'INT_CONST_BIN':([5,10,29,50,56,62,69,77,79,80,82,120,122,134,135,136,142,143,147,148,151,164,169,173,177,180,182,184,187,189,190,191,192,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,258,260,264,270,277,278,280,282,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,463,471,472,474,477,478,479,481,482,483,494,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,197,-162,-304,-28,197,-304,197,197,197,-303,197,-304,-265,-260,197,-264,197,-262,197,-261,-263,197,197,197,197,197,-261,-28,-304,197,197,-72,-76,-195,-77,-73,197,197,-193,-78,-75,197,-194,-74,197,197,197,-11,197,-12,197,197,-221,-219,-226,-223,-227,-229,-224,197,-228,-222,-225,-220,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,-304,-261,197,197,-261,197,-209,-197,-196,197,-210,197,197,197,-213,-212,197,197,-304,-177,197,-261,-304,-28,197,197,197,-208,-200,-211,-198,197,197,-11,197,-304,197,197,197,-261,-199,197,197,197,197,197,-204,197,-201,-203,-304,197,197,197,-205,197,-202,-207,197,-206,]),'PLUSEQUAL':([131,151,168,172,174,175,178,179,183,185,186,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-281,-280,-294,-290,-295,-291,295,-279,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'ELSE':([5,56,151,234,235,240,241,251,254,260,360,363,366,371,372,446,448,449,450,477,494,498,499,514,517,519,521,],[-68,-69,-303,-72,-76,-77,-73,-78,-75,-74,-209,-197,-210,-213,-212,-208,-200,-211,-198,-199,-204,510,-203,-205,-202,-207,-206,]),'INLINE':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,66,67,69,71,81,84,85,86,93,95,98,99,103,121,126,141,144,146,147,149,151,156,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,266,267,272,273,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[43,43,-95,-107,-68,-67,43,-60,-115,-104,-113,-91,-102,-93,43,-109,-65,-105,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,43,-94,-216,43,43,-117,-110,-63,-100,-112,-61,-69,-53,-302,-147,-148,-130,-131,-81,-92,43,-89,43,-87,-90,-88,43,43,-82,-30,43,43,-83,-70,43,-149,-303,-132,43,43,-35,-36,-71,-72,-76,-195,-77,-73,43,-193,-78,-75,-194,-74,-150,-151,-133,-134,43,43,-31,-34,-209,-197,-196,43,-210,-213,-212,43,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'INT_CONST_HEX':([5,10,29,50,56,62,69,77,79,80,82,120,122,134,135,136,142,143,147,148,151,164,169,173,177,180,182,184,187,189,190,191,192,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,258,260,264,270,277,278,280,282,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,463,471,472,474,477,478,479,481,482,483,494,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,200,-162,-304,-28,200,-304,200,200,200,-303,200,-304,-265,-260,200,-264,200,-262,200,-261,-263,200,200,200,200,200,-261,-28,-304,200,200,-72,-76,-195,-77,-73,200,200,-193,-78,-75,200,-194,-74,200,200,200,-11,200,-12,200,200,-221,-219,-226,-223,-227,-229,-224,200,-228,-222,-225,-220,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,-304,-261,200,200,-261,200,-209,-197,-196,200,-210,200,200,200,-213,-212,200,200,-304,-177,200,-261,-304,-28,200,200,200,-208,-200,-211,-198,200,200,-11,200,-304,200,200,200,-261,-199,200,200,200,200,200,-204,200,-201,-203,-304,200,200,200,-205,200,-202,-207,200,-206,]),'COLON':([4,10,12,13,17,21,23,27,29,32,35,36,38,39,40,41,42,47,50,51,53,54,57,63,64,66,67,92,96,97,115,116,121,131,137,145,149,151,154,156,157,162,163,168,170,172,174,175,176,178,179,183,185,186,188,193,194,195,197,198,199,200,201,216,217,226,238,253,257,262,263,266,267,269,272,273,283,284,285,287,323,326,328,331,350,351,352,353,358,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,434,435,438,439,451,458,461,462,464,475,476,485,500,502,511,],[-107,-115,-104,-113,-102,-109,-105,-108,-116,-29,-101,-52,-103,-99,-111,-114,-106,-216,-117,-110,-100,-112,-53,-147,-148,-130,-131,-54,-158,-37,164,-128,-30,-289,-55,-157,-149,-303,-129,-132,-127,-126,270,-278,-233,-281,-280,-294,-217,-290,-295,-291,-252,-279,-231,-254,-266,-296,-293,-300,-297,-292,-298,-35,-36,-38,-214,370,374,-230,-252,-150,-151,164,-133,-134,-301,-299,-255,-258,-256,-274,-275,-257,-31,-34,-43,-44,440,-218,-243,-234,-241,-238,-235,-246,-245,-244,459,-249,-248,-250,-247,-251,-239,-240,-236,-242,-237,-282,-269,-270,-271,-272,-273,-32,-33,-39,-42,-215,-259,-253,-268,-267,-41,-40,-232,-276,-283,-277,]),'STRING_LITERAL':([5,10,29,50,56,62,69,77,79,80,82,120,122,134,135,136,142,143,147,148,151,164,169,173,174,177,180,182,184,187,189,190,191,192,201,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,258,260,264,270,277,278,280,282,284,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,463,471,472,474,477,478,479,481,482,483,494,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,201,-162,-304,-28,201,-304,201,201,201,-303,201,-304,-265,284,-260,201,-264,201,-262,201,-261,-263,201,-298,201,201,201,201,-261,-28,-304,201,201,-72,-76,-195,-77,-73,201,201,-193,-78,-75,201,-194,-74,201,201,201,-11,201,-12,-299,201,201,-221,-219,-226,-223,-227,-229,-224,201,-228,-222,-225,-220,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,-304,-261,201,201,-261,201,-209,-197,-196,201,-210,201,201,201,-213,-212,201,201,-304,-177,201,-261,-304,-28,201,201,201,-208,-200,-211,-198,201,201,-11,201,-304,201,201,201,-261,-199,201,201,201,201,201,-204,201,-201,-203,-304,201,201,201,-205,201,-202,-207,201,-206,]),'NE':([131,151,168,170,172,174,175,178,179,183,185,186,188,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-233,-281,-280,-294,-290,-295,-291,-252,-279,306,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-243,-234,-241,-238,-235,-246,-245,-244,306,306,306,306,306,-239,-240,-236,-242,-237,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'REGISTER':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,66,67,69,71,81,84,85,86,93,95,98,99,103,121,126,141,144,146,147,149,151,156,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,266,267,272,273,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[46,46,-95,-107,-68,-67,46,-60,-115,-104,-113,-91,-102,-93,46,-109,-65,-105,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,46,-94,-216,46,46,-117,-110,-63,-100,-112,-61,-69,-53,-302,-147,-148,-130,-131,-81,-92,46,-89,46,-87,-90,-88,46,46,-82,-30,46,46,-83,-70,46,-149,-303,-132,46,46,-35,-36,-71,-72,-76,-195,-77,-73,46,-193,-78,-75,-194,-74,-150,-151,-133,-134,46,46,-31,-34,-209,-197,-196,46,-210,-213,-212,46,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'WSTRING_LITERAL':([5,10,29,50,56,62,69,77,79,80,82,120,122,134,135,136,142,143,147,148,151,164,169,172,173,177,180,182,184,187,189,190,191,192,198,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,258,260,264,270,277,278,280,282,283,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,463,471,472,474,477,478,479,481,482,483,494,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,198,-162,-304,-28,198,-304,198,198,198,-303,198,-304,283,-265,-260,198,-264,198,-262,198,-261,-263,198,-300,198,198,198,198,-261,-28,-304,198,198,-72,-76,-195,-77,-73,198,198,-193,-78,-75,198,-194,-74,198,198,198,-11,198,-12,-301,198,198,-221,-219,-226,-223,-227,-229,-224,198,-228,-222,-225,-220,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,-304,-261,198,198,-261,198,-209,-197,-196,198,-210,198,198,198,-213,-212,198,198,-304,-177,198,-261,-304,-28,198,198,198,-208,-200,-211,-198,198,198,-11,198,-304,198,198,198,-261,-199,198,198,198,198,198,-204,198,-201,-203,-304,198,198,198,-205,198,-202,-207,198,-206,]),'OREQUAL':([131,151,168,172,174,175,178,179,183,185,186,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-281,-280,-294,-290,-295,-291,294,-279,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'AUTO':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,66,67,69,71,81,84,85,86,93,95,98,99,103,121,126,141,144,146,147,149,151,156,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,266,267,272,273,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[18,18,-95,-107,-68,-67,18,-60,-115,-104,-113,-91,-102,-93,18,-109,-65,-105,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,18,-94,-216,18,18,-117,-110,-63,-100,-112,-61,-69,-53,-302,-147,-148,-130,-131,-81,-92,18,-89,18,-87,-90,-88,18,18,-82,-30,18,18,-83,-70,18,-149,-303,-132,18,18,-35,-36,-71,-72,-76,-195,-77,-73,18,-193,-78,-75,-194,-74,-150,-151,-133,-134,18,18,-31,-34,-209,-197,-196,18,-210,-213,-212,18,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'MINUSMINUS':([5,10,29,50,56,62,69,77,79,80,82,120,122,131,134,135,136,142,143,147,148,151,164,168,169,172,173,174,175,177,178,179,180,182,183,184,186,187,189,190,191,192,193,194,195,197,198,199,200,201,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,257,258,260,264,270,277,278,280,282,283,284,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,326,328,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,409,413,416,417,418,419,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,462,463,464,471,472,474,477,478,479,481,482,483,494,496,498,499,500,501,502,504,509,510,511,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,192,-162,-289,-304,-28,192,-304,192,192,192,-303,192,-278,-304,-281,-265,-280,-294,-260,-290,-295,192,-264,-291,192,-279,-262,192,-261,-263,192,328,-266,-296,-293,-300,-297,-292,-298,192,192,192,192,-261,-28,-304,192,192,-72,-76,-195,-77,-73,192,192,-193,-78,-75,192,-289,-194,-74,192,192,192,-11,192,-12,-301,-299,192,192,-221,-219,-226,-223,-227,-229,-224,192,-228,-222,-225,-220,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,-274,-275,192,192,-304,-261,192,192,-261,192,-209,-197,-196,192,-210,192,192,192,-213,-212,192,192,-304,-177,192,-282,-269,-270,-271,-272,-273,-261,-304,-28,192,192,192,-208,-200,-211,-198,192,192,-11,192,-304,-268,192,-267,192,192,-261,-199,192,192,192,192,192,-204,192,-201,-203,-276,-304,-283,192,192,192,-277,-205,192,-202,-207,192,-206,]),'ELLIPSIS':([215,],[347,]),'LOR':([131,151,168,170,172,174,175,178,179,183,185,186,188,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-233,-281,-280,-294,-290,-295,-291,-252,-279,314,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-243,-234,-241,-238,-235,-246,-245,-244,-249,-248,-250,-247,-251,-239,-240,-236,-242,-237,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'HEX_FLOAT_CONST':([5,10,29,50,56,62,69,77,79,80,82,120,122,134,135,136,142,143,147,148,151,164,169,173,177,180,182,184,187,189,190,191,192,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,258,260,264,270,277,278,280,282,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,463,471,472,474,477,478,479,481,482,483,494,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,179,-162,-304,-28,179,-304,179,179,179,-303,179,-304,-265,-260,179,-264,179,-262,179,-261,-263,179,179,179,179,179,-261,-28,-304,179,179,-72,-76,-195,-77,-73,179,179,-193,-78,-75,179,-194,-74,179,179,179,-11,179,-12,179,179,-221,-219,-226,-223,-227,-229,-224,179,-228,-222,-225,-220,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,-304,-261,179,179,-261,179,-209,-197,-196,179,-210,179,179,179,-213,-212,179,179,-304,-177,179,-261,-304,-28,179,179,179,-208,-200,-211,-198,179,179,-11,179,-304,179,179,179,-261,-199,179,179,179,179,179,-204,179,-201,-203,-304,179,179,179,-205,179,-202,-207,179,-206,]),'SIGNED':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,24,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,71,79,81,84,85,86,93,95,98,99,101,103,104,110,111,112,113,114,115,116,117,118,121,122,126,128,141,144,146,147,149,151,154,155,156,157,162,165,166,189,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,264,266,267,268,272,273,286,288,322,330,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[27,27,-95,-107,-68,-67,-304,-60,-115,-104,-113,-91,-102,-93,-304,-109,-65,-105,27,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,27,-94,-216,27,-304,-117,-110,-63,-100,-112,-61,-69,-53,-10,-9,-86,-302,-147,-148,27,-130,-131,-84,-81,-92,-161,27,-89,27,-87,-90,-88,27,27,27,-82,-85,27,27,-137,-141,-140,27,-128,27,27,-30,-162,27,27,27,-83,-70,27,-149,-303,-129,-138,-132,-127,-126,27,27,27,27,27,-35,-36,-71,-72,-76,-195,-77,-73,27,-193,-78,-75,-194,-74,27,-150,-151,-139,-133,-134,27,27,27,27,27,27,-31,-34,-209,-197,-196,27,-210,-213,-212,27,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'PPPRAGMA':([0,2,5,7,9,22,25,37,44,52,55,56,62,65,69,111,112,113,114,117,118,146,147,151,155,165,166,224,234,235,237,240,241,242,245,247,251,254,258,260,268,360,363,364,366,370,371,372,374,440,446,448,449,450,477,478,482,483,494,498,499,510,514,515,517,519,520,521,],[5,5,-68,-67,-60,-65,-66,-64,-62,-63,-61,-69,-302,5,-81,5,-137,-141,-140,5,5,-70,5,-303,-138,5,5,-71,-72,-76,-195,-77,-73,5,5,-193,-78,-75,-194,-74,-139,-209,-197,-196,-210,5,-213,-212,5,5,-208,-200,-211,-198,-199,5,5,5,-204,-201,-203,5,-205,5,-202,-207,5,-206,]),'MINUSEQUAL':([131,151,168,172,174,175,178,179,183,185,186,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-281,-280,-294,-290,-295,-291,299,-279,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'CONTINUE':([5,56,62,69,147,151,234,235,237,240,241,242,245,247,251,254,258,260,360,363,364,366,370,371,372,374,440,446,448,449,450,477,478,482,483,494,498,499,510,514,515,517,519,520,521,],[-68,-69,-302,-81,248,-303,-72,-76,-195,-77,-73,248,248,-193,-78,-75,-194,-74,-209,-197,-196,-210,248,-213,-212,248,248,-208,-200,-211,-198,-199,248,248,248,-204,-201,-203,248,-205,248,-202,-207,248,-206,]),'LE':([131,151,168,170,172,174,175,178,179,183,185,186,188,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-233,-281,-280,-294,-290,-295,-291,-252,-279,318,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-243,-234,-241,-238,-235,318,318,-244,318,318,318,318,318,-239,-240,-236,-242,-237,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'PPHASH':([0,2,5,7,9,22,25,37,44,52,55,56,69,146,151,224,363,],[7,7,-68,-67,-60,-65,-66,-64,-62,-63,-61,-69,-81,-70,-303,-71,-197,]),'RBRACKET':([10,29,50,79,80,82,122,131,135,136,142,151,168,170,172,174,175,176,178,179,183,185,186,188,193,194,195,197,198,199,200,201,212,220,221,222,223,229,231,238,262,263,283,284,285,287,323,326,328,331,336,338,344,345,348,349,356,357,385,388,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,420,423,424,428,429,436,437,451,458,461,462,464,473,474,485,490,491,500,502,511,513,],[-115,-116,-117,-161,-27,-304,-162,-289,-28,-304,-304,-303,-278,-233,-281,-280,-294,-217,-290,-295,-291,-252,-279,-231,-254,-266,-296,-293,-300,-297,-292,-298,-304,-4,350,351,-3,-28,-304,-214,-230,-252,-301,-299,-255,-258,-256,-274,-275,-257,-304,-304,432,433,434,435,438,439,456,-218,-243,-234,-241,-238,-235,-246,-245,-244,-249,-248,-250,-247,-251,-239,-240,-236,-242,-237,-282,-269,-270,-271,-272,-273,464,467,468,-28,-304,475,476,-215,-259,-253,-268,-267,492,493,-232,505,506,-276,-283,-277,518,]),'CONST':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,25,26,27,29,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,69,71,77,79,81,82,84,85,86,93,95,98,99,103,110,111,112,113,114,115,116,117,118,121,122,126,134,135,141,142,144,146,147,149,151,154,155,156,157,162,165,166,189,210,215,216,217,224,229,230,234,235,237,240,241,245,247,251,254,258,260,264,266,267,268,272,273,286,288,322,330,335,337,338,350,351,360,363,364,365,366,371,372,410,427,428,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[10,10,-95,-107,-68,-67,10,-60,-115,-104,-113,-91,-102,-93,10,-109,-65,-105,-66,-97,-108,-116,10,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,10,-94,-216,10,10,-117,-110,-63,-100,-112,-61,-69,-53,-302,-147,-148,10,-130,-131,-81,-92,10,-161,10,10,-89,10,-87,-90,-88,10,10,-82,10,10,-137,-141,-140,10,-128,10,10,-30,-162,10,10,10,10,10,-83,-70,10,-149,-303,-129,-138,-132,-127,-126,10,10,10,10,10,-35,-36,-71,10,10,-72,-76,-195,-77,-73,10,-193,-78,-75,-194,-74,10,-150,-151,-139,-133,-134,10,10,10,10,10,10,10,-31,-34,-209,-197,-196,10,-210,-213,-212,10,10,10,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'INT_CONST_DEC':([5,10,29,50,56,62,69,77,79,80,82,120,122,134,135,136,142,143,147,148,151,164,169,173,177,180,182,184,187,189,190,191,192,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,258,260,264,270,277,278,280,282,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,463,471,472,474,477,478,479,481,482,483,494,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,178,-162,-304,-28,178,-304,178,178,178,-303,178,-304,-265,-260,178,-264,178,-262,178,-261,-263,178,178,178,178,178,-261,-28,-304,178,178,-72,-76,-195,-77,-73,178,178,-193,-78,-75,178,-194,-74,178,178,178,-11,178,-12,178,178,-221,-219,-226,-223,-227,-229,-224,178,-228,-222,-225,-220,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,-304,-261,178,178,-261,178,-209,-197,-196,178,-210,178,178,178,-213,-212,178,178,-304,-177,178,-261,-304,-28,178,178,178,-208,-200,-211,-198,178,178,-11,178,-304,178,178,178,-261,-199,178,178,178,178,178,-204,178,-201,-203,-304,178,178,178,-205,178,-202,-207,178,-206,]),'UNION':([0,2,3,5,7,8,9,10,18,19,22,24,25,26,29,32,33,36,37,43,44,46,48,49,50,52,55,56,57,58,59,60,62,65,68,69,79,81,85,98,101,103,104,110,111,112,113,114,117,118,121,122,128,141,144,146,147,151,155,165,166,189,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,264,268,286,288,330,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[28,28,-95,-68,-67,-304,-60,-115,-93,-304,-65,28,-66,-97,-116,-29,-96,-52,-64,-98,-62,-94,28,-304,-117,-63,-61,-69,-53,-10,-9,-86,-302,28,-84,-81,-161,28,28,28,28,-82,-85,28,28,-137,-141,-140,28,28,-30,-162,28,28,-83,-70,28,-303,-138,28,28,28,28,28,-35,-36,-71,-72,-76,-195,-77,-73,28,-193,-78,-75,-194,-74,28,-139,28,28,28,28,28,-31,-34,-209,-197,-196,28,-210,-213,-212,28,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'TIMESEQUAL':([131,151,168,172,174,175,178,179,183,185,186,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-281,-280,-294,-290,-295,-291,289,-279,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'LNOT':([5,10,29,50,56,62,69,77,79,80,82,120,122,134,135,136,142,143,147,148,151,164,169,173,177,180,182,184,187,189,190,191,192,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,258,260,264,270,277,278,280,282,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,463,471,472,474,477,478,479,481,482,483,494,496,498,499,501,504,509,510,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,173,-162,-304,-28,173,-304,173,173,173,-303,173,-304,-265,-260,173,-264,173,-262,173,-261,-263,173,173,173,173,173,-261,-28,-304,173,173,-72,-76,-195,-77,-73,173,173,-193,-78,-75,173,-194,-74,173,173,173,-11,173,-12,173,173,-221,-219,-226,-223,-227,-229,-224,173,-228,-222,-225,-220,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-304,-261,173,173,-261,173,-209,-197,-196,173,-210,173,173,173,-213,-212,173,173,-304,-177,173,-261,-304,-28,173,173,173,-208,-200,-211,-198,173,173,-11,173,-304,173,173,173,-261,-199,173,173,173,173,173,-204,173,-201,-203,-304,173,173,173,-205,173,-202,-207,173,-206,]),'PLUSPLUS':([5,10,29,50,56,62,69,77,79,80,82,120,122,131,134,135,136,142,143,147,148,151,164,168,169,172,173,174,175,177,178,179,180,182,183,184,186,187,189,190,191,192,193,194,195,197,198,199,200,201,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,257,258,260,264,270,277,278,280,282,283,284,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,326,328,329,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,409,413,416,417,418,419,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,462,463,464,471,472,474,477,478,479,481,482,483,494,496,498,499,500,501,502,504,509,510,511,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,180,-162,-289,-304,-28,180,-304,180,180,180,-303,180,-278,-304,-281,-265,-280,-294,-260,-290,-295,180,-264,-291,180,-279,-262,180,-261,-263,180,326,-266,-296,-293,-300,-297,-292,-298,180,180,180,180,-261,-28,-304,180,180,-72,-76,-195,-77,-73,180,180,-193,-78,-75,180,-289,-194,-74,180,180,180,-11,180,-12,-301,-299,180,180,-221,-219,-226,-223,-227,-229,-224,180,-228,-222,-225,-220,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,-274,-275,180,180,-304,-261,180,180,-261,180,-209,-197,-196,180,-210,180,180,180,-213,-212,180,180,-304,-177,180,-282,-269,-270,-271,-272,-273,-261,-304,-28,180,180,180,-208,-200,-211,-198,180,180,-11,180,-304,-268,180,-267,180,180,-261,-199,180,180,180,180,180,-204,180,-201,-203,-276,-304,-283,180,180,180,-277,-205,180,-202,-207,180,-206,]),'CHAR':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,24,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,71,79,81,84,85,86,93,95,98,99,101,103,104,110,111,112,113,114,115,116,117,118,121,122,126,128,141,144,146,147,149,151,154,155,156,157,162,165,166,189,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,264,266,267,268,272,273,286,288,322,330,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[35,35,-95,-107,-68,-67,-304,-60,-115,-104,-113,-91,-102,-93,-304,-109,-65,-105,35,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,35,-94,-216,35,-304,-117,-110,-63,-100,-112,-61,-69,-53,-10,-9,-86,-302,-147,-148,35,-130,-131,-84,-81,-92,-161,35,-89,35,-87,-90,-88,35,35,35,-82,-85,35,35,-137,-141,-140,35,-128,35,35,-30,-162,35,35,35,-83,-70,35,-149,-303,-129,-138,-132,-127,-126,35,35,35,35,35,-35,-36,-71,-72,-76,-195,-77,-73,35,-193,-78,-75,-194,-74,35,-150,-151,-139,-133,-134,35,35,35,35,35,35,-31,-34,-209,-197,-196,35,-210,-213,-212,35,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'GOTO':([5,56,62,69,147,151,234,235,237,240,241,242,245,247,251,254,258,260,360,363,364,366,370,371,372,374,440,446,448,449,450,477,478,482,483,494,498,499,510,514,515,517,519,520,521,],[-68,-69,-302,-81,250,-303,-72,-76,-195,-77,-73,250,250,-193,-78,-75,-194,-74,-209,-197,-196,-210,250,-213,-212,250,250,-208,-200,-211,-198,-199,250,250,250,-204,-201,-203,250,-205,250,-202,-207,250,-206,]),'CASE':([5,56,62,69,147,151,234,235,237,240,241,242,245,247,251,254,258,260,360,363,364,366,370,371,372,374,440,446,448,449,450,477,478,482,483,494,498,499,510,514,515,517,519,520,521,],[-68,-69,-302,-81,233,-303,-72,-76,-195,-77,-73,233,233,-193,-78,-75,-194,-74,-209,-197,-196,-210,233,-213,-212,233,233,-208,-200,-211,-198,-199,233,233,233,-204,-201,-203,233,-205,233,-202,-207,233,-206,]),'LSHIFT':([131,151,168,170,172,174,175,178,179,183,185,186,188,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-233,-281,-280,-294,-290,-295,-291,-252,-279,316,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,316,-234,316,-238,-235,316,316,316,316,316,316,316,316,-239,-240,-236,316,-237,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'SEMI':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,20,21,22,23,24,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,84,85,86,87,88,90,91,92,93,94,95,96,97,99,101,104,111,112,113,114,115,116,117,118,121,131,137,145,146,147,149,151,154,155,156,157,158,159,160,161,162,163,165,166,167,168,170,171,172,174,175,176,178,179,181,183,185,186,188,193,194,195,197,198,199,200,201,216,217,224,225,226,232,234,235,237,238,239,240,241,242,244,245,247,248,251,254,255,256,257,258,259,260,262,263,266,267,268,271,272,273,283,284,285,287,323,326,328,331,350,351,352,353,360,361,363,364,365,366,368,370,371,372,373,374,377,378,384,388,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,434,435,438,439,440,443,444,446,448,449,450,451,455,458,461,462,464,475,476,477,478,480,481,482,483,485,494,497,498,499,500,502,507,510,511,514,515,517,519,520,521,],[25,25,-95,-107,-68,-67,-304,-60,-115,-104,-113,-91,-102,-93,-304,69,-109,-65,-105,-304,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,-304,-94,-216,-304,-117,-110,-63,-100,-112,-61,-69,-53,-10,-9,-86,-302,-147,-148,114,-130,-131,-84,-81,-122,-92,-80,-15,-16,-124,-89,-157,-87,-118,-20,-19,-79,-54,-90,-120,-88,-158,-37,-304,-304,-85,114,-137,-141,-140,-304,-128,114,114,-30,-289,-55,-157,-70,-304,-149,-303,-129,-138,-132,-127,-142,-25,268,-26,-126,-144,114,114,-123,-278,-233,-125,-281,-280,-294,-217,-290,-295,-172,-291,-252,-279,-231,-254,-266,-296,-293,-300,-297,-292,-298,-35,-36,-71,-119,-38,-121,-72,-76,-195,-214,360,-77,-73,-304,-13,-304,-193,366,-78,-75,371,372,-289,-194,-14,-74,-230,-252,-150,-151,-139,-146,-133,-134,-301,-299,-255,-258,-256,-274,-275,-257,-31,-34,-43,-44,-209,-13,-197,-196,-304,-210,446,-304,-213,-212,449,-304,-143,-145,-173,-218,-243,-234,-241,-238,-235,-246,-245,-244,-249,-248,-250,-247,-251,-239,-240,-236,-242,-237,-282,-269,-270,-271,-272,-273,-32,-33,-39,-42,-304,-304,481,-208,-200,-211,-198,-215,-174,-259,-253,-268,-267,-41,-40,-199,-304,496,-304,-304,-304,-232,-204,509,-201,-203,-276,-283,514,-304,-277,-205,-304,-202,-207,-304,-206,]),'SWITCH':([5,56,62,69,147,151,234,235,237,240,241,242,245,247,251,254,258,260,360,363,364,366,370,371,372,374,440,446,448,449,450,477,478,482,483,494,498,499,510,514,515,517,519,520,521,],[-68,-69,-302,-81,252,-303,-72,-76,-195,-77,-73,252,252,-193,-78,-75,-194,-74,-209,-197,-196,-210,252,-213,-212,252,252,-208,-200,-211,-198,-199,252,252,252,-204,-201,-203,252,-205,252,-202,-207,252,-206,]),'EQUALS':([32,36,57,75,85,92,94,96,97,105,121,131,137,145,151,168,172,174,175,178,179,183,185,186,193,194,195,197,198,199,200,201,216,217,226,257,263,276,281,283,284,285,287,323,326,328,331,350,351,352,353,380,382,409,413,416,417,418,419,434,435,438,439,456,458,461,462,464,475,476,500,502,511,],[-29,-52,-53,120,-157,-54,143,-158,-37,148,-30,-289,-55,-157,-303,-278,-281,-280,-294,-290,-295,-291,290,-279,-254,-266,-296,-293,-300,-297,-292,-298,-35,-36,-38,-289,-252,381,-178,-301,-299,-255,-258,-256,-274,-275,-257,-31,-34,-43,-44,-181,-179,-282,-269,-270,-271,-272,-273,-32,-33,-39,-42,-180,-259,-253,-268,-267,-41,-40,-276,-283,-277,]),'DEFAULT':([5,56,62,69,147,151,234,235,237,240,241,242,245,247,251,254,258,260,360,363,364,366,370,371,372,374,440,446,448,449,450,477,478,482,483,494,498,499,510,514,515,517,519,520,521,],[-68,-69,-302,-81,253,-303,-72,-76,-195,-77,-73,253,253,-193,-78,-75,-194,-74,-209,-197,-196,-210,253,-213,-212,253,253,-208,-200,-211,-198,-199,253,253,253,-204,-201,-203,253,-205,253,-202,-207,253,-206,]),'VOID':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,24,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,71,79,81,84,85,86,93,95,98,99,101,103,104,110,111,112,113,114,115,116,117,118,121,122,126,128,141,144,146,147,149,151,154,155,156,157,162,165,166,189,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,264,266,267,268,272,273,286,288,322,330,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[39,39,-95,-107,-68,-67,-304,-60,-115,-104,-113,-91,-102,-93,-304,-109,-65,-105,39,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,39,-94,-216,39,-304,-117,-110,-63,-100,-112,-61,-69,-53,-10,-9,-86,-302,-147,-148,39,-130,-131,-84,-81,-92,-161,39,-89,39,-87,-90,-88,39,39,39,-82,-85,39,39,-137,-141,-140,39,-128,39,39,-30,-162,39,39,39,-83,-70,39,-149,-303,-129,-138,-132,-127,-126,39,39,39,39,39,-35,-36,-71,-72,-76,-195,-77,-73,39,-193,-78,-75,-194,-74,39,-150,-151,-139,-133,-134,39,39,39,39,39,39,-31,-34,-209,-197,-196,39,-210,-213,-212,39,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'PLUS':([5,10,29,50,56,62,69,77,79,80,82,120,122,131,134,135,136,142,143,147,148,151,164,168,169,170,172,173,174,175,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,212,218,219,222,229,230,231,233,234,235,237,240,241,242,245,247,251,254,256,257,258,260,263,264,270,277,278,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,323,324,326,328,329,331,336,338,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,408,409,413,416,417,418,419,424,427,428,429,440,443,446,448,449,450,452,453,454,458,459,460,461,462,463,464,471,472,474,477,478,479,481,482,483,494,496,498,499,500,501,502,504,509,510,511,514,515,517,519,520,521,],[-68,-115,-116,-117,-69,-302,-81,-28,-161,-27,-304,187,-162,-289,-304,-28,187,-304,187,187,187,-303,187,-278,-304,-233,-281,-265,-280,-294,-260,-290,-295,187,-264,-291,187,-252,-279,-262,319,187,-261,-263,187,-254,-266,-296,-293,-300,-297,-292,-298,187,187,187,187,-261,-28,-304,187,187,-72,-76,-195,-77,-73,187,187,-193,-78,-75,187,-289,-194,-74,-252,187,187,187,-11,187,-12,-301,-299,-255,187,-258,187,-221,-219,-226,-223,-227,-229,-224,187,-228,-222,-225,-220,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,-256,187,-274,-275,187,-257,187,-304,-261,187,187,-261,187,-209,-197,-196,187,-210,187,187,187,-213,-212,187,187,-304,-177,319,-234,319,-238,-235,319,319,319,319,319,319,319,319,319,319,-236,319,-237,187,-282,-269,-270,-271,-272,-273,-261,-304,-28,187,187,187,-208,-200,-211,-198,187,187,-11,-259,187,-304,-253,-268,187,-267,187,187,-261,-199,187,187,187,187,187,-204,187,-201,-203,-276,-304,-283,187,187,187,-277,-205,187,-202,-207,187,-206,]),'GE':([131,151,168,170,172,174,175,178,179,183,185,186,188,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-233,-281,-280,-294,-290,-295,-291,-252,-279,301,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-243,-234,-241,-238,-235,301,301,-244,301,301,301,301,301,-239,-240,-236,-242,-237,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'XOR':([131,151,168,170,172,174,175,178,179,183,185,186,188,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-233,-281,-280,-294,-290,-295,-291,-252,-279,310,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-243,-234,-241,-238,-235,-246,-245,-244,-249,310,310,-247,310,-239,-240,-236,-242,-237,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'LT':([131,151,168,170,172,174,175,178,179,183,185,186,188,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-233,-281,-280,-294,-290,-295,-291,-252,-279,303,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-243,-234,-241,-238,-235,303,303,-244,303,303,303,303,303,-239,-240,-236,-242,-237,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'LBRACE':([1,5,11,16,28,32,36,48,56,57,62,63,64,66,67,69,85,98,100,102,103,120,121,138,143,144,147,151,169,216,217,234,235,237,240,241,242,245,247,251,254,258,260,277,278,282,350,351,360,363,364,366,370,371,372,374,379,381,408,434,435,440,446,448,449,450,452,453,454,457,458,460,477,478,482,483,494,498,499,501,510,514,515,517,519,520,521,],[-135,-68,62,62,-136,-29,-52,-304,-69,-53,-302,62,62,62,62,-81,-304,-8,62,-7,-82,62,-30,62,62,-83,62,-303,-304,-35,-36,-72,-76,-195,-77,-73,62,62,-193,-78,-75,-194,-74,62,-11,-12,-31,-34,-209,-197,-196,-210,62,-213,-212,62,-304,-177,62,-32,-33,62,-208,-200,-211,-198,62,62,-11,62,62,-304,-199,62,62,62,-204,-201,-203,-304,62,-205,62,-202,-207,62,-206,]),'RETURN':([5,56,62,69,147,151,234,235,237,240,241,242,245,247,251,254,258,260,360,363,364,366,370,371,372,374,440,446,448,449,450,477,478,482,483,494,498,499,510,514,515,517,519,520,521,],[-68,-69,-302,-81,256,-303,-72,-76,-195,-77,-73,256,256,-193,-78,-75,-194,-74,-209,-197,-196,-210,256,-213,-212,256,256,-208,-200,-211,-198,-199,256,256,256,-204,-201,-203,256,-205,256,-202,-207,256,-206,]),'LSHIFTEQUAL':([131,151,168,172,174,175,178,179,183,185,186,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-281,-280,-294,-290,-295,-291,291,-279,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,33,35,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,66,67,68,69,71,77,78,79,80,81,82,83,84,86,89,93,95,99,101,104,108,109,115,116,119,120,122,123,126,134,135,136,139,141,142,143,146,147,148,149,150,151,154,156,157,162,164,169,173,177,180,182,184,187,189,190,191,192,202,203,205,210,212,218,219,222,224,229,230,231,233,234,235,237,240,241,242,245,247,250,251,254,256,258,260,264,266,267,269,270,272,273,275,277,278,280,282,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,325,327,329,336,337,338,340,345,354,355,357,359,360,363,364,365,366,367,369,370,371,372,374,375,379,381,408,424,427,428,429,440,443,446,448,449,450,452,453,454,459,460,463,465,471,472,474,477,478,479,481,482,483,494,496,498,499,501,503,504,509,510,514,515,517,519,520,521,],[32,-135,32,-95,-107,-68,32,-67,-304,-60,-115,63,-104,-113,-91,66,-102,-93,-304,-109,-65,-105,32,-66,-97,-108,-136,-116,32,-304,-96,-101,-64,-103,-99,-111,-114,-106,-98,-62,32,-94,-216,-304,-117,-110,-63,-100,-112,-61,-69,-10,-9,-86,105,-302,-147,-148,-130,-131,-84,-81,-92,-28,-159,-161,-27,131,-304,32,-89,-87,32,-90,-88,32,32,-85,105,105,32,-128,32,131,-162,-160,32,-304,-28,131,32,131,-304,131,-70,257,131,-149,105,-303,-129,-132,-127,-126,131,-304,-265,-260,131,-264,131,-262,131,-261,-263,131,131,131,32,32,131,131,131,-261,-71,-28,-304,131,131,-72,-76,-195,-77,-73,257,257,-193,368,-78,-75,131,-194,-74,131,-150,-151,32,131,-133,-134,131,131,-11,131,-12,131,131,-221,-219,-226,-223,-227,-229,-224,131,-228,-222,-225,-220,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,416,418,131,131,131,-304,32,-261,131,131,-261,131,-209,-197,-196,131,-210,131,131,257,-213,-212,257,131,-304,-177,131,-261,-304,-28,131,257,131,-208,-200,-211,-198,131,131,-11,131,-304,131,131,131,131,-261,-199,257,131,131,257,257,-204,131,-201,-203,-304,131,131,131,257,-205,257,-202,-207,257,-206,]),'EXTERN':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,66,67,69,71,81,84,85,86,93,95,98,99,103,121,126,141,144,146,147,149,151,156,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,266,267,272,273,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[33,33,-95,-107,-68,-67,33,-60,-115,-104,-113,-91,-102,-93,33,-109,-65,-105,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,33,-94,-216,33,33,-117,-110,-63,-100,-112,-61,-69,-53,-302,-147,-148,-130,-131,-81,-92,33,-89,33,-87,-90,-88,33,33,-82,-30,33,33,-83,-70,33,-149,-303,-132,33,33,-35,-36,-71,-72,-76,-195,-77,-73,33,-193,-78,-75,-194,-74,-150,-151,-133,-134,33,33,-31,-34,-209,-197,-196,33,-210,-213,-212,33,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'DIVIDE':([131,151,168,170,172,174,175,178,179,183,185,186,188,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,389,390,391,392,393,394,395,396,398,399,400,401,402,403,404,405,406,407,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-233,-281,-280,-294,-290,-295,-291,-252,-279,305,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,305,-234,305,305,-235,305,305,305,305,305,305,305,305,305,305,-236,305,305,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'__INT128':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,24,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,71,79,81,84,85,86,93,95,98,99,101,103,104,110,111,112,113,114,115,116,117,118,121,122,126,128,141,144,146,147,149,151,154,155,156,157,162,165,166,189,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,264,266,267,268,272,273,286,288,322,330,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[51,51,-95,-107,-68,-67,-304,-60,-115,-104,-113,-91,-102,-93,-304,-109,-65,-105,51,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,51,-94,-216,51,-304,-117,-110,-63,-100,-112,-61,-69,-53,-10,-9,-86,-302,-147,-148,51,-130,-131,-84,-81,-92,-161,51,-89,51,-87,-90,-88,51,51,51,-82,-85,51,51,-137,-141,-140,51,-128,51,51,-30,-162,51,51,51,-83,-70,51,-149,-303,-129,-138,-132,-127,-126,51,51,51,51,51,-35,-36,-71,-72,-76,-195,-77,-73,51,-193,-78,-75,-194,-74,51,-150,-151,-139,-133,-134,51,51,51,51,51,51,-31,-34,-209,-197,-196,51,-210,-213,-212,51,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'ANDEQUAL':([131,151,168,172,174,175,178,179,183,185,186,193,194,195,197,198,199,200,201,257,263,283,284,285,287,323,326,328,331,409,413,416,417,418,419,458,461,462,464,500,502,511,],[-289,-303,-278,-281,-280,-294,-290,-295,-291,297,-279,-254,-266,-296,-293,-300,-297,-292,-298,-289,-252,-301,-299,-255,-258,-256,-274,-275,-257,-282,-269,-270,-271,-272,-273,-259,-253,-268,-267,-276,-283,-277,]),'LBRACKET':([3,4,10,12,13,14,17,18,21,23,26,27,29,31,32,33,35,36,38,39,40,41,42,43,46,47,50,51,53,54,57,62,63,64,66,67,71,77,78,79,80,84,86,92,93,95,97,116,121,122,123,126,131,137,149,151,154,156,157,162,168,169,172,174,175,178,179,183,186,193,194,195,197,198,199,200,201,205,206,208,210,214,216,217,226,257,266,267,272,273,276,281,283,284,322,326,328,333,334,340,350,351,352,353,379,380,382,409,410,411,413,416,417,418,419,430,431,432,433,434,435,438,439,456,460,462,464,466,467,468,469,470,475,476,488,489,492,493,500,501,502,505,506,511,512,518,],[-95,-107,-115,-104,-113,-91,-102,-93,-109,-105,-97,-108,-116,-304,-29,-96,-101,82,-103,-99,-111,-114,-106,-98,-94,-216,-117,-110,-100,-112,82,-302,-147,-148,-130,-131,-92,-28,-159,-161,-27,-89,-87,142,-90,-88,-37,-128,-30,-162,-160,212,-289,142,-149,-303,-129,-132,-127,-126,-278,280,-281,-280,-294,-290,-295,-291,-279,329,-266,-296,-293,-300,-297,-292,-298,212,336,338,212,-45,-35,-36,-38,-289,-150,-151,-133,-134,280,-178,-301,-299,212,-274,-275,338,336,212,-31,-34,-43,-44,280,-181,-179,-282,212,212,-269,-270,-271,-272,-273,-186,-192,-188,-190,-32,-33,-39,-42,-180,280,-268,-267,-191,-187,-189,-50,-51,-41,-40,-284,504,-46,-49,-276,280,-283,-47,-48,-277,-285,-286,]),'INT':([0,2,3,4,5,7,8,9,10,12,13,14,17,18,19,21,22,23,24,25,26,27,29,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,71,79,81,84,85,86,93,95,98,99,101,103,104,110,111,112,113,114,115,116,117,118,121,122,126,128,141,144,146,147,149,151,154,155,156,157,162,165,166,189,210,215,216,217,224,234,235,237,240,241,245,247,251,254,258,260,264,266,267,268,272,273,286,288,322,330,335,337,350,351,360,363,364,365,366,371,372,410,434,435,446,448,449,450,477,494,498,499,514,517,519,521,],[38,38,-95,-107,-68,-67,-304,-60,-115,-104,-113,-91,-102,-93,-304,-109,-65,-105,38,-66,-97,-108,-116,-29,-96,-101,-52,-64,-103,-99,-111,-114,-106,-98,-62,38,-94,-216,38,-304,-117,-110,-63,-100,-112,-61,-69,-53,-10,-9,-86,-302,-147,-148,38,-130,-131,-84,-81,-92,-161,38,-89,38,-87,-90,-88,38,38,38,-82,-85,38,38,-137,-141,-140,38,-128,38,38,-30,-162,38,38,38,-83,-70,38,-149,-303,-129,-138,-132,-127,-126,38,38,38,38,38,-35,-36,-71,-72,-76,-195,-77,-73,38,-193,-78,-75,-194,-74,38,-150,-151,-139,-133,-134,38,38,38,38,38,38,-31,-34,-209,-197,-196,38,-210,-213,-212,38,-32,-33,-208,-200,-211,-198,-199,-204,-201,-203,-205,-202,-207,-206,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'identifier':([81,120,136,141,143,147,148,164,180,184,189,192,202,203,212,218,219,231,233,242,245,256,264,270,275,277,280,286,288,296,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,337,354,355,359,365,367,369,370,374,375,408,429,440,443,452,453,459,463,465,471,472,478,479,481,482,483,496,503,504,509,510,515,520,],[124,168,168,124,168,168,168,168,168,168,168,168,168,332,168,168,168,168,168,168,168,168,168,168,380,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,124,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,488,168,168,168,168,168,168,168,168,512,168,168,168,168,168,]),'abstract_declarator':([126,210,322,410,],[204,339,204,339,]),'labeled_statement':([147,242,245,370,374,440,478,482,483,510,515,520,],[234,234,234,234,234,234,234,234,234,234,234,234,]),'brace_open':([11,16,63,64,66,67,100,120,138,143,147,242,245,277,370,374,408,440,452,453,457,458,478,482,483,510,515,520,],[61,65,108,109,117,118,147,169,147,169,147,147,147,169,147,147,460,147,460,169,460,460,147,147,147,147,147,147,]),'pointer':([0,2,24,30,45,78,89,99,101,115,119,126,139,210,269,322,410,],[6,6,6,6,83,123,83,83,6,83,83,205,83,340,83,411,411,]),'iteration_statement':([147,242,245,370,374,440,478,482,483,510,515,520,],[235,235,235,235,235,235,235,235,235,235,235,235,]),'unified_string_literal':([120,136,143,147,148,164,180,184,189,192,202,212,218,219,231,233,242,245,256,264,270,277,280,286,288,296,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,354,355,359,365,367,369,370,374,375,408,429,440,443,452,453,459,463,471,472,478,479,481,482,483,496,504,509,510,515,520,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'function_specifier':([0,2,8,19,45,48,49,81,85,98,99,126,141,147,210,215,245,335,337,365,410,],[8,8,8,8,84,8,8,8,8,8,84,84,8,8,8,8,8,8,8,8,8,]),'declaration_specifiers':([0,2,48,81,85,98,141,147,210,215,245,335,337,365,410,],[45,45,99,126,99,99,126,99,126,126,99,126,126,99,126,]),'direct_abstract_declarator':([126,205,210,322,340,410,411,],[206,334,206,206,334,206,334,]),'external_declaration':([0,2,],[9,55,]),'struct_declarator_list':([115,],[161,]),'struct_or_union_specifier':([0,2,24,48,65,81,85,98,101,110,111,117,118,128,141,147,165,166,189,210,215,245,264,286,288,330,335,337,365,410,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'translation_unit_or_empty':([0,],[15,]),'struct_or_union':([0,2,24,48,65,81,85,98,101,110,111,117,118,128,141,147,165,166,189,210,215,245,264,286,288,330,335,337,365,410,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'struct_declaration':([65,111,117,118,165,166,],[112,155,112,112,155,155,]),'direct_typeid_noparen_declarator':([126,205,],[208,333,]),'argument_expression_list':([324,],[415,]),'typeid_noparen_declarator':([126,],[209,]),'designation_opt':([169,379,460,501,],[277,453,277,453,]),'id_init_declarator_list_opt':([24,101,],[72,72,]),'assignment_expression':([120,136,143,147,189,212,218,219,231,242,245,256,264,277,286,288,296,309,324,329,336,354,355,359,365,367,369,370,374,375,429,440,443,453,463,471,472,478,479,481,482,483,496,504,509,510,515,520,],[181,220,181,238,238,220,348,349,220,238,238,238,238,181,238,238,388,238,414,238,220,436,437,238,238,238,238,238,238,451,220,238,238,181,487,490,491,238,238,238,238,238,238,238,238,238,238,238,]),'parameter_declaration':([81,141,210,215,335,337,410,],[130,130,130,346,130,130,130,]),'assignment_expression_opt':([136,212,231,336,429,],[221,344,356,423,473,]),'initializer':([120,143,277,453,],[171,232,383,484,]),'brace_close':([106,111,152,153,165,166,243,279,379,486,501,],[149,156,266,267,272,273,363,384,455,500,511,]),'unified_wstring_literal':([120,136,143,147,148,164,180,184,189,192,202,212,218,219,231,233,242,245,256,264,270,277,280,286,288,296,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,354,355,359,365,367,369,370,374,375,408,429,440,443,452,453,459,463,471,472,478,479,481,482,483,496,504,509,510,515,520,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'binary_expression':([120,136,143,147,148,164,189,212,218,219,231,233,242,245,256,264,270,277,280,286,288,296,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,354,355,359,365,367,369,370,374,375,429,440,443,453,459,463,471,472,478,479,481,482,483,496,504,509,510,515,520,],[188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,389,390,391,392,393,394,395,396,188,398,399,400,401,402,403,404,405,406,407,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,]),'type_qualifier_list':([31,65,82,111,117,118,134,142,165,166,189,230,264,286,288,330,338,427,],[77,110,135,110,110,110,77,229,110,110,110,77,110,110,110,110,428,77,]),'jump_statement':([147,242,245,370,374,440,478,482,483,510,515,520,],[240,240,240,240,240,240,240,240,240,240,240,240,]),'expression_statement':([147,242,245,370,374,440,478,482,483,510,515,520,],[241,241,241,241,241,241,241,241,241,241,241,241,]),'init_declarator':([45,99,119,139,],[87,87,167,225,]),'designator_list':([169,379,460,501,],[276,276,276,276,]),'block_item_list_opt':([147,],[243,]),'empty':([0,8,19,24,31,45,48,49,81,82,85,99,101,115,126,134,136,141,142,147,169,210,212,230,231,242,245,322,335,336,337,338,365,370,374,379,410,427,429,440,443,460,478,481,482,483,496,501,509,510,515,520,],[34,59,59,73,80,90,102,59,132,80,102,90,73,159,211,80,223,132,80,244,278,343,223,80,223,361,361,211,343,223,132,80,361,361,361,454,343,80,223,361,361,454,361,361,361,361,361,454,361,361,361,361,]),'init_declarator_list_opt':([45,99,],[91,91,]),'direct_id_declarator':([0,2,6,24,30,45,83,89,99,101,115,119,126,139,205,210,269,340,],[36,36,57,36,36,36,57,36,36,36,36,36,36,36,57,36,36,57,]),'constant_expression':([148,164,233,270,280,],[261,271,358,378,385,]),'unary_expression':([120,136,143,147,148,164,180,184,189,192,202,212,218,219,231,233,242,245,256,264,270,277,280,286,288,296,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,354,355,359,365,367,369,370,374,375,408,429,440,443,452,453,459,463,471,472,478,479,481,482,483,496,504,509,510,515,520,],[185,185,185,185,263,263,285,287,185,323,263,185,185,185,185,263,185,185,185,185,263,185,263,185,185,185,263,263,263,263,263,263,263,263,185,263,263,263,263,263,263,263,263,263,263,185,185,185,185,185,185,185,185,185,185,185,185,263,185,185,185,263,185,263,185,185,185,185,185,185,185,185,185,185,185,185,185,185,]),'pp_directive':([0,2,],[37,37,]),'offsetof_member_designator':([465,],[489,]),'parameter_type_list':([81,141,210,335,337,410,],[129,227,342,342,425,342,]),'type_specifier_no_typeid':([0,2,24,45,48,65,81,85,98,99,101,110,111,115,117,118,126,128,141,147,165,166,189,210,215,245,264,286,288,322,330,335,337,365,410,],[41,41,41,93,41,41,41,41,41,93,41,41,41,162,41,41,93,41,41,41,41,41,41,41,41,41,41,41,41,162,41,41,41,41,41,]),'abstract_declarator_opt':([126,322,],[213,412,]),'function_definition':([0,2,],[44,44,]),'typeid_declarator':([45,89,99,115,119,139,269,],[96,140,96,96,96,96,96,]),'declaration':([0,2,48,85,98,147,245,365,],[52,52,103,103,144,247,247,443,]),'designator':([169,276,379,460,501,],[281,382,281,281,281,]),'enum_specifier':([0,2,24,48,65,81,85,98,101,110,111,117,118,128,141,147,165,166,189,210,215,245,264,286,288,330,335,337,365,410,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'conditional_expression':([120,136,143,147,148,164,189,212,218,219,231,233,242,245,256,264,270,277,280,286,288,296,309,324,329,336,354,355,359,365,367,369,370,374,375,429,440,443,453,459,463,471,472,478,479,481,482,483,496,504,509,510,515,520,],[176,176,176,176,262,262,176,176,176,176,176,262,176,176,176,176,262,176,262,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,485,176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'translation_unit':([0,],[2,]),'struct_declaration_list':([65,117,118,],[111,165,166,]),'cast_expression':([120,136,143,147,148,164,189,202,212,218,219,231,233,242,245,256,264,270,277,280,286,288,296,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,354,355,359,365,367,369,370,374,375,408,429,440,443,452,453,459,463,471,472,478,479,481,482,483,496,504,509,510,515,520,],[170,170,170,170,170,170,170,331,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,461,170,170,170,461,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'id_init_declarator':([24,101,],[70,70,]),'declaration_list':([48,85,],[98,98,]),'enumerator':([61,108,109,150,],[107,107,107,265,]),'initializer_list_opt':([169,],[279,]),'parameter_list':([81,141,210,335,337,410,],[127,127,127,127,127,127,]),'type_specifier':([0,2,24,48,65,81,85,98,101,110,111,117,118,128,141,147,165,166,189,210,215,245,264,286,288,330,335,337,365,410,],[14,14,71,14,116,14,14,14,71,154,116,116,116,71,14,14,116,116,116,14,14,14,116,116,116,116,14,14,14,14,]),'block_item':([147,245,],[237,364,]),'declaration_list_opt':([48,85,],[100,138,]),'type_qualifier':([0,2,8,19,31,45,48,49,65,77,81,82,85,98,99,110,111,115,117,118,126,134,135,141,142,147,165,166,189,210,215,229,230,245,264,286,288,322,330,335,337,338,365,410,427,428,],[19,19,19,19,79,86,19,19,79,122,19,79,19,19,86,122,79,157,79,79,86,79,122,19,79,19,79,79,79,19,19,122,79,19,79,79,79,157,79,19,19,79,19,19,79,122,]),'id_declarator':([0,2,24,30,45,89,99,101,115,119,126,139,210,269,],[48,48,75,76,85,76,145,75,145,145,207,145,76,145,]),'pppragma_directive':([0,2,65,111,117,118,147,165,166,242,245,370,374,440,478,482,483,510,515,520,],[22,22,113,113,113,113,251,113,113,251,251,251,251,251,251,251,251,251,251,251,]),'declaration_specifiers_no_type':([0,2,8,19,48,49,81,85,98,141,147,210,215,245,335,337,365,410,],[24,24,58,58,101,58,128,101,101,128,101,128,128,101,128,128,101,128,]),'assignment_operator':([185,],[296,]),'unary_operator':([120,136,143,147,148,164,180,184,189,192,202,212,218,219,231,233,242,245,256,264,270,277,280,286,288,296,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,354,355,359,365,367,369,370,374,375,408,429,440,443,452,453,459,463,471,472,478,479,481,482,483,496,504,509,510,515,520,],[202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,]),'selection_statement':([147,242,245,370,374,440,478,482,483,510,515,520,],[254,254,254,254,254,254,254,254,254,254,254,254,]),'specifier_qualifier_list':([65,111,117,118,165,166,189,264,286,288,330,],[115,115,115,115,115,115,322,322,322,322,322,]),'init_declarator_list':([45,99,],[88,88,]),'identifier_list':([81,141,337,],[125,125,125,]),'struct_declarator':([115,269,],[158,377,]),'expression_opt':([147,242,245,365,370,374,440,443,478,481,482,483,496,509,510,515,520,],[255,255,255,444,255,255,255,480,255,497,255,255,508,516,255,255,255,]),'parameter_type_list_opt':([210,335,410,],[341,422,341,]),'direct_typeid_declarator':([45,83,89,99,115,119,139,269,],[92,137,92,92,92,92,92,92,]),'type_qualifier_list_opt':([31,82,134,142,230,338,427,],[78,136,218,231,355,429,471,]),'postfix_expression':([120,136,143,147,148,164,180,184,189,192,202,212,218,219,231,233,242,245,256,264,270,277,280,286,288,296,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,354,355,359,365,367,369,370,374,375,408,429,440,443,452,453,459,463,471,472,478,479,481,482,483,496,504,509,510,515,520,],[193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,]),'declaration_specifiers_no_type_opt':([8,19,49,],[60,68,104,]),'primary_expression':([120,136,143,147,148,164,180,184,189,192,202,212,218,219,231,233,242,245,256,264,270,277,280,286,288,296,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,354,355,359,365,367,369,370,374,375,408,429,440,443,452,453,459,463,471,472,478,479,481,482,483,496,504,509,510,515,520,],[194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,]),'expression':([147,189,242,245,256,264,286,288,309,329,359,365,367,369,370,374,440,443,478,479,481,482,483,496,504,509,510,515,520,],[259,321,259,259,373,321,321,321,397,420,441,259,445,447,259,259,259,259,259,495,259,259,259,259,513,259,259,259,259,]),'id_init_declarator_list':([24,101,],[74,74,]),'designation':([169,379,460,501,],[282,282,282,282,]),'typedef_name':([0,2,24,48,65,81,85,98,101,110,111,117,118,128,141,147,165,166,189,210,215,245,264,286,288,330,335,337,365,410,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'initializer_list':([169,460,],[274,486,]),'declarator':([45,99,115,119,139,269,],[94,94,163,94,94,163,]),'block_item_list':([147,],[245,]),'decl_body':([0,2,48,85,98,147,245,365,],[20,20,20,20,20,20,20,20,]),'storage_class_specifier':([0,2,8,19,45,48,49,81,85,98,99,126,141,147,210,215,245,335,337,365,410,],[49,49,49,49,95,49,49,49,49,49,95,95,49,49,49,49,49,49,49,49,49,]),'enumerator_list':([61,108,109,],[106,152,153,]),'constant':([120,136,143,147,148,164,180,184,189,192,202,212,218,219,231,233,242,245,256,264,270,277,280,286,288,296,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,329,336,354,355,359,365,367,369,370,374,375,408,429,440,443,452,453,459,463,471,472,478,479,481,482,483,496,504,509,510,515,520,],[186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,]),'compound_statement':([100,138,147,242,245,370,374,440,478,482,483,510,515,520,],[146,224,260,260,260,260,260,260,260,260,260,260,260,260,]),'statement':([147,242,245,370,374,440,478,482,483,510,515,520,],[258,362,258,448,450,477,494,498,499,517,519,521,]),'identifier_list_opt':([81,141,337,],[133,228,426,]),'type_name':([189,264,286,288,330,],[320,376,386,387,421,]),'struct_declarator_list_opt':([115,],[160,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
