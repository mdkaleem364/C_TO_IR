
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'CONDOP':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,295,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-241,-244,-248,-242,-250,-246,-237,-238,-234,-236,-243,-239,-235,-245,-240,-247,-249,-251,-267,-268,-253,-259,-276,-283,-277,]),'FOR':([14,58,59,83,122,195,200,201,203,208,210,212,214,215,219,221,223,224,333,335,337,338,339,340,346,347,426,427,429,433,435,470,472,473,474,492,494,495,508,514,516,517,519,520,521,],[-68,-81,-69,-302,199,-303,-78,-72,-194,-74,-77,-193,-76,199,-73,-195,-75,199,-212,199,199,-209,-213,-210,-197,-196,-211,-198,-200,-208,199,199,199,199,-199,-203,-204,-201,199,199,-205,-202,-207,199,-206,]),'STRING_LITERAL':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,145,146,147,150,154,156,157,159,161,164,169,174,175,177,179,180,182,190,191,192,195,196,200,201,202,203,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,274,275,277,278,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,506,508,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,164,164,-304,-162,164,-28,-304,164,-304,-263,-265,164,278,164,-298,-261,-262,164,164,-260,-264,164,-28,-304,164,-303,164,-78,-72,164,-194,-74,-77,-193,-76,164,-73,-195,-75,164,164,164,164,164,164,-261,-11,164,-12,164,164,164,164,-299,-225,-229,-224,-226,-220,-221,-227,-223,-222,164,-228,-219,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-261,164,-212,164,164,164,-209,-213,-210,164,164,-197,-196,164,164,-304,164,-261,-177,-304,164,164,-211,-198,-200,-208,164,-28,-304,164,-261,-11,164,164,-304,164,164,164,164,164,164,164,-199,164,164,-261,164,-203,-204,-201,-304,164,164,164,164,-205,-202,-207,164,-206,]),'LT':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,296,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-241,-244,296,-242,296,296,-237,-238,-234,-236,-243,-239,-235,296,-240,296,296,296,-267,-268,-253,-259,-276,-283,-277,]),'INT':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,68,71,77,81,82,83,85,86,87,88,94,95,96,97,99,100,101,102,103,112,119,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,161,186,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[24,-304,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,24,-304,-98,24,24,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,24,-109,-99,-304,-102,-52,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,24,-89,-61,-302,-148,-147,-53,-161,24,24,-82,24,24,-131,-130,-86,24,24,-162,-30,24,-70,-83,-141,24,24,-128,-137,24,-140,24,24,24,24,24,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,24,-129,-127,-126,-132,-138,24,24,-36,24,24,-35,24,24,24,24,24,-151,-150,24,-212,-209,-213,-210,-197,-196,-139,-134,-133,24,24,-34,-31,24,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'INT_CONST_OCT':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,145,146,147,150,154,156,157,161,169,174,175,177,179,180,182,190,191,192,195,196,200,201,202,203,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,274,275,277,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,506,508,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,153,153,-304,-162,153,-28,-304,153,-304,-263,-265,153,153,-261,-262,153,153,-260,-264,153,-28,-304,153,-303,153,-78,-72,153,-194,-74,-77,-193,-76,153,-73,-195,-75,153,153,153,153,153,153,-261,-11,153,-12,153,153,153,153,-225,-229,-224,-226,-220,-221,-227,-223,-222,153,-228,-219,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,-261,153,-212,153,153,153,-209,-213,-210,153,153,-197,-196,153,153,-304,153,-261,-177,-304,153,153,-211,-198,-200,-208,153,-28,-304,153,-261,-11,153,153,-304,153,153,153,153,153,153,153,-199,153,153,-261,153,-203,-204,-201,-304,153,153,153,153,-205,-202,-207,153,-206,]),'STRUCT':([0,2,3,7,11,12,13,14,17,18,19,20,22,23,25,27,28,29,30,31,37,42,48,50,51,52,55,56,57,58,59,66,77,82,83,87,88,94,96,97,99,102,103,112,119,121,122,123,125,126,127,130,131,132,133,134,137,161,186,195,200,201,203,208,210,212,214,219,221,223,224,237,238,239,240,248,252,254,277,294,316,319,332,333,338,339,340,346,347,353,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[8,-304,-65,-95,-117,-64,-62,-68,-67,8,-304,-98,8,-66,-116,-94,-96,-93,-29,-63,-60,8,-304,-52,-115,-97,-10,-9,-85,-81,-69,-84,8,-61,-302,-53,-161,8,-82,8,8,-86,8,8,-162,-30,8,-70,-83,-141,8,-137,8,-140,8,8,8,8,-71,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,8,-138,8,8,-36,8,8,-35,8,8,8,8,8,-212,-209,-213,-210,-197,-196,-139,8,8,-34,-31,8,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'LONG':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,68,71,77,81,82,83,85,86,87,88,94,95,96,97,99,100,101,102,103,112,119,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,161,186,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[9,-304,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,9,-304,-98,9,9,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,9,-109,-99,-304,-102,-52,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,9,-89,-61,-302,-148,-147,-53,-161,9,9,-82,9,9,-131,-130,-86,9,9,-162,-30,9,-70,-83,-141,9,9,-128,-137,9,-140,9,9,9,9,9,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,9,-129,-127,-126,-132,-138,9,9,-36,9,9,-35,9,9,9,9,9,-151,-150,9,-212,-209,-213,-210,-197,-196,-139,-134,-133,9,9,-34,-31,9,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'ELSE':([14,59,195,200,201,208,210,214,219,223,333,338,339,340,346,426,427,429,433,474,492,494,495,516,517,519,521,],[-68,-69,-303,-78,-72,-74,-77,-76,-73,-75,-212,-209,-213,-210,-197,-211,-198,-200,-208,-199,-203,-204,508,-205,-202,-207,-206,]),'MINUS':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,139,145,146,147,149,150,151,152,153,154,155,156,157,159,161,162,163,164,165,166,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,190,191,192,195,196,200,201,202,203,204,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,272,273,274,275,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,383,384,385,386,389,395,396,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,424,426,427,429,433,435,438,439,440,443,453,454,456,457,458,460,461,463,464,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,501,502,503,506,508,511,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,154,154,-304,-162,154,-289,-28,-304,154,-279,-304,-254,-233,-291,-263,-300,-265,154,-280,154,-278,-266,-298,-297,-252,303,-261,-281,-295,-294,-262,154,-292,154,-296,-260,-264,-293,154,-290,-28,-304,154,-303,154,-78,-72,154,-194,-289,-74,-77,-193,-76,154,-73,-195,-75,154,154,154,154,154,154,-261,-11,154,-12,154,-275,-274,154,154,-256,154,-299,-225,-229,-224,-226,-220,-221,-227,-223,-222,154,-228,-219,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-301,-258,154,-257,-252,154,-255,154,154,-261,154,-212,154,154,154,-209,-213,-210,154,154,-197,-196,154,154,-304,154,-261,-177,-304,-273,-272,-271,-270,-269,-282,154,303,303,303,303,303,303,-237,-238,-234,-236,303,303,-235,303,303,303,303,303,154,-211,-198,-200,-208,154,-28,-304,154,-261,-11,154,-267,-268,154,-253,-304,154,-259,154,154,154,154,154,154,-199,154,154,-261,154,-203,-204,-201,-304,-276,-283,154,154,154,-277,154,-205,-202,-207,154,-206,]),'OREQUAL':([139,149,151,153,155,159,162,163,164,165,166,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,456,457,460,464,501,502,511,],[-289,-279,-254,-291,-300,-280,-278,-266,-298,-297,283,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-267,-268,-253,-259,-276,-283,-277,]),'PPPRAGMA':([0,3,12,13,14,17,22,23,31,37,58,59,82,83,99,122,123,126,130,131,132,133,134,186,195,200,201,203,208,210,212,214,215,219,221,223,224,237,238,239,333,335,337,338,339,340,346,347,353,426,427,429,433,435,470,472,473,474,492,494,495,508,514,516,517,519,520,521,],[14,-65,-64,-62,-68,-67,14,-66,-63,-60,-81,-69,-61,-302,14,14,-70,-141,-137,14,-140,14,14,-71,-303,-78,-72,-194,-74,-77,-193,-76,14,-73,-195,-75,14,-138,14,14,-212,14,14,-209,-213,-210,-197,-196,-139,-211,-198,-200,-208,14,14,14,14,-199,-203,-204,-201,14,14,-205,-202,-207,14,-206,]),'COLON':([4,6,9,10,11,16,24,25,30,32,34,35,36,39,40,43,45,49,50,51,53,54,74,75,80,85,86,87,100,101,108,121,124,128,129,139,149,151,152,153,155,159,160,162,163,164,165,166,168,170,171,173,176,178,181,183,185,194,195,204,206,217,227,228,230,233,236,240,254,272,273,276,278,314,315,317,318,320,321,322,329,330,331,349,350,354,355,374,375,383,384,385,386,389,395,397,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,422,423,432,450,451,456,457,460,464,466,467,489,501,502,511,],[-105,-114,-104,-110,-117,-111,-103,-116,-29,-107,-101,-106,-100,-112,-216,-109,-99,-102,-52,-115,-108,-113,-158,-37,-54,-148,-147,-53,-131,-130,-55,-30,-157,232,-128,-289,-279,-254,-233,-291,-300,-280,-217,-278,-266,-298,-297,-252,-231,-281,-295,-294,-292,-296,-293,-290,-38,-149,-303,335,337,-214,-129,-127,-126,352,-132,-36,-35,-275,-274,-256,-299,-301,-258,-257,-252,-255,-44,-43,-230,-151,-150,435,232,-134,-133,-34,-31,-273,-272,-271,-270,-269,-282,-218,463,-241,-244,-248,-242,-250,-246,-237,-238,-234,-236,-243,-239,-235,-245,-240,-247,-249,-251,-42,-39,-215,-33,-32,-267,-268,-253,-259,-41,-40,-232,-276,-283,-277,]),'$end':([0,1,3,12,13,14,17,22,23,31,37,44,58,59,82,123,186,195,346,],[-304,0,-65,-64,-62,-68,-67,-58,-66,-63,-60,-59,-81,-69,-61,-70,-71,-303,-197,]),'PPHASH':([0,3,12,13,14,17,22,23,31,37,58,59,82,123,186,195,346,],[17,-65,-64,-62,-68,-67,17,-66,-63,-60,-81,-69,-61,-70,-71,-303,-197,]),'GE':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,306,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-241,-244,306,-242,306,306,-237,-238,-234,-236,-243,-239,-235,306,-240,306,306,306,-267,-268,-253,-259,-276,-283,-277,]),'MOD':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,305,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,305,305,305,305,305,305,305,305,-234,-236,305,305,-235,305,305,305,305,305,-267,-268,-253,-259,-276,-283,-277,]),'ARROW':([139,149,151,153,155,159,162,163,164,165,170,171,173,176,178,181,183,195,204,272,273,278,314,383,384,385,386,389,395,456,457,501,502,511,],[-289,-279,270,-291,-300,-280,-278,-266,-298,-297,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-299,-301,-273,-272,-271,-270,-269,-282,-267,-268,-276,-283,-277,]),'RETURN':([14,58,59,83,122,195,200,201,203,208,210,212,214,215,219,221,223,224,333,335,337,338,339,340,346,347,426,427,429,433,435,470,472,473,474,492,494,495,508,514,516,517,519,520,521,],[-68,-81,-69,-302,202,-303,-78,-72,-194,-74,-77,-193,-76,202,-73,-195,-75,202,-212,202,202,-209,-213,-210,-197,-196,-211,-198,-200,-208,202,202,202,202,-199,-203,-204,-201,202,202,-205,-202,-207,202,-206,]),'DIVIDE':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,308,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,308,308,308,308,308,308,308,308,-234,-236,308,308,-235,308,308,308,308,308,-267,-268,-253,-259,-276,-283,-277,]),'LNOT':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,145,146,147,150,154,156,157,161,169,174,175,177,179,180,182,190,191,192,195,196,200,201,202,203,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,274,275,277,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,506,508,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,156,156,-304,-162,156,-28,-304,156,-304,-263,-265,156,156,-261,-262,156,156,-260,-264,156,-28,-304,156,-303,156,-78,-72,156,-194,-74,-77,-193,-76,156,-73,-195,-75,156,156,156,156,156,156,-261,-11,156,-12,156,156,156,156,-225,-229,-224,-226,-220,-221,-227,-223,-222,156,-228,-219,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-261,156,-212,156,156,156,-209,-213,-210,156,156,-197,-196,156,156,-304,156,-261,-177,-304,156,156,-211,-198,-200,-208,156,-28,-304,156,-261,-11,156,156,-304,156,156,156,156,156,156,156,-199,156,156,-261,156,-203,-204,-201,-304,156,156,156,156,-205,-202,-207,156,-206,]),'FLOAT_CONST':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,145,146,147,150,154,156,157,161,169,174,175,177,179,180,182,190,191,192,195,196,200,201,202,203,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,274,275,277,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,506,508,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,173,173,-304,-162,173,-28,-304,173,-304,-263,-265,173,173,-261,-262,173,173,-260,-264,173,-28,-304,173,-303,173,-78,-72,173,-194,-74,-77,-193,-76,173,-73,-195,-75,173,173,173,173,173,173,-261,-11,173,-12,173,173,173,173,-225,-229,-224,-226,-220,-221,-227,-223,-222,173,-228,-219,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-261,173,-212,173,173,173,-209,-213,-210,173,173,-197,-196,173,173,-304,173,-261,-177,-304,173,173,-211,-198,-200,-208,173,-28,-304,173,-261,-11,173,173,-304,173,173,173,173,173,173,173,-199,173,173,-261,173,-203,-204,-201,-304,173,173,173,173,-205,-202,-207,173,-206,]),'LSHIFT':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,310,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,310,310,310,310,310,310,-237,-238,-234,-236,310,-239,-235,310,-240,310,310,310,-267,-268,-253,-259,-276,-283,-277,]),'HEX_FLOAT_CONST':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,145,146,147,150,154,156,157,161,169,174,175,177,179,180,182,190,191,192,195,196,200,201,202,203,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,274,275,277,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,506,508,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,171,171,-304,-162,171,-28,-304,171,-304,-263,-265,171,171,-261,-262,171,171,-260,-264,171,-28,-304,171,-303,171,-78,-72,171,-194,-74,-77,-193,-76,171,-73,-195,-75,171,171,171,171,171,171,-261,-11,171,-12,171,171,171,171,-225,-229,-224,-226,-220,-221,-227,-223,-222,171,-228,-219,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,-261,171,-212,171,171,171,-209,-213,-210,171,171,-197,-196,171,171,-304,171,-261,-177,-304,171,171,-211,-198,-200,-208,171,-28,-304,171,-261,-11,171,171,-304,171,171,171,171,171,171,171,-199,171,171,-261,171,-203,-204,-201,-304,171,171,171,171,-205,-202,-207,171,-206,]),'ID':([0,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,43,45,46,47,48,49,51,52,53,54,55,56,57,58,59,61,66,67,68,71,72,76,81,82,83,84,85,86,88,89,90,91,94,95,100,101,102,103,104,105,106,107,111,112,113,117,118,119,120,122,123,128,129,138,145,146,147,150,154,156,157,161,169,174,175,177,179,180,182,186,190,191,192,193,194,195,196,200,201,202,203,208,210,212,214,215,219,220,221,223,224,226,227,228,230,232,236,246,248,251,253,255,256,258,262,263,264,265,268,270,271,274,275,277,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,325,330,331,332,333,335,336,337,338,339,340,343,344,346,347,348,350,352,354,355,356,357,358,363,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,462,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,504,506,508,514,516,517,519,520,521,],[30,-304,-65,-105,-114,-95,-135,-104,-110,-117,-64,-62,-68,-91,-111,-67,30,-304,-98,30,30,-66,-103,-116,86,-94,-96,-93,-63,-107,30,-101,-106,-100,-60,-304,-112,-216,30,-109,-99,101,-136,-304,-102,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,30,30,-89,-61,-302,116,-148,-147,-161,-27,-28,-159,30,30,-131,-130,-86,139,-304,30,139,30,139,139,-304,116,116,-162,-160,204,-70,30,-128,30,-28,-304,139,-304,-263,-265,139,139,-261,-262,139,139,-260,-264,139,-71,-28,-304,139,116,-149,-303,139,-78,-72,139,-194,-74,-77,-193,-76,204,-73,345,-195,-75,204,139,-129,-127,-126,139,-132,30,30,139,139,139,139,-261,-11,139,139,-12,139,384,386,139,139,139,-225,-229,-224,-226,-220,-221,-227,-223,-222,139,-228,-219,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-261,-151,-150,139,-212,204,139,204,-209,-213,-210,139,139,-197,-196,139,30,139,-134,-133,-304,139,139,30,-261,-177,-304,139,139,-211,-198,-200,-208,204,-28,-304,139,-261,-11,139,139,-304,139,139,139,139,204,139,204,204,-199,139,139,-261,139,-203,-204,-201,-304,139,139,139,204,204,-205,-202,-207,204,-206,]),'SWITCH':([14,58,59,83,122,195,200,201,203,208,210,212,214,215,219,221,223,224,333,335,337,338,339,340,346,347,426,427,429,433,435,470,472,473,474,492,494,495,508,514,516,517,519,520,521,],[-68,-81,-69,-302,205,-303,-78,-72,-194,-74,-77,-193,-76,205,-73,-195,-75,205,-212,205,205,-209,-213,-210,-197,-196,-211,-198,-200,-208,205,205,205,205,-199,-203,-204,-201,205,205,-205,-202,-207,205,-206,]),'_COMPLEX':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,68,71,77,81,82,83,85,86,87,88,94,95,96,97,99,100,101,102,103,112,119,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,161,186,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[32,-304,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,32,-304,-98,32,32,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,32,-109,-99,-304,-102,-52,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,32,-89,-61,-302,-148,-147,-53,-161,32,32,-82,32,32,-131,-130,-86,32,32,-162,-30,32,-70,-83,-141,32,32,-128,-137,32,-140,32,32,32,32,32,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,32,-129,-127,-126,-132,-138,32,32,-36,32,32,-35,32,32,32,32,32,-151,-150,32,-212,-209,-213,-210,-197,-196,-139,-134,-133,32,32,-34,-31,32,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'RPAREN':([4,6,7,9,10,11,15,16,20,24,25,27,28,29,30,32,34,35,36,38,39,40,43,45,49,50,51,52,53,54,61,67,68,71,75,80,81,85,86,87,88,89,90,91,92,100,101,103,108,109,112,119,120,121,129,135,136,138,139,140,141,142,143,144,149,151,152,153,155,159,160,162,163,164,165,166,168,170,171,173,176,178,181,183,185,188,189,194,195,217,218,227,228,230,236,240,241,242,243,244,245,246,247,248,249,250,254,272,273,275,276,278,279,280,281,314,315,317,318,320,321,322,330,331,341,354,355,357,359,360,361,362,363,364,365,366,369,370,371,374,375,383,384,385,386,388,389,390,391,392,393,394,395,397,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,422,423,428,431,432,434,441,442,445,446,447,448,449,450,451,456,457,460,464,466,467,479,480,481,482,483,485,487,488,489,490,493,498,499,501,502,505,506,509,510,511,513,515,518,],[-105,-114,-95,-104,-110,-117,-91,-111,-98,-103,-116,-94,-96,-93,-29,-107,-101,-106,-100,-304,-112,-216,-109,-99,-102,-52,-115,-97,-108,-113,-92,-88,-90,-87,-37,-54,-89,-148,-147,-53,-161,-27,-28,-159,121,-131,-130,-304,-55,185,-304,-162,-160,-30,-128,240,-170,-304,-289,-163,-165,-18,254,-17,-279,-254,-233,-291,-300,-280,-217,-278,-266,-298,-297,-252,-231,-281,-295,-294,-292,-296,-293,-290,-38,321,322,-149,-303,-214,-14,-129,-127,-126,-132,-36,-2,-56,-185,-169,-1,-183,-45,-304,-167,-168,-35,-275,-274,389,-256,-299,-304,395,396,-301,-258,-257,-252,-255,-44,-43,-151,-150,-13,-134,-133,-304,-304,-184,-57,446,-183,447,-24,-23,-164,-166,-171,-34,-31,-273,-272,-271,-270,-287,-269,457,459,-183,-182,-304,-282,-218,-241,-244,-248,-242,-250,-246,-237,-238,-234,-236,-243,-239,-235,-245,-240,-247,-249,-251,464,465,-42,-39,470,472,-215,473,479,480,483,-192,-186,-190,-188,-33,-32,-267,-268,-253,-259,-41,-40,-51,-50,-189,-187,-191,-288,-284,502,-232,-304,507,-49,-46,-276,-283,514,-304,-48,-47,-277,-285,520,-286,]),'MINUSEQUAL':([139,149,151,153,155,159,162,163,164,165,166,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,456,457,460,464,501,502,511,],[-289,-279,-254,-291,-300,-280,-278,-266,-298,-297,282,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-267,-268,-253,-259,-276,-283,-277,]),'DEFAULT':([14,58,59,83,122,195,200,201,203,208,210,212,214,215,219,221,223,224,333,335,337,338,339,340,346,347,426,427,429,433,435,470,472,473,474,492,494,495,508,514,516,517,519,520,521,],[-68,-81,-69,-302,206,-303,-78,-72,-194,-74,-77,-193,-76,206,-73,-195,-75,206,-212,206,206,-209,-213,-210,-197,-196,-211,-198,-200,-208,206,206,206,206,-199,-203,-204,-201,206,206,-205,-202,-207,206,-206,]),'LE':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,299,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-241,-244,299,-242,299,299,-237,-238,-234,-236,-243,-239,-235,299,-240,299,299,299,-267,-268,-253,-259,-276,-283,-277,]),'LAND':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,300,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-241,-244,-248,-242,-250,-246,-237,-238,-234,-236,-243,-239,-235,-245,-240,-247,-249,300,-267,-268,-253,-259,-276,-283,-277,]),'LBRACE':([8,14,26,30,42,46,47,50,58,59,77,83,85,86,87,93,96,97,98,100,101,106,110,111,121,122,125,150,195,200,201,203,208,210,212,214,215,219,221,223,224,240,254,262,263,265,333,335,337,338,339,340,346,347,374,375,377,382,396,426,427,429,433,435,450,451,453,454,459,461,464,465,470,472,473,474,492,494,495,500,508,514,516,517,519,520,521,],[-135,-68,83,-29,-304,83,-136,-52,-81,-69,-304,-302,83,83,-53,83,-82,-8,-7,83,83,83,83,83,-30,83,-83,-304,-303,-78,-72,-194,-74,-77,-193,-76,83,-73,-195,-75,83,-36,-35,-11,83,-12,-212,83,83,-209,-213,-210,-197,-196,-34,-31,-177,-304,83,-211,-198,-200,-208,83,-33,-32,-11,83,83,-304,83,83,83,83,83,-199,-203,-204,-201,-304,83,83,-205,-202,-207,83,-206,]),'PERIOD':([83,139,149,150,151,153,155,159,162,163,164,165,170,171,173,176,178,181,183,195,204,261,267,272,273,278,314,376,379,382,383,384,385,386,389,395,452,456,457,461,487,488,500,501,502,511,513,518,],[-302,-289,-279,264,271,-291,-300,-280,-278,-266,-298,-297,-281,-295,-294,-292,-296,-293,-290,-303,-289,264,-178,-275,-274,-299,-301,-179,-181,264,-273,-272,-271,-270,-269,-282,-180,-267,-268,264,-284,504,264,-276,-283,-277,-285,-286,]),'PLUS':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,139,145,146,147,149,150,151,152,153,154,155,156,157,159,161,162,163,164,165,166,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,190,191,192,195,196,200,201,202,203,204,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,272,273,274,275,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,383,384,385,386,389,395,396,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,424,426,427,429,433,435,438,439,440,443,453,454,456,457,458,460,461,463,464,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,501,502,503,506,508,511,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,174,174,-304,-162,174,-289,-28,-304,174,-279,-304,-254,-233,-291,-263,-300,-265,174,-280,174,-278,-266,-298,-297,-252,302,-261,-281,-295,-294,-262,174,-292,174,-296,-260,-264,-293,174,-290,-28,-304,174,-303,174,-78,-72,174,-194,-289,-74,-77,-193,-76,174,-73,-195,-75,174,174,174,174,174,174,-261,-11,174,-12,174,-275,-274,174,174,-256,174,-299,-225,-229,-224,-226,-220,-221,-227,-223,-222,174,-228,-219,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-301,-258,174,-257,-252,174,-255,174,174,-261,174,-212,174,174,174,-209,-213,-210,174,174,-197,-196,174,174,-304,174,-261,-177,-304,-273,-272,-271,-270,-269,-282,174,302,302,302,302,302,302,-237,-238,-234,-236,302,302,-235,302,302,302,302,302,174,-211,-198,-200,-208,174,-28,-304,174,-261,-11,174,-267,-268,174,-253,-304,174,-259,174,174,174,174,174,174,-199,174,174,-261,174,-203,-204,-201,-304,-276,-283,174,174,174,-277,174,-205,-202,-207,174,-206,]),'XOR':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,312,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-241,-244,312,-242,312,-246,-237,-238,-234,-236,-243,-239,-235,-245,-240,-247,-249,312,-267,-268,-253,-259,-276,-283,-277,]),'BREAK':([14,58,59,83,122,195,200,201,203,208,210,212,214,215,219,221,223,224,333,335,337,338,339,340,346,347,426,427,429,433,435,470,472,473,474,492,494,495,508,514,516,517,519,520,521,],[-68,-81,-69,-302,207,-303,-78,-72,-194,-74,-77,-193,-76,207,-73,-195,-75,207,-212,207,207,-209,-213,-210,-197,-196,-211,-198,-200,-208,207,207,207,207,-199,-203,-204,-201,207,207,-205,-202,-207,207,-206,]),'LPAREN':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,45,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,68,71,72,75,76,80,81,82,83,85,86,87,88,89,90,91,94,95,100,101,102,104,105,106,107,108,111,113,119,120,121,122,123,128,129,138,139,145,146,147,149,150,151,153,154,155,156,157,159,161,162,163,164,165,167,169,170,171,173,174,175,176,177,178,179,180,181,182,183,185,186,190,191,192,194,195,196,199,200,201,202,203,204,205,208,210,212,214,215,216,219,221,223,224,225,226,227,228,230,232,236,240,242,243,246,247,248,251,254,255,256,258,262,263,265,268,272,273,274,275,277,278,279,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,319,321,322,323,324,325,330,331,332,333,335,336,337,338,339,340,343,344,346,347,348,350,352,354,355,356,358,360,361,363,367,374,375,377,382,383,384,385,386,389,392,394,395,396,422,423,424,426,427,429,430,433,435,438,439,440,443,446,447,448,449,450,451,453,454,456,457,458,461,463,465,466,467,469,470,471,472,473,474,475,476,477,479,480,481,482,483,490,492,494,495,498,499,500,501,502,503,506,508,509,510,511,514,516,517,519,520,521,],[41,-304,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,41,-304,-98,76,41,-66,-103,-116,-94,-96,-93,-29,-63,-107,41,-101,-106,-100,-60,-304,-112,-216,41,-109,-99,-304,-102,103,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,76,-37,76,112,-89,-61,-302,-148,-147,103,-161,-27,-28,-159,41,76,-131,-130,-86,-304,76,161,76,112,161,-304,-162,-160,-30,161,-70,76,-128,248,-289,-28,-304,161,-279,-304,275,-291,-263,-300,-265,277,-280,161,-278,-266,-298,-297,294,-261,-281,-295,-294,-262,316,-292,319,-296,-260,-264,-293,277,-290,-38,-71,-28,-304,161,-149,-303,319,332,-78,-72,161,-194,-289,336,-74,-77,-193,-76,161,343,-73,-195,-75,161,348,319,-129,-127,-126,319,-132,-36,357,359,248,-45,248,161,-35,161,161,-261,-11,161,-12,319,-275,-274,161,161,161,-299,394,-225,-229,-224,-226,-220,-221,-227,-223,-222,161,-228,-219,161,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,-301,161,161,-44,-43,161,161,-261,-151,-150,161,-212,161,161,161,-209,-213,-210,161,161,-197,-196,161,76,319,-134,-133,-304,161,359,357,248,-261,-34,-31,-177,-304,-273,-272,-271,-270,-269,394,394,-282,319,-42,-39,161,-211,-198,-200,471,-208,161,-28,-304,161,-261,-192,-186,-190,-188,-33,-32,-11,161,-267,-268,161,-304,319,319,-41,-40,161,161,161,161,161,-199,161,161,-261,-51,-50,-189,-187,-191,161,-203,-204,-201,-49,-46,-304,-276,-283,161,161,161,-48,-47,-277,161,-205,-202,-207,161,-206,]),'IF':([14,58,59,83,122,195,200,201,203,208,210,212,214,215,219,221,223,224,333,335,337,338,339,340,346,347,426,427,429,433,435,470,472,473,474,492,494,495,508,514,516,517,519,520,521,],[-68,-81,-69,-302,225,-303,-78,-72,-194,-74,-77,-193,-76,225,-73,-195,-75,225,-212,225,225,-209,-213,-210,-197,-196,-211,-198,-200,-208,225,225,225,225,-199,-203,-204,-201,225,225,-205,-202,-207,225,-206,]),'UNSIGNED':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,68,71,77,81,82,83,85,86,87,88,94,95,96,97,99,100,101,102,103,112,119,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,161,186,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[43,-304,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,43,-304,-98,43,43,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,43,-109,-99,-304,-102,-52,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,43,-89,-61,-302,-148,-147,-53,-161,43,43,-82,43,43,-131,-130,-86,43,43,-162,-30,43,-70,-83,-141,43,43,-128,-137,43,-140,43,43,43,43,43,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,43,-129,-127,-126,-132,-138,43,43,-36,43,43,-35,43,43,43,43,43,-151,-150,43,-212,-209,-213,-210,-197,-196,-139,-134,-133,43,43,-34,-31,43,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'NE':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,301,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-241,-244,301,-242,301,-246,-237,-238,-234,-236,-243,-239,-235,-245,-240,301,301,301,-267,-268,-253,-259,-276,-283,-277,]),'XOREQUAL':([139,149,151,153,155,159,162,163,164,165,166,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,456,457,460,464,501,502,511,],[-289,-279,-254,-291,-300,-280,-278,-266,-298,-297,286,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-267,-268,-253,-259,-276,-283,-277,]),'SIZEOF':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,145,146,147,150,154,156,157,161,169,174,175,177,179,180,182,190,191,192,195,196,200,201,202,203,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,274,275,277,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,506,508,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,175,175,-304,-162,175,-28,-304,175,-304,-263,-265,175,175,-261,-262,175,175,-260,-264,175,-28,-304,175,-303,175,-78,-72,175,-194,-74,-77,-193,-76,175,-73,-195,-75,175,175,175,175,175,175,-261,-11,175,-12,175,175,175,175,-225,-229,-224,-226,-220,-221,-227,-223,-222,175,-228,-219,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,-261,175,-212,175,175,175,-209,-213,-210,175,175,-197,-196,175,175,-304,175,-261,-177,-304,175,175,-211,-198,-200,-208,175,-28,-304,175,-261,-11,175,175,-304,175,175,175,175,175,175,175,-199,175,175,-261,175,-203,-204,-201,-304,175,175,175,175,-205,-202,-207,175,-206,]),'CONTINUE':([14,58,59,83,122,195,200,201,203,208,210,212,214,215,219,221,223,224,333,335,337,338,339,340,346,347,426,427,429,433,435,470,472,473,474,492,494,495,508,514,516,517,519,520,521,],[-68,-81,-69,-302,213,-303,-78,-72,-194,-74,-77,-193,-76,213,-73,-195,-75,213,-212,213,213,-209,-213,-210,-197,-196,-211,-198,-200,-208,213,213,213,213,-199,-203,-204,-201,213,213,-205,-202,-207,213,-206,]),'DIVEQUAL':([139,149,151,153,155,159,162,163,164,165,166,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,456,457,460,464,501,502,511,],[-289,-279,-254,-291,-300,-280,-278,-266,-298,-297,290,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-267,-268,-253,-259,-276,-283,-277,]),'SHORT':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,68,71,77,81,82,83,85,86,87,88,94,95,96,97,99,100,101,102,103,112,119,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,161,186,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[49,-304,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,49,-304,-98,49,49,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,49,-109,-99,-304,-102,-52,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,49,-89,-61,-302,-148,-147,-53,-161,49,49,-82,49,49,-131,-130,-86,49,49,-162,-30,49,-70,-83,-141,49,49,-128,-137,49,-140,49,49,49,49,49,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,49,-129,-127,-126,-132,-138,49,49,-36,49,49,-35,49,49,49,49,49,-151,-150,49,-212,-209,-213,-210,-197,-196,-139,-134,-133,49,49,-34,-31,49,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'INT_CONST_BIN':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,145,146,147,150,154,156,157,161,169,174,175,177,179,180,182,190,191,192,195,196,200,201,202,203,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,274,275,277,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,506,508,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,181,181,-304,-162,181,-28,-304,181,-304,-263,-265,181,181,-261,-262,181,181,-260,-264,181,-28,-304,181,-303,181,-78,-72,181,-194,-74,-77,-193,-76,181,-73,-195,-75,181,181,181,181,181,181,-261,-11,181,-12,181,181,181,181,-225,-229,-224,-226,-220,-221,-227,-223,-222,181,-228,-219,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,-261,181,-212,181,181,181,-209,-213,-210,181,181,-197,-196,181,181,-304,181,-261,-177,-304,181,181,-211,-198,-200,-208,181,-28,-304,181,-261,-11,181,181,-304,181,181,181,181,181,181,181,-199,181,181,-261,181,-203,-204,-201,-304,181,181,181,181,-205,-202,-207,181,-206,]),'AUTO':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,58,59,61,67,68,71,77,81,82,83,85,86,87,95,96,97,100,101,103,112,121,122,123,125,138,186,194,195,200,201,203,208,210,212,214,219,221,223,224,236,240,248,252,254,330,331,332,333,338,339,340,346,347,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[29,29,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,29,-98,29,29,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,29,-109,-99,29,-102,-52,-115,-97,-108,-113,-81,-69,-92,-88,-90,-87,29,-89,-61,-302,-148,-147,-53,29,-82,29,-131,-130,29,29,-30,29,-70,-83,29,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,29,-132,-36,29,29,-35,-151,-150,29,-212,-209,-213,-210,-197,-196,-134,-133,29,29,-34,-31,29,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'REGISTER':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,58,59,61,67,68,71,77,81,82,83,85,86,87,95,96,97,100,101,103,112,121,122,123,125,138,186,194,195,200,201,203,208,210,212,214,219,221,223,224,236,240,248,252,254,330,331,332,333,338,339,340,346,347,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[27,27,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,27,-98,27,27,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,27,-109,-99,27,-102,-52,-115,-97,-108,-113,-81,-69,-92,-88,-90,-87,27,-89,-61,-302,-148,-147,-53,27,-82,27,-131,-130,27,27,-30,27,-70,-83,27,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,27,-132,-36,27,27,-35,-151,-150,27,-212,-209,-213,-210,-197,-196,-134,-133,27,27,-34,-31,27,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'TYPEDEF':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,58,59,61,67,68,71,77,81,82,83,85,86,87,95,96,97,100,101,103,112,121,122,123,125,138,186,194,195,200,201,203,208,210,212,214,219,221,223,224,236,240,248,252,254,330,331,332,333,338,339,340,346,347,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[52,52,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,52,-98,52,52,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,52,-109,-99,52,-102,-52,-115,-97,-108,-113,-81,-69,-92,-88,-90,-87,52,-89,-61,-302,-148,-147,-53,52,-82,52,-131,-130,52,52,-30,52,-70,-83,52,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,52,-132,-36,52,52,-35,-151,-150,52,-212,-209,-213,-210,-197,-196,-134,-133,52,52,-34,-31,52,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'RBRACKET':([11,25,51,88,89,104,113,119,139,145,147,149,151,152,153,155,159,160,162,163,164,165,166,168,170,171,173,176,178,181,183,190,192,195,217,251,257,258,259,260,272,273,276,278,314,315,317,318,320,325,326,329,356,358,367,368,372,373,381,383,384,385,386,387,389,395,397,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,420,421,432,438,440,443,444,456,457,460,464,477,478,489,496,497,501,502,511,512,],[-117,-116,-115,-161,-27,-304,-304,-162,-289,-28,-304,-279,-254,-233,-291,-300,-280,-217,-278,-266,-298,-297,-252,-231,-281,-295,-294,-292,-296,-293,-290,-28,-304,-303,-214,-304,-4,374,-3,375,-275,-274,-256,-299,-301,-258,-257,-252,-255,422,423,-230,-304,-304,448,449,450,451,452,-273,-272,-271,-270,456,-269,-282,-218,-241,-244,-248,-242,-250,-246,-237,-238,-234,-236,-243,-239,-235,-245,-240,-247,-249,-251,466,467,-215,-28,-304,481,482,-267,-268,-253,-259,498,499,-232,509,510,-276,-283,-277,518,]),'OR':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,298,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-241,-244,-248,-242,298,-246,-237,-238,-234,-236,-243,-239,-235,-245,-240,-247,-249,298,-267,-268,-253,-259,-276,-283,-277,]),'WCHAR_CONST':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,145,146,147,150,154,156,157,161,169,174,175,177,179,180,182,190,191,192,195,196,200,201,202,203,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,274,275,277,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,506,508,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,165,165,-304,-162,165,-28,-304,165,-304,-263,-265,165,165,-261,-262,165,165,-260,-264,165,-28,-304,165,-303,165,-78,-72,165,-194,-74,-77,-193,-76,165,-73,-195,-75,165,165,165,165,165,165,-261,-11,165,-12,165,165,165,165,-225,-229,-224,-226,-220,-221,-227,-223,-222,165,-228,-219,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-261,165,-212,165,165,165,-209,-213,-210,165,165,-197,-196,165,165,-304,165,-261,-177,-304,165,165,-211,-198,-200,-208,165,-28,-304,165,-261,-11,165,165,-304,165,165,165,165,165,165,165,-199,165,165,-261,165,-203,-204,-201,-304,165,165,165,165,-205,-202,-207,165,-206,]),'STATIC':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,58,59,61,67,68,71,77,81,82,83,85,86,87,88,95,96,97,100,101,103,104,112,113,119,121,122,123,125,138,145,186,190,194,195,200,201,203,208,210,212,214,219,221,223,224,236,240,248,252,254,330,331,332,333,338,339,340,346,347,354,355,356,357,359,374,375,394,426,427,429,433,438,450,451,474,492,494,495,516,517,519,521,],[7,7,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,7,-98,7,7,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,7,-109,-99,7,-102,-52,-115,-97,-108,-113,-81,-69,-92,-88,-90,-87,7,-89,-61,-302,-148,-147,-53,-161,7,-82,7,-131,-130,7,146,7,191,-162,-30,7,-70,-83,7,255,-71,323,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,7,-132,-36,7,7,-35,-151,-150,7,-212,-209,-213,-210,-197,-196,-134,-133,439,7,7,-34,-31,7,-211,-198,-200,-208,475,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'VOLATILE':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,38,39,40,42,43,45,48,49,50,51,52,53,54,58,59,61,67,68,71,77,81,82,83,85,86,87,88,90,95,96,97,99,100,101,103,104,112,113,119,121,122,123,125,126,127,128,129,130,131,132,133,134,138,145,146,161,186,190,191,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,356,357,359,374,375,394,426,427,429,433,438,439,450,451,474,492,494,495,516,517,519,521,],[11,11,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,11,-98,11,11,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,11,-112,-216,11,-109,-99,11,-102,-52,-115,-97,-108,-113,-81,-69,-92,-88,-90,-87,11,-89,-61,-302,-148,-147,-53,-161,11,11,-82,11,11,-131,-130,11,11,11,11,-162,-30,11,-70,-83,-141,11,11,-128,-137,11,-140,11,11,11,11,11,11,-71,11,11,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,11,-129,-127,-126,-132,-138,11,11,-36,11,11,-35,11,11,11,11,11,-151,-150,11,-212,-209,-213,-210,-197,-196,-139,-134,-133,11,11,11,-34,-31,11,-211,-198,-200,-208,11,11,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'CHAR':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,68,71,77,81,82,83,85,86,87,88,94,95,96,97,99,100,101,102,103,112,119,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,161,186,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[34,-304,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,34,-304,-98,34,34,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,34,-109,-99,-304,-102,-52,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,34,-89,-61,-302,-148,-147,-53,-161,34,34,-82,34,34,-131,-130,-86,34,34,-162,-30,34,-70,-83,-141,34,34,-128,-137,34,-140,34,34,34,34,34,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,34,-129,-127,-126,-132,-138,34,34,-36,34,34,-35,34,34,34,34,34,-151,-150,34,-212,-209,-213,-210,-197,-196,-139,-134,-133,34,34,-34,-31,34,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'WSTRING_LITERAL':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,145,146,147,150,154,155,156,157,161,169,170,174,175,177,179,180,182,190,191,192,195,196,200,201,202,203,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,274,275,277,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,506,508,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,155,155,-304,-162,155,-28,-304,155,-304,-263,-300,-265,155,155,-261,314,-262,155,155,-260,-264,155,-28,-304,155,-303,155,-78,-72,155,-194,-74,-77,-193,-76,155,-73,-195,-75,155,155,155,155,155,155,-261,-11,155,-12,155,155,155,155,-225,-229,-224,-226,-220,-221,-227,-223,-222,155,-228,-219,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,-301,155,155,155,155,-261,155,-212,155,155,155,-209,-213,-210,155,155,-197,-196,155,155,-304,155,-261,-177,-304,155,155,-211,-198,-200,-208,155,-28,-304,155,-261,-11,155,155,-304,155,155,155,155,155,155,155,-199,155,155,-261,155,-203,-204,-201,-304,155,155,155,155,-205,-202,-207,155,-206,]),'DO':([14,58,59,83,122,195,200,201,203,208,210,212,214,215,219,221,223,224,333,335,337,338,339,340,346,347,426,427,429,433,435,470,472,473,474,492,494,495,508,514,516,517,519,520,521,],[-68,-81,-69,-302,215,-303,-78,-72,-194,-74,-77,-193,-76,215,-73,-195,-75,215,-212,215,215,-209,-213,-210,-197,-196,-211,-198,-200,-208,215,215,215,215,-199,-203,-204,-201,215,215,-205,-202,-207,215,-206,]),'WHILE':([14,58,59,83,122,195,200,201,203,208,210,212,214,215,219,221,223,224,333,335,337,338,339,340,342,346,347,426,427,429,433,435,470,472,473,474,492,494,495,508,514,516,517,519,520,521,],[-68,-81,-69,-302,216,-303,-78,-72,-194,-74,-77,-193,-76,216,-73,-195,-75,216,-212,216,216,-209,-213,-210,430,-197,-196,-211,-198,-200,-208,216,216,216,216,-199,-203,-204,-201,216,216,-205,-202,-207,216,-206,]),'MINUSMINUS':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,139,145,146,147,149,150,151,153,154,155,156,157,159,161,162,163,164,165,169,170,171,173,174,175,176,177,178,179,180,181,182,183,190,191,192,195,196,200,201,202,203,204,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,272,273,274,275,277,278,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,383,384,385,386,389,395,396,424,426,427,429,433,435,438,439,440,443,453,454,456,457,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,501,502,503,506,508,511,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,157,157,-304,-162,157,-289,-28,-304,157,-279,-304,272,-291,-263,-300,-265,157,-280,157,-278,-266,-298,-297,-261,-281,-295,-294,-262,157,-292,157,-296,-260,-264,-293,157,-290,-28,-304,157,-303,157,-78,-72,157,-194,-289,-74,-77,-193,-76,157,-73,-195,-75,157,157,157,157,157,157,-261,-11,157,-12,157,-275,-274,157,157,157,-299,-225,-229,-224,-226,-220,-221,-227,-223,-222,157,-228,-219,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,-301,157,157,157,157,-261,157,-212,157,157,157,-209,-213,-210,157,157,-197,-196,157,157,-304,157,-261,-177,-304,-273,-272,-271,-270,-269,-282,157,157,-211,-198,-200,-208,157,-28,-304,157,-261,-11,157,-267,-268,157,-304,157,157,157,157,157,157,157,-199,157,157,-261,157,-203,-204,-201,-304,-276,-283,157,157,157,-277,157,-205,-202,-207,157,-206,]),'PPPRAGMASTR':([14,],[59,]),'RESTRICT':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,38,39,40,42,43,45,48,49,50,51,52,53,54,58,59,61,67,68,71,77,81,82,83,85,86,87,88,90,95,96,97,99,100,101,103,104,112,113,119,121,122,123,125,126,127,128,129,130,131,132,133,134,138,145,146,161,186,190,191,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,356,357,359,374,375,394,426,427,429,433,438,439,450,451,474,492,494,495,516,517,519,521,],[25,25,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,25,-98,25,25,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,25,-112,-216,25,-109,-99,25,-102,-52,-115,-97,-108,-113,-81,-69,-92,-88,-90,-87,25,-89,-61,-302,-148,-147,-53,-161,25,25,-82,25,25,-131,-130,25,25,25,25,-162,-30,25,-70,-83,-141,25,25,-128,-137,25,-140,25,25,25,25,25,25,-71,25,25,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,25,-129,-127,-126,-132,-138,25,25,-36,25,25,-35,25,25,25,25,25,-151,-150,25,-212,-209,-213,-210,-197,-196,-139,-134,-133,25,25,25,-34,-31,25,-211,-198,-200,-208,25,25,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'LSHIFTEQUAL':([139,149,151,153,155,159,162,163,164,165,166,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,456,457,460,464,501,502,511,],[-289,-279,-254,-291,-300,-280,-278,-266,-298,-297,285,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-267,-268,-253,-259,-276,-283,-277,]),'_BOOL':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,68,71,77,81,82,83,85,86,87,88,94,95,96,97,99,100,101,102,103,112,119,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,161,186,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[36,-304,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,36,-304,-98,36,36,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,36,-109,-99,-304,-102,-52,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,36,-89,-61,-302,-148,-147,-53,-161,36,36,-82,36,36,-131,-130,-86,36,36,-162,-30,36,-70,-83,-141,36,36,-128,-137,36,-140,36,36,36,36,36,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,36,-129,-127,-126,-132,-138,36,36,-36,36,36,-35,36,36,36,36,36,-151,-150,36,-212,-209,-213,-210,-197,-196,-139,-134,-133,36,36,-34,-31,36,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'__INT128':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,68,71,77,81,82,83,85,86,87,88,94,95,96,97,99,100,101,102,103,112,119,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,161,186,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[10,-304,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,10,-304,-98,10,10,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,10,-109,-99,-304,-102,-52,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,10,-89,-61,-302,-148,-147,-53,-161,10,10,-82,10,10,-131,-130,-86,10,10,-162,-30,10,-70,-83,-141,10,10,-128,-137,10,-140,10,10,10,10,10,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,10,-129,-127,-126,-132,-138,10,10,-36,10,10,-35,10,10,10,10,10,-151,-150,10,-212,-209,-213,-210,-197,-196,-139,-134,-133,10,10,-34,-31,10,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'SEMI':([0,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,43,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,78,79,80,81,82,83,85,86,87,94,95,99,100,101,102,108,121,122,123,124,126,128,129,130,131,132,133,134,139,148,149,151,152,153,155,158,159,160,162,163,164,165,166,168,170,171,172,173,176,178,181,183,184,185,186,187,194,195,200,201,202,203,204,207,208,209,210,211,212,213,214,215,217,218,219,221,223,224,227,228,229,230,231,233,234,235,236,237,238,239,240,254,272,273,276,278,314,315,317,318,320,321,322,329,330,331,332,333,334,335,337,338,339,340,341,345,346,347,351,353,354,355,374,375,380,383,384,385,386,389,395,397,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,422,423,424,425,426,427,429,432,433,435,436,437,450,451,455,456,457,460,464,466,467,468,469,470,472,473,474,489,491,492,494,495,501,502,507,508,511,514,516,517,519,520,521,],[23,-304,-65,-105,58,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,-304,-304,-98,-304,23,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,-109,-99,-304,-102,-52,-115,-97,-108,-113,-10,-9,-85,-81,-69,-80,-92,-16,-15,-122,-124,-84,-88,-90,-79,-20,-87,-118,-158,-37,-157,-19,-120,-54,-89,-61,-302,-148,-147,-53,-304,-304,132,-131,-130,-86,-55,-30,-304,-70,-157,-141,-304,-128,-137,132,-140,132,132,-289,-123,-279,-254,-233,-291,-300,-172,-280,-217,-278,-266,-298,-297,-252,-231,-281,-295,-125,-294,-292,-296,-293,-290,-119,-38,-71,-121,-149,-303,-78,-72,333,-194,-289,338,-74,-13,-77,339,-193,340,-76,-304,-214,-14,-73,-195,-75,-304,-129,-127,-26,-126,-142,-144,353,-25,-132,-138,132,132,-36,-35,-275,-274,-256,-299,-301,-258,-257,-252,-255,-44,-43,-230,-151,-150,-304,-212,426,-304,-304,-209,-213,-210,-13,433,-197,-196,-146,-139,-134,-133,-34,-31,-173,-273,-272,-271,-270,-269,-282,-218,-241,-244,-248,-242,-250,-246,-237,-238,-234,-236,-243,-239,-235,-245,-240,-247,-249,-251,-42,-39,-304,469,-211,-198,-200,-215,-208,-304,-143,-145,-33,-32,-174,-267,-268,-253,-259,-41,-40,490,-304,-304,-304,-304,-199,-232,506,-203,-204,-201,-276,-283,516,-304,-277,-304,-205,-202,-207,-304,-206,]),'MODEQUAL':([139,149,151,153,155,159,162,163,164,165,166,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,456,457,460,464,501,502,511,],[-289,-279,-254,-291,-300,-280,-278,-266,-298,-297,289,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-267,-268,-253,-259,-276,-283,-277,]),'INLINE':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,58,59,61,67,68,71,77,81,82,83,85,86,87,95,96,97,100,101,103,112,121,122,123,125,138,186,194,195,200,201,203,208,210,212,214,219,221,223,224,236,240,248,252,254,330,331,332,333,338,339,340,346,347,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[20,20,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,20,-98,20,20,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,20,-109,-99,20,-102,-52,-115,-97,-108,-113,-81,-69,-92,-88,-90,-87,20,-89,-61,-302,-148,-147,-53,20,-82,20,-131,-130,20,20,-30,20,-70,-83,20,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,20,-132,-36,20,20,-35,-151,-150,20,-212,-209,-213,-210,-197,-196,-134,-133,20,20,-34,-31,20,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'ENUM':([0,2,3,7,11,12,13,14,17,18,19,20,22,23,25,27,28,29,30,31,37,42,48,50,51,52,55,56,57,58,59,66,77,82,83,87,88,94,96,97,99,102,103,112,119,121,122,123,125,126,127,130,131,132,133,134,137,161,186,195,200,201,203,208,210,212,214,219,221,223,224,237,238,239,240,248,252,254,277,294,316,319,332,333,338,339,340,346,347,353,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[26,-304,-65,-95,-117,-64,-62,-68,-67,26,-304,-98,26,-66,-116,-94,-96,-93,-29,-63,-60,26,-304,-52,-115,-97,-10,-9,-85,-81,-69,-84,26,-61,-302,-53,-161,26,-82,26,26,-86,26,26,-162,-30,26,-70,-83,-141,26,-137,26,-140,26,26,26,26,-71,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,26,-138,26,26,-36,26,26,-35,26,26,26,26,26,-212,-209,-213,-210,-197,-196,-139,26,26,-34,-31,26,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'EXTERN':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,58,59,61,67,68,71,77,81,82,83,85,86,87,95,96,97,100,101,103,112,121,122,123,125,138,186,194,195,200,201,203,208,210,212,214,219,221,223,224,236,240,248,252,254,330,331,332,333,338,339,340,346,347,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[28,28,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,28,-98,28,28,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,28,-109,-99,28,-102,-52,-115,-97,-108,-113,-81,-69,-92,-88,-90,-87,28,-89,-61,-302,-148,-147,-53,28,-82,28,-131,-130,28,28,-30,28,-70,-83,28,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,28,-132,-36,28,28,-35,-151,-150,28,-212,-209,-213,-210,-197,-196,-134,-133,28,28,-34,-31,28,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'EQUALS':([30,50,65,74,75,77,79,80,87,108,116,121,124,139,149,151,153,155,159,162,163,164,165,166,170,171,173,176,178,181,183,185,195,204,240,254,261,267,272,273,276,278,314,315,317,318,320,321,322,374,375,376,379,383,384,385,386,389,395,422,423,450,451,452,456,457,460,464,466,467,501,502,511,],[-29,-52,106,-158,-37,-157,111,-54,-53,-55,196,-30,-157,-289,-279,-254,-291,-300,-280,-278,-266,-298,-297,293,-281,-295,-294,-292,-296,-293,-290,-38,-303,-289,-36,-35,377,-178,-275,-274,-256,-299,-301,-258,-257,-252,-255,-44,-43,-34,-31,-179,-181,-273,-272,-271,-270,-269,-282,-42,-39,-33,-32,-180,-267,-268,-253,-259,-41,-40,-276,-283,-277,]),'ELLIPSIS':([252,],[369,]),'GT':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,297,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-241,-244,297,-242,297,297,-237,-238,-234,-236,-243,-239,-235,297,-240,297,297,297,-267,-268,-253,-259,-276,-283,-277,]),'ANDEQUAL':([139,149,151,153,155,159,162,163,164,165,166,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,456,457,460,464,501,502,511,],[-289,-279,-254,-291,-300,-280,-278,-266,-298,-297,292,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-267,-268,-253,-259,-276,-283,-277,]),'AND':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,139,145,146,147,149,150,151,152,153,154,155,156,157,159,161,162,163,164,165,166,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,190,191,192,195,196,200,201,202,203,204,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,272,273,274,275,276,277,278,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,383,384,385,386,389,395,396,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,424,426,427,429,433,435,438,439,440,443,453,454,456,457,458,460,461,463,464,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,501,502,503,506,508,511,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,179,179,-304,-162,179,-289,-28,-304,179,-279,-304,-254,-233,-291,-263,-300,-265,179,-280,179,-278,-266,-298,-297,-252,311,-261,-281,-295,-294,-262,179,-292,179,-296,-260,-264,-293,179,-290,-28,-304,179,-303,179,-78,-72,179,-194,-289,-74,-77,-193,-76,179,-73,-195,-75,179,179,179,179,179,179,-261,-11,179,-12,179,-275,-274,179,179,-256,179,-299,-225,-229,-224,-226,-220,-221,-227,-223,-222,179,-228,-219,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,-301,-258,179,-257,-252,179,-255,179,179,-261,179,-212,179,179,179,-209,-213,-210,179,179,-197,-196,179,179,-304,179,-261,-177,-304,-273,-272,-271,-270,-269,-282,179,-241,-244,311,-242,311,-246,-237,-238,-234,-236,-243,-239,-235,-245,-240,-247,311,311,179,-211,-198,-200,-208,179,-28,-304,179,-261,-11,179,-267,-268,179,-253,-304,179,-259,179,179,179,179,179,179,-199,179,179,-261,179,-203,-204,-201,-304,-276,-283,179,179,179,-277,179,-205,-202,-207,179,-206,]),'DOUBLE':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,68,71,77,81,82,83,85,86,87,88,94,95,96,97,99,100,101,102,103,112,119,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,161,186,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[35,-304,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,35,-304,-98,35,35,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,35,-109,-99,-304,-102,-52,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,35,-89,-61,-302,-148,-147,-53,-161,35,35,-82,35,35,-131,-130,-86,35,35,-162,-30,35,-70,-83,-141,35,35,-128,-137,35,-140,35,35,35,35,35,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,35,-129,-127,-126,-132,-138,35,35,-36,35,35,-35,35,35,35,35,35,-151,-150,35,-212,-209,-213,-210,-197,-196,-139,-134,-133,35,35,-34,-31,35,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'RSHIFTEQUAL':([139,149,151,153,155,159,162,163,164,165,166,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,456,457,460,464,501,502,511,],[-289,-279,-254,-291,-300,-280,-278,-266,-298,-297,288,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-267,-268,-253,-259,-276,-283,-277,]),'NOT':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,145,146,147,150,154,156,157,161,169,174,175,177,179,180,182,190,191,192,195,196,200,201,202,203,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,274,275,277,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,506,508,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,180,180,-304,-162,180,-28,-304,180,-304,-263,-265,180,180,-261,-262,180,180,-260,-264,180,-28,-304,180,-303,180,-78,-72,180,-194,-74,-77,-193,-76,180,-73,-195,-75,180,180,180,180,180,180,-261,-11,180,-12,180,180,180,180,-225,-229,-224,-226,-220,-221,-227,-223,-222,180,-228,-219,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,-261,180,-212,180,180,180,-209,-213,-210,180,180,-197,-196,180,180,-304,180,-261,-177,-304,180,180,-211,-198,-200,-208,180,-28,-304,180,-261,-11,180,180,-304,180,180,180,180,180,180,180,-199,180,180,-261,180,-203,-204,-201,-304,180,180,180,180,-205,-202,-207,180,-206,]),'PLUSEQUAL':([139,149,151,153,155,159,162,163,164,165,166,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,456,457,460,464,501,502,511,],[-289,-279,-254,-291,-300,-280,-278,-266,-298,-297,284,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-267,-268,-253,-259,-276,-283,-277,]),'PLUSPLUS':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,139,145,146,147,149,150,151,153,154,155,156,157,159,161,162,163,164,165,169,170,171,173,174,175,176,177,178,179,180,181,182,183,190,191,192,195,196,200,201,202,203,204,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,272,273,274,275,277,278,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,383,384,385,386,389,395,396,424,426,427,429,433,435,438,439,440,443,453,454,456,457,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,501,502,503,506,508,511,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,182,182,-304,-162,182,-289,-28,-304,182,-279,-304,273,-291,-263,-300,-265,182,-280,182,-278,-266,-298,-297,-261,-281,-295,-294,-262,182,-292,182,-296,-260,-264,-293,182,-290,-28,-304,182,-303,182,-78,-72,182,-194,-289,-74,-77,-193,-76,182,-73,-195,-75,182,182,182,182,182,182,-261,-11,182,-12,182,-275,-274,182,182,182,-299,-225,-229,-224,-226,-220,-221,-227,-223,-222,182,-228,-219,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,-301,182,182,182,182,-261,182,-212,182,182,182,-209,-213,-210,182,182,-197,-196,182,182,-304,182,-261,-177,-304,-273,-272,-271,-270,-269,-282,182,182,-211,-198,-200,-208,182,-28,-304,182,-261,-11,182,-267,-268,182,-304,182,182,182,182,182,182,182,-199,182,182,-261,182,-203,-204,-201,-304,-276,-283,182,182,182,-277,182,-205,-202,-207,182,-206,]),'TIMES':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,31,32,34,35,36,37,38,39,40,41,43,45,48,49,51,52,53,54,55,56,57,58,59,61,66,67,68,71,76,81,82,83,85,86,88,89,90,91,94,95,100,101,102,104,105,106,107,111,113,119,122,123,128,129,138,139,145,146,147,149,150,151,152,153,154,155,156,157,159,161,162,163,164,165,166,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,186,190,191,192,194,195,196,200,201,202,203,204,208,210,212,214,215,219,221,223,224,226,227,228,230,232,236,248,251,255,256,258,262,263,265,268,272,273,274,275,276,277,278,279,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,330,331,332,333,335,336,337,338,339,340,343,344,346,347,348,350,352,354,355,356,358,367,377,382,383,384,385,386,389,394,395,396,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,424,426,427,429,433,435,438,439,440,443,453,454,456,457,458,460,461,463,464,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,501,502,503,506,508,511,514,516,517,519,520,521,],[38,-304,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,38,-304,-98,38,38,-66,-103,-116,-94,-96,-93,-63,-107,-101,-106,-100,-60,-304,-112,-216,38,-109,-99,-304,-102,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,38,-89,-61,-302,-148,-147,-161,-27,-28,38,38,38,-131,-130,-86,-304,38,169,38,169,-304,-162,169,-70,38,-128,38,-289,-28,-304,258,-279,-304,-254,-233,-291,-263,-300,-265,169,-280,169,-278,-266,-298,-297,-252,304,-261,-281,-295,-294,-262,169,-292,169,-296,-260,-264,-293,169,-290,-71,-28,-304,325,-149,-303,169,-78,-72,169,-194,-289,-74,-77,-193,-76,169,-73,-195,-75,169,169,-129,-127,-126,169,-132,38,367,169,169,-261,-11,169,-12,169,-275,-274,169,169,-256,169,-299,38,-225,-229,-224,-226,-220,-221,-227,-223,-222,169,-228,-219,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,-301,-258,169,-257,-252,169,-255,169,169,-261,-151,-150,169,-212,169,169,169,-209,-213,-210,169,169,-197,-196,169,38,169,-134,-133,-304,443,-261,-177,-304,-273,-272,-271,-270,-269,38,-282,169,304,304,304,304,304,304,304,304,-234,-236,304,304,-235,304,304,304,304,304,169,-211,-198,-200,-208,169,-28,-304,477,-261,-11,169,-267,-268,169,-253,-304,169,-259,169,169,169,169,169,169,-199,169,169,-261,169,-203,-204,-201,-304,-276,-283,169,169,169,-277,169,-205,-202,-207,169,-206,]),'CONST':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,38,39,40,42,43,45,48,49,50,51,52,53,54,58,59,61,67,68,71,77,81,82,83,85,86,87,88,90,95,96,97,99,100,101,103,104,112,113,119,121,122,123,125,126,127,128,129,130,131,132,133,134,138,145,146,161,186,190,191,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,356,357,359,374,375,394,426,427,429,433,438,439,450,451,474,492,494,495,516,517,519,521,],[51,51,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,51,-98,51,51,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,51,-112,-216,51,-109,-99,51,-102,-52,-115,-97,-108,-113,-81,-69,-92,-88,-90,-87,51,-89,-61,-302,-148,-147,-53,-161,51,51,-82,51,51,-131,-130,51,51,51,51,-162,-30,51,-70,-83,-141,51,51,-128,-137,51,-140,51,51,51,51,51,51,-71,51,51,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,51,-129,-127,-126,-132,-138,51,51,-36,51,51,-35,51,51,51,51,51,-151,-150,51,-212,-209,-213,-210,-197,-196,-139,-134,-133,51,51,51,-34,-31,51,-211,-198,-200,-208,51,51,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'TYPEID':([0,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,68,71,72,76,77,81,82,83,85,86,87,88,89,90,91,94,95,96,97,99,100,101,102,103,105,107,112,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,161,186,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,246,248,252,254,270,271,277,294,316,319,330,331,332,333,338,339,340,346,347,350,353,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[40,-304,-65,-105,-114,-95,-135,-104,-110,-117,-64,-62,-68,-91,-111,-67,40,-304,-98,75,40,-66,-103,-116,85,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-304,-112,-216,40,-109,-99,100,-136,-304,-102,-52,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,75,75,40,-89,-61,-302,-148,-147,-53,-161,-27,-28,-159,40,75,-82,40,40,-131,-130,-86,40,75,75,40,-162,-160,-30,40,-70,-83,-141,40,75,-128,-137,40,-140,40,40,40,247,40,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,40,-129,-127,-126,-132,-138,40,40,-36,247,40,40,-35,383,385,40,40,40,40,-151,-150,40,-212,-209,-213,-210,-197,-196,75,-139,-134,-133,40,40,-34,-31,40,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'LBRACKET':([4,6,7,9,10,11,15,16,20,24,25,27,28,29,30,32,34,35,36,38,39,40,43,45,49,50,51,52,53,54,61,67,68,71,75,80,81,83,85,86,87,88,89,90,91,100,101,108,119,120,121,129,138,139,149,150,151,153,155,159,162,163,164,165,170,171,173,176,178,181,183,185,194,195,204,227,228,230,236,240,242,243,246,247,248,254,261,267,272,273,278,279,314,321,322,330,331,354,355,360,361,363,374,375,376,379,382,383,384,385,386,389,392,394,395,422,423,446,447,448,449,450,451,452,456,457,461,466,467,479,480,481,482,483,487,488,498,499,500,501,502,509,510,511,513,518,],[-105,-114,-95,-104,-110,-117,-91,-111,-98,-103,-116,-94,-96,-93,-29,-107,-101,-106,-100,-304,-112,-216,-109,-99,-102,104,-115,-97,-108,-113,-92,-88,-90,-87,-37,113,-89,-302,-148,-147,104,-161,-27,-28,-159,-131,-130,113,-162,-160,-30,-128,251,-289,-279,268,274,-291,-300,-280,-278,-266,-298,-297,-281,-295,-294,-292,-296,-293,-290,-38,-149,-303,-289,-129,-127,-126,-132,-36,356,358,251,-45,251,-35,268,-178,-275,-274,-299,251,-301,-44,-43,-151,-150,-134,-133,358,356,251,-34,-31,-179,-181,268,-273,-272,-271,-270,-269,251,251,-282,-42,-39,-192,-186,-190,-188,-33,-32,-180,-267,-268,268,-41,-40,-51,-50,-189,-187,-191,-284,503,-49,-46,268,-276,-283,-48,-47,-277,-285,-286,]),'GOTO':([14,58,59,83,122,195,200,201,203,208,210,212,214,215,219,221,223,224,333,335,337,338,339,340,346,347,426,427,429,433,435,470,472,473,474,492,494,495,508,514,516,517,519,520,521,],[-68,-81,-69,-302,220,-303,-78,-72,-194,-74,-77,-193,-76,220,-73,-195,-75,220,-212,220,220,-209,-213,-210,-197,-196,-211,-198,-200,-208,220,220,220,220,-199,-203,-204,-201,220,220,-205,-202,-207,220,-206,]),'LOR':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,313,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-241,-244,-248,-242,-250,-246,-237,-238,-234,-236,-243,-239,-235,-245,-240,-247,-249,-251,-267,-268,-253,-259,-276,-283,-277,]),'RSHIFT':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,307,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,307,307,307,307,307,307,-237,-238,-234,-236,307,-239,-235,307,-240,307,307,307,-267,-268,-253,-259,-276,-283,-277,]),'VOID':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,68,71,77,81,82,83,85,86,87,88,94,95,96,97,99,100,101,102,103,112,119,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,161,186,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[45,-304,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,45,-304,-98,45,45,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,45,-109,-99,-304,-102,-52,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,45,-89,-61,-302,-148,-147,-53,-161,45,45,-82,45,45,-131,-130,-86,45,45,-162,-30,45,-70,-83,-141,45,45,-128,-137,45,-140,45,45,45,45,45,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,45,-129,-127,-126,-132,-138,45,45,-36,45,45,-35,45,45,45,45,45,-151,-150,45,-212,-209,-213,-210,-197,-196,-139,-134,-133,45,45,-34,-31,45,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'EQ':([139,149,151,152,153,155,159,162,163,164,165,166,168,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,456,457,460,464,501,502,511,],[-289,-279,-254,-233,-291,-300,-280,-278,-266,-298,-297,-252,309,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-241,-244,309,-242,309,-246,-237,-238,-234,-236,-243,-239,-235,-245,-240,309,309,309,-267,-268,-253,-259,-276,-283,-277,]),'TIMESEQUAL':([139,149,151,153,155,159,162,163,164,165,166,170,171,173,176,178,181,183,195,204,272,273,276,278,314,315,317,318,320,383,384,385,386,389,395,456,457,460,464,501,502,511,],[-289,-279,-254,-291,-300,-280,-278,-266,-298,-297,287,-281,-295,-294,-292,-296,-293,-290,-303,-289,-275,-274,-256,-299,-301,-258,-257,-252,-255,-273,-272,-271,-270,-269,-282,-267,-268,-253,-259,-276,-283,-277,]),'INT_CONST_HEX':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,145,146,147,150,154,156,157,161,169,174,175,177,179,180,182,190,191,192,195,196,200,201,202,203,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,274,275,277,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,506,508,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,176,176,-304,-162,176,-28,-304,176,-304,-263,-265,176,176,-261,-262,176,176,-260,-264,176,-28,-304,176,-303,176,-78,-72,176,-194,-74,-77,-193,-76,176,-73,-195,-75,176,176,176,176,176,176,-261,-11,176,-12,176,176,176,176,-225,-229,-224,-226,-220,-221,-227,-223,-222,176,-228,-219,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,-261,176,-212,176,176,176,-209,-213,-210,176,176,-197,-196,176,176,-304,176,-261,-177,-304,176,176,-211,-198,-200,-208,176,-28,-304,176,-261,-11,176,176,-304,176,176,176,176,176,176,176,-199,176,176,-261,176,-203,-204,-201,-304,176,176,176,176,-205,-202,-207,176,-206,]),'RBRACE':([14,58,59,83,114,115,116,122,126,130,131,132,139,149,150,151,152,153,155,158,159,160,162,163,164,165,166,168,170,171,173,176,178,181,183,193,195,197,198,200,201,203,208,209,210,212,214,219,221,222,223,224,237,238,239,262,266,269,272,273,276,278,314,315,317,318,320,327,328,329,333,338,339,340,346,347,353,378,380,382,383,384,385,386,389,395,397,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,426,427,429,433,455,456,457,460,464,474,484,486,489,492,494,495,500,501,502,511,516,517,519,521,],[-68,-81,-69,-302,195,-152,-155,-304,-141,-137,195,-140,-289,-279,-304,-254,-233,-291,-300,-172,-280,-217,-278,-266,-298,-297,-252,-231,-281,-295,-294,-292,-296,-293,-290,-153,-303,195,195,-78,-72,-194,-74,-5,-77,-193,-76,-73,-195,195,-75,-6,-138,195,195,-21,195,-22,-275,-274,-256,-299,-301,-258,-257,-252,-255,-154,-156,-230,-212,-209,-213,-210,-197,-196,-139,-175,-173,195,-273,-272,-271,-270,-269,-282,-218,-241,-244,-248,-242,-250,-246,-237,-238,-234,-236,-243,-239,-235,-245,-240,-247,-249,-251,-211,-198,-200,-208,-174,-267,-268,-253,-259,-199,-176,195,-232,-203,-204,-201,195,-276,-283,-277,-205,-202,-207,-206,]),'UNION':([0,2,3,7,11,12,13,14,17,18,19,20,22,23,25,27,28,29,30,31,37,42,48,50,51,52,55,56,57,58,59,66,77,82,83,87,88,94,96,97,99,102,103,112,119,121,122,123,125,126,127,130,131,132,133,134,137,161,186,195,200,201,203,208,210,212,214,219,221,223,224,237,238,239,240,248,252,254,277,294,316,319,332,333,338,339,340,346,347,353,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[47,-304,-65,-95,-117,-64,-62,-68,-67,47,-304,-98,47,-66,-116,-94,-96,-93,-29,-63,-60,47,-304,-52,-115,-97,-10,-9,-85,-81,-69,-84,47,-61,-302,-53,-161,47,-82,47,47,-86,47,47,-162,-30,47,-70,-83,-141,47,-137,47,-140,47,47,47,47,-71,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,47,-138,47,47,-36,47,47,-35,47,47,47,47,47,-212,-209,-213,-210,-197,-196,-139,47,47,-34,-31,47,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'FLOAT':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,68,71,77,81,82,83,85,86,87,88,94,95,96,97,99,100,101,102,103,112,119,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,161,186,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[4,-304,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,4,-304,-98,4,4,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,4,-109,-99,-304,-102,-52,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,4,-89,-61,-302,-148,-147,-53,-161,4,4,-82,4,4,-131,-130,-86,4,4,-162,-30,4,-70,-83,-141,4,4,-128,-137,4,-140,4,4,4,4,4,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,4,-129,-127,-126,-132,-138,4,4,-36,4,4,-35,4,4,4,4,4,-151,-150,4,-212,-209,-213,-210,-197,-196,-139,-134,-133,4,4,-34,-31,4,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),'COMMA':([4,6,7,9,10,11,15,16,20,24,25,27,28,29,30,32,34,35,36,38,39,40,43,45,49,50,51,52,53,54,61,62,64,65,67,68,70,71,73,74,75,77,79,80,81,85,86,87,88,89,90,91,100,101,108,114,115,116,119,120,121,124,129,136,138,139,140,141,142,148,149,151,152,153,155,158,159,160,162,163,164,165,166,168,170,171,172,173,176,178,181,183,184,185,187,193,194,195,197,198,204,217,218,227,228,229,230,231,233,236,240,241,242,243,244,245,246,247,249,250,254,269,272,273,276,278,279,280,314,315,317,318,320,321,322,327,328,329,330,331,334,351,354,355,360,361,370,371,374,375,378,380,383,384,385,386,387,388,389,390,392,393,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,422,423,428,431,432,434,436,437,446,447,448,449,450,451,455,456,457,460,464,466,467,479,480,481,482,483,484,485,486,489,493,498,499,501,502,509,510,511,512,],[-105,-114,-95,-104,-110,-117,-91,-111,-98,-103,-116,-94,-96,-93,-29,-107,-101,-106,-100,-304,-112,-216,-109,-99,-102,-52,-115,-97,-108,-113,-92,105,-122,-124,-88,-90,107,-87,-118,-158,-37,-157,-120,-54,-89,-148,-147,-53,-161,-27,-28,-159,-131,-130,-55,193,-152,-155,-162,-160,-30,-157,-128,-170,-304,-289,252,-165,253,-123,-279,-254,-233,-291,-300,-172,-280,-217,-278,-266,-298,-297,-252,-231,-281,-295,-125,-294,-292,-296,-293,-290,-119,-38,-121,-153,-149,-303,193,193,-289,-214,344,-129,-127,350,-126,-142,-144,-132,-36,-2,-56,-185,-169,-1,-183,-45,-167,-168,-35,382,-275,-274,-256,-299,-304,344,-301,-258,-257,-252,-255,-44,-43,-154,-156,-230,-151,-150,344,-146,-134,-133,-184,-57,-166,-171,-34,-31,-175,-173,-273,-272,-271,-270,344,-287,-269,458,-183,-182,-282,-218,462,344,-241,-244,-248,-242,-250,-246,-237,-238,-234,-236,-243,-239,-235,-245,-240,-247,-249,-251,-42,-39,344,344,-215,344,-143,-145,-192,-186,-190,-188,-33,-32,-174,-267,-268,-253,-259,-41,-40,-51,-50,-189,-187,-191,-176,-288,500,-232,344,-49,-46,-276,-283,-48,-47,-277,344,]),'OFFSETOF':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,145,146,147,150,154,156,157,161,169,174,175,177,179,180,182,190,191,192,195,196,200,201,202,203,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,274,275,277,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,506,508,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,167,167,-304,-162,167,-28,-304,167,-304,-263,-265,167,167,-261,-262,167,167,-260,-264,167,-28,-304,167,-303,167,-78,-72,167,-194,-74,-77,-193,-76,167,-73,-195,-75,167,167,167,167,167,167,-261,-11,167,-12,167,167,167,167,-225,-229,-224,-226,-220,-221,-227,-223,-222,167,-228,-219,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,-261,167,-212,167,167,167,-209,-213,-210,167,167,-197,-196,167,167,-304,167,-261,-177,-304,167,167,-211,-198,-200,-208,167,-28,-304,167,-261,-11,167,167,-304,167,167,167,167,167,167,167,-199,167,167,-261,167,-203,-204,-201,-304,167,167,167,167,-205,-202,-207,167,-206,]),'CHAR_CONST':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,145,146,147,150,154,156,157,161,169,174,175,177,179,180,182,190,191,192,195,196,200,201,202,203,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,274,275,277,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,506,508,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,178,178,-304,-162,178,-28,-304,178,-304,-263,-265,178,178,-261,-262,178,178,-260,-264,178,-28,-304,178,-303,178,-78,-72,178,-194,-74,-77,-193,-76,178,-73,-195,-75,178,178,178,178,178,178,-261,-11,178,-12,178,178,178,178,-225,-229,-224,-226,-220,-221,-227,-223,-222,178,-228,-219,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,-261,178,-212,178,178,178,-209,-213,-210,178,178,-197,-196,178,178,-304,178,-261,-177,-304,178,178,-211,-198,-200,-208,178,-28,-304,178,-261,-11,178,178,-304,178,178,178,178,178,178,178,-199,178,178,-261,178,-203,-204,-201,-304,178,178,178,178,-205,-202,-207,178,-206,]),'CASE':([14,58,59,83,122,195,200,201,203,208,210,212,214,215,219,221,223,224,333,335,337,338,339,340,346,347,426,427,429,433,435,470,472,473,474,492,494,495,508,514,516,517,519,520,521,],[-68,-81,-69,-302,226,-303,-78,-72,-194,-74,-77,-193,-76,226,-73,-195,-75,226,-212,226,226,-209,-213,-210,-197,-196,-211,-198,-200,-208,226,226,226,226,-199,-203,-204,-201,226,226,-205,-202,-207,226,-206,]),'INT_CONST_DEC':([11,14,25,51,58,59,83,88,89,90,104,106,111,113,119,122,145,146,147,150,154,156,157,161,169,174,175,177,179,180,182,190,191,192,195,196,200,201,202,203,208,210,212,214,215,219,221,223,224,226,232,251,255,256,258,262,263,265,268,274,275,277,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,325,332,333,335,336,337,338,339,340,343,344,346,347,348,352,356,358,367,377,382,396,424,426,427,429,433,435,438,439,440,443,453,454,458,461,463,465,469,470,471,472,473,474,475,476,477,490,492,494,495,500,503,506,508,514,516,517,519,520,521,],[-117,-68,-116,-115,-81,-69,-302,-161,-27,-28,-304,183,183,-304,-162,183,-28,-304,183,-304,-263,-265,183,183,-261,-262,183,183,-260,-264,183,-28,-304,183,-303,183,-78,-72,183,-194,-74,-77,-193,-76,183,-73,-195,-75,183,183,183,183,183,183,-261,-11,183,-12,183,183,183,183,-225,-229,-224,-226,-220,-221,-227,-223,-222,183,-228,-219,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,-261,183,-212,183,183,183,-209,-213,-210,183,183,-197,-196,183,183,-304,183,-261,-177,-304,183,183,-211,-198,-200,-208,183,-28,-304,183,-261,-11,183,183,-304,183,183,183,183,183,183,183,-199,183,183,-261,183,-203,-204,-201,-304,183,183,183,183,-205,-202,-207,183,-206,]),'SIGNED':([0,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,36,37,39,40,42,43,45,48,49,50,51,52,53,54,55,56,57,58,59,61,66,67,68,71,77,81,82,83,85,86,87,88,94,95,96,97,99,100,101,102,103,112,119,121,122,123,125,126,127,128,129,130,131,132,133,134,137,138,161,186,194,195,200,201,203,208,210,212,214,219,221,223,224,227,228,230,236,237,238,239,240,248,252,254,277,279,294,316,319,330,331,332,333,338,339,340,346,347,353,354,355,357,359,374,375,394,426,427,429,433,450,451,474,492,494,495,516,517,519,521,],[53,-304,-65,-105,-114,-95,-104,-110,-117,-64,-62,-68,-91,-111,-67,53,-304,-98,53,53,-66,-103,-116,-94,-96,-93,-29,-63,-107,-101,-106,-100,-60,-112,-216,53,-109,-99,-304,-102,-52,-115,-97,-108,-113,-10,-9,-85,-81,-69,-92,-84,-88,-90,-87,53,-89,-61,-302,-148,-147,-53,-161,53,53,-82,53,53,-131,-130,-86,53,53,-162,-30,53,-70,-83,-141,53,53,-128,-137,53,-140,53,53,53,53,53,-71,-149,-303,-78,-72,-194,-74,-77,-193,-76,-73,-195,-75,53,-129,-127,-126,-132,-138,53,53,-36,53,53,-35,53,53,53,53,53,-151,-150,53,-212,-209,-213,-210,-197,-196,-139,-134,-133,53,53,-34,-31,53,-211,-198,-200,-208,-33,-32,-199,-203,-204,-201,-205,-202,-207,-206,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant_expression':([196,226,232,268,352,],[328,349,351,381,437,]),'translation_unit_or_empty':([0,],[1,]),'storage_class_specifier':([0,2,19,21,22,42,48,77,95,97,103,112,122,138,224,248,252,332,357,359,394,],[2,2,2,67,2,2,2,2,67,2,2,2,2,67,2,2,2,2,2,2,2,]),'pppragma_directive':([0,22,99,122,131,133,134,215,224,238,239,335,337,435,470,472,473,508,514,520,],[3,3,126,200,126,126,126,200,200,126,126,200,200,200,200,200,200,200,200,200,]),'decl_body':([0,22,42,77,97,122,224,332,],[5,5,5,5,5,5,5,5,]),'postfix_expression':([106,111,122,147,157,161,175,177,182,192,196,202,215,224,226,232,251,255,256,263,268,274,275,277,291,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,332,335,336,337,343,344,348,352,358,396,424,435,440,454,458,463,465,469,470,471,472,473,475,476,490,503,506,508,514,520,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'conditional_expression':([106,111,122,147,161,192,196,202,215,224,226,232,251,255,256,263,268,274,275,277,291,295,316,319,323,324,332,335,336,337,343,344,348,352,358,424,435,440,454,458,463,469,470,471,472,473,475,476,490,503,506,508,514,520,],[160,160,160,160,160,160,329,160,160,160,329,329,160,160,160,160,329,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,329,160,160,160,160,160,160,489,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'cast_expression':([106,111,122,147,161,177,192,196,202,215,224,226,232,251,255,256,263,268,274,275,277,291,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,332,335,336,337,343,344,348,352,358,396,424,435,440,454,458,463,465,469,470,471,472,473,475,476,490,503,506,508,514,520,],[152,152,152,152,152,317,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,460,152,152,152,152,152,152,460,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'parameter_type_list_opt':([248,359,394,],[362,445,362,]),'labeled_statement':([122,215,224,335,337,435,470,472,473,508,514,520,],[201,201,201,201,201,201,201,201,201,201,201,201,]),'designator_list':([150,382,461,500,],[261,261,261,261,]),'init_declarator_list_opt':([21,95,],[69,69,]),'designator':([150,261,382,461,500,],[267,376,267,267,267,]),'direct_abstract_declarator':([138,246,248,279,363,392,394,],[243,360,243,243,360,360,243,]),'abstract_declarator_opt':([138,279,],[244,393,]),'unified_wstring_literal':([106,111,122,147,157,161,175,177,182,192,196,202,215,224,226,232,251,255,256,263,268,274,275,277,291,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,332,335,336,337,343,344,348,352,358,396,424,435,440,454,458,463,465,469,470,471,472,473,475,476,490,503,506,508,514,520,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'type_specifier':([0,18,22,42,77,94,97,99,103,112,122,127,131,133,134,137,161,224,238,239,248,252,277,294,316,319,332,357,359,394,],[15,61,15,15,15,61,15,129,15,15,15,227,129,129,129,61,129,15,129,129,15,15,129,129,129,129,15,15,15,15,]),'typedef_name':([0,18,22,42,77,94,97,99,103,112,122,127,131,133,134,137,161,224,238,239,248,252,277,294,316,319,332,357,359,394,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'offsetof_member_designator':([462,],[488,]),'type_qualifier':([0,2,19,21,22,38,42,48,77,90,95,97,99,103,104,112,113,122,127,128,131,133,134,138,145,146,161,190,191,224,238,239,248,252,277,279,294,316,319,332,356,357,359,394,438,439,],[19,19,19,71,19,88,19,19,19,119,71,19,88,19,88,19,88,19,119,228,88,88,88,71,119,88,88,119,88,19,88,88,19,19,88,228,88,88,88,19,88,19,19,19,119,88,]),'unified_string_literal':([106,111,122,147,157,161,175,177,182,192,196,202,215,224,226,232,251,255,256,263,268,274,275,277,291,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,332,335,336,337,343,344,348,352,358,396,424,435,440,454,458,463,465,469,470,471,472,473,475,476,490,503,506,508,514,520,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'brace_open':([26,46,85,86,93,100,101,106,110,111,122,215,224,263,335,337,396,435,454,459,464,465,470,472,473,508,514,520,],[84,99,117,118,122,133,134,150,122,150,122,122,122,150,122,122,461,122,150,461,461,461,122,122,122,122,122,122,]),'designation_opt':([150,382,461,500,],[263,454,263,454,]),'type_specifier_no_typeid':([0,18,21,22,42,77,94,95,97,99,103,112,122,127,128,131,133,134,137,138,161,224,238,239,248,252,277,279,294,316,319,332,357,359,394,],[6,6,68,6,6,6,6,68,6,6,6,6,6,6,230,6,6,6,6,68,6,6,6,6,6,6,6,230,6,6,6,6,6,6,6,]),'enumerator_list':([84,117,118,],[114,197,198,]),'type_qualifier_list':([38,99,104,113,131,133,134,146,161,191,238,239,277,294,316,319,356,439,],[90,127,145,190,127,127,127,90,127,90,127,127,127,127,127,127,438,90,]),'enumerator':([84,117,118,193,],[115,115,115,327,]),'declaration':([0,22,42,77,97,122,224,332,],[31,31,96,96,125,212,212,424,]),'pointer':([0,18,21,22,41,76,91,94,95,105,107,128,138,248,279,350,394,],[33,33,72,33,33,72,120,33,72,72,72,72,246,363,392,72,392,]),'expression':([122,161,202,215,224,274,277,295,316,319,332,335,336,337,343,348,424,435,469,470,471,472,473,490,503,506,508,514,520,],[218,280,334,218,218,387,280,399,280,280,218,218,428,218,431,434,218,218,218,218,493,218,218,218,512,218,218,218,218,]),'typeid_declarator':([21,76,95,105,107,128,350,],[74,109,74,74,74,74,74,]),'binary_expression':([106,111,122,147,161,192,196,202,215,224,226,232,251,255,256,263,268,274,275,277,291,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,332,335,336,337,343,344,348,352,358,424,435,440,454,458,463,469,470,471,472,473,475,476,490,503,506,508,514,520,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'external_declaration':([0,22,],[37,82,]),'identifier_list':([103,112,357,],[142,142,142,]),'id_declarator':([0,18,21,22,41,76,94,95,105,107,128,138,248,350,],[42,65,77,42,92,92,65,124,124,124,124,249,92,124,]),'struct_declaration':([99,131,133,134,238,239,],[130,237,130,130,237,237,]),'compound_statement':([93,110,122,215,224,335,337,435,470,472,473,508,514,520,],[123,186,208,208,208,208,208,208,208,208,208,208,208,208,]),'enum_specifier':([0,18,22,42,77,94,97,99,103,112,122,127,131,133,134,137,161,224,238,239,248,252,277,294,316,319,332,357,359,394,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'parameter_type_list':([103,112,248,357,359,394,],[143,189,365,442,365,365,]),'assignment_operator':([166,],[291,]),'direct_typeid_declarator':([21,72,76,95,105,107,128,350,],[80,108,80,80,80,80,80,80,]),'empty':([0,2,18,19,21,38,42,48,77,94,95,103,104,112,113,122,128,138,146,147,150,191,192,215,224,248,251,279,332,335,337,356,357,358,359,382,394,424,435,439,440,461,469,470,472,473,490,500,506,508,514,520,],[44,56,63,56,78,89,98,56,98,63,78,144,89,144,89,209,235,245,89,259,262,89,259,341,341,366,259,245,341,341,341,89,144,259,366,453,366,341,341,89,259,453,341,341,341,341,341,453,341,341,341,341,]),'typeid_noparen_declarator':([138,],[250,]),'struct_or_union':([0,18,22,42,77,94,97,99,103,112,122,127,131,133,134,137,161,224,238,239,248,252,277,294,316,319,332,357,359,394,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'jump_statement':([122,215,224,335,337,435,470,472,473,508,514,520,],[210,210,210,210,210,210,210,210,210,210,210,210,]),'translation_unit':([0,],[22,]),'specifier_qualifier_list':([99,131,133,134,161,238,239,277,294,316,319,],[128,128,128,128,279,128,128,279,279,279,279,]),'expression_opt':([122,215,224,332,335,337,424,435,469,470,472,473,490,506,508,514,520,],[211,211,211,425,211,211,468,211,491,211,211,211,505,515,211,211,211,]),'assignment_expression_opt':([147,192,251,358,440,],[260,326,368,444,478,]),'direct_id_declarator':([0,18,21,22,33,41,72,76,94,95,105,107,128,138,246,248,350,363,],[50,50,50,50,87,50,87,50,50,50,50,50,50,50,87,50,50,87,]),'struct_declarator_list_opt':([128,],[234,]),'struct_or_union_specifier':([0,18,22,42,77,94,97,99,103,112,122,127,131,133,134,137,161,224,238,239,248,252,277,294,316,319,332,357,359,394,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'id_init_declarator_list_opt':([18,94,],[60,60,]),'identifier_list_opt':([103,112,357,],[135,188,441,]),'constant':([106,111,122,147,157,161,175,177,182,192,196,202,215,224,226,232,251,255,256,263,268,274,275,277,291,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,332,335,336,337,343,344,348,352,358,396,424,435,440,454,458,463,465,469,470,471,472,473,475,476,490,503,506,508,514,520,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'struct_declarator_list':([128,],[229,]),'identifier':([103,106,111,112,122,147,157,161,175,177,182,192,196,202,215,224,226,232,251,253,255,256,263,264,268,274,275,277,291,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,332,335,336,337,343,344,348,352,357,358,396,424,435,440,454,458,462,463,465,469,470,471,472,473,475,476,490,503,504,506,508,514,520,],[136,162,162,136,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,371,162,162,162,379,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,136,162,162,162,162,162,162,162,487,162,162,162,162,162,162,162,162,162,162,162,513,162,162,162,162,]),'declaration_list_opt':([42,77,],[93,110,]),'iteration_statement':([122,215,224,335,337,435,470,472,473,508,514,520,],[214,214,214,214,214,214,214,214,214,214,214,214,]),'pp_directive':([0,22,],[12,12,]),'function_definition':([0,22,],[13,13,]),'init_declarator_list':([21,95,],[70,70,]),'type_qualifier_list_opt':([38,104,113,146,191,356,439,],[91,147,192,256,324,440,476,]),'assignment_expression':([106,111,122,147,161,192,202,215,224,251,255,256,263,274,275,277,291,295,316,319,323,324,332,335,336,337,343,344,348,358,424,435,440,454,458,469,470,471,472,473,475,476,490,503,506,508,514,520,],[158,158,217,257,217,257,217,217,217,257,372,373,158,217,388,217,397,217,217,217,420,421,217,217,217,217,217,432,217,257,217,217,257,158,485,217,217,217,217,217,496,497,217,217,217,217,217,217,]),'id_init_declarator_list':([18,94,],[62,62,]),'declaration_specifiers_no_type':([0,2,19,22,42,48,77,97,103,112,122,224,248,252,332,357,359,394,],[18,55,55,18,94,55,94,94,137,137,94,94,137,137,94,137,137,137,]),'block_item_list_opt':([122,],[222,]),'declaration_specifiers':([0,22,42,77,97,103,112,122,224,248,252,332,357,359,394,],[21,21,95,95,95,138,138,95,95,138,138,95,138,138,138,]),'struct_declarator':([128,350,],[231,436,]),'parameter_list':([103,112,248,357,359,394,],[140,140,140,140,140,140,]),'id_init_declarator':([18,94,],[64,64,]),'direct_typeid_noparen_declarator':([138,246,],[242,361,]),'designation':([150,382,461,500,],[265,265,265,265,]),'primary_expression':([106,111,122,147,157,161,175,177,182,192,196,202,215,224,226,232,251,255,256,263,268,274,275,277,291,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,332,335,336,337,343,344,348,352,358,396,424,435,440,454,458,463,465,469,470,471,472,473,475,476,490,503,506,508,514,520,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'unary_expression':([106,111,122,147,157,161,175,177,182,192,196,202,215,224,226,232,251,255,256,263,268,274,275,277,291,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,332,335,336,337,343,344,348,352,358,396,424,435,440,454,458,463,465,469,470,471,472,473,475,476,490,503,506,508,514,520,],[166,166,166,166,276,166,315,318,320,166,318,166,166,166,318,318,166,166,166,166,318,166,166,166,166,166,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,166,166,166,166,166,166,166,166,166,166,166,318,166,318,166,166,166,166,166,318,318,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'expression_statement':([122,215,224,335,337,435,470,472,473,508,514,520,],[219,219,219,219,219,219,219,219,219,219,219,219,]),'declaration_list':([42,77,],[97,97,]),'initializer_list_opt':([150,],[266,]),'brace_close':([114,131,197,198,222,238,239,266,382,486,500,],[194,236,330,331,346,354,355,380,455,501,511,]),'initializer':([106,111,263,454,],[172,187,378,484,]),'statement':([122,215,224,335,337,435,470,472,473,508,514,520,],[203,342,203,427,429,474,492,494,495,517,519,521,]),'argument_expression_list':([275,],[390,]),'type_name':([161,277,294,316,319,],[281,391,398,418,419,]),'block_item':([122,224,],[221,347,]),'init_declarator':([21,95,105,107,],[73,73,148,184,]),'struct_declaration_list':([99,133,134,],[131,238,239,]),'selection_statement':([122,215,224,335,337,435,470,472,473,508,514,520,],[223,223,223,223,223,223,223,223,223,223,223,223,]),'block_item_list':([122,],[224,]),'initializer_list':([150,461,],[269,486,]),'unary_operator':([106,111,122,147,157,161,175,177,182,192,196,202,215,224,226,232,251,255,256,263,268,274,275,277,291,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,319,323,324,332,335,336,337,343,344,348,352,358,396,424,435,440,454,458,463,465,469,470,471,472,473,475,476,490,503,506,508,514,520,],[177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,]),'function_specifier':([0,2,19,21,22,42,48,77,95,97,103,112,122,138,224,248,252,332,357,359,394,],[48,48,48,81,48,48,48,48,81,48,48,48,48,81,48,48,48,48,48,48,48,]),'declaration_specifiers_no_type_opt':([2,19,48,],[57,66,102,]),'declarator':([21,95,105,107,128,350,],[79,79,79,79,233,233,]),'abstract_declarator':([138,248,279,394,],[241,364,241,364,]),'parameter_declaration':([103,112,248,252,357,359,394,],[141,141,141,370,141,141,141,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
