
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'VOID':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,131,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,255,274,283,284,285,288,290,293,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[6,-304,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,6,-94,-109,-104,-65,-93,-110,6,-216,-107,-111,6,-63,-116,6,-29,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,6,-53,6,-82,6,6,-61,-131,-302,-130,6,-148,-147,-161,-88,-90,6,-87,-89,-92,-81,-84,-86,-69,-30,6,6,-70,6,-83,6,6,-128,-140,-141,-137,6,6,6,-162,6,6,-36,-35,6,6,-73,-76,-72,-74,6,-78,-194,-193,-77,-195,-75,6,6,-129,-132,-138,-303,-126,-127,-149,-71,6,-31,6,6,6,-34,6,6,6,-213,-212,6,-210,-196,-209,-197,-134,-133,-139,-151,-150,6,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'LBRACKET':([2,3,5,6,7,8,9,10,11,15,16,19,20,21,24,25,29,30,31,32,35,37,39,41,44,45,48,50,51,54,61,69,70,71,73,74,76,77,78,79,80,83,85,88,91,92,96,105,113,115,125,137,138,141,148,151,152,153,154,155,156,159,160,168,170,173,175,176,178,179,185,186,187,190,191,194,197,227,231,232,234,235,241,246,248,257,273,276,277,279,283,290,293,316,321,322,351,352,357,358,365,366,369,374,378,379,380,381,384,389,392,393,413,414,415,416,422,423,441,442,446,448,450,453,454,460,466,467,468,469,470,478,479,480,485,486,489,490,500,503,504,505,506,511,513,518,],[-102,-115,-113,-99,-97,59,-95,-114,-96,-100,-91,-94,-109,-104,-93,-110,-216,-107,-304,-111,-116,-29,-105,-101,-112,-106,-108,-103,-117,-98,59,-131,-302,-130,-148,-147,-28,-159,-161,-27,-88,-90,142,-37,-87,-89,-92,-30,196,-289,-128,-162,-160,142,-293,-281,-296,-300,-297,-294,-279,-280,281,-292,-266,-298,-290,-278,-295,-291,-36,-35,196,196,323,-45,327,-289,-129,-132,-303,-126,-127,-149,-38,371,-301,-299,-275,-274,-31,-34,196,196,323,327,-134,-133,-151,-150,-44,-43,-178,371,-273,-272,-271,-270,-269,-282,196,196,-33,-32,-192,-186,-188,-190,-39,-42,-181,371,-179,-267,-268,371,-51,-50,-187,-189,-191,-41,-40,-180,502,-284,-46,-49,-283,371,-276,-48,-47,-285,-277,-286,]),'WCHAR_CONST':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,137,142,145,146,149,157,158,164,165,167,169,171,172,174,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,502,503,507,510,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,154,-28,-304,154,-162,-304,154,154,-265,154,-263,154,-262,154,-261,154,154,-260,-264,154,154,154,-73,-76,-72,154,-74,154,154,-78,-194,-193,-77,-195,154,-75,-261,-303,154,154,154,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,154,-228,-229,-221,-227,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-304,-261,154,-213,-212,154,-210,154,154,154,-196,154,-209,-197,154,154,154,-261,154,154,-12,154,154,-11,154,154,-28,-304,-261,-208,-211,154,-200,154,-198,-304,-177,154,154,-304,154,-261,154,154,154,154,-199,154,154,154,154,-11,154,-204,-203,-201,154,-304,154,154,154,-205,-202,154,-207,-206,]),'FLOAT_CONST':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,137,142,145,146,149,157,158,164,165,167,169,171,172,174,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,502,503,507,510,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,155,-28,-304,155,-162,-304,155,155,-265,155,-263,155,-262,155,-261,155,155,-260,-264,155,155,155,-73,-76,-72,155,-74,155,155,-78,-194,-193,-77,-195,155,-75,-261,-303,155,155,155,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,155,-228,-229,-221,-227,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,-304,-261,155,-213,-212,155,-210,155,155,155,-196,155,-209,-197,155,155,155,-261,155,155,-12,155,155,-11,155,155,-28,-304,-261,-208,-211,155,-200,155,-198,-304,-177,155,155,-304,155,-261,155,155,155,155,-199,155,155,155,155,-11,155,-204,-203,-201,155,-304,155,155,155,-205,-202,155,-207,-206,]),'MINUS':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,115,121,137,142,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,227,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,281,282,285,286,287,288,289,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,378,379,380,381,384,389,390,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,417,418,419,425,427,428,430,432,434,437,448,451,452,453,454,455,457,459,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,500,502,503,504,507,510,513,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,158,-28,-304,-289,158,-162,-304,158,158,-293,-265,-252,-281,-296,-300,-297,-294,-279,158,-263,-280,-254,-233,158,-262,158,-292,-261,-266,158,158,-298,-260,-290,-278,298,-295,-291,-264,158,158,158,-73,-76,-72,158,-74,158,158,-78,-194,-193,-77,-195,158,-75,-261,-289,-303,158,158,158,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,158,-228,-229,-221,-227,-301,158,-258,-299,-275,-274,158,158,158,-252,-257,158,-255,-256,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,-304,-261,158,-213,-212,158,-210,158,158,158,-196,158,-209,-197,158,158,158,-261,158,158,-12,158,158,-11,-273,-272,-271,-270,-269,-282,158,298,298,298,-238,298,298,298,-237,298,298,-235,-234,298,298,298,298,298,-236,158,-28,-304,-261,-208,-211,158,-200,158,-198,-304,-177,-259,-267,-268,158,158,-253,-304,158,-261,158,158,158,158,-199,158,158,158,158,-11,158,-204,-203,-201,-283,158,-304,-276,158,158,-277,158,-205,-202,158,-207,-206,]),'RPAREN':([2,3,5,6,7,8,9,10,11,15,16,19,20,21,24,25,29,30,31,32,35,37,39,41,44,45,48,50,51,54,58,60,61,69,71,73,74,76,77,78,79,80,83,85,88,91,92,96,105,109,110,111,112,113,114,115,116,118,125,137,138,139,141,143,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,181,185,186,187,188,189,190,191,192,193,194,195,197,209,225,231,232,234,235,241,246,248,253,254,273,275,276,277,279,282,283,286,287,289,290,291,292,293,294,316,317,318,319,320,321,322,324,328,329,330,331,344,351,352,357,358,365,366,376,377,378,379,380,381,383,384,385,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,420,421,422,423,426,431,433,435,438,441,442,452,453,454,459,466,467,468,469,470,478,479,484,485,486,488,489,490,494,497,500,504,505,506,507,508,511,513,514,518,],[-102,-115,-113,-99,-97,-52,-95,-114,-96,-100,-91,-94,-109,-104,-93,-110,-216,-107,-304,-111,-116,-29,-105,-101,-112,-106,-108,-103,-117,-98,105,-304,-53,-131,-130,-148,-147,-28,-159,-161,-27,-88,-90,-54,-37,-87,-89,-92,-30,185,-17,186,-165,-304,-18,-289,-163,-170,-128,-162,-160,248,-55,-304,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,-231,-295,-291,-217,-36,-35,-304,-169,-2,-183,-56,-167,-1,-45,-168,-185,-14,-214,-129,-132,-303,-126,-127,-149,-38,365,366,-301,-258,-299,-275,-274,384,-31,-252,-257,-255,-34,389,390,-304,-256,-183,-23,-24,415,416,-57,-184,-304,-304,-171,-164,-166,-13,-134,-133,-151,-150,-44,-43,-218,452,-273,-272,-271,-270,-287,-269,454,457,458,-282,-182,-183,-304,-239,-251,-240,-238,-242,-246,-241,-237,-244,-249,-235,-234,-243,-250,-245,-247,-248,-236,-33,-32,-192,-186,466,467,-188,-190,470,-215,473,475,477,-39,-42,-259,-267,-268,-253,-51,-50,-187,-189,-191,-41,-40,-288,500,-284,-232,-46,-49,-304,509,-283,-276,-48,-47,-304,515,-285,-277,519,-286,]),'LONG':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,131,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,255,274,283,284,285,288,290,293,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[21,-304,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,21,-94,-109,-104,-65,-93,-110,21,-216,-107,-111,21,-63,-116,21,-29,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,21,-53,21,-82,21,21,-61,-131,-302,-130,21,-148,-147,-161,-88,-90,21,-87,-89,-92,-81,-84,-86,-69,-30,21,21,-70,21,-83,21,21,-128,-140,-141,-137,21,21,21,-162,21,21,-36,-35,21,21,-73,-76,-72,-74,21,-78,-194,-193,-77,-195,-75,21,21,-129,-132,-138,-303,-126,-127,-149,-71,21,-31,21,21,21,-34,21,21,21,-213,-212,21,-210,-196,-209,-197,-134,-133,-139,-151,-150,21,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'PLUS':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,115,121,137,142,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,227,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,281,282,285,286,287,288,289,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,378,379,380,381,384,389,390,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,417,418,419,425,427,428,430,432,434,437,448,451,452,453,454,455,457,459,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,500,502,503,504,507,510,513,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,165,-28,-304,-289,165,-162,-304,165,165,-293,-265,-252,-281,-296,-300,-297,-294,-279,165,-263,-280,-254,-233,165,-262,165,-292,-261,-266,165,165,-298,-260,-290,-278,302,-295,-291,-264,165,165,165,-73,-76,-72,165,-74,165,165,-78,-194,-193,-77,-195,165,-75,-261,-289,-303,165,165,165,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,165,-228,-229,-221,-227,-301,165,-258,-299,-275,-274,165,165,165,-252,-257,165,-255,-256,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-304,-261,165,-213,-212,165,-210,165,165,165,-196,165,-209,-197,165,165,165,-261,165,165,-12,165,165,-11,-273,-272,-271,-270,-269,-282,165,302,302,302,-238,302,302,302,-237,302,302,-235,-234,302,302,302,302,302,-236,165,-28,-304,-261,-208,-211,165,-200,165,-198,-304,-177,-259,-267,-268,165,165,-253,-304,165,-261,165,165,165,165,-199,165,165,165,165,-11,165,-204,-203,-201,-283,165,-304,-276,165,165,-277,165,-205,-202,165,-207,-206,]),'ELLIPSIS':([199,],[330,]),'GT':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,303,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-239,303,-240,-238,-242,303,-241,-237,-244,303,-235,-234,-243,303,303,303,303,-236,-259,-267,-268,-253,-283,-276,-277,]),'GOTO':([53,70,101,104,121,200,201,204,206,213,215,216,217,218,220,222,223,234,333,334,337,339,343,346,348,349,427,428,432,434,437,473,474,475,477,495,496,498,510,515,516,517,519,520,521,],[-68,-302,-81,-69,202,-73,-76,-72,-74,202,-78,-194,-193,-77,-195,202,-75,-303,-213,-212,-210,202,-196,-209,-197,202,-208,-211,-200,202,-198,202,-199,202,202,-204,-203,-201,202,202,-205,-202,202,-207,-206,]),'ENUM':([0,1,3,7,8,9,11,12,14,17,18,19,23,24,26,34,35,36,37,40,42,47,49,51,53,54,55,56,57,60,61,64,65,67,68,70,72,78,87,101,102,103,104,105,117,120,121,122,123,124,126,127,128,129,130,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,233,234,255,274,283,284,285,288,290,324,328,333,334,336,337,343,346,348,355,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[28,-304,-115,-97,-52,-95,-96,-64,-60,-66,28,-94,-65,-93,28,-63,-116,28,-29,-62,-67,-304,-304,-117,-68,-98,-85,-10,-9,28,-53,-82,28,28,-61,-302,28,-161,28,-81,-84,-86,-69,-30,28,-70,28,-83,28,28,-140,-141,-137,28,28,-162,28,28,-36,-35,28,28,-73,-76,-72,-74,28,-78,-194,-193,-77,-195,-75,28,28,-138,-303,-71,28,-31,28,28,28,-34,28,28,-213,-212,28,-210,-196,-209,-197,-139,28,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'PERIOD':([70,115,148,151,152,153,154,155,156,159,160,168,170,173,175,176,178,179,227,234,257,273,276,277,279,369,374,378,379,380,381,384,389,446,448,450,453,454,460,480,485,486,500,503,504,511,513,518,],[-302,-289,-293,-281,-296,-300,-297,-294,-279,-280,280,-292,-266,-298,-290,-278,-295,-291,-289,-303,370,-301,-299,-275,-274,-178,370,-273,-272,-271,-270,-269,-282,-181,370,-179,-267,-268,370,-180,501,-284,-283,370,-276,-285,-277,-286,]),'GE':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,307,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-239,307,-240,-238,-242,307,-241,-237,-244,307,-235,-234,-243,307,307,307,307,-236,-259,-267,-268,-253,-283,-276,-277,]),'INT_CONST_DEC':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,137,142,145,146,149,157,158,164,165,167,169,171,172,174,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,502,503,507,510,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,175,-28,-304,175,-162,-304,175,175,-265,175,-263,175,-262,175,-261,175,175,-260,-264,175,175,175,-73,-76,-72,175,-74,175,175,-78,-194,-193,-77,-195,175,-75,-261,-303,175,175,175,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,175,-228,-229,-221,-227,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,-304,-261,175,-213,-212,175,-210,175,175,175,-196,175,-209,-197,175,175,175,-261,175,175,-12,175,175,-11,175,175,-28,-304,-261,-208,-211,175,-200,175,-198,-304,-177,175,175,-304,175,-261,175,175,175,175,-199,175,175,175,175,-11,175,-204,-203,-201,175,-304,175,175,175,-205,-202,175,-207,-206,]),'ARROW':([115,148,151,152,153,154,155,156,159,160,168,170,173,175,176,178,179,227,234,273,276,277,279,378,379,380,381,384,389,453,454,500,504,513,],[-289,-293,-281,-296,-300,-297,-294,-279,-280,278,-292,-266,-298,-290,-278,-295,-291,-289,-303,-301,-299,-275,-274,-273,-272,-271,-270,-269,-282,-267,-268,-283,-276,-277,]),'CHAR':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,131,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,255,274,283,284,285,288,290,293,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[41,-304,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,41,-94,-109,-104,-65,-93,-110,41,-216,-107,-111,41,-63,-116,41,-29,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,41,-53,41,-82,41,41,-61,-131,-302,-130,41,-148,-147,-161,-88,-90,41,-87,-89,-92,-81,-84,-86,-69,-30,41,41,-70,41,-83,41,41,-128,-140,-141,-137,41,41,41,-162,41,41,-36,-35,41,41,-73,-76,-72,-74,41,-78,-194,-193,-77,-195,-75,41,41,-129,-132,-138,-303,-126,-127,-149,-71,41,-31,41,41,41,-34,41,41,41,-213,-212,41,-210,-196,-209,-197,-134,-133,-139,-151,-150,41,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'HEX_FLOAT_CONST':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,137,142,145,146,149,157,158,164,165,167,169,171,172,174,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,502,503,507,510,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,178,-28,-304,178,-162,-304,178,178,-265,178,-263,178,-262,178,-261,178,178,-260,-264,178,178,178,-73,-76,-72,178,-74,178,178,-78,-194,-193,-77,-195,178,-75,-261,-303,178,178,178,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,178,-228,-229,-221,-227,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,-304,-261,178,-213,-212,178,-210,178,178,178,-196,178,-209,-197,178,178,178,-261,178,178,-12,178,178,-11,178,178,-28,-304,-261,-208,-211,178,-200,178,-198,-304,-177,178,178,-304,178,-261,178,178,178,178,-199,178,178,178,178,-11,178,-204,-203,-201,178,-304,178,178,178,-205,-202,178,-207,-206,]),'DOUBLE':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,131,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,255,274,283,284,285,288,290,293,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[45,-304,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,45,-94,-109,-104,-65,-93,-110,45,-216,-107,-111,45,-63,-116,45,-29,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,45,-53,45,-82,45,45,-61,-131,-302,-130,45,-148,-147,-161,-88,-90,45,-87,-89,-92,-81,-84,-86,-69,-30,45,45,-70,45,-83,45,45,-128,-140,-141,-137,45,45,45,-162,45,45,-36,-35,45,45,-73,-76,-72,-74,45,-78,-194,-193,-77,-195,-75,45,45,-129,-132,-138,-303,-126,-127,-149,-71,45,-31,45,45,45,-34,45,45,45,-213,-212,45,-210,-196,-209,-197,-134,-133,-139,-151,-150,45,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'MINUSEQUAL':([115,148,150,151,152,153,154,155,156,159,160,168,170,173,175,176,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,452,453,454,459,500,504,513,],[-289,-293,262,-281,-296,-300,-297,-294,-279,-280,-254,-292,-266,-298,-290,-278,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-259,-267,-268,-253,-283,-276,-277,]),'INT_CONST_OCT':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,137,142,145,146,149,157,158,164,165,167,169,171,172,174,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,502,503,507,510,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,179,-28,-304,179,-162,-304,179,179,-265,179,-263,179,-262,179,-261,179,179,-260,-264,179,179,179,-73,-76,-72,179,-74,179,179,-78,-194,-193,-77,-195,179,-75,-261,-303,179,179,179,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,179,-228,-229,-221,-227,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,-304,-261,179,-213,-212,179,-210,179,179,179,-196,179,-209,-197,179,179,179,-261,179,179,-12,179,179,-11,179,179,-28,-304,-261,-208,-211,179,-200,179,-198,-304,-177,179,179,-304,179,-261,179,179,179,179,-199,179,179,179,179,-11,179,-204,-203,-201,179,-304,179,179,179,-205,-202,179,-207,-206,]),'TIMESEQUAL':([115,148,150,151,152,153,154,155,156,159,160,168,170,173,175,176,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,452,453,454,459,500,504,513,],[-289,-293,271,-281,-296,-300,-297,-294,-279,-280,-254,-292,-266,-298,-290,-278,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-259,-267,-268,-253,-283,-276,-277,]),'OR':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,312,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-239,312,-240,-238,-242,-246,-241,-237,-244,-249,-235,-234,-243,312,-245,-247,-248,-236,-259,-267,-268,-253,-283,-276,-277,]),'SHORT':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,131,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,255,274,283,284,285,288,290,293,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[2,-304,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,2,-94,-109,-104,-65,-93,-110,2,-216,-107,-111,2,-63,-116,2,-29,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,2,-53,2,-82,2,2,-61,-131,-302,-130,2,-148,-147,-161,-88,-90,2,-87,-89,-92,-81,-84,-86,-69,-30,2,2,-70,2,-83,2,2,-128,-140,-141,-137,2,2,2,-162,2,2,-36,-35,2,2,-73,-76,-72,-74,2,-78,-194,-193,-77,-195,-75,2,2,-129,-132,-138,-303,-126,-127,-149,-71,2,-31,2,2,2,-34,2,2,2,-213,-212,2,-210,-196,-209,-197,-134,-133,-139,-151,-150,2,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'RETURN':([53,70,101,104,121,200,201,204,206,213,215,216,217,218,220,222,223,234,333,334,337,339,343,346,348,349,427,428,432,434,437,473,474,475,477,495,496,498,510,515,516,517,519,520,521,],[-68,-302,-81,-69,205,-73,-76,-72,-74,205,-78,-194,-193,-77,-195,205,-75,-303,-213,-212,-210,205,-196,-209,-197,205,-208,-211,-200,205,-198,205,-199,205,205,-204,-203,-201,205,205,-205,-202,205,-207,-206,]),'RSHIFTEQUAL':([115,148,150,151,152,153,154,155,156,159,160,168,170,173,175,176,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,452,453,454,459,500,504,513,],[-289,-293,272,-281,-296,-300,-297,-294,-279,-280,-254,-292,-266,-298,-290,-278,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-259,-267,-268,-253,-283,-276,-277,]),'RESTRICT':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,31,32,33,34,35,37,39,40,41,42,44,45,47,48,49,50,51,53,54,59,60,61,63,64,67,68,69,70,71,72,73,74,76,78,80,83,87,91,92,96,101,104,105,107,108,113,120,121,122,123,124,125,126,127,128,129,130,131,137,142,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,251,252,255,274,283,284,285,288,290,293,323,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,418,419,427,428,432,437,474,495,496,498,516,517,520,521,],[35,35,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,35,-94,-109,-104,-65,-93,-110,35,-216,-107,35,-111,35,-63,-116,-29,-105,-62,-101,-67,-112,-106,35,-108,35,-103,-117,-68,-98,35,35,-53,35,-82,35,-61,-131,-302,-130,35,-148,-147,35,-161,-88,-90,35,-87,-89,-92,-81,-69,-30,35,35,35,-70,35,-83,35,35,-128,-140,-141,-137,35,35,35,-162,35,35,35,-36,-35,35,35,-73,-76,-72,-74,35,-78,-194,-193,-77,-195,-75,35,35,-129,-132,-138,-303,-126,-127,-149,35,35,-71,35,-31,35,35,35,-34,35,35,35,35,-213,-212,35,-210,-196,-209,-197,-134,-133,-139,-151,-150,35,-33,-32,35,35,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'STATIC':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,37,39,40,41,42,44,45,47,48,49,50,51,53,54,59,60,61,63,64,67,68,69,70,71,73,74,78,80,83,87,91,92,96,101,104,105,107,113,120,121,122,137,142,143,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,232,234,246,251,255,283,290,323,324,328,333,334,336,337,343,346,348,351,352,357,358,393,413,414,418,427,428,432,437,474,495,496,498,516,517,520,521,],[9,9,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,9,-94,-109,-104,-65,-93,-110,9,-216,-107,-111,9,-63,-116,-29,-105,-62,-101,-67,-112,-106,9,-108,9,-103,-117,-68,-98,108,9,-53,9,-82,9,-61,-131,-302,-130,-148,-147,-161,-88,-90,9,-87,-89,-92,-81,-69,-30,183,9,-70,9,-83,-162,252,9,-36,-35,9,9,-73,-76,-72,-74,9,-78,-194,-193,-77,-195,-75,-132,-303,-149,363,-71,-31,-34,419,9,9,-213,-212,9,-210,-196,-209,-197,-134,-133,-151,-150,9,-33,-32,464,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'SIZEOF':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,137,142,145,146,149,157,158,164,165,167,169,171,172,174,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,502,503,507,510,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,157,-28,-304,157,-162,-304,157,157,-265,157,-263,157,-262,157,-261,157,157,-260,-264,157,157,157,-73,-76,-72,157,-74,157,157,-78,-194,-193,-77,-195,157,-75,-261,-303,157,157,157,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,157,-228,-229,-221,-227,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,-304,-261,157,-213,-212,157,-210,157,157,157,-196,157,-209,-197,157,157,157,-261,157,157,-12,157,157,-11,157,157,-28,-304,-261,-208,-211,157,-200,157,-198,-304,-177,157,157,-304,157,-261,157,157,157,157,-199,157,157,157,157,-11,157,-204,-203,-201,157,-304,157,157,157,-205,-202,157,-207,-206,]),'UNSIGNED':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,131,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,255,274,283,284,285,288,290,293,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[20,-304,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,20,-94,-109,-104,-65,-93,-110,20,-216,-107,-111,20,-63,-116,20,-29,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,20,-53,20,-82,20,20,-61,-131,-302,-130,20,-148,-147,-161,-88,-90,20,-87,-89,-92,-81,-84,-86,-69,-30,20,20,-70,20,-83,20,20,-128,-140,-141,-137,20,20,20,-162,20,20,-36,-35,20,20,-73,-76,-72,-74,20,-78,-194,-193,-77,-195,-75,20,20,-129,-132,-138,-303,-126,-127,-149,-71,20,-31,20,20,20,-34,20,20,20,-213,-212,20,-210,-196,-209,-197,-134,-133,-139,-151,-150,20,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'UNION':([0,1,3,7,8,9,11,12,14,17,18,19,23,24,26,34,35,36,37,40,42,47,49,51,53,54,55,56,57,60,61,64,65,67,68,70,72,78,87,101,102,103,104,105,117,120,121,122,123,124,126,127,128,129,130,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,233,234,255,274,283,284,285,288,290,324,328,333,334,336,337,343,346,348,355,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[22,-304,-115,-97,-52,-95,-96,-64,-60,-66,22,-94,-65,-93,22,-63,-116,22,-29,-62,-67,-304,-304,-117,-68,-98,-85,-10,-9,22,-53,-82,22,22,-61,-302,22,-161,22,-81,-84,-86,-69,-30,22,-70,22,-83,22,22,-140,-141,-137,22,22,-162,22,22,-36,-35,22,22,-73,-76,-72,-74,22,-78,-194,-193,-77,-195,-75,22,22,-138,-303,-71,22,-31,22,22,22,-34,22,22,-213,-212,22,-210,-196,-209,-197,-139,22,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'COLON':([2,3,5,6,8,10,15,20,21,25,29,30,32,35,37,39,41,44,45,48,50,51,61,69,71,73,74,85,86,88,105,115,119,125,131,141,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,181,185,186,210,225,227,231,232,234,235,241,242,246,248,273,275,276,277,279,283,286,287,289,290,294,341,342,351,352,354,357,358,365,366,376,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,431,441,442,452,453,454,459,478,479,488,500,504,513,],[-102,-115,-113,-99,-52,-114,-100,-109,-104,-110,-216,-107,-111,-116,-29,-105,-101,-112,-106,-108,-103,-117,-53,-131,-130,-148,-147,-54,-158,-37,-30,-289,-157,-128,236,-55,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,-231,-295,-291,-217,-36,-35,339,-214,349,-129,-132,-303,-126,-127,356,-149,-38,-301,-258,-299,-275,-274,-31,-252,-257,-255,-34,-256,434,-230,-134,-133,236,-151,-150,-44,-43,-218,-273,-272,-271,-270,-269,-282,-239,-251,-240,-238,-242,-246,-241,-237,-244,-249,-235,-234,-243,-250,-245,-247,461,-248,-236,-33,-32,-215,-39,-42,-259,-267,-268,-253,-41,-40,-232,-283,-276,-277,]),'$end':([0,12,14,17,23,26,34,40,42,43,52,53,68,101,104,120,234,255,348,],[-304,-64,-60,-66,-65,-58,-63,-62,-67,0,-59,-68,-61,-81,-69,-70,-303,-71,-197,]),'WSTRING_LITERAL':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,137,142,145,146,149,151,153,157,158,164,165,167,169,171,172,174,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,273,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,502,503,507,510,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,153,-28,-304,153,-162,-304,153,153,-265,273,-300,153,-263,153,-262,153,-261,153,153,-260,-264,153,153,153,-73,-76,-72,153,-74,153,153,-78,-194,-193,-77,-195,153,-75,-261,-303,153,153,153,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,153,-228,-229,-221,-227,-301,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,-304,-261,153,-213,-212,153,-210,153,153,153,-196,153,-209,-197,153,153,153,-261,153,153,-12,153,153,-11,153,153,-28,-304,-261,-208,-211,153,-200,153,-198,-304,-177,153,153,-304,153,-261,153,153,153,153,-199,153,153,153,153,-11,153,-204,-203,-201,153,-304,153,153,153,-205,-202,153,-207,-206,]),'DIVIDE':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,305,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,305,305,305,305,305,305,305,305,305,305,-235,-234,305,305,305,305,305,-236,-259,-267,-268,-253,-283,-276,-277,]),'FOR':([53,70,101,104,121,200,201,204,206,213,215,216,217,218,220,222,223,234,333,334,337,339,343,346,348,349,427,428,432,434,437,473,474,475,477,495,496,498,510,515,516,517,519,520,521,],[-68,-302,-81,-69,207,-73,-76,-72,-74,207,-78,-194,-193,-77,-195,207,-75,-303,-213,-212,-210,207,-196,-209,-197,207,-208,-211,-200,207,-198,207,-199,207,207,-204,-203,-201,207,207,-205,-202,207,-207,-206,]),'PLUSPLUS':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,115,121,137,142,145,146,148,149,151,152,153,154,155,156,157,158,159,160,164,165,167,168,169,170,171,172,173,174,175,176,178,179,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,227,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,279,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,378,379,380,381,384,389,390,417,418,419,425,427,428,430,432,434,437,448,451,453,454,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,500,502,503,504,507,510,513,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,167,-28,-304,-289,167,-162,-304,167,167,-293,-265,-281,-296,-300,-297,-294,-279,167,-263,-280,279,167,-262,167,-292,-261,-266,167,167,-298,-260,-290,-278,-295,-291,-264,167,167,167,-73,-76,-72,167,-74,167,167,-78,-194,-193,-77,-195,167,-75,-261,-289,-303,167,167,167,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,167,-228,-229,-221,-227,-301,167,-299,-275,-274,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,-304,-261,167,-213,-212,167,-210,167,167,167,-196,167,-209,-197,167,167,167,-261,167,167,-12,167,167,-11,-273,-272,-271,-270,-269,-282,167,167,-28,-304,-261,-208,-211,167,-200,167,-198,-304,-177,-267,-268,167,167,-304,167,-261,167,167,167,167,-199,167,167,167,167,-11,167,-204,-203,-201,-283,167,-304,-276,167,167,-277,167,-205,-202,167,-207,-206,]),'EQUALS':([8,37,61,85,86,87,88,89,97,105,115,119,136,141,148,150,151,152,153,154,155,156,159,160,168,170,173,175,176,178,179,185,186,227,234,248,273,275,276,277,279,283,286,287,289,290,294,365,366,369,374,378,379,380,381,384,389,413,414,441,442,446,450,452,453,454,459,478,479,480,500,504,513,],[-52,-29,-53,-54,-158,-157,-37,145,146,-30,-289,-157,247,-55,-293,264,-281,-296,-300,-297,-294,-279,-280,-254,-292,-266,-298,-290,-278,-295,-291,-36,-35,-289,-303,-38,-301,-258,-299,-275,-274,-31,-252,-257,-255,-34,-256,-44,-43,-178,451,-273,-272,-271,-270,-269,-282,-33,-32,-39,-42,-181,-179,-259,-267,-268,-253,-41,-40,-180,-283,-276,-277,]),'ELSE':([53,104,200,201,204,206,215,218,223,234,333,334,337,346,348,427,428,432,437,474,495,496,498,516,517,520,521,],[-68,-69,-73,-76,-72,-74,-78,-77,-75,-303,-213,-212,-210,-209,-197,-208,-211,-200,-198,-199,-204,-203,510,-205,-202,-207,-206,]),'ANDEQUAL':([115,148,150,151,152,153,154,155,156,159,160,168,170,173,175,176,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,452,453,454,459,500,504,513,],[-289,-293,269,-281,-296,-300,-297,-294,-279,-280,-254,-292,-266,-298,-290,-278,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-259,-267,-268,-253,-283,-276,-277,]),'EQ':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,309,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-239,309,-240,-238,-242,-246,-241,-237,-244,309,-235,-234,-243,309,-245,309,309,-236,-259,-267,-268,-253,-283,-276,-277,]),'AND':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,115,121,137,142,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,227,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,281,282,285,286,287,288,289,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,378,379,380,381,384,389,390,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,417,418,419,425,427,428,430,432,434,437,448,451,452,453,454,455,457,459,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,500,502,503,504,507,510,513,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,174,-28,-304,-289,174,-162,-304,174,174,-293,-265,-252,-281,-296,-300,-297,-294,-279,174,-263,-280,-254,-233,174,-262,174,-292,-261,-266,174,174,-298,-260,-290,-278,310,-295,-291,-264,174,174,174,-73,-76,-72,174,-74,174,174,-78,-194,-193,-77,-195,174,-75,-261,-289,-303,174,174,174,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,174,-228,-229,-221,-227,-301,174,-258,-299,-275,-274,174,174,174,-252,-257,174,-255,-256,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-304,-261,174,-213,-212,174,-210,174,174,174,-196,174,-209,-197,174,174,174,-261,174,174,-12,174,174,-11,-273,-272,-271,-270,-269,-282,174,-239,310,-240,-238,-242,-246,-241,-237,-244,310,-235,-234,-243,310,-245,-247,310,-236,174,-28,-304,-261,-208,-211,174,-200,174,-198,-304,-177,-259,-267,-268,174,174,-253,-304,174,-261,174,174,174,174,-199,174,174,174,174,-11,174,-204,-203,-201,-283,174,-304,-276,174,174,-277,174,-205,-202,174,-207,-206,]),'TYPEID':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,76,77,78,79,80,81,83,84,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,131,137,138,140,143,147,171,185,186,187,190,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,255,274,278,280,283,284,285,288,290,324,328,333,334,336,337,343,346,348,351,352,354,355,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[29,-304,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,29,-94,-109,-104,-136,-65,-93,-110,29,69,73,-216,-107,-304,-111,88,-63,-116,29,-29,-135,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,29,-53,88,-82,29,29,-61,-131,-302,-130,29,-148,-147,-28,-159,-161,-27,-88,88,-90,88,29,-87,-89,-92,-81,-84,-86,-69,-30,194,29,-70,29,-83,29,29,-128,-140,-141,-137,29,29,88,-162,-160,88,29,88,29,-36,-35,29,194,29,-73,-76,-72,-74,29,-78,-194,-193,-77,-195,-75,29,29,-129,-132,-138,-303,-126,-127,-149,-71,29,378,380,-31,29,29,29,-34,29,29,-213,-212,29,-210,-196,-209,-197,-134,-133,88,-139,-151,-150,29,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'LBRACE':([8,18,22,27,28,37,38,53,61,62,64,66,67,69,70,71,73,74,87,101,104,105,121,122,144,145,146,185,186,200,201,204,206,213,215,216,217,218,220,222,223,234,257,283,290,333,334,337,339,343,346,348,349,367,373,375,390,413,414,427,428,432,434,437,448,451,452,457,458,460,473,474,475,477,481,482,495,496,498,503,510,515,516,517,519,520,521,],[-52,-304,-136,70,70,-29,-135,-68,-53,-7,-82,70,-8,70,-302,70,70,70,-304,-81,-69,-30,70,-83,70,70,70,-36,-35,-73,-76,-72,-74,70,-78,-194,-193,-77,-195,70,-75,-303,-304,-31,-34,-213,-212,-210,70,-196,-209,-197,70,-12,70,-11,70,-33,-32,-208,-211,-200,70,-198,-304,-177,70,70,70,-304,70,-199,70,70,70,-11,-204,-203,-201,-304,70,70,-205,-202,70,-207,-206,]),'PPHASH':([0,12,14,17,23,26,34,40,42,53,68,101,104,120,234,255,348,],[42,-64,-60,-66,-65,42,-63,-62,-67,-68,-61,-81,-69,-70,-303,-71,-197,]),'INT':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,131,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,255,274,283,284,285,288,290,293,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[50,-304,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,50,-94,-109,-104,-65,-93,-110,50,-216,-107,-111,50,-63,-116,50,-29,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,50,-53,50,-82,50,50,-61,-131,-302,-130,50,-148,-147,-161,-88,-90,50,-87,-89,-92,-81,-84,-86,-69,-30,50,50,-70,50,-83,50,50,-128,-140,-141,-137,50,50,50,-162,50,50,-36,-35,50,50,-73,-76,-72,-74,50,-78,-194,-193,-77,-195,-75,50,50,-129,-132,-138,-303,-126,-127,-149,-71,50,-31,50,50,50,-34,50,50,50,-213,-212,50,-210,-196,-209,-197,-134,-133,-139,-151,-150,50,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'SIGNED':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,131,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,255,274,283,284,285,288,290,293,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[48,-304,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,48,-94,-109,-104,-65,-93,-110,48,-216,-107,-111,48,-63,-116,48,-29,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,48,-53,48,-82,48,48,-61,-131,-302,-130,48,-148,-147,-161,-88,-90,48,-87,-89,-92,-81,-84,-86,-69,-30,48,48,-70,48,-83,48,48,-128,-140,-141,-137,48,48,48,-162,48,48,-36,-35,48,48,-73,-76,-72,-74,48,-78,-194,-193,-77,-195,-75,48,48,-129,-132,-138,-303,-126,-127,-149,-71,48,-31,48,48,48,-34,48,48,48,-213,-212,48,-210,-196,-209,-197,-134,-133,-139,-151,-150,48,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'CONTINUE':([53,70,101,104,121,200,201,204,206,213,215,216,217,218,220,222,223,234,333,334,337,339,343,346,348,349,427,428,432,434,437,473,474,475,477,495,496,498,510,515,516,517,519,520,521,],[-68,-302,-81,-69,208,-73,-76,-72,-74,208,-78,-194,-193,-77,-195,208,-75,-303,-213,-212,-210,208,-196,-209,-197,208,-208,-211,-200,208,-198,208,-199,208,208,-204,-203,-201,208,208,-205,-202,208,-207,-206,]),'NOT':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,137,142,145,146,149,157,158,164,165,167,169,171,172,174,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,502,503,507,510,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,182,-28,-304,182,-162,-304,182,182,-265,182,-263,182,-262,182,-261,182,182,-260,-264,182,182,182,-73,-76,-72,182,-74,182,182,-78,-194,-193,-77,-195,182,-75,-261,-303,182,182,182,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,182,-228,-229,-221,-227,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,-304,-261,182,-213,-212,182,-210,182,182,182,-196,182,-209,-197,182,182,182,-261,182,182,-12,182,182,-11,182,182,-28,-304,-261,-208,-211,182,-200,182,-198,-304,-177,182,182,-304,182,-261,182,182,182,182,-199,182,182,182,182,-11,182,-204,-203,-201,182,-304,182,182,182,-205,-202,182,-207,-206,]),'OREQUAL':([115,148,150,151,152,153,154,155,156,159,160,168,170,173,175,176,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,452,453,454,459,500,504,513,],[-289,-293,270,-281,-296,-300,-297,-294,-279,-280,-254,-292,-266,-298,-290,-278,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-259,-267,-268,-253,-283,-276,-277,]),'MOD':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,313,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,313,313,313,313,313,313,313,313,313,313,-235,-234,313,313,313,313,313,-236,-259,-267,-268,-253,-283,-276,-277,]),'RSHIFT':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,295,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-239,295,-240,-238,295,295,295,-237,295,295,-235,-234,295,295,295,295,295,-236,-259,-267,-268,-253,-283,-276,-277,]),'DEFAULT':([53,70,101,104,121,200,201,204,206,213,215,216,217,218,220,222,223,234,333,334,337,339,343,346,348,349,427,428,432,434,437,473,474,475,477,495,496,498,510,515,516,517,519,520,521,],[-68,-302,-81,-69,210,-73,-76,-72,-74,210,-78,-194,-193,-77,-195,210,-75,-303,-213,-212,-210,210,-196,-209,-197,210,-208,-211,-200,210,-198,210,-199,210,210,-204,-203,-201,210,210,-205,-202,210,-207,-206,]),'__INT128':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,131,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,255,274,283,284,285,288,290,293,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[25,-304,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,25,-94,-109,-104,-65,-93,-110,25,-216,-107,-111,25,-63,-116,25,-29,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,25,-53,25,-82,25,25,-61,-131,-302,-130,25,-148,-147,-161,-88,-90,25,-87,-89,-92,-81,-84,-86,-69,-30,25,25,-70,25,-83,25,25,-128,-140,-141,-137,25,25,25,-162,25,25,-36,-35,25,25,-73,-76,-72,-74,25,-78,-194,-193,-77,-195,-75,25,25,-129,-132,-138,-303,-126,-127,-149,-71,25,-31,25,25,25,-34,25,25,25,-213,-212,25,-210,-196,-209,-197,-134,-133,-139,-151,-150,25,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'WHILE':([53,70,101,104,121,200,201,204,206,213,215,216,217,218,220,222,223,234,333,334,337,339,343,346,347,348,349,427,428,432,434,437,473,474,475,477,495,496,498,510,515,516,517,519,520,521,],[-68,-302,-81,-69,211,-73,-76,-72,-74,211,-78,-194,-193,-77,-195,211,-75,-303,-213,-212,-210,211,-196,-209,436,-197,211,-208,-211,-200,211,-198,211,-199,211,211,-204,-203,-201,211,211,-205,-202,211,-207,-206,]),'DIVEQUAL':([115,148,150,151,152,153,154,155,156,159,160,168,170,173,175,176,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,452,453,454,459,500,504,513,],[-289,-293,261,-281,-296,-300,-297,-294,-279,-280,-254,-292,-266,-298,-290,-278,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-259,-267,-268,-253,-283,-276,-277,]),'EXTERN':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,37,39,40,41,42,44,45,47,48,49,50,51,53,54,60,61,63,64,67,68,69,70,71,73,74,80,83,87,91,92,96,101,104,105,113,120,121,122,143,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,232,234,246,255,283,290,324,328,333,334,336,337,343,346,348,351,352,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[11,11,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,11,-94,-109,-104,-65,-93,-110,11,-216,-107,-111,11,-63,-116,-29,-105,-62,-101,-67,-112,-106,11,-108,11,-103,-117,-68,-98,11,-53,11,-82,11,-61,-131,-302,-130,-148,-147,-88,-90,11,-87,-89,-92,-81,-69,-30,11,-70,11,-83,11,-36,-35,11,11,-73,-76,-72,-74,11,-78,-194,-193,-77,-195,-75,-132,-303,-149,-71,-31,-34,11,11,-213,-212,11,-210,-196,-209,-197,-134,-133,-151,-150,11,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'CASE':([53,70,101,104,121,200,201,204,206,213,215,216,217,218,220,222,223,234,333,334,337,339,343,346,348,349,427,428,432,434,437,473,474,475,477,495,496,498,510,515,516,517,519,520,521,],[-68,-302,-81,-69,212,-73,-76,-72,-74,212,-78,-194,-193,-77,-195,212,-75,-303,-213,-212,-210,212,-196,-209,-197,212,-208,-211,-200,212,-198,212,-199,212,212,-204,-203,-201,212,212,-205,-202,212,-207,-206,]),'LAND':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,308,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-239,308,-240,-238,-242,-246,-241,-237,-244,-249,-235,-234,-243,-250,-245,-247,-248,-236,-259,-267,-268,-253,-283,-276,-277,]),'REGISTER':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,37,39,40,41,42,44,45,47,48,49,50,51,53,54,60,61,63,64,67,68,69,70,71,73,74,80,83,87,91,92,96,101,104,105,113,120,121,122,143,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,232,234,246,255,283,290,324,328,333,334,336,337,343,346,348,351,352,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[19,19,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,19,-94,-109,-104,-65,-93,-110,19,-216,-107,-111,19,-63,-116,-29,-105,-62,-101,-67,-112,-106,19,-108,19,-103,-117,-68,-98,19,-53,19,-82,19,-61,-131,-302,-130,-148,-147,-88,-90,19,-87,-89,-92,-81,-69,-30,19,-70,19,-83,19,-36,-35,19,19,-73,-76,-72,-74,19,-78,-194,-193,-77,-195,-75,-132,-303,-149,-71,-31,-34,19,19,-213,-212,19,-210,-196,-209,-197,-134,-133,-151,-150,19,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'MODEQUAL':([115,148,150,151,152,153,154,155,156,159,160,168,170,173,175,176,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,452,453,454,459,500,504,513,],[-289,-293,263,-281,-296,-300,-297,-294,-279,-280,-254,-292,-266,-298,-290,-278,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-259,-267,-268,-253,-283,-276,-277,]),'NE':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,300,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-239,300,-240,-238,-242,-246,-241,-237,-244,300,-235,-234,-243,300,-245,300,300,-236,-259,-267,-268,-253,-283,-276,-277,]),'SWITCH':([53,70,101,104,121,200,201,204,206,213,215,216,217,218,220,222,223,234,333,334,337,339,343,346,348,349,427,428,432,434,437,473,474,475,477,495,496,498,510,515,516,517,519,520,521,],[-68,-302,-81,-69,214,-73,-76,-72,-74,214,-78,-194,-193,-77,-195,214,-75,-303,-213,-212,-210,214,-196,-209,-197,214,-208,-211,-200,214,-198,214,-199,214,214,-204,-203,-201,214,214,-205,-202,214,-207,-206,]),'INT_CONST_HEX':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,137,142,145,146,149,157,158,164,165,167,169,171,172,174,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,502,503,507,510,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,168,-28,-304,168,-162,-304,168,168,-265,168,-263,168,-262,168,-261,168,168,-260,-264,168,168,168,-73,-76,-72,168,-74,168,168,-78,-194,-193,-77,-195,168,-75,-261,-303,168,168,168,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,168,-228,-229,-221,-227,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,-304,-261,168,-213,-212,168,-210,168,168,168,-196,168,-209,-197,168,168,168,-261,168,168,-12,168,168,-11,168,168,-28,-304,-261,-208,-211,168,-200,168,-198,-304,-177,168,168,-304,168,-261,168,168,168,168,-199,168,168,168,168,-11,168,-204,-203,-201,168,-304,168,168,168,-205,-202,168,-207,-206,]),'_COMPLEX':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,131,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,255,274,283,284,285,288,290,293,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[30,-304,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,30,-94,-109,-104,-65,-93,-110,30,-216,-107,-111,30,-63,-116,30,-29,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,30,-53,30,-82,30,30,-61,-131,-302,-130,30,-148,-147,-161,-88,-90,30,-87,-89,-92,-81,-84,-86,-69,-30,30,30,-70,30,-83,30,30,-128,-140,-141,-137,30,30,30,-162,30,30,-36,-35,30,30,-73,-76,-72,-74,30,-78,-194,-193,-77,-195,-75,30,30,-129,-132,-138,-303,-126,-127,-149,-71,30,-31,30,30,30,-34,30,30,30,-213,-212,30,-210,-196,-209,-197,-134,-133,-139,-151,-150,30,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'PPPRAGMASTR':([53,],[104,]),'PLUSEQUAL':([115,148,150,151,152,153,154,155,156,159,160,168,170,173,175,176,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,452,453,454,459,500,504,513,],[-289,-293,266,-281,-296,-300,-297,-294,-279,-280,-254,-292,-266,-298,-290,-278,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-259,-267,-268,-253,-283,-276,-277,]),'STRUCT':([0,1,3,7,8,9,11,12,14,17,18,19,23,24,26,34,35,36,37,40,42,47,49,51,53,54,55,56,57,60,61,64,65,67,68,70,72,78,87,101,102,103,104,105,117,120,121,122,123,124,126,127,128,129,130,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,233,234,255,274,283,284,285,288,290,324,328,333,334,336,337,343,346,348,355,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[38,-304,-115,-97,-52,-95,-96,-64,-60,-66,38,-94,-65,-93,38,-63,-116,38,-29,-62,-67,-304,-304,-117,-68,-98,-85,-10,-9,38,-53,-82,38,38,-61,-302,38,-161,38,-81,-84,-86,-69,-30,38,-70,38,-83,38,38,-140,-141,-137,38,38,-162,38,38,-36,-35,38,38,-73,-76,-72,-74,38,-78,-194,-193,-77,-195,-75,38,38,-138,-303,-71,38,-31,38,38,38,-34,38,38,-213,-212,38,-210,-196,-209,-197,-139,38,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'CONDOP':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,311,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-239,-251,-240,-238,-242,-246,-241,-237,-244,-249,-235,-234,-243,-250,-245,-247,-248,-236,-259,-267,-268,-253,-283,-276,-277,]),'BREAK':([53,70,101,104,121,200,201,204,206,213,215,216,217,218,220,222,223,234,333,334,337,339,343,346,348,349,427,428,432,434,437,473,474,475,477,495,496,498,510,515,516,517,519,520,521,],[-68,-302,-81,-69,219,-73,-76,-72,-74,219,-78,-194,-193,-77,-195,219,-75,-303,-213,-212,-210,219,-196,-209,-197,219,-208,-211,-200,219,-198,219,-199,219,219,-204,-203,-201,219,219,-205,-202,219,-207,-206,]),'VOLATILE':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,31,32,33,34,35,37,39,40,41,42,44,45,47,48,49,50,51,53,54,59,60,61,63,64,67,68,69,70,71,72,73,74,76,78,80,83,87,91,92,96,101,104,105,107,108,113,120,121,122,123,124,125,126,127,128,129,130,131,137,142,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,251,252,255,274,283,284,285,288,290,293,323,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,418,419,427,428,432,437,474,495,496,498,516,517,520,521,],[51,51,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,51,-94,-109,-104,-65,-93,-110,51,-216,-107,51,-111,51,-63,-116,-29,-105,-62,-101,-67,-112,-106,51,-108,51,-103,-117,-68,-98,51,51,-53,51,-82,51,-61,-131,-302,-130,51,-148,-147,51,-161,-88,-90,51,-87,-89,-92,-81,-69,-30,51,51,51,-70,51,-83,51,51,-128,-140,-141,-137,51,51,51,-162,51,51,51,-36,-35,51,51,-73,-76,-72,-74,51,-78,-194,-193,-77,-195,-75,51,51,-129,-132,-138,-303,-126,-127,-149,51,51,-71,51,-31,51,51,51,-34,51,51,51,51,-213,-212,51,-210,-196,-209,-197,-134,-133,-139,-151,-150,51,-33,-32,51,51,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'PPPRAGMA':([0,12,14,17,23,26,34,40,42,53,68,70,72,101,104,120,121,123,124,126,127,128,130,200,201,204,206,213,215,216,217,218,220,222,223,229,230,233,234,255,333,334,337,339,343,346,348,349,355,427,428,432,434,437,473,474,475,477,495,496,498,510,515,516,517,519,520,521,],[53,-64,-60,-66,-65,53,-63,-62,-67,-68,-61,-302,53,-81,-69,-70,53,53,53,-140,-141,-137,53,-73,-76,-72,-74,53,-78,-194,-193,-77,-195,53,-75,53,53,-138,-303,-71,-213,-212,-210,53,-196,-209,-197,53,-139,-208,-211,-200,53,-198,53,-199,53,53,-204,-203,-201,53,53,-205,-202,53,-207,-206,]),'INLINE':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,37,39,40,41,42,44,45,47,48,49,50,51,53,54,60,61,63,64,67,68,69,70,71,73,74,80,83,87,91,92,96,101,104,105,113,120,121,122,143,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,232,234,246,255,283,290,324,328,333,334,336,337,343,346,348,351,352,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[54,54,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,54,-94,-109,-104,-65,-93,-110,54,-216,-107,-111,54,-63,-116,-29,-105,-62,-101,-67,-112,-106,54,-108,54,-103,-117,-68,-98,54,-53,54,-82,54,-61,-131,-302,-130,-148,-147,-88,-90,54,-87,-89,-92,-81,-69,-30,54,-70,54,-83,54,-36,-35,54,54,-73,-76,-72,-74,54,-78,-194,-193,-77,-195,-75,-132,-303,-149,-71,-31,-34,54,54,-213,-212,54,-210,-196,-209,-197,-134,-133,-151,-150,54,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'INT_CONST_BIN':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,137,142,145,146,149,157,158,164,165,167,169,171,172,174,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,502,503,507,510,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,148,-28,-304,148,-162,-304,148,148,-265,148,-263,148,-262,148,-261,148,148,-260,-264,148,148,148,-73,-76,-72,148,-74,148,148,-78,-194,-193,-77,-195,148,-75,-261,-303,148,148,148,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,148,-228,-229,-221,-227,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,-304,-261,148,-213,-212,148,-210,148,148,148,-196,148,-209,-197,148,148,148,-261,148,148,-12,148,148,-11,148,148,-28,-304,-261,-208,-211,148,-200,148,-198,-304,-177,148,148,-304,148,-261,148,148,148,148,-199,148,148,148,148,-11,148,-204,-203,-201,148,-304,148,148,148,-205,-202,148,-207,-206,]),'DO':([53,70,101,104,121,200,201,204,206,213,215,216,217,218,220,222,223,234,333,334,337,339,343,346,348,349,427,428,432,434,437,473,474,475,477,495,496,498,510,515,516,517,519,520,521,],[-68,-302,-81,-69,222,-73,-76,-72,-74,222,-78,-194,-193,-77,-195,222,-75,-303,-213,-212,-210,222,-196,-209,-197,222,-208,-211,-200,222,-198,222,-199,222,222,-204,-203,-201,222,222,-205,-202,222,-207,-206,]),'LNOT':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,137,142,145,146,149,157,158,164,165,167,169,171,172,174,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,502,503,507,510,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,149,-28,-304,149,-162,-304,149,149,-265,149,-263,149,-262,149,-261,149,149,-260,-264,149,149,149,-73,-76,-72,149,-74,149,149,-78,-194,-193,-77,-195,149,-75,-261,-303,149,149,149,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,149,-228,-229,-221,-227,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,-304,-261,149,-213,-212,149,-210,149,149,149,-196,149,-209,-197,149,149,149,-261,149,149,-12,149,149,-11,149,149,-28,-304,-261,-208,-211,149,-200,149,-198,-304,-177,149,149,-304,149,-261,149,149,149,149,-199,149,149,149,149,-11,149,-204,-203,-201,149,-304,149,149,149,-205,-202,149,-207,-206,]),'CONST':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,31,32,33,34,35,37,39,40,41,42,44,45,47,48,49,50,51,53,54,59,60,61,63,64,67,68,69,70,71,72,73,74,76,78,80,83,87,91,92,96,101,104,105,107,108,113,120,121,122,123,124,125,126,127,128,129,130,131,137,142,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,251,252,255,274,283,284,285,288,290,293,323,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,418,419,427,428,432,437,474,495,496,498,516,517,520,521,],[3,3,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,3,-94,-109,-104,-65,-93,-110,3,-216,-107,3,-111,3,-63,-116,-29,-105,-62,-101,-67,-112,-106,3,-108,3,-103,-117,-68,-98,3,3,-53,3,-82,3,-61,-131,-302,-130,3,-148,-147,3,-161,-88,-90,3,-87,-89,-92,-81,-69,-30,3,3,3,-70,3,-83,3,3,-128,-140,-141,-137,3,3,3,-162,3,3,3,-36,-35,3,3,-73,-76,-72,-74,3,-78,-194,-193,-77,-195,-75,3,3,-129,-132,-138,-303,-126,-127,-149,3,3,-71,3,-31,3,3,3,-34,3,3,3,3,-213,-212,3,-210,-196,-209,-197,-134,-133,-139,-151,-150,3,-33,-32,3,3,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'LOR':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,296,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-239,-251,-240,-238,-242,-246,-241,-237,-244,-249,-235,-234,-243,-250,-245,-247,-248,-236,-259,-267,-268,-253,-283,-276,-277,]),'CHAR_CONST':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,137,142,145,146,149,157,158,164,165,167,169,171,172,174,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,502,503,507,510,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,152,-28,-304,152,-162,-304,152,152,-265,152,-263,152,-262,152,-261,152,152,-260,-264,152,152,152,-73,-76,-72,152,-74,152,152,-78,-194,-193,-77,-195,152,-75,-261,-303,152,152,152,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,152,-228,-229,-221,-227,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,-304,-261,152,-213,-212,152,-210,152,152,152,-196,152,-209,-197,152,152,152,-261,152,152,-12,152,152,-11,152,152,-28,-304,-261,-208,-211,152,-200,152,-198,-304,-177,152,152,-304,152,-261,152,152,152,152,-199,152,152,152,152,-11,152,-204,-203,-201,152,-304,152,152,152,-205,-202,152,-207,-206,]),'LSHIFT':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,297,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-239,297,-240,-238,297,297,297,-237,297,297,-235,-234,297,297,297,297,297,-236,-259,-267,-268,-253,-283,-276,-277,]),'RBRACE':([53,70,101,104,115,121,126,127,128,130,134,135,136,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,181,200,201,204,206,213,215,216,217,218,220,221,223,224,229,230,233,234,243,244,245,257,258,273,275,276,277,279,286,287,289,294,333,334,337,342,343,346,348,355,359,360,368,372,375,376,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,427,428,432,437,445,448,449,452,453,454,459,474,483,487,488,495,496,498,499,500,503,504,513,516,517,520,521,],[-68,-302,-81,-69,-289,-304,-140,-141,-137,234,-152,234,-155,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,-231,-295,-291,-217,-73,-76,-72,-74,-6,-78,-194,-193,-77,-195,-5,-75,234,234,234,-138,-303,234,234,-153,-304,-172,-301,-258,-299,-275,-274,-252,-257,-255,-256,-213,-212,-210,-230,-196,-209,-197,-139,-154,-156,234,-22,-21,-218,-273,-272,-271,-270,-269,-282,-239,-251,-240,-238,-242,-246,-241,-237,-244,-249,-235,-234,-243,-250,-245,-247,-248,-236,-208,-211,-200,-198,-173,234,-175,-259,-267,-268,-253,-199,-174,234,-232,-204,-203,-201,-176,-283,234,-276,-277,-205,-202,-207,-206,]),'_BOOL':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,131,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,255,274,283,284,285,288,290,293,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[15,-304,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,15,-94,-109,-104,-65,-93,-110,15,-216,-107,-111,15,-63,-116,15,-29,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,15,-53,15,-82,15,15,-61,-131,-302,-130,15,-148,-147,-161,-88,-90,15,-87,-89,-92,-81,-84,-86,-69,-30,15,15,-70,15,-83,15,15,-128,-140,-141,-137,15,15,15,-162,15,15,-36,-35,15,15,-73,-76,-72,-74,15,-78,-194,-193,-77,-195,-75,15,15,-129,-132,-138,-303,-126,-127,-149,-71,15,-31,15,15,15,-34,15,15,15,-213,-212,15,-210,-196,-209,-197,-134,-133,-139,-151,-150,15,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'LE':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,299,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-239,299,-240,-238,-242,299,-241,-237,-244,299,-235,-234,-243,299,299,299,299,-236,-259,-267,-268,-253,-283,-276,-277,]),'SEMI':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,46,47,48,49,50,51,53,54,55,56,57,61,63,65,68,69,70,71,72,73,74,80,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,115,119,120,121,123,124,125,126,127,128,130,131,141,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,181,185,186,200,201,203,204,205,206,208,209,213,215,216,217,218,219,220,221,222,223,225,227,229,230,231,232,233,234,235,237,238,239,240,241,242,246,248,249,255,256,258,259,260,273,275,276,277,279,283,286,287,289,290,294,332,333,334,335,336,337,339,342,343,344,346,348,349,351,352,353,355,357,358,365,366,376,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,427,428,429,430,431,432,434,437,439,440,441,442,445,452,453,454,459,471,472,473,474,475,477,478,479,483,488,493,495,496,498,500,504,509,510,513,515,516,517,519,520,521,],[17,-304,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,-94,-109,-104,-65,-93,-110,17,-216,-107,-111,-304,-63,-116,-304,-29,-105,-62,-101,-67,-112,-106,101,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,-53,-304,-304,-61,-131,-302,-130,126,-148,-147,-88,-20,-90,-54,-158,-157,-37,-120,-79,-87,-89,-19,-118,-122,-92,-124,-16,-80,-15,-81,-84,-86,-69,-30,-289,-157,-70,-304,126,126,-128,-140,-141,-137,126,-304,-55,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,-231,-295,-291,-217,-36,-35,-73,-76,333,-72,334,-74,337,-14,-304,-78,-194,-193,-77,346,-195,-13,-304,-75,-214,-289,126,126,-129,-132,-138,-303,-126,-26,-25,355,-142,-127,-144,-149,-38,-119,-71,-121,-172,-125,-123,-301,-258,-299,-275,-274,-31,-252,-257,-255,-34,-256,427,-213,-212,428,-304,-210,-304,-230,-196,-13,-209,-197,-304,-134,-133,-146,-139,-151,-150,-44,-43,-218,-273,-272,-271,-270,-269,-282,-239,-251,-240,-238,-242,-246,-241,-237,-244,-249,-235,-234,-243,-250,-245,-247,-248,-236,-33,-32,-208,-211,471,-304,-215,-200,-304,-198,-143,-145,-39,-42,-173,-259,-267,-268,-253,-304,494,-304,-199,-304,-304,-41,-40,-174,-232,507,-204,-203,-201,-283,-276,516,-304,-277,-304,-205,-202,-304,-207,-206,]),'LT':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,301,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-239,301,-240,-238,-242,301,-241,-237,-244,301,-235,-234,-243,301,301,301,301,-236,-259,-267,-268,-253,-283,-276,-277,]),'COMMA':([2,3,5,6,7,8,9,10,11,15,16,19,20,21,24,25,29,30,31,32,35,37,39,41,44,45,48,50,51,54,61,69,71,73,74,76,77,78,79,80,82,83,85,86,87,88,89,91,92,94,95,96,97,98,105,112,113,114,115,116,118,119,125,134,135,136,137,138,141,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,181,185,186,188,189,190,191,192,193,194,195,197,209,225,227,231,232,234,235,237,240,241,242,243,244,245,246,248,249,256,258,259,260,273,275,276,277,279,283,286,287,289,290,291,293,294,321,322,329,331,335,342,351,352,353,357,358,359,360,365,366,372,376,378,379,380,381,382,383,384,385,386,389,391,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,422,423,431,433,435,438,439,440,441,442,445,449,452,453,454,459,466,467,468,469,470,478,479,483,484,487,488,489,490,497,499,500,504,505,506,512,513,],[-102,-115,-113,-99,-97,-52,-95,-114,-96,-100,-91,-94,-109,-104,-93,-110,-216,-107,-304,-111,-116,-29,-105,-101,-112,-106,-108,-103,-117,-98,-53,-131,-130,-148,-147,-28,-159,-161,-27,-88,140,-90,-54,-158,-157,-37,-120,-87,-89,-118,-122,-92,-124,147,-30,-165,-304,198,-289,199,-170,-157,-128,-152,245,-155,-162,-160,-55,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,-231,-295,-291,-217,-36,-35,-169,-2,-183,-56,-167,-1,-45,-168,-185,338,-214,-289,-129,-132,-303,-126,354,-142,-127,-144,245,245,-153,-149,-38,-119,-121,-172,-125,-123,-301,-258,-299,-275,-274,-31,-252,-257,-255,-34,338,-304,-256,-57,-184,-171,-166,338,-230,-134,-133,-146,-151,-150,-154,-156,-44,-43,448,-218,-273,-272,-271,-270,338,-287,-269,455,456,-282,-182,-183,-239,-251,-240,-238,-242,-246,-241,-237,-244,-249,-235,-234,-243,-250,-245,-247,338,-248,-236,-33,-32,-192,-186,-188,-190,-215,338,338,338,-143,-145,-39,-42,-173,-175,-259,-267,-268,-253,-51,-50,-187,-189,-191,-41,-40,-174,-288,503,-232,-46,-49,338,-176,-283,-276,-48,-47,338,-277,]),'OFFSETOF':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,137,142,145,146,149,157,158,164,165,167,169,171,172,174,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,502,503,507,510,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,163,-28,-304,163,-162,-304,163,163,-265,163,-263,163,-262,163,-261,163,163,-260,-264,163,163,163,-73,-76,-72,163,-74,163,163,-78,-194,-193,-77,-195,163,-75,-261,-303,163,163,163,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,163,-228,-229,-221,-227,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,-304,-261,163,-213,-212,163,-210,163,163,163,-196,163,-209,-197,163,163,163,-261,163,163,-12,163,163,-11,163,163,-28,-304,-261,-208,-211,163,-200,163,-198,-304,-177,163,163,-304,163,-261,163,163,163,163,-199,163,163,163,163,-11,163,-204,-203,-201,163,-304,163,163,163,-205,-202,163,-207,-206,]),'TYPEDEF':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,37,39,40,41,42,44,45,47,48,49,50,51,53,54,60,61,63,64,67,68,69,70,71,73,74,80,83,87,91,92,96,101,104,105,113,120,121,122,143,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,232,234,246,255,283,290,324,328,333,334,336,337,343,346,348,351,352,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[7,7,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,7,-94,-109,-104,-65,-93,-110,7,-216,-107,-111,7,-63,-116,-29,-105,-62,-101,-67,-112,-106,7,-108,7,-103,-117,-68,-98,7,-53,7,-82,7,-61,-131,-302,-130,-148,-147,-88,-90,7,-87,-89,-92,-81,-69,-30,7,-70,7,-83,7,-36,-35,7,7,-73,-76,-72,-74,7,-78,-194,-193,-77,-195,-75,-132,-303,-149,-71,-31,-34,7,7,-213,-212,7,-210,-196,-209,-197,-134,-133,-151,-150,7,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'XOR':([115,148,150,151,152,153,154,155,156,159,160,162,168,170,173,175,176,177,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,452,453,454,459,500,504,513,],[-289,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,-233,-292,-266,-298,-290,-278,304,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-239,304,-240,-238,-242,-246,-241,-237,-244,-249,-235,-234,-243,304,-245,-247,304,-236,-259,-267,-268,-253,-283,-276,-277,]),'AUTO':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,37,39,40,41,42,44,45,47,48,49,50,51,53,54,60,61,63,64,67,68,69,70,71,73,74,80,83,87,91,92,96,101,104,105,113,120,121,122,143,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,232,234,246,255,283,290,324,328,333,334,336,337,343,346,348,351,352,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[24,24,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,24,-94,-109,-104,-65,-93,-110,24,-216,-107,-111,24,-63,-116,-29,-105,-62,-101,-67,-112,-106,24,-108,24,-103,-117,-68,-98,24,-53,24,-82,24,-61,-131,-302,-130,-148,-147,-88,-90,24,-87,-89,-92,-81,-69,-30,24,-70,24,-83,24,-36,-35,24,24,-73,-76,-72,-74,24,-78,-194,-193,-77,-195,-75,-132,-303,-149,-71,-31,-34,24,24,-213,-212,24,-210,-196,-209,-197,-134,-133,-151,-150,24,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'TIMES':([0,1,2,3,4,5,6,7,9,10,11,12,14,15,16,17,19,20,21,23,24,25,26,29,30,31,32,33,34,35,36,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,59,63,65,68,69,70,71,73,74,76,77,78,79,80,81,83,91,92,96,101,102,103,104,106,107,108,113,115,120,121,125,131,137,140,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,187,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,227,231,232,234,235,236,241,246,247,250,251,252,255,257,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,281,282,285,286,287,288,289,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,351,352,354,356,357,358,362,363,364,367,371,373,375,378,379,380,381,384,389,390,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,417,418,419,425,427,428,430,432,434,437,448,451,452,453,454,455,457,459,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,500,502,503,504,507,510,513,515,516,517,519,520,521,],[31,-304,-102,-115,31,-113,-99,-97,-95,-114,-96,-64,-60,-100,-91,-66,-94,-109,-104,-65,-93,-110,31,-216,-107,-304,-111,31,-63,-116,31,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,-304,31,31,-61,-131,-302,-130,-148,-147,-28,31,-161,-27,-88,31,-90,-87,-89,-92,-81,-84,-86,-69,169,-28,-304,31,-289,-70,226,-128,31,-162,31,-304,226,226,31,-293,-265,-252,-281,-296,-300,-297,-294,-279,226,-263,-280,-254,-233,226,-262,226,-292,-261,-266,226,226,-298,-260,-290,-278,306,-295,-291,-264,226,226,31,326,-73,-76,-72,226,-74,226,226,-78,-194,-193,-77,-195,226,-75,-261,-289,-129,-132,-303,-126,226,-127,-149,226,362,-28,-304,-71,-304,-222,-225,-223,-219,-220,-224,-226,226,-228,-229,-221,-227,-301,226,-258,-299,-275,-274,226,226,226,-252,-257,226,-255,31,-256,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,-304,-261,425,-213,-212,226,-210,226,226,226,-196,226,-209,-197,226,226,-134,-133,31,226,-151,-150,-261,226,226,-12,226,226,-11,-273,-272,-271,-270,-269,-282,226,31,306,306,306,306,306,306,306,306,306,306,-235,-234,306,306,306,306,306,-236,463,-28,-304,-261,-208,-211,226,-200,226,-198,-304,-177,-259,-267,-268,226,226,-253,-304,226,-261,226,226,226,226,-199,226,226,226,226,-11,226,-204,-203,-201,-283,226,-304,-276,226,226,-277,226,-205,-202,226,-207,-206,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,23,24,25,26,29,30,31,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,59,61,63,65,68,69,70,71,73,74,76,77,78,79,80,81,83,84,85,88,91,92,96,101,102,103,104,105,106,107,108,113,115,120,121,125,131,137,138,140,141,142,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,163,164,165,167,168,169,170,171,172,173,174,175,176,178,179,182,183,184,185,186,187,190,191,194,196,197,200,201,204,205,206,207,211,212,213,214,215,216,217,218,220,222,223,226,227,228,231,232,234,235,236,241,246,247,248,250,251,252,255,257,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,279,281,282,283,285,288,290,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,321,322,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,351,352,354,356,357,358,362,363,364,365,366,367,371,373,375,378,379,380,381,384,389,390,392,393,413,414,415,416,417,418,419,422,423,425,427,428,430,432,434,436,437,441,442,448,451,453,454,455,457,460,461,463,464,465,466,467,468,469,470,471,473,474,475,476,477,478,479,481,482,489,490,494,495,496,498,500,502,503,504,505,506,507,510,513,515,516,517,519,520,521,],[4,-304,-102,-115,4,-113,-99,-97,60,-95,-114,-96,-64,4,-60,-100,-91,-66,-94,-109,-104,-65,-93,-110,4,-216,-107,-304,-111,81,-63,-116,4,-29,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,-304,60,81,4,-61,-131,-302,-130,-148,-147,-28,-159,-161,-27,-88,81,-90,81,143,-37,-87,-89,-92,-81,-84,-86,-69,-30,171,-28,-304,187,-289,-70,171,-128,81,-162,-160,81,143,-304,171,171,81,-293,-265,-281,-296,-300,-297,-294,-279,274,-263,-280,282,284,285,-262,288,-292,-261,-266,171,288,-298,-260,-290,-278,-295,-291,-264,171,171,-36,-35,187,187,324,-45,171,328,-73,-76,-72,171,-74,336,340,285,171,345,-78,-194,-193,-77,-195,171,-75,-261,-289,350,-129,-132,-303,-126,285,-127,-149,285,-38,171,-28,-304,-71,-304,-222,-225,-223,-219,-220,-224,-226,171,-228,-229,-221,-227,-301,171,-299,-275,-274,171,171,-31,171,171,-34,393,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,171,285,285,187,324,328,-304,-261,171,-213,-212,171,-210,171,171,171,-196,171,-209,-197,171,171,-134,-133,81,285,-151,-150,-261,171,171,-44,-43,-12,285,171,-11,-273,-272,-271,-270,-269,-282,285,393,393,-33,-32,-192,-186,171,-28,-304,-188,-190,-261,-208,-211,171,-200,171,476,-198,-39,-42,-304,-177,-267,-268,171,285,-304,285,-261,171,171,-51,-50,-187,-189,-191,171,171,-199,171,171,171,-41,-40,171,-11,-46,-49,171,-204,-203,-201,-283,171,-304,-276,-48,-47,171,171,-277,171,-205,-202,171,-207,-206,]),'MINUSMINUS':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,115,121,137,142,145,146,148,149,151,152,153,154,155,156,157,158,159,160,164,165,167,168,169,170,171,172,173,174,175,176,178,179,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,227,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,279,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,378,379,380,381,384,389,390,417,418,419,425,427,428,430,432,434,437,448,451,453,454,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,500,502,503,504,507,510,513,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,172,-28,-304,-289,172,-162,-304,172,172,-293,-265,-281,-296,-300,-297,-294,-279,172,-263,-280,277,172,-262,172,-292,-261,-266,172,172,-298,-260,-290,-278,-295,-291,-264,172,172,172,-73,-76,-72,172,-74,172,172,-78,-194,-193,-77,-195,172,-75,-261,-289,-303,172,172,172,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,172,-228,-229,-221,-227,-301,172,-299,-275,-274,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,-304,-261,172,-213,-212,172,-210,172,172,172,-196,172,-209,-197,172,172,172,-261,172,172,-12,172,172,-11,-273,-272,-271,-270,-269,-282,172,172,-28,-304,-261,-208,-211,172,-200,172,-198,-304,-177,-267,-268,172,172,-304,172,-261,172,172,172,172,-199,172,172,172,172,-11,172,-204,-203,-201,-283,172,-304,-276,172,172,-277,172,-205,-202,172,-207,-206,]),'ID':([0,1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,59,60,63,65,68,69,70,71,73,74,75,76,77,78,79,80,81,83,84,91,92,96,101,102,103,104,106,107,108,113,120,121,125,131,132,133,137,138,140,142,143,145,146,147,149,157,158,164,165,167,169,171,172,174,182,183,184,187,190,196,198,200,201,202,204,205,206,212,213,215,216,217,218,220,222,223,226,231,232,234,235,236,241,245,246,247,250,251,252,255,257,261,262,263,264,265,266,267,268,269,270,271,272,274,278,280,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,323,324,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,351,352,354,356,357,358,362,363,364,367,370,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,456,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,501,502,503,507,510,515,516,517,519,520,521,],[37,-304,-102,-115,37,-113,-99,-97,-95,-114,-96,-64,37,-60,-100,-91,-66,-94,-109,-104,-136,-65,-93,-110,37,71,74,-216,-107,-304,-111,37,-63,-116,37,-135,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,-304,115,37,37,-61,-131,-302,-130,-148,-147,136,-28,-159,-161,-27,-88,37,-90,37,-87,-89,-92,-81,-84,-86,-69,115,-28,-304,37,-70,227,-128,37,136,136,-162,-160,37,-304,115,115,115,37,-265,115,-263,115,-262,115,-261,115,115,-260,-264,115,115,37,37,115,115,-73,-76,332,-72,115,-74,115,227,-78,-194,-193,-77,-195,227,-75,-261,-129,-132,-303,-126,115,-127,136,-149,115,115,-28,-304,-71,-304,-222,-225,-223,-219,-220,-224,-226,115,-228,-229,-221,-227,115,379,381,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,37,-304,115,-261,115,-213,-212,115,-210,115,227,115,-196,115,-209,-197,227,115,-134,-133,37,115,-151,-150,-261,115,115,-12,115,115,115,-11,115,115,-28,-304,-261,-208,-211,115,-200,227,-198,-304,-177,115,115,115,-304,115,-261,115,115,115,227,-199,227,115,227,115,-11,115,-204,-203,-201,115,115,-304,115,227,227,-205,-202,227,-207,-206,]),'IF':([53,70,101,104,121,200,201,204,206,213,215,216,217,218,220,222,223,234,333,334,337,339,343,346,348,349,427,428,432,434,437,473,474,475,477,495,496,498,510,515,516,517,519,520,521,],[-68,-302,-81,-69,228,-73,-76,-72,-74,228,-78,-194,-193,-77,-195,228,-75,-303,-213,-212,-210,228,-196,-209,-197,228,-208,-211,-200,228,-198,228,-199,228,228,-204,-203,-201,228,228,-205,-202,228,-207,-206,]),'STRING_LITERAL':([3,35,51,53,59,70,76,78,79,101,104,106,107,108,121,137,142,145,146,149,157,158,159,164,165,167,169,171,172,173,174,182,183,184,196,200,201,204,205,206,212,213,215,216,217,218,220,222,223,226,234,236,247,250,251,252,257,261,262,263,264,265,266,267,268,269,270,271,272,274,276,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,323,326,327,333,334,336,337,338,339,340,343,345,346,348,349,350,356,362,363,364,367,371,373,375,390,417,418,419,425,427,428,430,432,434,437,448,451,455,457,460,461,463,464,465,471,473,474,475,476,477,481,482,494,495,496,498,502,503,507,510,515,516,517,519,520,521,],[-115,-116,-117,-68,-304,-302,-28,-161,-27,-81,-69,173,-28,-304,173,-162,-304,173,173,-265,173,-263,276,173,-262,173,-261,173,173,-298,-260,-264,173,173,173,-73,-76,-72,173,-74,173,173,-78,-194,-193,-77,-195,173,-75,-261,-303,173,173,173,-28,-304,-304,-222,-225,-223,-219,-220,-224,-226,173,-228,-229,-221,-227,173,-299,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-304,-261,173,-213,-212,173,-210,173,173,173,-196,173,-209,-197,173,173,173,-261,173,173,-12,173,173,-11,173,173,-28,-304,-261,-208,-211,173,-200,173,-198,-304,-177,173,173,-304,173,-261,173,173,173,173,-199,173,173,173,173,-11,173,-204,-203,-201,173,-304,173,173,173,-205,-202,173,-207,-206,]),'FLOAT':([0,1,2,3,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,39,40,41,42,44,45,47,48,49,50,51,53,54,55,56,57,60,61,63,64,65,67,68,69,70,71,72,73,74,78,80,83,87,91,92,96,101,102,103,104,105,113,117,120,121,122,123,124,125,126,127,128,129,130,131,137,143,171,185,186,187,199,200,201,204,206,213,215,216,217,218,220,223,229,230,231,232,233,234,235,241,246,255,274,283,284,285,288,290,293,324,328,333,334,336,337,343,346,348,351,352,355,357,358,393,413,414,427,428,432,437,474,495,496,498,516,517,520,521,],[39,-304,-102,-115,-113,-99,-97,-52,-95,-114,-96,-64,-60,-100,-91,-66,39,-94,-109,-104,-65,-93,-110,39,-216,-107,-111,39,-63,-116,39,-29,-105,-62,-101,-67,-112,-106,-304,-108,-304,-103,-117,-68,-98,-85,-10,-9,39,-53,39,-82,39,39,-61,-131,-302,-130,39,-148,-147,-161,-88,-90,39,-87,-89,-92,-81,-84,-86,-69,-30,39,39,-70,39,-83,39,39,-128,-140,-141,-137,39,39,39,-162,39,39,-36,-35,39,39,-73,-76,-72,-74,39,-78,-194,-193,-77,-195,-75,39,39,-129,-132,-138,-303,-126,-127,-149,-71,39,-31,39,39,39,-34,39,39,39,-213,-212,39,-210,-196,-209,-197,-134,-133,-139,-151,-150,39,-33,-32,-208,-211,-200,-198,-199,-204,-203,-201,-205,-202,-207,-206,]),'XOREQUAL':([115,148,150,151,152,153,154,155,156,159,160,168,170,173,175,176,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,452,453,454,459,500,504,513,],[-289,-293,265,-281,-296,-300,-297,-294,-279,-280,-254,-292,-266,-298,-290,-278,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-259,-267,-268,-253,-283,-276,-277,]),'LSHIFTEQUAL':([115,148,150,151,152,153,154,155,156,159,160,168,170,173,175,176,178,179,227,234,273,275,276,277,279,286,287,289,294,378,379,380,381,384,389,452,453,454,459,500,504,513,],[-289,-293,267,-281,-296,-300,-297,-294,-279,-280,-254,-292,-266,-298,-290,-278,-295,-291,-289,-303,-301,-258,-299,-275,-274,-252,-257,-255,-256,-273,-272,-271,-270,-269,-282,-259,-267,-268,-253,-283,-276,-277,]),'RBRACKET':([3,35,51,59,78,79,106,107,115,137,142,148,150,151,152,153,154,155,156,159,160,161,162,166,168,169,170,173,175,176,177,178,179,180,181,196,225,234,250,251,273,275,276,277,279,286,287,289,294,314,315,323,325,326,327,342,361,362,376,378,379,380,381,382,384,389,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,417,418,424,425,431,443,444,447,452,453,454,459,462,463,488,491,492,500,504,512,513,],[-115,-116,-117,-304,-161,-27,-304,-28,-289,-162,-304,-293,-252,-281,-296,-300,-297,-294,-279,-280,-254,283,-233,-4,-292,290,-266,-298,-290,-278,-231,-295,-291,-3,-217,-304,-214,-303,-304,-28,-301,-258,-299,-275,-274,-252,-257,-255,-256,413,414,-304,422,423,-304,-230,441,442,-218,-273,-272,-271,-270,453,-269,-282,-239,-251,-240,-238,-242,-246,-241,-237,-244,-249,-235,-234,-243,-250,-245,-247,-248,-236,-304,-28,468,469,-215,478,479,480,-259,-267,-268,-253,489,490,-232,505,506,-283,-276,518,-277,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_statement':([121,213,222,339,349,434,473,475,477,510,515,519,],[200,200,200,200,200,200,200,200,200,200,200,200,]),'struct_or_union_specifier':([0,18,26,36,60,65,67,72,87,117,121,123,124,129,130,143,171,187,199,213,229,230,274,284,285,288,324,328,336,393,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'init_declarator_list':([33,63,],[82,82,]),'init_declarator_list_opt':([33,63,],[90,90,]),'iteration_statement':([121,213,222,339,349,434,473,475,477,510,515,519,],[201,201,201,201,201,201,201,201,201,201,201,201,]),'unified_string_literal':([106,121,145,146,157,164,167,171,172,183,184,196,205,212,213,222,236,247,250,268,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,327,336,338,339,340,345,349,350,356,363,364,371,373,390,417,430,434,455,457,461,464,465,471,473,475,476,477,481,494,502,507,510,515,519,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'assignment_expression_opt':([106,196,250,327,417,],[161,325,361,424,462,]),'brace_open':([27,28,66,69,71,73,74,121,144,145,146,213,222,339,349,373,390,434,452,457,458,473,475,477,481,510,515,519,],[72,75,121,123,124,132,133,121,121,257,257,121,121,121,121,257,460,121,460,460,460,121,121,121,257,121,121,121,]),'enumerator':([75,132,133,245,],[134,134,134,359,]),'typeid_noparen_declarator':([113,],[195,]),'type_qualifier_list_opt':([31,59,108,142,252,323,419,],[77,106,184,250,364,417,465,]),'declaration_specifiers_no_type_opt':([1,47,49,],[55,102,103,]),'expression_opt':([121,213,222,336,339,349,430,434,471,473,475,477,494,507,510,515,519,],[203,203,203,429,203,203,472,203,493,203,203,203,508,514,203,203,203,]),'designation':([257,448,460,503,],[367,367,367,367,]),'parameter_list':([60,143,187,324,328,393,],[116,116,116,116,116,116,]),'labeled_statement':([121,213,222,339,349,434,473,475,477,510,515,519,],[204,204,204,204,204,204,204,204,204,204,204,204,]),'abstract_declarator':([113,187,293,393,],[189,320,189,320,]),'translation_unit':([0,],[26,]),'init_declarator':([33,63,140,147,],[94,94,249,260,]),'direct_abstract_declarator':([113,187,190,293,316,392,393,],[197,197,322,197,322,322,197,]),'designator_list':([257,448,460,503,],[374,374,374,374,]),'identifier':([60,106,121,143,145,146,157,164,167,171,172,183,184,196,198,205,212,213,222,236,247,250,268,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,324,327,336,338,339,340,345,349,350,356,363,364,370,371,373,390,417,430,434,455,456,457,461,464,465,471,473,475,476,477,481,494,501,502,507,510,515,519,],[118,176,176,118,176,176,176,176,176,176,176,176,176,176,329,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,118,176,176,176,176,176,176,176,176,176,176,176,446,176,176,176,176,176,176,176,486,176,176,176,176,176,176,176,176,176,176,176,511,176,176,176,176,176,]),'offsetof_member_designator':([456,],[485,]),'unary_expression':([106,121,145,146,157,164,167,171,172,183,184,196,205,212,213,222,236,247,250,268,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,327,336,338,339,340,345,349,350,356,363,364,371,373,390,417,430,434,455,457,461,464,465,471,473,475,476,477,481,494,502,507,510,515,519,],[150,150,150,150,275,286,289,150,294,150,150,150,150,286,150,150,286,286,150,150,150,150,150,150,150,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,150,286,286,150,150,150,150,150,150,150,150,286,150,150,286,150,286,150,150,150,150,286,286,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'abstract_declarator_opt':([113,293,],[188,391,]),'initializer':([145,146,373,481,],[256,259,449,499,]),'direct_id_declarator':([0,4,13,26,33,36,63,65,81,84,113,131,140,147,187,190,316,354,],[8,8,61,8,8,8,8,8,8,61,8,8,8,8,8,61,61,8,]),'struct_declaration_list':([72,123,124,],[130,229,230,]),'pp_directive':([0,26,],[12,12,]),'declaration_list':([18,87,],[67,67,]),'id_init_declarator':([36,65,],[95,95,]),'type_specifier':([0,18,26,36,60,65,67,72,87,117,121,123,124,129,130,143,171,187,199,213,229,230,274,284,285,288,324,328,336,393,],[16,16,16,96,16,96,16,125,16,96,16,125,125,231,125,16,125,16,16,16,125,125,125,125,125,125,16,16,16,16,]),'compound_statement':([66,121,144,213,222,339,349,434,473,475,477,510,515,519,],[120,206,255,206,206,206,206,206,206,206,206,206,206,206,]),'pointer':([0,4,26,33,36,63,65,77,81,113,131,140,147,187,293,354,393,],[13,13,13,84,13,84,13,138,84,190,84,84,84,316,392,84,392,]),'typeid_declarator':([33,63,81,131,140,147,354,],[86,86,139,86,86,86,86,]),'id_init_declarator_list':([36,65,],[98,98,]),'declarator':([33,63,131,140,147,354,],[89,89,242,89,89,242,]),'argument_expression_list':([282,],[385,]),'struct_declarator_list_opt':([131,],[239,]),'typedef_name':([0,18,26,36,60,65,67,72,87,117,121,123,124,129,130,143,171,187,199,213,229,230,274,284,285,288,324,328,336,393,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'parameter_type_list_opt':([187,328,393,],[319,426,319,]),'struct_declarator':([131,354,],[240,439,]),'type_qualifier':([0,1,18,26,31,33,47,49,59,60,63,67,72,76,87,107,108,113,121,123,124,129,130,131,142,143,171,187,199,213,229,230,251,252,274,284,285,288,293,323,324,328,336,393,418,419,],[47,47,47,47,78,91,47,47,78,47,91,47,78,137,47,137,78,91,47,78,78,137,78,241,78,47,78,47,47,47,78,78,137,78,78,78,78,78,241,78,47,47,47,47,137,78,]),'assignment_operator':([150,],[268,]),'expression':([121,171,205,213,222,274,281,285,288,311,336,339,340,345,349,350,430,434,471,473,475,476,477,494,502,507,510,515,519,],[209,291,335,209,209,291,382,291,291,410,209,209,433,435,209,438,209,209,209,209,209,497,209,209,512,209,209,209,209,]),'storage_class_specifier':([0,1,18,26,33,47,49,60,63,67,87,113,121,143,187,199,213,324,328,336,393,],[1,1,1,1,80,1,1,1,80,1,1,80,1,1,1,1,1,1,1,1,1,]),'unified_wstring_literal':([106,121,145,146,157,164,167,171,172,183,184,196,205,212,213,222,236,247,250,268,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,327,336,338,339,340,345,349,350,356,363,364,371,373,390,417,430,434,455,457,461,464,465,471,473,475,476,477,481,494,502,507,510,515,519,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'translation_unit_or_empty':([0,],[43,]),'initializer_list_opt':([257,],[368,]),'brace_close':([130,135,224,229,230,243,244,368,448,487,503,],[232,246,348,351,352,357,358,445,483,504,513,]),'direct_typeid_declarator':([33,63,81,84,131,140,147,354,],[85,85,85,141,85,85,85,85,]),'external_declaration':([0,26,],[14,68,]),'type_name':([171,274,284,285,288,],[292,377,386,387,388,]),'block_item_list':([121,],[213,]),'pppragma_directive':([0,26,72,121,123,124,130,213,222,229,230,339,349,434,473,475,477,510,515,519,],[23,23,127,215,127,127,127,215,215,127,127,215,215,215,215,215,215,215,215,215,]),'statement':([121,213,222,339,349,434,473,475,477,510,515,519,],[216,216,347,432,437,474,495,496,498,517,520,521,]),'cast_expression':([106,121,145,146,164,171,183,184,196,205,212,213,222,236,247,250,268,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,327,336,338,339,340,345,349,350,356,363,364,371,373,390,417,430,434,455,457,461,464,465,471,473,475,476,477,481,494,502,507,510,515,519,],[162,162,162,162,287,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,459,162,162,162,162,459,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'struct_declarator_list':([131,],[237,]),'empty':([0,1,18,31,33,36,47,49,59,60,63,65,87,106,108,113,121,131,142,143,187,196,213,222,250,252,257,293,323,324,327,328,336,339,349,393,417,419,430,434,448,460,471,473,475,477,494,503,507,510,515,519,],[52,57,62,79,93,100,57,57,79,110,93,100,62,180,79,193,221,238,79,110,317,180,344,344,180,79,375,193,79,110,180,317,344,344,344,317,180,79,344,344,482,482,344,344,344,344,344,482,344,344,344,344,]),'parameter_declaration':([60,143,187,199,324,328,393,],[112,112,112,331,112,112,112,]),'primary_expression':([106,121,145,146,157,164,167,171,172,183,184,196,205,212,213,222,236,247,250,268,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,327,336,338,339,340,345,349,350,356,363,364,371,373,390,417,430,434,455,457,461,464,465,471,473,475,476,477,481,494,502,507,510,515,519,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'declaration':([0,18,26,67,87,121,213,336,],[34,64,34,122,64,217,217,430,]),'declaration_specifiers_no_type':([0,1,18,26,47,49,60,67,87,121,143,187,199,213,324,328,336,393,],[36,56,65,36,56,56,117,65,65,65,117,117,117,65,117,117,65,117,]),'jump_statement':([121,213,222,339,349,434,473,475,477,510,515,519,],[218,218,218,218,218,218,218,218,218,218,218,218,]),'enumerator_list':([75,132,133,],[135,243,244,]),'block_item':([121,213,],[220,343,]),'constant_expression':([212,236,247,356,371,],[341,353,360,440,447,]),'identifier_list_opt':([60,143,324,],[109,253,420,]),'constant':([106,121,145,146,157,164,167,171,172,183,184,196,205,212,213,222,236,247,250,268,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,327,336,338,339,340,345,349,350,356,363,364,371,373,390,417,430,434,455,457,461,464,465,471,473,475,476,477,481,494,502,507,510,515,519,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'type_specifier_no_typeid':([0,18,26,33,36,60,63,65,67,72,87,113,117,121,123,124,129,130,131,143,171,187,199,213,229,230,274,284,285,288,293,324,328,336,393,],[10,10,10,83,10,10,83,10,10,10,10,83,10,10,10,10,10,10,235,10,10,10,10,10,10,10,10,10,10,10,235,10,10,10,10,]),'struct_declaration':([72,123,124,130,229,230,],[128,128,128,233,233,233,]),'direct_typeid_noparen_declarator':([113,190,],[191,321,]),'id_declarator':([0,4,26,33,36,63,65,81,113,131,140,147,187,354,],[18,58,18,87,97,119,97,58,192,119,119,119,58,119,]),'selection_statement':([121,213,222,339,349,434,473,475,477,510,515,519,],[223,223,223,223,223,223,223,223,223,223,223,223,]),'postfix_expression':([106,121,145,146,157,164,167,171,172,183,184,196,205,212,213,222,236,247,250,268,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,327,336,338,339,340,345,349,350,356,363,364,371,373,390,417,430,434,455,457,461,464,465,471,473,475,476,477,481,494,502,507,510,515,519,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'initializer_list':([257,460,],[372,487,]),'unary_operator':([106,121,145,146,157,164,167,171,172,183,184,196,205,212,213,222,236,247,250,268,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,327,336,338,339,340,345,349,350,356,363,364,371,373,390,417,430,434,455,457,461,464,465,471,473,475,476,477,481,494,502,507,510,515,519,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'struct_or_union':([0,18,26,36,60,65,67,72,87,117,121,123,124,129,130,143,171,187,199,213,229,230,274,284,285,288,324,328,336,393,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'block_item_list_opt':([121,],[224,]),'assignment_expression':([106,121,145,146,171,183,184,196,205,213,222,250,268,274,281,282,285,288,311,327,336,338,339,340,345,349,350,363,364,373,417,430,434,455,464,465,471,473,475,476,477,481,494,502,507,510,515,519,],[166,225,258,258,225,314,315,166,225,225,225,166,376,225,225,383,225,225,225,166,225,431,225,225,225,225,225,443,444,258,166,225,225,484,491,492,225,225,225,225,225,258,225,225,225,225,225,225,]),'designation_opt':([257,448,460,503,],[373,481,373,481,]),'parameter_type_list':([60,143,187,324,328,393,],[111,254,318,421,318,318,]),'type_qualifier_list':([31,59,72,108,123,124,130,142,171,229,230,252,274,284,285,288,323,419,],[76,107,129,76,129,129,129,251,129,129,129,76,129,129,129,129,418,76,]),'designator':([257,374,448,460,503,],[369,450,369,369,369,]),'id_init_declarator_list_opt':([36,65,],[99,99,]),'declaration_specifiers':([0,18,26,60,67,87,121,143,187,199,213,324,328,336,393,],[33,63,33,113,63,63,63,113,113,113,63,113,113,63,113,]),'identifier_list':([60,143,324,],[114,114,114,]),'declaration_list_opt':([18,87,],[66,144,]),'function_definition':([0,26,],[40,40,]),'binary_expression':([106,121,145,146,171,183,184,196,205,212,213,222,236,247,250,268,274,281,282,285,288,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,327,336,338,339,340,345,349,350,356,363,364,371,373,417,430,434,455,461,464,465,471,473,475,476,477,481,494,502,507,510,515,519,],[177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,177,411,412,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,]),'enum_specifier':([0,18,26,36,60,65,67,72,87,117,121,123,124,129,130,143,171,187,199,213,229,230,274,284,285,288,324,328,336,393,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'decl_body':([0,18,26,67,87,121,213,336,],[46,46,46,46,46,46,46,46,]),'function_specifier':([0,1,18,26,33,47,49,60,63,67,87,113,121,143,187,199,213,324,328,336,393,],[49,49,49,49,92,49,49,49,92,49,49,92,49,49,49,49,49,49,49,49,49,]),'specifier_qualifier_list':([72,123,124,130,171,229,230,274,284,285,288,],[131,131,131,131,293,131,131,293,293,293,293,]),'conditional_expression':([106,121,145,146,171,183,184,196,205,212,213,222,236,247,250,268,274,281,282,285,288,311,327,336,338,339,340,345,349,350,356,363,364,371,373,417,430,434,455,461,464,465,471,473,475,476,477,481,494,502,507,510,515,519,],[181,181,181,181,181,181,181,181,181,342,181,181,342,342,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,342,181,181,342,181,181,181,181,181,488,181,181,181,181,181,181,181,181,181,181,181,181,181,181,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
