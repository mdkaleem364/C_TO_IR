
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'LPAREN':([0,2,3,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,48,50,51,52,53,54,55,57,58,59,60,61,62,63,67,70,71,75,76,77,80,81,84,86,87,88,89,91,92,94,95,96,100,101,103,104,105,106,107,108,109,111,113,114,116,120,126,127,128,129,139,141,146,147,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,174,175,177,178,180,181,182,183,184,188,189,190,192,194,198,200,201,202,204,205,206,208,209,213,216,218,219,222,224,227,230,231,233,234,237,238,240,241,242,243,246,249,250,252,253,255,256,257,258,259,260,261,264,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,297,300,301,302,303,304,305,306,307,308,309,310,311,313,315,318,319,321,322,323,324,326,332,334,336,338,339,340,345,346,347,348,352,353,354,356,358,359,360,364,365,366,367,369,370,371,372,374,375,376,378,379,380,405,406,407,409,410,417,419,422,423,424,425,426,427,430,433,434,435,436,437,441,442,443,445,446,448,450,453,457,458,459,460,461,463,465,466,467,468,469,470,471,472,473,474,476,477,478,479,480,481,483,492,493,494,496,498,499,500,501,502,504,505,506,508,510,511,514,516,517,519,520,521,],[8,-102,-114,-112,-115,-63,8,-107,-101,-62,-109,-94,-304,-100,-65,-111,-304,8,70,-97,-117,85,-93,-66,-99,-103,-116,-108,-64,-104,-60,-98,-105,-95,-216,-96,-304,-91,-113,-68,8,-110,-29,-304,-106,8,-67,-81,-9,-86,-10,-28,-161,-27,-159,-92,70,-90,-89,112,-88,-37,-87,70,-304,-148,-147,-302,-131,-130,-84,-69,-61,8,70,-85,85,-30,-162,-160,70,149,149,-304,70,112,194,-289,-28,-304,149,-128,70,-70,149,149,-279,264,264,-298,-292,267,-280,-294,-281,-265,-263,-297,-293,-261,-264,270,-290,-262,-295,-266,291,-296,297,-300,-260,-304,-278,-291,-38,-28,-304,149,-71,194,149,335,-45,337,194,-36,-35,149,149,-261,-149,-303,297,-129,-126,-127,297,-132,-72,358,-77,-76,-75,297,149,-74,149,-289,-73,370,-193,-78,-194,149,374,-195,375,376,149,-299,-301,149,297,297,297,297,149,297,297,297,297,297,297,297,297,297,297,297,297,297,297,149,-275,149,-274,149,-220,-221,149,-219,-224,-225,-222,-226,-229,-228,-223,-227,-11,297,-12,149,-44,-43,149,149,-261,194,-261,149,-304,337,335,-31,-34,-151,-150,-134,-133,70,297,149,-213,-210,-197,149,-196,149,149,149,-209,-212,149,149,376,376,-282,297,-269,-270,-271,-272,-273,-177,-304,-39,-42,-186,-192,-188,-190,-261,-28,-304,149,-33,-32,149,479,-200,-208,-198,-211,149,-304,297,-268,149,-267,297,-11,149,-41,-40,-191,-187,-189,-51,-50,149,149,-261,149,-199,149,149,149,149,-46,-49,-203,-204,149,-201,-276,-304,-283,149,-48,-47,149,149,-277,-205,149,-202,149,-207,-206,]),'PPPRAGMASTR':([45,],[95,]),'RSHIFT':([126,151,154,155,157,158,159,162,163,167,169,171,173,174,175,176,178,179,182,183,218,249,265,266,268,269,271,293,295,298,299,379,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,405,406,407,409,410,452,456,458,460,500,502,511,],[-289,-279,-298,-292,-280,-294,-281,-297,-293,-290,-295,-266,272,-254,-296,-233,-300,-252,-278,-291,-303,-289,-256,-255,-299,-301,-258,-275,-274,-252,-257,-282,-239,-237,272,272,272,-235,272,-236,272,-240,272,272,-238,272,-234,272,272,272,-269,-270,-271,-272,-273,-253,-259,-268,-267,-276,-283,-277,]),'MINUSMINUS':([6,24,30,45,55,60,61,62,86,89,95,106,109,111,113,126,127,128,129,147,149,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,174,175,177,178,180,181,182,183,188,189,190,198,208,209,213,218,219,230,233,237,238,240,241,242,243,246,249,250,253,255,256,257,259,264,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,297,300,301,302,303,304,305,306,307,308,309,310,311,313,315,318,319,323,324,326,334,336,338,356,358,359,360,364,365,366,367,369,370,371,372,374,375,379,380,405,406,407,409,410,417,419,430,433,434,435,441,443,445,446,448,450,453,457,458,459,460,461,463,465,473,474,476,477,478,479,480,481,483,494,496,498,499,500,501,502,504,508,510,511,514,516,517,519,520,521,],[-115,-117,-116,-68,-81,-28,-161,-27,-304,-302,-69,-162,152,152,-304,-289,-28,-304,152,152,152,-279,152,152,-298,-292,-280,-294,-281,-265,-263,-297,-293,-261,-264,152,-290,-262,-295,-266,293,-296,152,-300,-260,-304,-278,-291,-28,-304,152,152,152,152,-261,-303,152,152,-72,-77,-76,-75,152,152,-74,152,-289,-73,-193,-78,-194,152,-195,152,-299,-301,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,-275,152,-274,152,-220,-221,152,-219,-224,-225,-222,-226,-229,-228,-223,-227,-11,152,-12,152,152,152,-261,-261,152,-304,152,152,-213,-210,-197,152,-196,152,152,152,-209,-212,152,152,-282,152,-269,-270,-271,-272,-273,-177,-304,-261,-28,-304,152,152,-200,-208,-198,-211,152,-304,152,-268,152,-267,152,-11,152,152,152,-261,152,-199,152,152,152,152,-203,-204,152,-201,-276,-304,-283,152,152,152,-277,-205,152,-202,152,-207,-206,]),'ELSE':([45,95,218,233,237,238,240,243,250,255,359,360,364,371,372,443,445,446,448,478,494,496,499,514,517,520,521,],[-68,-69,-303,-72,-77,-76,-75,-74,-73,-78,-213,-210,-197,-209,-212,-200,-208,-198,-211,-199,-203,-204,510,-205,-202,-207,-206,]),'SHORT':([0,2,3,5,6,7,10,11,12,13,14,15,16,17,18,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,50,51,52,54,55,57,58,59,61,67,71,75,77,81,83,85,87,88,89,91,92,93,94,95,96,98,99,100,101,103,104,105,106,112,119,120,135,136,137,138,139,140,141,142,143,144,146,147,149,192,194,205,206,207,216,218,220,221,222,224,227,231,232,233,237,238,240,243,246,250,253,255,256,259,261,264,267,270,297,335,337,345,346,347,348,352,353,355,359,360,364,366,371,372,374,376,436,437,443,445,446,448,478,494,496,499,514,517,520,521,],[2,-102,-114,-112,-115,-63,-107,-101,-62,-109,-94,-304,-100,-65,-111,2,2,-97,-117,-52,-93,-66,-99,-103,-116,-108,-64,-104,-60,-98,-105,-95,-216,-96,-304,-91,-113,-68,2,2,-110,-29,-304,-106,-67,-81,-9,-86,-10,-161,-92,-90,-89,-88,-87,2,2,-148,-147,-302,-131,-130,2,-84,-69,-61,-82,2,2,2,-85,-53,-30,-162,2,2,2,2,2,-140,2,-128,-141,2,2,-137,-83,-70,2,2,-71,2,-36,-35,2,-149,-303,2,2,-129,-126,-127,-132,-138,-72,-77,-76,-75,-74,2,-73,-193,-78,-194,-195,2,2,2,2,2,2,2,-31,-34,-151,-150,-134,-133,-139,-213,-210,-197,-196,-209,-212,2,2,-33,-32,-200,-208,-198,-211,-199,-203,-204,-201,-205,-202,-207,-206,]),'MODEQUAL':([126,151,154,155,157,158,159,162,163,167,169,171,174,175,178,179,182,183,218,249,265,266,268,269,271,293,295,298,299,379,405,406,407,409,410,452,456,458,460,500,502,511,],[-289,-279,-298,-292,-280,-294,-281,-297,-293,-290,-295,-266,-254,-296,-300,310,-278,-291,-303,-289,-256,-255,-299,-301,-258,-275,-274,-252,-257,-282,-269,-270,-271,-272,-273,-253,-259,-268,-267,-276,-283,-277,]),'XOR':([126,151,154,155,157,158,159,162,163,167,169,171,173,174,175,176,178,179,182,183,218,249,265,266,268,269,271,293,295,298,299,379,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,405,406,407,409,410,452,456,458,460,500,502,511,],[-289,-279,-298,-292,-280,-294,-281,-297,-293,-290,-295,-266,279,-254,-296,-233,-300,-252,-278,-291,-303,-289,-256,-255,-299,-301,-258,-275,-274,-252,-257,-282,-239,-237,-243,279,-247,-235,-249,-236,-244,-240,-241,-242,-238,-246,-234,279,-245,279,-269,-270,-271,-272,-273,-253,-259,-268,-267,-276,-283,-277,]),'LAND':([126,151,154,155,157,158,159,162,163,167,169,171,173,174,175,176,178,179,182,183,218,249,265,266,268,269,271,293,295,298,299,379,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,405,406,407,409,410,452,456,458,460,500,502,511,],[-289,-279,-298,-292,-280,-294,-281,-297,-293,-290,-295,-266,288,-254,-296,-233,-300,-252,-278,-291,-303,-289,-256,-255,-299,-301,-258,-275,-274,-252,-257,-282,-239,-237,-243,288,-247,-235,-249,-236,-244,-240,-241,-242,-238,-246,-234,-250,-245,-248,-269,-270,-271,-272,-273,-253,-259,-268,-267,-276,-283,-277,]),'GT':([126,151,154,155,157,158,159,162,163,167,169,171,173,174,175,176,178,179,182,183,218,249,265,266,268,269,271,293,295,298,299,379,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,405,406,407,409,410,452,456,458,460,500,502,511,],[-289,-279,-298,-292,-280,-294,-281,-297,-293,-290,-295,-266,281,-254,-296,-233,-300,-252,-278,-291,-303,-289,-256,-255,-299,-301,-258,-275,-274,-252,-257,-282,-239,-237,-243,281,281,-235,281,-236,-244,-240,-241,-242,-238,281,-234,281,281,281,-269,-270,-271,-272,-273,-253,-259,-268,-267,-276,-283,-277,]),'_COMPLEX':([0,2,3,5,6,7,10,11,12,13,14,15,16,17,18,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,50,51,52,54,55,57,58,59,61,67,71,75,77,81,83,85,87,88,89,91,92,93,94,95,96,98,99,100,101,103,104,105,106,112,119,120,135,136,137,138,139,140,141,142,143,144,146,147,149,192,194,205,206,207,216,218,220,221,222,224,227,231,232,233,237,238,240,243,246,250,253,255,256,259,261,264,267,270,297,335,337,345,346,347,348,352,353,355,359,360,364,366,371,372,374,376,436,437,443,445,446,448,478,494,496,499,514,517,520,521,],[10,-102,-114,-112,-115,-63,-107,-101,-62,-109,-94,-304,-100,-65,-111,10,10,-97,-117,-52,-93,-66,-99,-103,-116,-108,-64,-104,-60,-98,-105,-95,-216,-96,-304,-91,-113,-68,10,10,-110,-29,-304,-106,-67,-81,-9,-86,-10,-161,-92,-90,-89,-88,-87,10,10,-148,-147,-302,-131,-130,10,-84,-69,-61,-82,10,10,10,-85,-53,-30,-162,10,10,10,10,10,-140,10,-128,-141,10,10,-137,-83,-70,10,10,-71,10,-36,-35,10,-149,-303,10,10,-129,-126,-127,-132,-138,-72,-77,-76,-75,-74,10,-73,-193,-78,-194,-195,10,10,10,10,10,10,10,-31,-34,-151,-150,-134,-133,-139,-213,-210,-197,-196,-209,-212,10,10,-33,-32,-200,-208,-198,-211,-199,-203,-204,-201,-205,-202,-207,-206,]),'FLOAT_CONST':([6,24,30,45,55,60,61,62,86,89,95,106,109,111,113,127,128,129,147,149,152,153,160,161,164,165,166,168,177,180,181,188,189,190,198,208,209,213,218,219,230,233,237,238,240,241,242,243,246,250,253,255,256,257,259,264,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,297,300,301,302,303,304,305,306,307,308,309,310,311,313,315,318,319,323,324,326,334,336,338,356,358,359,360,364,365,366,367,369,370,371,372,374,375,380,417,419,430,433,434,435,441,443,445,446,448,450,453,457,459,461,463,465,473,474,476,477,478,479,480,481,483,494,496,498,499,501,504,508,510,514,516,517,519,520,521,],[-115,-117,-116,-68,-81,-28,-161,-27,-304,-302,-69,-162,158,158,-304,-28,-304,158,158,158,158,158,-265,-263,-261,-264,158,-262,158,-260,-304,-28,-304,158,158,158,158,-261,-303,158,158,-72,-77,-76,-75,158,158,-74,158,-73,-193,-78,-194,158,-195,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,-220,-221,158,-219,-224,-225,-222,-226,-229,-228,-223,-227,-11,158,-12,158,158,158,-261,-261,158,-304,158,158,-213,-210,-197,158,-196,158,158,158,-209,-212,158,158,158,-177,-304,-261,-28,-304,158,158,-200,-208,-198,-211,158,-304,158,158,158,-11,158,158,158,-261,158,-199,158,158,158,158,-203,-204,158,-201,-304,158,158,158,-205,158,-202,158,-207,-206,]),'LONG':([0,2,3,5,6,7,10,11,12,13,14,15,16,17,18,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,50,51,52,54,55,57,58,59,61,67,71,75,77,81,83,85,87,88,89,91,92,93,94,95,96,98,99,100,101,103,104,105,106,112,119,120,135,136,137,138,139,140,141,142,143,144,146,147,149,192,194,205,206,207,216,218,220,221,222,224,227,231,232,233,237,238,240,243,246,250,253,255,256,259,261,264,267,270,297,335,337,345,346,347,348,352,353,355,359,360,364,366,371,372,374,376,436,437,443,445,446,448,478,494,496,499,514,517,520,521,],[33,-102,-114,-112,-115,-63,-107,-101,-62,-109,-94,-304,-100,-65,-111,33,33,-97,-117,-52,-93,-66,-99,-103,-116,-108,-64,-104,-60,-98,-105,-95,-216,-96,-304,-91,-113,-68,33,33,-110,-29,-304,-106,-67,-81,-9,-86,-10,-161,-92,-90,-89,-88,-87,33,33,-148,-147,-302,-131,-130,33,-84,-69,-61,-82,33,33,33,-85,-53,-30,-162,33,33,33,33,33,-140,33,-128,-141,33,33,-137,-83,-70,33,33,-71,33,-36,-35,33,-149,-303,33,33,-129,-126,-127,-132,-138,-72,-77,-76,-75,-74,33,-73,-193,-78,-194,-195,33,33,33,33,33,33,33,-31,-34,-151,-150,-134,-133,-139,-213,-210,-197,-196,-209,-212,33,33,-33,-32,-200,-208,-198,-211,-199,-203,-204,-201,-205,-202,-207,-206,]),'ENUM':([0,6,7,12,14,15,17,20,23,24,25,26,27,30,32,34,35,39,41,42,45,46,47,50,51,54,55,57,58,59,61,83,85,89,93,94,95,96,98,99,100,103,104,105,106,112,119,135,136,137,138,140,142,143,144,146,147,149,192,194,205,206,207,218,220,221,232,233,237,238,240,243,246,250,253,255,256,259,264,267,270,297,335,337,345,346,355,359,360,364,366,371,372,374,376,436,437,443,445,446,448,478,494,496,499,514,517,520,521,],[37,-115,-63,-62,-94,-304,-65,37,-97,-117,-52,-93,-66,-116,-64,-60,-98,-95,-96,-304,-68,37,37,-29,-304,-67,-81,-9,-86,-10,-161,37,37,-302,37,-84,-69,-61,-82,37,37,-85,-53,-30,-162,37,37,37,37,-140,37,-141,37,-137,-83,-70,37,37,-71,37,-36,-35,37,-303,37,37,-138,-72,-77,-76,-75,-74,37,-73,-193,-78,-194,-195,37,37,37,37,37,37,-31,-34,-139,-213,-210,-197,-196,-209,-212,37,37,-33,-32,-200,-208,-198,-211,-199,-203,-204,-201,-205,-202,-207,-206,]),'CONTINUE':([45,55,89,95,147,218,233,237,238,240,242,243,246,250,253,255,256,259,359,360,364,365,366,369,371,372,441,443,445,446,448,477,478,480,483,494,496,499,510,514,516,517,519,520,521,],[-68,-81,-302,-69,239,-303,-72,-77,-76,-75,239,-74,239,-73,-193,-78,-194,-195,-213,-210,-197,239,-196,239,-209,-212,239,-200,-208,-198,-211,239,-199,239,239,-203,-204,-201,239,-205,239,-202,239,-207,-206,]),'UNSIGNED':([0,2,3,5,6,7,10,11,12,13,14,15,16,17,18,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,50,51,52,54,55,57,58,59,61,67,71,75,77,81,83,85,87,88,89,91,92,93,94,95,96,98,99,100,101,103,104,105,106,112,119,120,135,136,137,138,139,140,141,142,143,144,146,147,149,192,194,205,206,207,216,218,220,221,222,224,227,231,232,233,237,238,240,243,246,250,253,255,256,259,261,264,267,270,297,335,337,345,346,347,348,352,353,355,359,360,364,366,371,372,374,376,436,437,443,445,446,448,478,494,496,499,514,517,520,521,],[13,-102,-114,-112,-115,-63,-107,-101,-62,-109,-94,-304,-100,-65,-111,13,13,-97,-117,-52,-93,-66,-99,-103,-116,-108,-64,-104,-60,-98,-105,-95,-216,-96,-304,-91,-113,-68,13,13,-110,-29,-304,-106,-67,-81,-9,-86,-10,-161,-92,-90,-89,-88,-87,13,13,-148,-147,-302,-131,-130,13,-84,-69,-61,-82,13,13,13,-85,-53,-30,-162,13,13,13,13,13,-140,13,-128,-141,13,13,-137,-83,-70,13,13,-71,13,-36,-35,13,-149,-303,13,13,-129,-126,-127,-132,-138,-72,-77,-76,-75,-74,13,-73,-193,-78,-194,-195,13,13,13,13,13,13,13,-31,-34,-151,-150,-134,-133,-139,-213,-210,-197,-196,-209,-212,13,13,-33,-32,-200,-208,-198,-211,-199,-203,-204,-201,-205,-202,-207,-206,]),'LBRACE':([22,25,37,38,45,47,49,50,55,83,87,88,89,91,92,95,97,98,99,102,104,105,109,111,115,144,147,181,205,206,218,233,237,238,240,242,243,246,250,253,255,256,259,313,318,319,345,346,359,360,364,365,366,369,371,372,380,417,419,436,437,441,443,445,446,448,453,454,456,461,463,465,477,478,480,483,494,496,499,501,510,514,516,517,519,520,521,],[-136,-52,89,89,-68,-304,-135,-29,-81,-304,89,89,-302,89,89,-69,-7,-82,-8,89,-53,-30,89,89,89,-83,89,-304,-36,-35,-303,-72,-77,-76,-75,89,-74,89,-73,-193,-78,-194,-195,-11,-12,89,-31,-34,-213,-210,-197,89,-196,89,-209,-212,89,-177,-304,-33,-32,89,-200,-208,-198,-211,-304,89,89,89,-11,89,89,-199,89,89,-203,-204,-201,-304,89,-205,89,-202,89,-207,-206,]),'REGISTER':([0,2,3,5,6,7,10,11,12,13,14,15,16,17,18,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,50,51,52,54,55,67,71,75,77,81,83,85,87,88,89,91,92,95,96,98,99,101,104,105,112,120,144,146,147,192,194,205,206,207,216,218,231,233,237,238,240,243,246,250,253,255,256,259,335,337,345,346,347,348,352,353,359,360,364,366,371,372,374,376,436,437,443,445,446,448,478,494,496,499,514,517,520,521,],[14,-102,-114,-112,-115,-63,-107,-101,-62,-109,-94,14,-100,-65,-111,14,-97,-117,-52,-93,-66,-99,-103,-116,-108,-64,-104,-60,-98,-105,-95,-216,-96,14,-91,-113,-68,14,14,-110,-29,14,-106,-67,-81,-92,-90,-89,-88,-87,14,14,-148,-147,-302,-131,-130,-69,-61,-82,14,14,-53,-30,14,14,-83,-70,14,-71,14,-36,-35,14,-149,-303,-132,-72,-77,-76,-75,-74,14,-73,-193,-78,-194,-195,14,14,-31,-34,-151,-150,-134,-133,-213,-210,-197,-196,-209,-212,14,14,-33,-32,-200,-208,-198,-211,-199,-203,-204,-201,-205,-202,-207,-206,]),'LBRACKET':([2,3,5,6,10,11,13,14,16,18,19,23,24,25,26,28,29,30,31,33,35,36,39,40,41,43,44,48,50,52,60,61,62,63,67,71,75,76,77,80,81,87,88,89,91,92,104,105,106,107,116,120,126,139,151,154,155,157,158,159,162,163,167,169,171,174,175,178,181,182,183,184,194,200,201,202,204,205,206,216,218,222,224,227,231,249,261,268,269,293,295,312,317,321,322,332,339,340,345,346,347,348,352,353,376,378,379,405,406,407,409,410,413,416,419,422,423,424,425,426,427,436,437,453,458,460,462,466,467,468,469,470,471,472,485,486,492,493,500,501,502,505,506,511,512,518,],[-102,-114,-112,-115,-107,-101,-109,-94,-100,-111,-304,-97,-117,86,-93,-99,-103,-116,-108,-104,-98,-105,-95,-216,-96,-91,-113,-110,-29,-106,-28,-161,-27,-159,-92,-90,-89,113,-88,-37,-87,-148,-147,-302,-131,-130,86,-30,-162,-160,113,198,-289,-128,-279,-298,-292,-280,-294,-281,-297,-293,-290,-295,-266,294,-296,-300,315,-278,-291,-38,198,336,-45,338,198,-36,-35,-149,-303,-129,-126,-127,-132,-289,198,-299,-301,-275,-274,-178,315,-44,-43,198,338,336,-31,-34,-151,-150,-134,-133,198,198,-282,-269,-270,-271,-272,-273,-181,-179,315,-39,-42,-186,-192,-188,-190,-33,-32,315,-268,-267,-180,-41,-40,-191,-187,-189,-51,-50,504,-284,-46,-49,-276,315,-283,-48,-47,-277,-285,-286,]),'LT':([126,151,154,155,157,158,159,162,163,167,169,171,173,174,175,176,178,179,182,183,218,249,265,266,268,269,271,293,295,298,299,379,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,405,406,407,409,410,452,456,458,460,500,502,511,],[-289,-279,-298,-292,-280,-294,-281,-297,-293,-290,-295,-266,283,-254,-296,-233,-300,-252,-278,-291,-303,-289,-256,-255,-299,-301,-258,-275,-274,-252,-257,-282,-239,-237,-243,283,283,-235,283,-236,-244,-240,-241,-242,-238,283,-234,283,283,283,-269,-270,-271,-272,-273,-253,-259,-268,-267,-276,-283,-277,]),'ELLIPSIS':([207,],[341,]),'LE':([126,151,154,155,157,158,159,162,163,167,169,171,173,174,175,176,178,179,182,183,218,249,265,266,268,269,271,293,295,298,299,379,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,405,406,407,409,410,452,456,458,460,500,502,511,],[-289,-279,-298,-292,-280,-294,-281,-297,-293,-290,-295,-266,284,-254,-296,-233,-300,-252,-278,-291,-303,-289,-256,-255,-299,-301,-258,-275,-274,-252,-257,-282,-239,-237,-243,284,284,-235,284,-236,-244,-240,-241,-242,-238,284,-234,284,284,284,-269,-270,-271,-272,-273,-253,-259,-268,-267,-276,-283,-277,]),'DO':([45,55,89,95,147,218,233,237,238,240,242,243,246,250,253,255,256,259,359,360,364,365,366,369,371,372,441,443,445,446,448,477,478,480,483,494,496,499,510,514,516,517,519,520,521,],[-68,-81,-302,-69,242,-303,-72,-77,-76,-75,242,-74,242,-73,-193,-78,-194,-195,-213,-210,-197,242,-196,242,-209,-212,242,-200,-208,-198,-211,242,-199,242,242,-203,-204,-201,242,-205,242,-202,242,-207,-206,]),'RESTRICT':([0,2,3,5,6,7,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,50,51,52,54,55,60,61,67,71,75,77,81,83,85,86,87,88,89,91,92,93,95,96,98,99,101,104,105,106,112,113,120,127,128,135,136,137,138,139,140,141,142,143,144,146,147,149,188,189,192,194,205,206,207,216,218,220,221,222,224,227,231,232,233,237,238,240,243,246,250,253,255,256,259,261,264,267,270,297,335,337,338,345,346,347,348,352,353,355,359,360,364,366,371,372,374,376,433,434,436,437,443,445,446,448,478,494,496,499,514,517,520,521,],[30,-102,-114,-112,-115,-63,-107,-101,-62,-109,-94,30,-100,-65,-111,30,30,-97,-117,-52,-93,-66,-99,-103,-116,-108,-64,-104,-60,-98,-105,-95,-216,-96,30,-91,-113,-68,30,30,-110,-29,30,-106,-67,-81,30,-161,-92,-90,-89,-88,-87,30,30,30,-148,-147,-302,-131,-130,30,-69,-61,-82,30,30,-53,-30,-162,30,30,30,30,30,30,30,-140,30,-128,-141,30,30,-137,-83,-70,30,30,30,30,-71,30,-36,-35,30,-149,-303,30,30,-129,-126,-127,-132,-138,-72,-77,-76,-75,-74,30,-73,-193,-78,-194,-195,30,30,30,30,30,30,30,30,-31,-34,-151,-150,-134,-133,-139,-213,-210,-197,-196,-209,-212,30,30,30,30,-33,-32,-200,-208,-198,-211,-199,-203,-204,-201,-205,-202,-207,-206,]),'TIMES':([0,2,3,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,23,24,26,27,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,48,51,52,54,55,57,58,59,60,61,62,63,67,70,71,75,77,81,86,87,88,89,91,92,94,95,96,100,101,103,106,108,109,111,113,114,120,126,127,128,129,139,141,146,147,149,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,173,174,175,176,177,178,179,180,181,182,183,188,189,190,192,194,198,208,209,213,216,218,219,222,224,227,230,231,233,237,238,240,241,242,243,246,249,250,253,255,256,257,259,261,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,315,318,319,323,324,326,334,336,338,347,348,352,353,354,356,358,359,360,364,365,366,367,369,370,371,372,374,375,376,379,380,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,405,406,407,409,410,417,419,430,433,434,435,441,443,445,446,448,450,452,453,456,457,458,459,460,461,463,465,473,474,476,477,478,479,480,481,483,494,496,498,499,500,501,502,504,508,510,511,514,516,517,519,520,521,],[19,-102,-114,-112,-115,-63,19,-107,-101,-62,-109,-94,-304,-100,-65,-111,-304,19,19,-97,-117,-93,-66,-99,-103,-116,-108,-64,-104,-60,-98,-105,-95,-216,-96,-304,-91,-113,-68,19,-110,-304,-106,-67,-81,-9,-86,-10,-28,-161,-27,19,-92,19,-90,-89,-88,-87,-304,-148,-147,-302,-131,-130,-84,-69,-61,19,19,-85,-162,19,164,164,-304,19,19,-289,-28,-304,213,-128,19,-70,164,164,-279,164,164,-298,-292,-280,-294,-281,-265,-263,-297,-293,-261,-264,164,-290,-262,-295,-266,287,-254,-296,-233,164,-300,-252,-260,-304,-278,-291,-28,-304,326,-71,19,334,164,164,-261,-149,-303,164,-129,-126,-127,164,-132,-72,-77,-76,-75,164,164,-74,164,-289,-73,-193,-78,-194,164,-195,19,164,-256,-255,-299,-301,164,-258,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-275,164,-274,164,-252,-257,-220,-221,164,-219,-224,-225,-222,-226,-229,-228,-223,-227,-11,164,-12,164,164,164,-261,-261,430,-304,-151,-150,-134,-133,19,164,164,-213,-210,-197,164,-196,164,164,164,-209,-212,164,164,19,-282,164,287,287,287,287,287,-235,287,-236,287,287,287,287,287,287,-234,287,287,287,-269,-270,-271,-272,-273,-177,-304,-261,-28,-304,476,164,-200,-208,-198,-211,164,-253,-304,-259,164,-268,164,-267,164,-11,164,164,164,-261,164,-199,164,164,164,164,-203,-204,164,-201,-276,-304,-283,164,164,164,-277,-205,164,-202,164,-207,-206,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant_expression':([219,230,241,315,356,],[350,357,361,414,439,]),'struct_declarator':([141,354,],[223,438,]),'assignment_operator':([179,],[302,]),'abstract_declarator':([120,194,261,376,],[197,329,197,329,]),'id_init_declarator_list':([20,100,],[65,65,]),'expression_opt':([147,242,246,365,369,374,441,450,477,480,481,483,498,508,510,516,519,],[236,236,236,236,236,449,236,482,236,236,497,236,509,515,236,236,236,]),'pppragma_directive':([0,46,93,135,136,142,147,220,221,242,246,365,369,441,477,480,483,510,516,519,],[17,17,140,140,140,140,255,140,140,255,255,255,255,255,255,255,255,255,255,255,]),'jump_statement':([147,242,246,365,369,441,477,480,483,510,516,519,],[237,237,237,237,237,237,237,237,237,237,237,237,]),'designation_opt':([181,419,453,501,],[319,465,319,465,]),'assignment_expression_opt':([129,190,198,336,435,],[212,325,333,429,475,]),'unified_wstring_literal':([109,111,129,147,149,152,153,166,177,190,198,208,209,219,230,241,242,246,257,264,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,297,302,315,319,323,324,336,356,358,365,367,369,370,374,375,380,435,441,450,457,459,461,465,473,474,477,479,480,481,483,498,504,508,510,516,519,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'selection_statement':([147,242,246,365,369,441,477,480,483,510,516,519,],[240,240,240,240,240,240,240,240,240,240,240,240,]),'abstract_declarator_opt':([120,261,],[195,377,]),'function_specifier':([0,15,21,42,46,47,51,83,85,99,101,112,120,147,194,207,246,335,337,374,376,],[15,15,75,15,15,15,15,15,15,15,75,15,75,15,15,15,15,15,15,15,15,]),'parameter_type_list_opt':([194,335,376,],[330,428,330,]),'typeid_noparen_declarator':([120,],[199,]),'declaration_specifiers_no_type':([0,15,42,46,47,51,83,85,99,112,147,194,207,246,335,337,374,376,],[20,59,59,20,100,59,100,119,100,119,100,119,119,100,119,119,100,119,]),'declaration_list_opt':([47,83,],[102,115,]),'compound_statement':([102,115,147,242,246,365,369,441,477,480,483,510,516,519,],[146,192,243,243,243,243,243,243,243,243,243,243,243,243,]),'conditional_expression':([109,111,129,147,149,190,198,208,209,219,230,241,242,246,257,264,270,276,291,294,297,302,315,319,323,324,336,356,358,365,367,369,370,374,375,435,441,450,457,459,465,473,474,477,479,480,481,483,498,504,508,510,516,519,],[172,172,172,172,172,172,172,172,172,351,351,351,172,172,172,172,172,172,172,172,172,172,351,172,172,172,172,351,172,172,172,172,172,172,172,172,172,172,487,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'initializer_list':([181,453,],[320,484,]),'block_item_list_opt':([147,],[244,]),'constant':([109,111,129,147,149,152,153,166,177,190,198,208,209,219,230,241,242,246,257,264,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,297,302,315,319,323,324,336,356,358,365,367,369,370,374,375,380,435,441,450,457,459,461,465,473,474,477,479,480,481,483,498,504,508,510,516,519,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'initializer':([109,111,319,465,],[170,185,418,489,]),'primary_expression':([109,111,129,147,149,152,153,166,177,190,198,208,209,219,230,241,242,246,257,264,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,297,302,315,319,323,324,336,356,358,365,367,369,370,374,375,380,435,441,450,457,459,461,465,473,474,477,479,480,481,483,498,504,508,510,516,519,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'typeid_declarator':([21,70,101,108,114,141,354,],[79,110,79,79,79,79,79,]),'external_declaration':([0,46,],[34,96,]),'struct_or_union':([0,20,46,47,83,85,93,99,100,112,119,135,136,138,142,147,149,194,207,220,221,246,264,267,270,297,335,337,374,376,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'postfix_expression':([109,111,129,147,149,152,153,166,177,190,198,208,209,219,230,241,242,246,257,264,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,297,302,315,319,323,324,336,356,358,365,367,369,370,374,375,380,435,441,450,457,459,461,465,473,474,477,479,480,481,483,498,504,508,510,516,519,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'parameter_type_list':([85,112,194,335,337,376,],[123,187,331,331,432,331,]),'block_item_list':([147,],[246,]),'type_qualifier':([0,15,19,21,42,46,47,51,60,83,85,86,93,99,101,112,113,120,127,128,135,136,138,141,142,147,149,188,189,194,207,220,221,246,261,264,267,270,297,335,337,338,374,376,433,434,],[42,42,61,81,42,42,42,42,106,42,42,61,61,42,81,42,61,81,106,61,61,61,106,227,61,42,61,106,61,42,42,61,61,42,227,61,61,61,61,42,42,61,42,42,106,61,]),'cast_expression':([109,111,129,147,149,177,190,198,208,209,219,230,241,242,246,257,264,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,297,302,315,319,323,324,336,356,358,365,367,369,370,374,375,380,435,441,450,457,459,461,465,473,474,477,479,480,481,483,498,504,508,510,516,519,],[176,176,176,176,176,299,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,452,176,176,176,176,176,452,176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'expression':([147,149,242,246,257,264,270,276,294,297,358,365,369,370,374,375,441,450,477,479,480,481,483,498,504,508,510,516,519,],[247,262,247,247,373,262,262,388,408,262,440,247,247,447,247,451,247,247,247,495,247,247,247,247,513,247,247,247,247,]),'unary_operator':([109,111,129,147,149,152,153,166,177,190,198,208,209,219,230,241,242,246,257,264,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,297,302,315,319,323,324,336,356,358,365,367,369,370,374,375,380,435,441,450,457,459,461,465,473,474,477,479,480,481,483,498,504,508,510,516,519,],[177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,]),'type_specifier':([0,20,46,47,83,85,93,99,100,112,119,135,136,138,142,147,149,194,207,220,221,246,264,267,270,297,335,337,374,376,],[43,67,43,43,43,43,139,43,67,43,67,139,139,222,139,43,139,43,43,139,139,43,139,139,139,139,43,43,43,43,]),'designator_list':([181,419,453,501,],[317,317,317,317,]),'init_declarator':([21,101,108,114,],[82,82,148,191,]),'designation':([181,419,453,501,],[318,318,318,318,]),'struct_declarator_list':([141,],[226,]),'unary_expression':([109,111,129,147,149,152,153,166,177,190,198,208,209,219,230,241,242,246,257,264,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,297,302,315,319,323,324,336,356,358,365,367,369,370,374,375,380,435,441,450,457,459,461,465,473,474,477,479,480,481,483,498,504,508,510,516,519,],[179,179,179,179,179,265,266,271,298,179,179,179,179,298,298,298,179,179,179,179,179,298,298,298,298,179,298,298,298,298,298,298,298,298,298,298,298,298,298,298,179,179,179,179,298,179,179,179,179,298,179,179,179,179,179,179,179,298,179,179,179,298,179,298,179,179,179,179,179,179,179,179,179,179,179,179,179,179,]),'id_declarator':([0,8,20,21,46,70,100,101,108,114,120,141,194,354,],[47,56,68,83,47,56,68,145,145,145,203,145,56,145,]),'block_item':([147,246,],[259,366,]),'struct_declarator_list_opt':([141,],[228,]),'struct_declaration':([93,135,136,142,220,221,],[143,143,143,232,232,232,]),'labeled_statement':([147,242,246,365,369,441,477,480,483,510,516,519,],[233,233,233,233,233,233,233,233,233,233,233,233,]),'decl_body':([0,46,47,83,99,147,246,374,],[1,1,1,1,1,1,1,1,]),'assignment_expression':([109,111,129,147,149,190,198,208,209,242,246,257,264,270,276,291,294,297,302,319,323,324,336,358,365,367,369,370,374,375,435,441,450,459,465,473,474,477,479,480,481,483,498,504,508,510,516,519,],[150,150,210,235,235,210,210,343,344,235,235,235,235,235,235,403,235,235,412,150,420,421,210,235,235,444,235,235,235,235,210,235,235,488,150,490,491,235,235,235,235,235,235,235,235,235,235,235,]),'type_specifier_no_typeid':([0,20,21,46,47,83,85,93,99,100,101,112,119,120,135,136,138,141,142,147,149,194,207,220,221,246,261,264,267,270,297,335,337,374,376,],[3,3,71,3,3,3,3,3,3,3,71,3,3,71,3,3,3,224,3,3,3,3,3,3,3,3,224,3,3,3,3,3,3,3,3,]),'empty':([0,15,19,20,21,42,47,51,83,85,86,100,101,112,113,120,128,129,141,147,181,189,190,194,198,242,246,261,335,336,337,338,365,369,374,376,419,434,435,441,450,453,477,480,481,483,498,501,508,510,516,519,],[4,57,62,64,72,57,97,57,97,117,62,64,72,117,62,196,62,211,225,251,313,62,211,328,211,362,362,196,328,211,117,62,362,362,362,328,463,62,211,362,362,463,362,362,362,362,362,463,362,362,362,362,]),'initializer_list_opt':([181,],[316,]),'identifier_list':([85,112,337,],[118,118,118,]),'enumerator_list':([90,130,131,],[132,214,215,]),'declaration':([0,46,47,83,99,147,246,374,],[7,7,98,98,144,253,253,450,]),'declarator':([21,101,108,114,141,354,],[74,74,74,74,229,229,]),'specifier_qualifier_list':([93,135,136,142,149,220,221,264,267,270,297,],[141,141,141,141,261,141,141,261,261,261,261,]),'designator':([181,317,419,453,501,],[312,416,312,312,312,]),'id_init_declarator_list_opt':([20,100,],[66,66,]),'declaration_list':([47,83,],[99,99,]),'function_definition':([0,46,],[12,12,]),'declaration_specifiers_no_type_opt':([15,42,51,],[58,94,103,]),'init_declarator_list_opt':([21,101,],[73,73,]),'direct_typeid_declarator':([21,70,84,101,108,114,141,354,],[76,76,116,76,76,76,76,76,]),'translation_unit_or_empty':([0,],[9,]),'typedef_name':([0,20,46,47,83,85,93,99,100,112,119,135,136,138,142,147,149,194,207,220,221,246,264,267,270,297,335,337,374,376,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'struct_declaration_list':([93,135,136,],[142,220,221,]),'declaration_specifiers':([0,46,47,83,85,99,112,147,194,207,246,335,337,374,376,],[21,21,101,101,120,101,120,101,120,120,101,120,120,101,120,]),'argument_expression_list':([291,],[404,]),'iteration_statement':([147,242,246,365,369,441,477,480,483,510,516,519,],[238,238,238,238,238,238,238,238,238,238,238,238,]),'direct_abstract_declarator':([120,194,204,261,332,376,378,],[200,200,340,200,340,200,340,]),'direct_id_declarator':([0,8,20,21,46,53,70,84,100,101,108,114,120,141,194,204,332,354,],[25,25,25,25,25,104,25,104,25,25,25,25,25,25,25,104,104,25,]),'identifier_list_opt':([85,112,337,],[121,186,431,]),'parameter_list':([85,112,194,335,337,376,],[124,124,124,124,124,124,]),'type_qualifier_list':([19,86,93,113,128,135,136,142,149,189,220,221,264,267,270,297,338,434,],[60,127,138,188,60,138,138,138,138,60,138,138,138,138,138,138,433,60,]),'unified_string_literal':([109,111,129,147,149,152,153,166,177,190,198,208,209,219,230,241,242,246,257,264,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,297,302,315,319,323,324,336,356,358,365,367,369,370,374,375,380,435,441,450,457,459,461,465,473,474,477,479,480,481,483,498,504,508,510,516,519,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'init_declarator_list':([21,101,],[78,78,]),'pp_directive':([0,46,],[32,32,]),'parameter_declaration':([85,112,194,207,335,337,376,],[122,122,122,342,122,122,122,]),'binary_expression':([109,111,129,147,149,190,198,208,209,219,230,241,242,246,257,264,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,297,302,315,319,323,324,336,356,358,365,367,369,370,374,375,435,441,450,457,459,465,473,474,477,479,480,481,483,498,504,508,510,516,519,],[173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,384,385,386,387,173,389,390,391,392,393,394,395,396,397,398,399,400,401,402,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,]),'brace_close':([132,142,214,215,220,221,244,316,419,484,501,],[216,231,347,348,352,353,364,415,464,500,511,]),'offsetof_member_designator':([455,],[485,]),'enumerator':([90,130,131,217,],[133,133,133,349,]),'statement':([147,242,246,365,369,441,477,480,483,510,516,519,],[256,363,256,443,446,478,494,496,499,517,520,521,]),'expression_statement':([147,242,246,365,369,441,477,480,483,510,516,519,],[250,250,250,250,250,250,250,250,250,250,250,250,]),'type_qualifier_list_opt':([19,86,113,128,189,338,434,],[63,129,190,209,324,435,474,]),'direct_typeid_noparen_declarator':([120,204,],[202,339,]),'enum_specifier':([0,20,46,47,83,85,93,99,100,112,119,135,136,138,142,147,149,194,207,220,221,246,264,267,270,297,335,337,374,376,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'struct_or_union_specifier':([0,20,46,47,83,85,93,99,100,112,119,135,136,138,142,147,149,194,207,220,221,246,264,267,270,297,335,337,374,376,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'translation_unit':([0,],[46,]),'identifier':([85,109,111,112,129,147,149,152,153,166,177,190,193,198,208,209,219,230,241,242,246,257,264,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,297,302,314,315,319,323,324,336,337,356,358,365,367,369,370,374,375,380,435,441,450,455,457,459,461,465,473,474,477,479,480,481,483,498,503,504,508,510,516,519,],[125,182,182,125,182,182,182,182,182,182,182,182,327,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,413,182,182,182,182,182,125,182,182,182,182,182,182,182,182,182,182,182,182,486,182,182,182,182,182,182,182,182,182,182,182,182,512,182,182,182,182,182,]),'pointer':([0,8,20,21,46,63,70,100,101,108,114,120,141,194,261,354,376,],[53,53,53,84,53,107,84,53,84,84,84,204,84,332,378,84,378,]),'id_init_declarator':([20,100,],[69,69,]),'brace_open':([37,38,87,88,91,92,102,109,111,115,147,242,246,319,365,369,380,441,454,456,461,465,477,480,483,510,516,519,],[90,93,130,131,135,136,147,181,181,147,147,147,147,181,147,147,453,147,453,453,453,181,147,147,147,147,147,147,]),'type_name':([149,264,267,270,297,],[263,381,382,383,411,]),'storage_class_specifier':([0,15,21,42,46,47,51,83,85,99,101,112,120,147,194,207,246,335,337,374,376,],[51,51,77,51,51,51,51,51,51,51,77,51,77,51,51,51,51,51,51,51,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',948),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',949),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',957),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',962),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',963),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',971),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',972),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',977),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',982),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',983),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',988),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',989),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',990),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1001),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1002),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1017),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1018),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1129),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1130),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1159),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1165),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1166),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1174),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1175),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1194),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1195),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1206),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1237),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1238),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1247),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1252),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1253),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1261),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1262),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1273),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1281),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1282),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1287),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1288),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1293),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1304),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1312),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1317),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1327),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1331),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1342),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1351),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1362),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1371),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1381),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1392),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1393),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1400),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1401),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1407),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1413),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1417),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1421),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1425),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1429),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1433),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1438),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1442),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1446),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1450),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1455),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1459),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1463),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1467),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1468),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1473),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1480),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1481),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1493),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1497),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1498),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1517),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1518),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1519),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1520),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1521),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1526),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1530),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1531),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1553),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1554),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1555),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1556),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1557),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1565),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1569),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1573),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1577),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1578),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1579),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1584),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1585),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1594),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1595),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1596),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1597),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1598),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1603),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1607),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1611),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1617),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1618),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1619),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1620),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1626),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1632),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1633),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1638),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1642),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1646),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1647),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1652),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1656),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1664),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1665),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1666),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1679),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1680),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1689),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1693),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1694),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1695),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1696),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1702),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1703),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1709),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1710),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1721),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1722),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1732),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1733),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1743),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1749),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1755),
]
